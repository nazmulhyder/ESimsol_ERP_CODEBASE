<html>
<head>
    <title>
        @{
            ViewBag.Title = "PF member";
        }
    </title>
</head>
<body>
    @model IEnumerable<ESimSol.BusinessObjects.PFmember>
    @Html.Raw(File.ReadAllText(Server.MapPath("~/Views/Employee/EmpPicker.html")))
    @Html.Raw(File.ReadAllText(Server.MapPath("~/Views/Department/DepartmentPicker.html")))
    <script src="~/Views/Employee/EmpPicker.js"></script>
        <div class="menuMainCollectionTable">
            <table id="tblPFmember" title="PF Member List" class="easyui-datagrid" style="width:100%;height:100%" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" selectoncheck="false" checkonselect="false" toolbar="#toolbar">
                <thead>
                    <tr>
                        <th data-options="field:'Selected',checkbox:true"></th>
                        <th field="EmployeeCode" width="70" align="left">Employee Name</th>
                        <th field="EmployeeName" width="180" align="left">Employee Name</th>
                        <th field="DepartmentName" width="140" align="left">Department</th>
                        <th field="DesignationName" width="140" align="left">Designation</th>
                        <th field="PFSchemeName" width="200" align="left">PF Scheme</th>
                        <th field="PFMembershipDateInStr" width="100" align="left">PF Member Date</th>
                        <th field="ActivityStatus" width="80" align="left">Activity</th>
                        <th field="ApproveByDateInStr" width="90" align="left">Approve Date</th>
                        <th field="ApproveByName" width="135" align="left">Approve By</th>
                    </tr>
                </thead>
            </table>

            <div id="toolbar" style="height:65px;">
                <input type="text" id="txtSearchEmpNameCode" placeholder="Search Employee by Code/Name" style=" font-size:11px; width:170px;"/>
                <a id="btnAdvanceSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Adv. Search</a>
                <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">New</a>
                @*<a id="btnEdit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a>*@
                <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
                @*<a id="btnView" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">View</a>*@
                <a id="btnActivity" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true"><label id="lblActivityStatus">Active</label></a>
                <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Approve</a>
                <select id="cboPrintType" style="width:150px;"></select>
                <a id="btnPrintExcel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true"></a>
                @using (Html.BeginForm("ViewPFMembers", "PFScheme", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <table border="0" cellpadding="0" cellspacing="0">
                        <tr>
                            <td style="width:150px;"><input type="file" id="files" name="files" /> </td>
                            <td style="width:150px;"><input type="submit" id="btnImportXL" style="vertical-align:central;" value="Import" /></td>
                        </tr>
                    </table>
                }
            </div>

            <div id="winPFMemberPicker" class="easyui-window winstyle" title="PF Adv Search" style="width:450px; height:180px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
                <div style="width: 98%; font-family: Tahoma;">
                    <table class="tbl-AdvSearch">
                        <tr>
                            <td class="td-AdvSearch-Level">
                                PF Scheme :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtPFSchemeName" class="txtfield-search txtReset" type="text" placeholder="Type PF Scheme Name & Press Enter" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Employee Name :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtEmployee" class="txtfield-picker txtReset" type="text" placeholder="Type Employee Name Or Pick" />
                                <input id="btnEmployee_Collection" class="pick-btn" type="button" value="P" />
                                <input id="btnCEmployee" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Activity :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkActivePFM" /><span style="padding-right:22px;">Active</span>
                                <input type="checkbox" id="chkInactivePFM" /><span style="padding-right:10px;">Inactive</span>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Approval :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkApprovePFM" /><span style="padding-right:10px;">Approve</span>
                                <input type="checkbox" id="chkUnapprovePFM" /><span style="padding-right:10px;">Unapprove</span>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2" style="text-align:right; padding-top:10px;">
                                <a id="btnPrintExcelAdvSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true"></a>
                                <a id="btnPFMemberPickerSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Search</a>
                                <a id="btnPFMemberPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>

            <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
                <div style="font-family:Tahoma">
                    <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                        <ul id="locationtree" data-options="checkbox:false" singleselect="true"></ul>
                    </div>

                    <fieldset>
                        <legend style="font-weight:bold"> Action : </legend>
                        <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                            <tr>
                                <td style="width:400px; text-align:right"></td>

                                <td style="width:50px">
                                    <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                                </td>
                                <td style="width:50px">
                                    <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                </td>
                            </tr>
                        </table>
                    </fieldset>
                </div>
            </div>

            @*<div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px; height:500px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
                <div style="width: 100%; font-family: Tahoma;">
                    <div style="width: 47%; float: left;">
                        <table class="tbl-AdvSearch">
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Employee Name :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Code :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Enroll No :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtEnrollNo" class="txtfield-search txtReset" type="text" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Attendance Scheme :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                                    <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                                    <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Location :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                                    <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                                    <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Dept./Section :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                                    <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                                    <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Designation :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                                    <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                                    <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Employee Type :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <select id="cboEmployeeType" class="selection-search cboReset"></select>
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Current Shift :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <select id="cboShift" class="selection-search cboReset"></select>
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Card Status :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Working Status :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Date Of Birth :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <select id="cboDateType" style="width: 65px" class="cboReset">
                                        <option value='0'>None</option>
                                        <option value='1'>Equal</option>
                                        <option value='2'>Between</option>
                                    </select>
                                    <span></span>
                                    <select id="cboDayFrom" style="width: 45px" class="cboReset"></select>
                                    <select id="cboMonthFrom" style="width: 50px" class="cboReset"></select>
                                    <span id="regionDateTo">
                                        <span>To</span>
                                        <select id="cboDayTo" style="width: 45px" class="cboReset"> </select>
                                        <select id="cboMonthTo" style="width: 50px" class="cboReset"> </select>
                                    </span>

                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level"></td>
                                <td class="td-AdvSearch-Input">
                                    <input type="checkbox" id="chkActive" class="chkReset" /> Active
                                    <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                                    <input type="checkbox" id="chkUser" class="chkReset" /> User
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level"></td>
                                <td class="td-AdvSearch-Input">
                                    <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level"></td>
                                <td class="td-AdvSearch-Input">
                                    <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level"></td>
                                <td class="td-AdvSearch-Input">
                                    <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level"></td>
                                <td class="td-AdvSearch-Input">
                                    <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level"></td>
                                <td class="td-AdvSearch-Input">
                                    <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                                    <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div style="width: 52%; float: right;">
                        
                        <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 425px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                            <thead>
                                <tr>
                                    <th data-options="field:'Selected',checkbox:true"></th>
                                    <th field="Code" width="200"> Code</th>
                                    <th field="Name" width="150">Employee Name</th>
                                    <th field="DepartmentName" width="100">Department</th>
                                    <th field="DesignationName" width="100">Designation</th>
                                </tr>
                            </thead>
                        </table>

                        <table style="width: 485px; font-size: 12px; font-weight: bold;">
                            <tr>
                                <td style="text-align: left">
                                    <input id="chkRange" type="checkbox" />Range
                                    <label id="lblRange1">
                                        <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                                    </label>
                                    <label id="lblRange2">
                                        <input id="txtTo" type="text" style="width:40px" />
                                    </label>
                                    <label id="lblcount"></label>
                                </td>
                                <td style="text-align: right">
                                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                                    <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                                    <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                </td>
                            </tr>
                            <tr>
                                <td style="text-align: left"></td>
                                <td style="text-align: right"></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>*@
        </div>
</body>
</html>
<style type="text/css">

        /* Employee Search */
    .tbl-AdvSearch{
        width: 100%; 
        font-size: 11px; 
        font-weight: bold;
        text-align: left;
        margin-left:3px;
    }
    .td-AdvSearch-Level{
        text-align: right;
    }
    .td-AdvSearch-Input{
        text-align: left;
    }
    .txtfield-search{
        width: 312px;
        text-align:left;
        font-size:11px;
    }
    .txtfield-picker{
        width: 265px;
        text-align:left;
        font-size:11px;
    }
    .selection-search{
        width: 310px;
        text-align:left;
        font-size:11px;
    }
    .pick-btn{
        width: 20px;
        text-align:center;
        font-size:11px;
     }

</style>
<script type="text/javascript">
    var _sBaseAddress="";
    var _oPFMembers=[];

    //var _nLastEmployeeID = 0;
    //var _sEmployeeIDs = "";
    //var _bNext = false;
    //var _nLoadRecords = 0;
    //var _nRowLength = 0;

    //var _oEmployeeTypes=[];
    //var _oShifts=[];
    //var _oEmployeeCSs=[];
    //var _oEmployeeWSs=[];

    //var _sEmployeeIDs='';
    var _sPFSchemaIDs='';

    var _sFeedBack=null;

    $(document).ready(function () {
        debugger;

        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oPFMembers =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
        _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
        _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
        _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
        _oBusinessUnits=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        _oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));
        _sFeedBack=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FeedBack));
        var oPFMembers = sessionStorage.getItem("PFmembers");
        if(_sFeedBack!=null){alert(_sFeedBack);}
        else if(_oPFMembers.length>0 && _oPFMembers[0].ErrorMessage=="Uploaded Successfully!"){
            alert(_oPFMembers[0].ErrorMessage);
            oPFMembers=_oPFMembers;
        }
        else if(_oPFMembers.length>0 && _oPFMembers[0].ErrorMessage!="")
        {
            alert(_oPFMembers[0].ErrorMessage);
        }
        else{oPFMembers=_oPFMembers;}
     
        if(oPFMembers!=null && oPFMembers.length>0){
            DynamicRefreshList(oPFMembers, "tblPFmember");
        }

        var sOperation=sessionStorage.getItem("Operation");
        if(sOperation== "New"){
            var oLists= jQuery.parseJSON(sessionStorage.getItem("AddPFmemberLists"));
            if(oLists!=null && oLists.length>0){DynamicRefreshList(oLists,'tblPFmember');}
        }
        
        //InitializeEmployeeAdvSearch();
        $('#tblPFmember').datagrid({onSelect: function(rowIndex, rowData){ RowSelect(rowIndex, rowData);}});
        PrintTypeObject();
        sessionStorage.clear();
        InitializeEmpPickerEvents();
    });

    $(document).keydown(function (e) { if (e.keyCode == 27) { $('#div').icsWindow('close'); } });

    function RowSelect(rowIndex, rowData)
    {
        $('#btnEdit,#btnDelete,#btnApprove,#btnActivity').show();
        $('#lblActivityStatus').text('Active');
        if(rowData.ApproveBy<=0)
        {
            $('#btnEdit,#btnDelete,#btnApprove').show();
            $('#btnActivity').hide();
            $('#lblActivityStatus').text('Active');
        }
        else if(rowData.ApproveBy>0 && rowData.IsActive==false){
            $('#btnEdit,#btnDelete,#btnApprove').hide();
            $('#lblActivityStatus').text('Active');
        }
        else if(rowData.ApproveBy>0 && rowData.IsActive==true){
            $('#btnEdit,#btnDelete,#btnApprove').hide();
            $('#btnActivity').show();
            $('#lblActivityStatus').text('Inactive');
        }
    }

    /*---------------------PF Text Search------------------------*/
    $('#txtSearchEmpNameCode').keyup(function (e) {
        
        var oPFMs =[];
        var keyCode = e.keyCode || e.which;
        if (keyCode == 8) { oPFMs = _oPFMembers; }
        else{ oPFMs = $('#tblPFmember').datagrid('getRows'); }
        if (keyCode == 13){
            if($.trim($('#txtSearchEmpNameCode').val())==''){ alert('Please enter code or name to search.'); return false;}
            var oPFM={ EmployeeName: $.trim($('#txtSearchEmpNameCode').val()),EmployeeCode: $.trim($('#txtSearchEmpNameCode').val()) };
            var obj =
                {
                    BaseAddress: _sBaseAddress,
                    Object: oPFM,
                    ControllerName: "PFScheme",
                    ActionName: "GetsPFMByNameCode",
                    IsWinClose: false
                };

            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs != null && response.objs.length>0) {
                    if (response.objs[0].PFMID > 0) {
                        _oPFMembers=response.objs;
                        DynamicRefreshList(response.objs, "tblPFmember");
                    }
                    else { alert((response.objs[0].ErrorMessage!=null || response.objs[0].ErrorMessage!='')? response.objs[0].ErrorMessage : "No employee found."); }
                }
            });
        }
        else{
            var sTempName="";
            var oSearchedData = [];
            for(i=0;i<oPFMs.length;++i)
            {
                sTempName=oPFMs[i]['EmployeeNameCode'];
                if(sTempName.toUpperCase().indexOf($('#txtSearchEmpNameCode').val().toUpperCase())>-1)
                {
                    oSearchedData.push(oPFMs[i]);
                }
            }
            $('#tblPFmember').empty();
            if (oSearchedData.length == 0) { DynamicRefreshList(_oPFMembers, "tblPFmember");}
            else { DynamicRefreshList(oSearchedData, "tblPFmember"); }

        }
    });
    
    /*---------------------PF Member Adv Search------------------------*/
  
    $("#btnAdvanceSearch").click(function () {
        ResetPFMemberPicker();
        $("#winPFMemberPicker").icsWindow("open", "PF Member Adv Search");
    });

    /*Search PF Scheme*/
    $('#txtPFSchemeName').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sSchemeName = $.trim($("#txtPFSchemeName").val());
            if(sSchemeName==''){alert("Please enter scheme name to search."); return;}
            SearchPFSchemeByName(sSchemeName);
        }
        else if(code == 8){
            $('#txtPFSchemeName').val("");
            _sPFSchemaIDs="";
        }
    });

    function SearchPFSchemeByName(sSchemeName){

        var oPFScheme = { Name: sSchemeName};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oPFScheme,
            ControllerName: "PFScheme",
            ActionName: "Gets",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].PFSchemeID > 0) {

                    var tblColums = [];var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "EmployeeContribution", title: "Name", width: 220, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winPFSchemePicker',
                        winclass:'clsPFSchemeTextSearch',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblPFSchemePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'PF Scheme'
                    };

                    $.icsPicker(oPickerParam);
                    IntializePFSchemePickerTextSearch(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializePFSchemePickerTextSearch(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            GetsPFScheme(oPickerobj);
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                GetsPFScheme(oPickerobj);
            }
            
        });
    }

    function GetsPFScheme(oPickerobj){
        debugger;
        var oreturnObjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
        if(oreturnObjs == null || oreturnObjs.length<=0){  alert("please select a PF Scheme."); return false;}

        $("#"+oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid == 'winPFSchemePicker')
        {
            $('#txtPFSchemeName').val((oreturnObjs.length>2)? oreturnObjs.length +' PF Schema Selected.': oreturnObjs[0].Name);
            _sPFSchemaIDs='';
            for(var i=0; i<oreturnObjs.length;i++){
                _sPFSchemaIDs+=oreturnObjs[i].PFSchemeID+',';
            }
            _sPFSchemaIDs=_sPFSchemaIDs.substring(0,_sPFSchemaIDs.length-1);
        }
    }


    /*Search Employee*/
    //$("#btnEmployeePickerPFMADS").click(function (e) {
    //    $('#txtEmployeePFMADS').val('');
    //    EmployeePickerReset();
    //    $("#winEmployeePicker").icsWindow("open", " Employee Picker");
    //});

    //$('#btnResetEmployeePickerPFMADS').click(function(e){
    //    $('#txtEmployeePFMADS').val('');
    //    _sEmployeeIDs='';
    //});


    /*Search PF Member*/

    function ResetPFMemberPicker(){
        _sEmployeeIDs='';
        _sPFSchemaIDs='';
        $("#txtPFSchemeName,#txtEmployee").val("");
        $('#chkActivePFM,#chkInactivePFM,#chkApprovePFM,#chkUnapprovePFM').prop('checked',false);
        DynamicRefreshList([],'tblPFmemberPicker');
    }
   
    $('#btnPFMemberPickerSearch').click(function () {
        if(_sEmployeeIDs=="" && _sPFSchemaIDs=="" && (!$('#chkActivePFM').is(':checked') && !$('#chkInactivePFM').is(':checked')) && (!$('#chkApprovePFM').is(':checked') && !$('#chkUnapprovePFM').is(':checked')))
        {
            alert("No searching criteria found."); return false;
        }

        var sParam = _sPFSchemaIDs + '~' + _sEmployeeIDs + '~' + $('#chkActivePFM').is(':checked') + '~' + $('#chkInactivePFM').is(':checked') + '~' + $('#chkApprovePFM').is(':checked') + '~' +$('#chkUnapprovePFM').is(':checked');

        var oPFM={
            Params:sParam
        };

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oPFM,
            ControllerName: "PFScheme",
            ActionName: "GetsPFMember",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].PFMID > 0) {
                    _oPFMembers=response.objs;
                    DynamicRefreshList(_oPFMembers,'tblPFmember');
                    $("#winEmployeePicker").icsWindow('close');
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    $("#btnPFMemberPickerClose").click(function () {
        $("#winEmployeePicker").icsWindow('close');
    });
    

    /*------------------PF Member Operation--------------------------*/


    $('#btnAdd').click(function(e){
        var oPFMs= $('#tblPFmember').datagrid('getRows');
        sessionStorage.clear();
        sessionStorage.setItem("Operation", "New");
        sessionStorage.setItem("PFmembers", JSON.stringify(oPFMs));
        sessionStorage.setItem("SelectedRowIndex", -1);
        sessionStorage.setItem("PFmemberHeader", "Add PF Member");
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href = _sBaseAddress+ "/PFScheme/ViewPFMember?nId=0";
    });

    $('#btnEdit').click(function(e){

        var oPFmembers = $('#tblPFmember').datagrid('getChecked');
        if (oPFmembers == null || oPFmembers.length <= 0) {
            alert("Please select an item from list");
            return;
        }
        //var nIndex=$('#tblPFmember').datagrid('getRowIndex',oPFmember);
        sessionStorage.clear();
        sessionStorage.setItem("Operation", "Edit");
        //sessionStorage.setItem("SelectedRowIndex", nIndex);
        sessionStorage.setItem("PFmemberHeader", "Edit PF Member");
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href = _sBaseAddress+ "/PFScheme/ViewPFMember?nId="+oPFmember.PFMID+"";
    });

    $('#btnView').click(function(e){

        var oPFmembers = $('#tblPFmember').datagrid('getChecked');
        if (oPFmembers == null || oPFmembers.length <= 0) {
            alert("Please select a valid item from list");
            return;
        }
   
        //var nIndex=$('#tblPFmember').datagrid('getRowIndex',oPFmember);
        sessionStorage.clear();
        sessionStorage.setItem("Operation", "View");
        //sessionStorage.setItem("SelectedRowIndex", nIndex);
        sessionStorage.setItem("PFmemberHeader", "View PF Member");
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href = _sBaseAddress+ "/PFScheme/ViewPFMember?nId="+oPFmember.PFMID+"";
    });
    
    //$('#btnDelete').click(function(e){

    //    var oPFmember = $('#tblPFmember').datagrid('getSelected');

    //    if (oPFmember == null || oPFmember.PFMID <= 0) {
    //        alert("Please select an item from list");
    //        return false;
    //    }
    //    else if (oPFmember.IsActive && oPFmember.ApproveBy<=0) {
    //        alert("Please inactive first.");
    //        return false;
    //    }
    //    else if (oPFmember.ApproveBy>0) {
    //        alert("Approve item can't be delete.");
    //        return false;
    //    }
    //    if (!confirm("Confirm to Delete?")) return;

    //    var obj =
    //    {
    //        BaseAddress: _sBaseAddress,
    //        Object: {PFMID:oPFmember.PFMID},
    //        ControllerName: "PFScheme",
    //        ActionName: "DeletePFM",
    //        TableId: "tblPFmember",
    //        IsWinClose: false
    //    };
    //    $.icsDelete(obj);
    //});

    $('#btnDelete').click(function(e){
        var oPFmembers = $('#tblPFmember').datagrid('getChecked');
        var nIndexes = [];
        var sPFmemberIDs = "";
        if (oPFmembers.length <= 0) {
            alert("please select at least one Item!");
            return;
        }
        for (var i = 0; i < oPFmembers.length; i++) {
       
            if (oPFmembers[i].IsActive && oPFmembers[i].ApproveBy<=0) 
            {
                alert("Please inactive first.");
                return ;
            }
            if (oPFmembers[i].ApproveBy>0) 
            {
                alert("Approve item can't be delete.");
                return ;
            }

            var SelectedRowIndex = $('#tblPFmember').datagrid('getRowIndex', oPFmembers[i]);
            nIndexes.push(SelectedRowIndex);
            sPFmemberIDs += oPFmembers[i].PFMID + ",";
        }
        sPFmemberIDs = sPFmemberIDs.substring(0, sPFmemberIDs.length - 1);

        if (!confirm("Confirm to Delete?")) return;
        if (sPFmemberIDs!="") {
            $.ajax({
                type: "GET",
                dataType: "json",
                url: _sBaseAddress + "/PFScheme/PFmember_Delete",
                data: { sPFmemberIDs:sPFmemberIDs },
                contentType: "application/json; charset=utf-8",
                success: function(data) {
                    var feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "") {
                        for (var i =nIndexes.length-1 ; i >=0; i--) {
                            $('#tblPFmember').datagrid('deleteRow', nIndexes[i]);
                        }
                        alert("Delete sucessfully");
                    } else {
                        alert(feedbackmessage);
                    }
                },
                error: function(xhr, status, error) {
                    alert(error);
                }
            });
        }
    });

    $("#btnActivity").click(function (e) {

        debugger;
        var oPFmember = $('#tblPFmember').datagrid('getSelected');

        if (oPFmember == null || oPFmember.PFMID <= 0) {
            alert("Please select an item from list");
            return false;
        }
        else if (oPFmember.ApproveBy<=0) {
            alert("Unable to active. Please approve first.");
            return false;
        }

        if (!confirm((oPFmember.IsActive) ?"Confirm to inactive?":"Confirm to active?")) return;
        var nIndex=$('#tblPFmember').datagrid('getRowIndex',oPFmember);

        var obj =
            {
                BaseAddress: _sBaseAddress,
                Object: oPFmember,
                ObjectId: oPFmember.PFMID,
                ControllerName: "PFScheme",
                ActionName: "ActivityChangePFM",
                TableId: "tblPFmember",
                IsWinClose: false,
                Message: (oPFmember.IsActive)?"Inactive Successfully." : "Active Successfully."
            };
        $.icsSave(obj, function (response) {
            if (response.status && response.obj != null) {
                RowSelect(nIndex,response.obj);
            }
        });

    });

    $("#btnApprove").click(function (e) {

        debugger;
        var oPFmember = $('#tblPFmember').datagrid('getSelected');

        if (oPFmember == null || oPFmember.PFMID <= 0) {
            alert("Please select an item from list");
            return false;
        }
        else if (oPFmember.IsActive) {
            alert("Already active.");
            return false;
        }
        else if (oPFmember.ApproveBy>0) {
            alert("Already Approved.");
            return false;
        }

        if (!confirm("Confirm to approve.")) return;
        var nIndex=$('#tblPFmember').datagrid('getRowIndex',oPFmember);

        var obj =
            {
                BaseAddress: _sBaseAddress,
                Object: oPFmember,
                ObjectId: oPFmember.PFMID,
                ControllerName: "PFScheme",
                ActionName: "ApprovePFM",
                TableId: "tblPFmember",
                IsWinClose: false,
                Message: "Approve Successfully."
            };
        $.icsSave(obj, function (response) {
            if (response.status && response.obj != null) {
                RowSelect(nIndex,response.obj);
            }
        });

    });


    /*----------------- Employee Search By Code Or Text----------*/
    
    //$('#txtEmployeePFMADS').keypress(function (e)
    //{
    //    var code = (e.keyCode ? e.keyCode : e.which);
    //    if (code == 13)//Enter key-13
    //    {
    //        var sCodeName = $.trim($("#txtEmployeePFMADS").val());
    //        if(sCodeName==''){alert("Please enter name or code to search."); return;}
    //        SearchEmployeeByText(sCodeName);
    //    }
    //    else if(code == 8){
    //        $('#txtEmployeePFMADS').val("");
    //        _sEmployeeIDs=0;
    //    }
    //});

    //function SearchEmployeeByText(sEmpNameCode){

    //    var oEmployee = { Params: sEmpNameCode +'~'+ 0};
    //    var obj = {
    //        BaseAddress: _sBaseAddress,
    //        Object: oEmployee,
    //        ControllerName: "Employee",
    //        ActionName: "GetsByEmpCode",
    //        IsWinClose: false
    //    };
    //    $.icsDataGets(obj, function (response) {

    //        if (response.status && response.objs.length > 0) {
    //            if (response.objs[0].EmployeeID > 0) {

    //                var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
    //                oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
    //                oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
    //                oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
    //                var oPickerParam = {
    //                    winid: 'winEmployeePickerTextSearch',
    //                    winclass:'clsEmployeePickerTextSearch',
    //                    winwidth: 455,
    //                    winheight: 460,
    //                    tableid: 'tblEmployeePickerTextSearch',
    //                    tablecolumns: tblColums,
    //                    datalist: response.objs,
    //                    multiplereturn: true,
    //                    searchingbyfieldName:'Name',
    //                    windowTittle: 'Employee list'
    //                };

    //                $.icsPicker(oPickerParam);
    //                IntializeEmployeePickerTextSearch(oPickerParam);//multiplereturn, winclassName

    //            }
    //            else { alert(response.objs[0].ErrorMessage); }
    //        }
    //    });
    //}

    //function IntializeEmployeePickerTextSearch(oPickerobj)
    //{
    //    $("#" + oPickerobj.winid).find("#btnOk").click(function () {
    //        var oreturnObjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
    //        if(oreturnObjs == null || oreturnObjs.length<=0){  alert("please select an employee."); return false;}

    //        $("#"+oPickerobj.winid).icsWindow("close");
    //        $("#" + oPickerobj.winid).remove();
    //        if (oPickerobj.winid == 'winEmployeePickerTextSearch')
    //        {
    //            $('#txtEmployeePFMADS').val((oreturnObjs.length>2)? oreturnObjs.length +' Employees Selected.': oreturnObjs[0].Name);
    //            _sEmployeeIDs='';
    //            for(var i=0; i<oreturnObjs.length;i++){
    //                _sEmployeeIDs+=oreturnObjs[i].EmployeeID;
    //            }
    //            _sEmployeeIDs=_sEmployeeIDs.substring(0,_sEmployeeIDs.length-1);
    //        }
            
    //    });

    //    $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
    //        if (e.which == 13)//enter=13
    //        {
    //            var oreturnObjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
    //            if(oreturnObjs == null || oreturnObjs.length<=0){  alert("please select an employee."); return false;}

    //            $("#"+oPickerobj.winid).icsWindow("close");
    //            $("#" + oPickerobj.winid).remove();
    //            if (oPickerobj.winid == 'winEmployeePickerTextSearch')
    //            {
    //                $('#txtEmployeePFMADS').val((oreturnObjs.length>2)? oreturnObjs.length +' Employees Selected.': oreturnObjs[0].Name);
    //                _sEmployeeIDs='';
    //                for(var i=0; i<oreturnObjs.length;i++){
    //                    _sEmployeeIDs+=oreturnObjs[i].EmployeeID;
    //                }
    //                _sEmployeeIDs=_sEmployeeIDs.substring(0,_sEmployeeIDs.length-1);
    //            }
    //        }
    //    });
    //}


    /*---------------- Employee Adv Search----------------*/


    //function InitializeEmployeeAdvSearch(){
    //    $("#cboEmployeeType").icsLoadCombo({
    //        List: _oEmployeeTypes,
    //        OptionValue: "EmployeeTypeID",
    //        DisplayText: "Name"
    //    });
    //    $("#cboShift").icsLoadCombo({
    //        List: _oShifts,
    //        OptionValue: "ShiftID",
    //        DisplayText: "ShiftWithDuration"
    //    });
    //    $("#cboEmployeeCardStatus").icsLoadCombo({
    //        List: _oEmployeeCSs,
    //        OptionValue: "Value",
    //        DisplayText: "Text"
    //    });
    //    $("#cboEmployeeWorkigStatus").icsLoadCombo({
    //        List: _oEmployeeWSs,
    //        OptionValue: "Value",
    //        DisplayText: "Text"
    //    });

    //    $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
    //    $('#txtFrom').numberbox('setValue',1);
    //    $('#txtTo').numberbox('setValue',50);
    //    $("#lblRange1").hide();

    //    var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
    //                 {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
    //                 {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

    //    $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
    //        List: oMonths,
    //        OptionValue: "MonthID",
    //        DisplayText: "Name",
    //        InitialValue:''
    //    });

    //    LoadDaysInMonth();
    //}

    //function LoadDaysInMonth(){
    //    $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
    //    var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

    //    var oDays=[];
    //    for(var i=1;i<=nDaysInMonth;i++){
    //        oDays.push({DayID:i,Day:i});
    //    }
    //    $("#cboDayFrom,#cboDayTo").icsLoadCombo({
    //        List: oDays,
    //        OptionValue: "DayID",
    //        DisplayText: "Day",
    //        InitialValue:''
    //    });
    //}


    //$("#cboDateType").change(function(e){
    //    if($("#cboDateType").val()==1){
    //        $("#regionDateTo").hide();
    //    }
    //    else{
    //        $("#regionDateTo").show();
    //    }
    //});

    //$("#cboMonthFrom").change(function(e){
    //    var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthFrom").val())+1,0)).getDate();
    //    var oDays=[];
    //    for(var i=1;i<=nDaysInMonth;i++){
    //        oDays.push({DayID:i,Day:i});
    //    }
    //    $("#cboDayFrom").icsLoadCombo({
    //        List: oDays,
    //        OptionValue: "DayID",
    //        DisplayText: "Day",
    //        InitialValue:''
    //    });
    //});

    //$("#cboMonthTo").change(function(e){
    //    var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthTo").val())+1,0)).getDate();
    //    var oDays=[];
    //    for(var i=1;i<=nDaysInMonth;i++){
    //        oDays.push({DayID:i,Day:i});
    //    }
    //    $("#cboDayTo").icsLoadCombo({
    //        List: oDays,
    //        OptionValue: "DayID",
    //        DisplayText: "Day",
    //        InitialValue:''
    //    });
    //});


    //function EmployeePickerReset(){
    //    _nLastEmployeeID = 0;
    //    _sEmployeeIDs = "";
    //    _bNext = false;
    //    _nLoadRecords = 0;
    //    _nRowLength = 0;
    //    _sAttendanceSchemeID="";
    //    _sLocationID = "";
    //    _sDepartmentID = "";
    //    _sDesignationID = "";
    //    $("#winEmployeePicker").find(".txtReset").val("");
    //    $("#winEmployeePicker").find(".cboReset").val(0);
    //    $("#winEmployeePicker").find(".chkReset").prop("checked",false);

    //    $("#winEmployeePicker").find("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
    //    LoadDaysInMonth();

    //    DynamicRefreshList([], "tblEmployeesForPicker");
    //    $("#lblcount").html("");
    //    $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
    //    $('#txtFrom').numberbox('setValue',1);
    //    $('#txtTo').numberbox('setValue',50);
    //    $("#lblRange1").hide();
    //}

    //$('#chkRange').click(function()
    //{
    //    if(document.getElementById("chkRange").checked == true)
    //    {
    //        document.getElementById("lblRange1").style.display = '';
    //    }
    //    else
    //    {
    //        document.getElementById("lblRange1").style.display = 'none';
    //    }
    //});

    //$('#btnEmpPickerSearch').click(function () {
    //    _bNext = false;
    //    EmployeeAdvSearch();
    //});

    //function Next() {
    //    var oEmployees = [];
    //    oEmployees =  $('#tblEmployeesForPicker').datagrid('getRows');
    //    if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
    //    _nRowLength = oEmployees.length;
    //    _bNext = true;
    //    EmployeeAdvSearch();
    //}

    //function EmployeeAdvSearch(){
    //    if (!_bNext) {
    //        _nRowLength = 0;
    //        _nLastEmployeeID = 0;
    //    }
    //    _nLoadRecords = document.getElementById("txtTo").value;

    //    if ($("#chkRange").is(':checked')) {
    //        if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
    //        var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
    //        var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
    //        if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
    //        _nRowLength = nRangeFrom - 1;
    //        _nLoadRecords = nRangeTo - nRangeFrom + 1;
    //    }


    //    var sName = $.trim($("#txtEmployeeName").val());
    //    var sCode = $.trim($("#txtEmpCodeForSearch").val());
    //    var sEnrollNo = $.trim($("#txtEnrollNo").val());
    //    var nEmployeeTypeID=$("#cboEmployeeType").val();
    //    var nShiftID=$("#cboShift").val();
    //    var nCardStatus=$("#cboEmployeeCardStatus").val();
    //    var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
    //    var nDateType=$("#cboDateType").val();
    //    var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
    //    var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
    //    var sGender="None";

    //    var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
    //    var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
    //    var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

    //    var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
    //    var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

    //    var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
    //    var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

    //    debugger;
    //    if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentID=="" && _sDesignationID=="" &&
    //       nEmployeeTypeID==0 && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
    //       bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0 )
    //    {
    //        alert("Please enter you selection criteria."); return false;
    //    }

    //    var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentID + '~' +_sDesignationID + '~' +
    //                 sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
    //                 bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
    //                 sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords +'~'+ false+ '~' + icsdateformat(new Date()) +'~'+ icsdateformat(new Date())+"~"+sEnrollNo;

    //    $.ajax({
    //        type: "POST",
    //        dataType: "json",
    //        url: _sBaseAddress + "/Employee/EmployeeSearch",
    //        traditional: true,
    //        data: JSON.stringify({ sParam: sParam }),
    //        contentType: "application/json; charset=utf-8",
    //        success: function (data) {
    //            var oEmps = jQuery.parseJSON(data);
    //            if (oEmps != null) {

    //                var sTableName= 'tblEmployeesForPicker';
    //                if (oEmps.length > 0) {
    //                    if(!_bNext){
    //                        DynamicRefreshList(oEmps,sTableName);
    //                    }
    //                    else{
    //                        var bAppend=false;
    //                        var oTEmps=$('#'+sTableName).datagrid('getRows');
    //                        if(oTEmps.length>0){
    //                            for (var i = 0; i < oEmps.length; i++) {
    //                                var IsAppend=true;
    //                                for (var j = 0; j < oTEmps.length; j++) {

    //                                    if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
    //                                        IsAppend=false;
    //                                        break;
    //                                    }
    //                                }
    //                                if(IsAppend){
    //                                    bAppend=true;
    //                                    $('#'+sTableName).datagrid('appendRow', oEmps[i]);
    //                                }
    //                            }
    //                        }
    //                        else{
    //                            for (var j = 0; j < oEmps.length; j++) {
    //                                bAppend=true;
    //                                $('#'+sTableName).datagrid('appendRow', oEmps[j]);
    //                            }
    //                        }
    //                        if(!bAppend){
    //                            alert("No more data found!");
    //                        }
    //                    }

    //                }
    //                else {
    //                    alert("No more data found!");
    //                }
    //                var oEmployees = $('#'+sTableName).datagrid('getRows');
    //                document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
    //                _bNext = false;
    //            }
    //        },
    //        error: function (xhr, status, error) {
    //            alert(error);
    //        }
    //    });
    //}

    //$("#btnEmployeePickerOk").click(function () {

    //    var oEmployees = $('#tblEmployeesForPicker').datagrid('getChecked');
    //    if (oEmployees==null || oEmployees.length<=0) { alert("please checked at least one employee.");return; }
    //    $('#txtEmployeePFMADS').val((oEmployees.length>2)? oEmployees.length +' Employees Selected.': oEmployees[0].Name);
    //    _sEmployeeIDs='';
    //    for(var i=0; i<oEmployees.length;i++){
    //        _sEmployeeIDs+= oEmployees[i].EmployeeID+',';
    //    }
    //    _sEmployeeIDs=_sEmployeeIDs.substring(0,_sEmployeeIDs.length-1);
    //    $("#winEmployeePicker").icsWindow('close');

    //});

    //$("#btnEmployeePickerClose").click(function () {
    //    $("#winEmployeePicker").icsWindow('close');
    //});

    $('#btnImportXL').click( function ()
    {
        if ($.trim($("#files").val()) == "") {
            alert("Please select a file.");
            $("#files").addClass("errorFieldBorder");
            $("#files").focus();
            return false;
        } else {
            $("#files").removeClass("errorFieldBorder");
        }
        return true;
    });

    function PrintTypeObject()
    {
        var oObj= new Object();
        var oItems=[];

        oObj= new Object();
        oObj.id=1;
        oObj.Item="PF Ledger(All)";
        oItems.push(oObj);

        //oObj= new Object();
        //oObj.id=2;
        //oObj.Item="PF Ledger(Single)";
        //oItems.push(oObj);

        $("#cboPrintType").icsLoadCombo({
            List: oItems,
            OptionValue: "id",
            DisplayText: "Item"
        });
    }

    $('#btnPrintExcel').click(function (e)
    {
        var nPType=$("#cboPrintType").val();
        if(nPType==0)
        {
            alert("Please select one type!");
            return;
        }
        else if(nPType==1)
        {
            PFLedger_All();
        }
        else if(nPType==2)
        {
            PFLedger_Single();
        }
    });

    function PFLedger_All()
    {
        if(_sEmployeeIDs=="" && _sPFSchemaIDs=="" && (!$('#chkActivePFM').is(':checked') && !$('#chkInactivePFM').is(':checked')) && (!$('#chkApprovePFM').is(':checked') && !$('#chkUnapprovePFM').is(':checked')))
        {
            alert("No searching criteria found."); return;
        }

        var ActivePFM =  $('#chkActivePFM').is(':checked');
        var InactivePFM = $('#chkInactivePFM').is(':checked');
        var ApprovePFM = $('#chkApprovePFM').is(':checked'); 
        var UnapprovePFM = $('#chkUnapprovePFM').is(':checked');

        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/PFScheme/PrintPFLedger_All_XL?sPFSchemaIDs="+_sPFSchemaIDs+"&sEmployeeIDs="+_sEmployeeIDs+"&ActivePFM="+ActivePFM+"&InactivePFM="+InactivePFM+"&ApprovePFM="+ApprovePFM+"&UnapprovePFM="+UnapprovePFM+"&ts="+tsv, "_blank");
    }
    
    $('#btnPrintExcelAdvSearch').click(function (e)
    {
        debugger;
        if(_sEmployeeIDs=="" && _sPFSchemaIDs=="" && (!$('#chkActivePFM').is(':checked') && !$('#chkInactivePFM').is(':checked')) && (!$('#chkApprovePFM').is(':checked') && !$('#chkUnapprovePFM').is(':checked')))
        {
            alert("No searching criteria found."); return;
        }

        var ActivePFM =  $('#chkActivePFM').is(':checked');
        var InactivePFM = $('#chkInactivePFM').is(':checked');
        var ApprovePFM = $('#chkApprovePFM').is(':checked'); 
        var UnapprovePFM = $('#chkUnapprovePFM').is(':checked');

        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/PFScheme/PrintPFLedgerAdvSearch_All_XL?sPFSchemaIDs="+_sPFSchemaIDs+"&sEmployeeIDs="+_sEmployeeIDs+"&ActivePFM="+ActivePFM+"&InactivePFM="+InactivePFM+"&ApprovePFM="+ApprovePFM+"&UnapprovePFM="+UnapprovePFM+"&ts="+tsv, "_blank");
    });





</script>