<html>
@{
    ViewBag.Title = "Sample Invoice";
}
<body>

@model ESimSol.BusinessObjects.SampleInvoice
    <div class="menuMainCollectionTable easyui-panel" id="divSI" style="font-family:Tahoma; height:100%; width:100%">
        <div id="tabSampleInvoice" class="easyui-tabs">
            <div title="Invoice/Bill" id="divInvoice" style="font-family:Tahoma; height:100%; width:100%">
                <fieldset>
                    <legend id="leInvoice" style="font-weight:bold"> Invoice/Bill Information : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="width:100%; font-size:11px; font-weight:bold">

                        <tr>
                            <td style="width:15%; text-align:right">
                                Payment Type
                            </td>
                            <td style="width:15%">
                                <select id="cboPaymentType" style="width:100%;"></select>

                            </td>
                            <td style="width:15%;text-align:right">
                                <span class="lblInvoice"></span><label > Date</label> 
                            </td>

                            <td style="width:10%">
                                <input id="txtSampleInvoiceDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:100%;" />

                            </td>
                            <td style="width:15%; text-align:right">
                                <span class="lblInvoice"></span><label> No</label> 
                            </td>
                            <td style="width:15%;">
                                @Html.TextBoxFor(model => model.SampleInvoiceNo, new { style = "width:100%", id = "txtSampleInvoiceNo" })
                            </td>

                            <td style="width:5%; text-align:right">
                               
                                <label id="lblPINo"> MR No </label>
                            </td>
                            <td style="width:10%">
                                <input id="txtMRNo" type="text" style="width:100%;" />
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 15%; text-align: right">
                                <label>Account Of</label>
                            </td>
                            <td colspan="3" style="width: 40%; text-align: left">
                                <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                    <tr>
                                        <td style="width:85%"><input id="txtContractorName" style="width:100%;" class="reset-text" placeholder="Search Issue To" /></td>
                                        <td style="width:5%"><input type="button" id="btnResetIssueTo" value="C" style="font-weight:bold;" /></td>
                                        <td style="width:10%"><input type="button" id="btnPickContractorName" value="Pick" /></td>
                                    </tr>
                                </table>
                            </td>
                            <td style="width: 15%; text-align: right">
                                <label>Concern Person</label>
                            </td>
                            <td colspan="3" style="width: 30%; text-align: left">
                                <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                    <tr>
                                        <td style="width:74%"><select id="cboCPIssueTo" style="width:100%"></select></td>
                                        <td style="width:16%"><input type="button" id="btnLoadIssueToCP" value="Load" /></td>
                                        <td style="width:10%"><input type="button" id="btnNewIssueToCP" value="N" /></td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:15%; text-align:right">
                                Exp. Payment Date
                            </td>
                            <td style="width:15%">
                                <input id="txtPaymentDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:100%;" />
                            </td>
                            <td style="width:15%; text-align:right">
                                Requirement Date
                            </td>
                            <td style="width:10%; text-align:left">
                                <input id="txtRequirementDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:100%;" />
                            </td>
                            <td colspan="2" style="width:30%; text-align:right">
                                <label> Invoice Currency:</label><select id="cboCurrency_Inv" style="width:25%;" onchange="ChangeCurrencyInv()"></select> 
                                Amount<span class="lblCurrencySymbol"></span>
                            </td>
                            <td colspan="2" style="width:15%; text-align:right">
                                <input id="txtAmount" style="width:100%" class="reset-text number type-diabaled" disabled />
                            </td>


                        </tr>
                        <tr>
                            <td style="width:15%; text-align:right">
                                Remarks
                            </td>
                            <td colspan="3" style="width:40%">
                                @Html.TextBoxFor(model => model.Remark, new { style = "width:100%; text-align:left", id = "txtRemarks" })
                            </td>
                            <td colspan="2" style="width:30%; text-align:right">
                               Exchange By:  <select id="cboCurrency" style="width:25%;" onchange="ChangeCurrency()"></select> <label > C Rate:</label>
                                <input id="txtConversionRate" class="reset-text number" style="width: 20%; text-align:right" />

                            </td>
                            <td colspan="2" style="width:15%; text-align:right">
                                <input id="txtAmountWithCRateInExchangeCur" style="width:100%" class="reset-text number type-diabaled" disabled />
                            </td>

                        </tr>
                    </table>
                </fieldset>
             
                <div style="float:left; width:100%">
                    <div style="float:left; width:100%">
                        <table style="width:100% ;height:150px">
                            <tr>
                                <td style="width:60% ;height:150px">
                                    <fieldset>
                                        <legend style="text-align:left; font-weight:bold;"> Product : </legend>
                                        <table id="tblSampleInvoiceDetail" class="easyui-datagrid" style="width:100%;height:220px;"
                                               data-options="singleSelect: true,fitColumns:false, rownumbers:true, pagination:false, autorowheight:false,toolbar:'#toolbar',onClickRow:onClickRow ">
                                            <thead>
                                                <tr>
                                                    <th field="ProductCode" width="8%" align="left">Code</th>
                                                    <th field="ProductName" width="25%" align="left">Product Name</th>
                                                    <th data-options="field:'Qty',align:'right',editor:{type:'numberbox',options:{precision:2}}" width="15%">Qty</th>
                                                    <th data-options="field:'UnitPrice',align:'right',editor:{type:'numberbox',options:{precision:4}}" width="13%"> UnitPrice(@Model.CurrencySymbol)</th>
                                                    <th field="Amount" width="15%" align="right" formatter="formatPrice">Amount(@Model.CurrencyName)</th>
                                                    <th data-options="field:'Description',width:150,height:60 ,align:'Left',editor:{type:'text'}" width="15%" align="Left">Remark</th>
                                                </tr>
                                            </thead>
                                        </table>
                                        <div id="toolbar">
                                            <label id="lblProduct">Product</label>
                                            <input type="text" id="txtProduct" placeholder="Enter Product" style="width:130px;" /><a id="btnPickProduct" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="true">Pick</a>
                                            <a id="btnDeleteDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                                            <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
                                          
                                        </div>
                                        <table border="0" cellpadding="0" cellspacing="0" style="width:99%;">
                                            <tr>
                                                <td style="width:20%;  text-align:right;font-weight:bold;">Total:</td>
                                                <td style="width:37%;  text-align:right;font-weight:bold;"><label id="lblTotalQty">0</label> </td>
                                                <td style="width:5%;  text-align:right;font-weight:bold;"> </td>
                                                <td style="width:35%; text-align:right; font-weight:bold;"><label id="lblTotalAmount"> </label> </td>
                                                <td style="width:2%;  text-align:right;font-weight:bold;"> </td>
                                            </tr>
                                        </table>
                                    </fieldset>
                                    <fieldset>
                                        <legend style="text-align:left; font-weight:bold;">  </legend>
                                        <table border="0" cellpadding="0" cellspacing="0" style="width:99%;">
                                            <tr>
                                                <td style="width:10%;  text-align:right;font-weight:normal;">Charge<span class="lblCurrencySymbol"></span>:</td>
                                                <td style="width:10%;  text-align:right;font-weight:normal;"><input id="txtCharge" class="reset-text number" style="width:100%" /></td>
                                                <td style="width:10%;  text-align:right;font-weight:normal;">Discount<span class="lblCurrencySymbol"></span>:</td>
                                                <td style="width:10%;  text-align:right;font-weight:normal;"><input id="txtDiscount" class="reset-text number" style="width:100%" /></td>
                                                <td style="width:10%;  text-align:right;font-weight:normal;">Total<span class="lblCurrencySymbol"></span>:</td>
                                                <td style="width:10%;  text-align:right;font-weight:normal;"><input id="txtAmount_Total" class="text number" style="width:100%" disabled="disabled" /></td>
                                            </tr>
                                        </table>
                                    </fieldset>

                               </td>
                                <td style="width:40% ;height:150px">
                                    <fieldset>
                                        <legend style="text-align:left; font-weight:bold;"> Order info : </legend>
                                        <table id="tblDyeingOrders" class="easyui-datagrid" style="width:100%;height:260px;"
                                               data-options="singleSelect: true,fitColumns:false, rownumbers:true, pagination:false, autorowheight:false,toolbar:'#toolbarTwo' ">
                                            <thead>
                                                <tr>
                                                   
                                                    <th field="OrderNo" width="40%" align="left">Order No</th>
                                                    <th field="Qty" width="25%" align="right" formatter="formatPrice">Qty</th>
                                                    <th field="Amount" width="25%" align="right" formatter="formatPrice">Amount<span class="lblCurrencySymbol"></span></th>
                                                    <th field="PaymentTypeSt" width="8%" align="left">PaymentType</th>

                                                </tr>
                                            </thead>
                                        </table>
                                        <div id="toolbarTwo">
                                            <a id="btnPickOrder" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Gets Order </a>
                                            <a id="btnDeleteDO" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                                            
                                            
                                        </div>
                                        <table border="0" cellpadding="0" cellspacing="0" style="width:99%;">
                                            <tr>
                                                <td style="width:20%;  text-align:right;font-weight:bold;">Total:</td>
                                                <td style="width:37%;  text-align:right;font-weight:bold;"><label id="lblTotalQtyDO">0</label> </td>
                                                <td style="width:5%;  text-align:right;font-weight:bold;"> </td>
                                                <td style="width:35%; text-align:right; font-weight:bold;"><label id="lblTotalAmountDO"> </label> </td>
                                                <td style="width:2%;  text-align:right;font-weight:bold;"> </td>
                                            </tr>
                                           
                                        </table>
                                    </fieldset>
                                </td>

                            </tr>
                        </table>

                    </div>

                </div>
                <fieldset>
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="float:right; width:100%;">
                            <tr>
                                <td style="width:10%">
                                    <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Preview</a>
                                    @*<a id="btnResetAmount" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Set Amount</a>*@
                                </td>
                                <td style="width:10%">
                                    <a id="btnPrintExcel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true">Excel</a>
                                </td>
                                <td style="width:10%">
                                    @*<label id="lblProduct">Charge</label>
                                    <input type="text" id="txtProduct" placeholder="Enter Product" style="width:130px;" />*@
                                </td>
                                <td style="width:60%;float:right; text-align:right">
                                    <label id="lblCreateReviseNo">Create Revise No?</label> <input id="chkIsCreateReviseNo" type="checkbox" checked="checked" />
                                    <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                                    <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Approve</a>
                                    <a id="btnSave_Revise" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save(Revise)</a>
                                    <a id="btnCancel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Cancel</a>
                                </td>
                                <td style="width:10%">
                                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" id="btnClose">Close</a>
                                </td>

                            </tr>
                        </table>
                </fieldset>
            </div>
            <div title="Order Detail" style="font-family:Tahoma; width:100%;height:100%">
                <fieldset style="font-family:Tahoma;">
                    <legend style="text-align:left; font-weight:bold;"> Detail Describtion : </legend>
                    <div style="font-family:Tahoma; height:92%; width:99%">

                        <table id="tblDyeingOrderDetails" class="easyui-datagrid" style="width:100%;height:400px"
                               data-options="singleSelect: true,fitColumns:false, rownumbers:true, pagination:false, autorowheight:false,onClickRow:onClickRowRate ">
                            <thead>
                                <tr>

                                    <th field="OrderNoFull" width="8%" align="left">Order No</th>
                                    <th field="ProductName" width="20%" align="left">Product Name</th>
                                    <th field="ColorName" width="12%" align="left">ColorName</th>
                                    <th field="ColorNo" width="12%" align="left">ColorNo</th>
                                    <th data-options="field:'RGB',width:150,height:60 ,align:'Left',editor:{type:'text'}" width="10%" align="Left">Color Category</th>
                                    <th field="Qty" width="10%" align="right" formatter="formatPrice">Order Qty</th>
                                  
                                    <th data-options="field:'UnitPrice',align:'right',editor:{type:'numberbox',options:{precision:4}}" width="8%"> UnitPrice(@Model.CurrencySymbol)</th>
                                    <th field="Amount" width="12%" align="right" formatter="formatPrice">Amount(@Model.CurrencyName)</th>
                                    <th field="Qty_DC" width="10%" align="right" formatter="formatPrice">Delivery Qty</th>
                                  
                                </tr>
                            </thead>
                        </table>
                        @*<div id="toolbarDoD">
                            <a id="btnRefreshDOD" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Refresh</a>
                        </div>*@
                        <table border="0" cellpadding="0" cellspacing="0" style="width:99%;">
                            <tr>
                                <td style="width:15%;  text-align:right;font-weight:bold;">Total:</td>
                                <td style="width:28%;  text-align:right;font-weight:bold;"><label id="lblTotalQty_DOD">0</label> </td>
                                <td style="width:2%;  text-align:right;font-weight:bold;"> </td>
                                <td style="width:25%; text-align:right; font-weight:bold;"><label id="lblUP_DOD"> </label> </td>
                                <td style="width:2%;  text-align:right;font-weight:bold;"> </td>
                                <td style="width:28%; text-align:right; font-weight:bold;"><label id="lblTotalAmount_DOD"> </label> </td>
                               
                            </tr>
                        </table>

                    </div>
                </fieldset>
                <fieldset>
                    <legend style="font-weight:bold"> Action: </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="width:100%;font-size:11px; font-weight:bold">
                        <tr>                         
                            <td style="width:10%">
                                <a id="btnPrintTwo" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Preview</a>
                            </td>
                            <td style="width:10%">
                                <a id="btnRefreshDOD" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Re-Load</a>
                            </td>
                            <td style="width:30%">
                            </td>
                            <td style="width:30%">
                                <input id="txtRGB" type="text" style="width: 120px;" placeholder=" Color Code Entry" />
                                <input id="txtRate" type="text" style="width: 120px;" placeholder="Unit Price Entry" />
                            </td>
                            <td style="width:10%">
                               <a id="btnSave_Rate" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save(Rate)</a>
                            </td>
                            <td style="width:10%">
                                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" id="btnCloseTwo">Close</a>
                            </td>

                        </tr>
                    </table>
                </fieldset>                
            </div>
            <div title="Sample Invoice Charge" style="font-family:Tahoma; width:100%;height:auto">
                <fieldset>
                    <legend style="font-weight: bold">Invoice/Info</legend>
                    <div style="overflow:hidden;display:block">
                        <div style="overflow:hidden;float:left; width:32%">
                            <div style="overflow:hidden;float:left;width:30%;text-align:right">
                                Bill No:
                            </div>
                            <div style="overflow:hidden;float:left;width:70%">
                                <input type="text" id="txtBILLNo" style="float:left;width:100%">
                            </div>
                        </div>
                        <div style="overflow:hidden;float:left; width:32%">
                            <div style="overflow:hidden;float:left;width:30%;text-align:right">
                                Date:
                            </div>
                            <div style="overflow:hidden;float:left;width:70%">
                                <input id="txtDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style=" width:100%;" />
                            </div>
                        </div>
                        <div style="overflow:hidden;float:left; width:32%">
                            <div style="overflow:hidden;float:left;width:30%;text-align:right">
                                Customer Name:
                            </div>
                            <div style="overflow:hidden;float:left;width:70%">
                                <input id="txtCustomerName" type="text" style=" width:100%;" />
                            </div>
                        </div>
                    </div>
                </fieldset>
                <div style="display:block;overflow:hidden;height:200px">
                    <table title="Sample Invoice Charge" id="tblSampleInvoiceCharge" class="easyui-datagrid" showfooter="true" fit="true" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar3">
                        <thead>
                            <tr>
                                <th field="InoutTypeST" align="center" width="15%">Inout Type</th>
                                <th field="Name" align="left" width="15%">Name</th>
                                <th field="AmountST" align="right" width="15%">Amount</th>
                                <th field="LastUpdateByName" align="left" width="15%">Update By</th>

                            </tr>
                        </thead>
                    </table>
                    <div id="toolbar3">
                        <select id="cboInOutType" style="width:8%;">
                            <option value="1">Add</option>
                            <option value="2">Deduct</option>
                        </select>
                        <input id="txtName" type="text" style="width:12%" placeholder="Name" />
                        <input id="txtAmountSIC" type="text" style="width:12%;text-align:right" placeholder="Amount" />
                        <a id="btnSICAdd" href="javascript:void(0)" class="easyui-linkbutton easyui-tooltip" title="Add" iconcls="icon-add" plain="true">Add</a>
                        <a id="btnSICDelete" href="javascript:void(0)" class="easyui-linkbutton easyui-tooltip" title="Delete" iconcls="icon-remove" plain="true">Delete</a>
                    </div>
                </div>
                <div style="display:block;overflow:hidden;">
                    <fieldset style="height:10%">
                        <legend style="font-weight: bold">Action : </legend>
                        <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                            <tr>
                                <td style="width:60%; text-align:right"></td>
                                <td style="width:40%;text-align:right;">
                                    <a id="btnCloseThree" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                </td>
                            </tr>
                        </table>
                    </fieldset>
                 </div>
                    <div>
               </div>
             </div>
        </div>
    </div>
</body>
</html>


<script type="text/javascript">
    var oSampleInvoice = [];
    var _sBaseAddress = "";
    $(document).ready(function () {
        debugger;
        //$("#txtSampleInvoiceNo")[0].disabled = true;
        $("#txtSampleInvoiceNo").prop('disabled',true);
        if(sessionStorage.getItem("SampleInvoiceHeader")=="View Sample Invoice")
        {
            document.getElementById('btnSave').style.display = 'none';
        }
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        oSampleInvoice =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oOrderPaymentTypeObjs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.OrderPaymentTypeObjs));
        var oSampleInvoiceDetails_DO = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.SampleInvoiceDetails_DO));
        var oDyeingOrderDetails = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DyeingOrderDetails));
        var oCurrencys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
        var oSampleInvoiceSetup= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.SampleInvoiceSetup));
        $('#divSI').data('SampleInvoice',oSampleInvoice);
        $('#divSI').data('OrderPaymentTypeObjs',oOrderPaymentTypeObjs);
        $('#divSI').data('Currencys',oCurrencys);
        $('#divSI').data('SampleInvoiceSetup',oSampleInvoiceSetup);
        if(oSampleInvoice.ErrorMessage!=null && oSampleInvoice.ErrorMessage!="")
        {
            alert(oSampleInvoice.ErrorMessage);
        }
        SetInvoiceSetup();
        CboLoad();

        $('#divSI').data('SampleInvoiceDetails',oSampleInvoiceDetails_DO);
        $("#cboCurrency").prop('disabled',true);
        $('#txtAmountSIC').icsCurrencyBox();
        //ChangeCurrency();
        Initialization(oSampleInvoice,((sessionStorage.length>0)?sessionStorage.getItem('Operation'):'New'));
        DynamicRefreshList(oDyeingOrderDetails, "tblDyeingOrderDetails");
        DynamicRefreshList(oSampleInvoiceDetails_DO, "tblDyeingOrders");
        RefreshSummary();
        RefreshSummaryDetail();

        //document.getElementById('leOrderThree').innerHTML = oDUOrderSetup.OrderName+" Detail";
    });

    function SetInvoiceSetup(){
        $("#txtRate").hide();
        $("#txtRGB").hide();
        var oSampleInvoiceSetup= $('#divSI').data('SampleInvoiceSetup');
        document.getElementById('leInvoice').innerHTML = oSampleInvoiceSetup.Name;
        $(".lblInvoice").html(oSampleInvoiceSetup.Name+" ");
        //document.getElementById('divInvoice').title ="ooii"+ oSampleInvoiceSetup.Name;
        if(!oSampleInvoiceSetup.IsRateChange)
        {
            $("#btnSave_Rate").hide();
            $("#cboCurrency_Inv").prop('disabled',true);

        }
    }
    function Initialization(oSampleInvoice , sOperation){

      
        //if(sessionStorage.getItem("SampleInvoiceHeader")=="View Sample Invoice")
        //{
        //    $('#toolbar,#btnSave,#btnPickProduct,#btnRefresh,#btnDeleteDetail,#btnApprove,.ics-pick').hide();
        //}


        $("#chkIsCreateReviseNo").hide();
        $("#lblCreateReviseNo").hide();
        if(sOperation=="View")
        {
            $('#btnSave_Revise,#toolbar,#btnApprove,#btnSave,#btnCancel,#btnSave_Rate,#btnDeleteDO,#btnPickOrder,,#btnRefreshDOD,.ics-pick').hide();
            $('input,select').not('#txtDyeingOrderNo').prop('disabled',true);
        }
        else  if(sOperation=="Revise")
        {
            $('#btnSave,#btnCancel,#btnApprove').hide();
            $('#btnSave_Revise').show();
            $("#chkIsCreateReviseNo").show();
            $("#lblCreateReviseNo").show();
            $('input,select').not('#txtDyeingOrderNo').prop('disabled',false);
            $('#dtOrderDate').datebox('setValue', icsdateformat(new Date()));
        }
        else  if(sOperation=="Cancel")
        {
            $('#btnSave,#btnApprove,#btnSave_Revise,#btnSave_Rate,#btnDeleteDO,#btnPickOrder,#btnRefreshDOD,.ics-pick').hide();
            $('#btnCancel').show();
            $('input,select').not('#txtSampleInvoiceNo').prop('disabled',false);
        }
        else if(sOperation=="Approve")
        {
            $('#toolbar,#btnSave,#btnSave_Revise,#btnCancel,#btnSave_Rate,#btnRefreshDOD,.ics-pick').hide();
            $('#btnApprove').show();
            $('input,select').not('#txtSampleInvoiceNo').prop('disabled',true);
            $('.td-col-6 input').css('width','92%');
        }
        else{
            $('#btnSave_Revise,#btnCancel,#btnApprove').hide();
            $('#toolbar,#btnSave,.ics-pick').show();
            $('input,select').not('#txtSampleInvoiceNo').prop('disabled',false);

        }
        RefreshControl(oSampleInvoice);
    }

    function CboLoad()
    {
        $("#cboPaymentType").icsLoadCombo({
            List: $('#divSI').data('OrderPaymentTypeObjs'),
            OptionValue: "id",
            DisplayText: "Value",
        });
        $("#cboCurrency,#cboCurrency_Inv").icsLoadCombo({
            List: $('#divSI').data('Currencys'),
            OptionValue: "CurrencyID",
            DisplayText: "CurrencyName"
        });

    }

    function ChangeCurrencyInv()
    {
        ChangeCurrency();
        for(var i=0; i<$('#divSI').data('Currencys').length; i++)
        {
            if(parseInt($('#divSI').data('Currencys')[i].CurrencyID) ===  parseInt($('#cboCurrency_Inv').val()))
            {
                $(".lblCurrencySymbol").html("("+$('#divSI').data('Currencys')[i].Symbol+")");
                break;
            }
        }
    }
    function ChangeCurrency()
    {
        debugger;
        var nCurrencyID = parseInt($('#cboCurrency').val());
        //for(var i=0; i<$('#divSI').data('Currencys').length; i++)
        //{
        //    if(parseInt($('#divSI').data('Currencys')[i].CurrencyID) === nCurrencyID)
        //    {
        //        $(".lblCurrency").html("("+$('#divSI').data('Currencys')[i].Symbol+")");
        //        break;
        //    }
        //}
       
        if(nCurrencyID===  parseInt($('#cboCurrency_Inv').val()))
        {
            $('#txtConversionRate').val(parseFloat(1).toFixed(3));
            $("#txtConversionRate").prop("disabled", true);
        }
        else
        {
            $('#txtConversionRate').val(parseFloat($('#divSI').data('SampleInvoice').ConversionRate).toFixed(3));
            $("#txtConversionRate").prop("disabled", false);
        }
    }
    function ValidateInput()
    {

        if(document.getElementById("cboPaymentType").selectedIndex==null || document.getElementById("cboPaymentType").selectedIndex<=0)
        {
            alert("Please select Payment Type!");
            $('#cboPaymentType').focus();
            return false;
        }

        if(parseInt($('#divSI').data('SampleInvoice').ExchangeCurrencyID)<=0 )
        {
            alert("Sorry There is No Exchange Currency. Please setup Base Currency In Company Entry.");
            $('#cboCurrency').focus();
            return false;
        }

        if(parseInt($('#divSI').data('SampleInvoice').CurrencyID)<=0 )
        {
            alert("Sorry There is No Currency. Please setup Base Currency In PI Print Setup Entry.");
            return false;
        }
        if(parseInt($('#divSI').data('SampleInvoice').ContractorID)<=0 )
        {
            alert("Sorry There is No Buyer..");
            $('#txtContractorName').focus();
            return false;
        }
        if(parseFloat($('#txtConversionRate').val())<=0)
        {
            alert("Conversion Rate Should  be > 0");
            $('#txtConversionRate').focus();
            return false;
        }
        if(parseInt($('#cboCurrency_Inv').val())<=0 || parseInt($('#cboCurrency_Inv').val())==null)
        {
            alert("Select Invoice Currency");
            $('#cboCurrency_Inv').focus();
            return false;
        }

        return true;
    }
    function RefreshControl(oSampleInvoice)
    {
        debugger;
      
        $('.number').icsCurrencyBox();
        $('.number').val("0.00");
        //    debugger;
        if(parseInt(oSampleInvoice.CurrencyID)==parseInt(oSampleInvoice.ExchangeCurrencyID))
        {
            $('#txtConversionRate').val(1);
            $("#txtConversionRate").prop("disabled", true);
        }else
        {
            $('#txtConversionRate').val(oSampleInvoice.ConversionRate);
        }
        $("#txtAmount_Total").prop("disabled", true);
        $('#txtCharge').val(oSampleInvoice.Charge);
        $('#txtDiscount').val(oSampleInvoice.Discount);
        $('#txtAmount_Total').val(oSampleInvoice.Amount);
        $('#cboCurrency').val(parseInt(oSampleInvoice.ExchangeCurrencyID));
        $('#cboCurrency_Inv').val(parseInt(oSampleInvoice.CurrencyID));
        $('#txtSampleInvoiceDate').datebox('setValue',oSampleInvoice.SampleInvoiceDateST);
        $('#txtPaymentDate').datebox('setValue',oSampleInvoice.PaymentDateST);
        $('#txtRequirementDate').datebox('setValue',oSampleInvoice.RequirementDateST);
        $("#txtSampleInvoiceNo")[0].value=oSampleInvoice.SampleInvoiceNo;
        $("#cboPaymentType").val(oSampleInvoice.PaymentType);
        $("#txtContractorName").val(oSampleInvoice.ContractorName);
        if(oSampleInvoice.PaymentType==2|| oSampleInvoice.PaymentType==3)
        {
            $("#txtMRNo").val(oSampleInvoice.ExportPINo);
            $('#lblPINo').html("P/I No");
        }
        else{
            $("#txtMRNo").val(oSampleInvoice.MRNo);
        }
        LoadIssueContactPersonnel(oSampleInvoice.ContactPersonnels);
        $("#cboCPIssueTo").val(oSampleInvoice.ContractorPersopnnalID);
       // ChangeCurrency();
        if(oSampleInvoice.SampleInvoiceID<=0)
        {
            ChangeCurrency();
        }
        DynamicRefreshList(oSampleInvoice.SampleInvoiceDetails, "tblSampleInvoiceDetail");
        DynamicRefreshList(oSampleInvoice.SampleInvoiceCharges, "tblSampleInvoiceCharge");
        $(".lblCurrencySymbol").html("("+oSampleInvoice.CurrencySymbol+")");

        $('#txtDate').datebox('setValue',oSampleInvoice.PaymentDateST);
        $("#txtCustomerName").val(oSampleInvoice.ContractorName);
        $("#txtBILLNo").val(oSampleInvoice.InvoiceNo);
        $("#txtBILLNo").attr('disabled','disabled');
        $("#txtCustomerName").attr('disabled','disabled');
        $("#txtDate").attr('disabled','disabled');
        txtCustomerName.style.fontWeight="bold";
        txtBILLNo.style.fontWeight="bold";


    }

    function RefreshObject()
    {
        debugger;

        var bIsAdvance=true;

        var oSampleInvoiceDetails= $('#tblSampleInvoiceDetail').datagrid('getRows');
        var oDyeingOrders= $('#tblDyeingOrders').datagrid('getRows');
        for (var i = 0; i < oDyeingOrders.length; i++)
        {
            oSampleInvoiceDetails.push(oDyeingOrders[i]);
            bIsAdvance=false;
        }

        var oSampleInvoice= {
            SampleInvoiceID : $('#divSI').data('SampleInvoice').SampleInvoiceID,
            SampleInvoiceNo:$('#divSI').data('SampleInvoice').SampleInvoiceNo,
            CurrencyID: $('#divSI').data('SampleInvoice').CurrencyID,
            ExchangeCurrencyID: parseInt($('#cboCurrency').val()),
            CurrencyID: parseInt($('#cboCurrency_Inv').val()),
            SampleInvoiceDate:$('#txtSampleInvoiceDate ').datebox('getValue'),
            PaymentDate:$('#txtPaymentDate').datebox('getValue'),
            RequirementDate: $('#txtRequirementDate').datebox('getValue'),
            ContractorID: $('#divSI').data('SampleInvoice').ContractorID,
            PaymentType:parseInt($("#cboPaymentType").val()),
            MRNo : $('#txtMRNo').val() ,
            ConversionRate  : $('#txtConversionRate').val() ,
            Remark:$('#txtRemarks').val() ,
            Amount:parseFloat(icsRemoveComma($('#txtAmount').val())),
            AmountST:$('#txtAmount').val() ,
            AmountWithCRateST: $('#txtAmountWithCRateInExchangeCur').val() ,
            CurrentStatusInt:1,
            ContractorPersopnnalID  :  $("#cboCPIssueTo").val(),
            OrderType: 2,
            MKTEmpID:$('#divSI').data('SampleInvoice').MKTEmpID,
            InvoiceType:1,
            ExportPIID: $('#divSI').data('SampleInvoice').ExportPIID,
            IsAdvance:bIsAdvance,
            BUID:sessionStorage.getItem('BUID'),
            IsRevise:false,
            Charge:$('#txtCharge').val(),
            Discount:$('#txtDiscount').val(),
            SampleInvoiceDetails:oSampleInvoiceDetails
        };
        return oSampleInvoice;
    }

    $("#btnSave").click(function()
    {
        debugger;
        endEditing();
        if(!ValidateInput()) return;
        var oSampleInvoice=RefreshObject();

        var oSampleInvoiceDetails=$('#tblSampleInvoiceDetail').datagrid('getRows');
        if(oSampleInvoiceDetails.length<=0)
        {
            alert("please select atleast one item");
            return;
        }
        if(oSampleInvoice.ContractorID<=0)
        {
            alert("please select a valid party name");
            return;
        }
        $('#btnSave').hide();

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/SampleInvoice/Save",
            traditional: true,
            data:  JSON.stringify(oSampleInvoice),
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                debugger;
                var oSampleInvoice = jQuery.parseJSON(data);
               $('#btnSave').show();

                if (oSampleInvoice.ErrorMessage == '' || oSampleInvoice.ErrorMessage == null)
                {

                    var oSampleInvoiceDetails_Temp=[];
                    var oDyeingOrders=[];
                    var oSampleInvoiceDetails= oSampleInvoice.SampleInvoiceDetails;
                    for (var i = 0; i < oSampleInvoiceDetails.length; i++)
                    {
                        if(oSampleInvoiceDetails[i].DyeingOrderID>0)
                        {
                            oDyeingOrders.push(oSampleInvoiceDetails[i]);
                        }
                        else{
                            oSampleInvoiceDetails_Temp.push(oSampleInvoiceDetails[i]);
                        }
                    }
                  //  DynamicRefreshList(oSampleInvoice.DyeingOrderReports, "tblDyeingOrderDetails");
                    oSampleInvoice.SampleInvoiceDetails=oSampleInvoiceDetails_Temp;
                    DynamicRefreshList(oSampleInvoice.SampleInvoiceDetails, "tblSampleInvoiceDetail");
                    DynamicRefreshList(oDyeingOrders, "tblDyeingOrders");

                    $('#divSI').data('SampleInvoice',oSampleInvoice);
                    alert("Data Saved sucessfully");

                    var oSampleInvoices =sessionStorage.getItem("SampleInvoices");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    debugger;
                    if(oSampleInvoices!=null)
                    {
                        oSampleInvoices = jQuery.parseJSON(oSampleInvoices);
                    }
                    else
                    {
                        oSampleInvoices=[];
                    }
                    if(nIndex!=-1)
                    {
                        oSampleInvoices[nIndex]=oSampleInvoice;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oSampleInvoices.length);
                        oSampleInvoices.push(oSampleInvoice);
                    }
                    sessionStorage.setItem("SampleInvoices", JSON.stringify(oSampleInvoices));

                    if($('#divSI').data('SampleInvoiceSetup').IsRateChange)
                    {
                       GetsDOreport(oSampleInvoice);
                        $('#tabSampleInvoice').tabs('select', 1);
                        $("#btnSave_Rate").Show();
                        //window.location.href = sessionStorage.getItem("BackLink");
                    }
                    else{
                        window.location.href = sessionStorage.getItem("BackLink");
                    }
                }
                else {
                    alert(oSampleInvoice.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });

    });
    $("#btnSave_Revise").click(function()
    {
        debugger;
        endEditing();
        if(!ValidateInput()) return;
        var oSampleInvoice=RefreshObject();
        if ($("#chkIsCreateReviseNo").is(':checked'))
        {
            oSampleInvoice.IsRevise=true;
            if (!confirm("Confirm to Change  with Revise No ?")) return false;
        }else{
            oSampleInvoice.IsRevise=false;

            if (!confirm("Confirm to Change  without Revise No ?")) return false;
        }
        var oSampleInvoiceDetails=$('#tblSampleInvoiceDetail').datagrid('getRows');
        if(oSampleInvoiceDetails.length<=0)
        {
            alert("please select atleast one item");
            return;
        }
        if(oSampleInvoice.ContractorID<=0)
        {
            alert("please select a valid party name");
            return;
        }
        $('#btnSave_Revise').hide();

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/SampleInvoice/Save_Revise",
            traditional: true,
            data:  JSON.stringify(oSampleInvoice),
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                debugger;
                var oSampleInvoice = jQuery.parseJSON(data);
                $('#btnSave_Revise').show();

                if (oSampleInvoice.ErrorMessage == '' || oSampleInvoice.ErrorMessage == null)
                {

                    var oSampleInvoiceDetails_Temp=[];
                    var oDyeingOrders=[];
                    var oSampleInvoiceDetails= oSampleInvoice.SampleInvoiceDetails;
                    for (var i = 0; i < oSampleInvoiceDetails.length; i++)
                    {
                        if(oSampleInvoiceDetails[i].DyeingOrderID>0)
                        {
                            oDyeingOrders.push(oSampleInvoiceDetails[i]);
                        }
                        else{
                            oSampleInvoiceDetails_Temp.push(oSampleInvoiceDetails[i]);
                        }
                    }
                    //  DynamicRefreshList(oSampleInvoice.DyeingOrderReports, "tblDyeingOrderDetails");
                    oSampleInvoice.oSampleInvoice=oSampleInvoiceDetails_Temp;
                    DynamicRefreshList(oSampleInvoice.SampleInvoiceDetails, "tblSampleInvoiceDetail");
                    DynamicRefreshList(oDyeingOrders, "tblDyeingOrders");

                    $('#divSI').data('SampleInvoice',oSampleInvoice);
                    alert("Data Saved sucessfully");

                    var oSampleInvoices =sessionStorage.getItem("SampleInvoices");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    debugger;
                    if(oSampleInvoices!=null)
                    {
                        oSampleInvoices = jQuery.parseJSON(oSampleInvoices);
                    }
                    else
                    {
                        oSampleInvoices=[];
                    }
                    if(nIndex!=-1)
                    {
                        oSampleInvoices[nIndex]=oSampleInvoice;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oSampleInvoices.length);
                        oSampleInvoices.push(oSampleInvoice);
                    }
                    sessionStorage.setItem("SampleInvoices", JSON.stringify(oSampleInvoices));

                    if($('#divSI').data('SampleInvoiceSetup').IsRateChange)
                    {
                        GetsDOreport(oSampleInvoice);
                        $('#tabSampleInvoice').tabs('select', 1);
                        $("#btnSave_Rate").Show();
                        //window.location.href = sessionStorage.getItem("BackLink");
                    }
                    else{
                        window.location.href = sessionStorage.getItem("BackLink");
                    }
                }
                else {
                    alert(oSampleInvoice.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });

    });
    $('#btnApprove').click(function ()
    {
        //   Initialized = 0,      WaitingForApprove = 1,        Approved = 2,        Not_Approved = 3,        RequestToPaymentTypeChange = 4,       Settled = 5,
        debugger;
        var conf = confirm("Are you sure you want to Approve selected item?");
        if(conf==false)return;
        var oSampleInvoice= {
            SampleInvoiceID :  $('#divSI').data('SampleInvoice').SampleInvoiceID,
            SampleInvoiceNo: $('#divSI').data('SampleInvoice').SampleInvoiceNo,
            PaymentType : $('#divSI').data('SampleInvoice').PaymentType,
            InvoiceTypeInt :  $('#divSI').data('SampleInvoice').InvoiceType,
            CurrentStatusInt: 2
        };
        if(parseInt(oSampleInvoice.CurrentStatusInt)> 0)
        {
            $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+"/SampleInvoice/Approve",
                traditional: true,
                data:  JSON.stringify(oSampleInvoice),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    var oSampleInvoice = jQuery.parseJSON(data);
                    if ( oSampleInvoice.ErrorMessage=="" || oSampleInvoice.ErrorMessage==null )
                    {
                        alert("Approved sucessfully");

                        var oSampleInvoices =sessionStorage.getItem("SampleInvoices");
                        var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                        debugger;
                        if(oSampleInvoices!=null)
                        {
                            oSampleInvoices = jQuery.parseJSON(oSampleInvoices);
                        }
                        else
                        {
                            oSampleInvoices=[];
                        }
                        if(nIndex!=-1)
                        {
                            oSampleInvoices[nIndex]=oSampleInvoice;
                        }
                        else
                        {
                            sessionStorage.setItem("SelectedRowIndex", oSampleInvoices.length);
                            oSampleInvoices.push(oSampleInvoice);
                        }
                        sessionStorage.setItem("SampleInvoices", JSON.stringify(oSampleInvoices));

                        window.location.href = sessionStorage.getItem("BackLink");
                    }
                    else
                    {
                        alert(oSampleInvoice.ErrorMessage);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
    });
    $('#btnCancel').click(function ()
    {
        //   Initialized = 0,      WaitingForApprove = 1,        Approved = 2,        Not_Approved = 3,        RequestToPaymentTypeChange = 4,       Settled = 5,

        var conf = confirm("Are you sure you want to Approve selected item?");
        if(conf==false)return;

        var oSampleInvoice= {
            SampleInvoiceID :  $('#divSI').data('SampleInvoice').SampleInvoiceID,
            SampleInvoiceNo: $('#divSI').data('SampleInvoice').SampleInvoiceNo,
            PaymentType : $('#divSI').data('SampleInvoice').PaymentType,
            InvoiceTypeInt :  $('#divSI').data('SampleInvoice').InvoiceType,
            CurrentStatusInt: 3
        };

        if (oSampleInvoice.CurrentStatusInt> 0)
        {
            $.ajax({
                type: "POST",
                dataType: "json",

                url : _sBaseAddress+  "/SampleInvoice/Cancel",
                traditional: true,
                data:  JSON.stringify(oSampleInvoice),

                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    var oSampleInvoice = jQuery.parseJSON(data);
                    if ( oSampleInvoice.ErrorMessage=="" || oSampleInvoice.ErrorMessage==null ) {
                        alert("Cancel sucessfully");
                        var oSampleInvoices =sessionStorage.getItem("SampleInvoices");
                        var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                        debugger;
                        if(oSampleInvoices!=null)
                        {
                            oSampleInvoices = jQuery.parseJSON(oSampleInvoices);
                        }
                        else
                        {
                            oSampleInvoices=[];
                        }
                        if(nIndex!=-1)
                        {
                            oSampleInvoices[nIndex]=oSampleInvoice;
                        }
                        else
                        {
                            sessionStorage.setItem("SelectedRowIndex", oSampleInvoices.length);
                            oSampleInvoices.push(oSampleInvoice);
                        }
                        sessionStorage.setItem("SampleInvoices", JSON.stringify(oSampleInvoices));
                        window.location.href = sessionStorage.getItem("BackLink");
                    }
                    else
                    {
                        alert(oSampleInvoice.ErrorMessage);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
    });

    $("#btnRefreshDOD").click(function(){
        endEditingRate();
        var oSampleInvoice= $('#divSI').data('SampleInvoice');
        if(oSampleInvoice.SampleInvoiceID>0)
        {
            GetsDOreport(oSampleInvoice);
        }
    });
    function GetsDOreport(oSampleInvoice)
    {
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oSampleInvoice,
            ControllerName: "SampleInvoice",
            ActionName: "GetsDyeingOrderReport",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0)
            {
                DynamicRefreshList(response.objs, "tblDyeingOrderDetails");
                RefreshSummaryDetail();

            }
        });
    }

    $("#btnResetAmount").click(function()
    {
        debugger;
        endEditing();
        if(!ValidateInput()) return;
        var oSampleInvoice=RefreshObject();

        var oSampleInvoiceDetails=$('#tblSampleInvoiceDetail').datagrid('getRows');
        if(oSampleInvoiceDetails.length<=0)
        {
            alert("please select atleast one item");
            return;
        }
        if(oSampleInvoice.ContractorID<=0)
        {
            alert("please select a valid party name");
            return;
        }
        $.ajax({
            type: "POST",
            dataType: "json",
            url: '@Url.Action("Save_AddDO", "SampleInvoice")',
            traditional: true,
            data:  JSON.stringify(oSampleInvoice),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                var oSampleInvoice = jQuery.parseJSON(data);
                if (oSampleInvoice.ErrorMessage == '' || oSampleInvoice.ErrorMessage == null)
                {
                    $('#divSI').data('SampleInvoice',oSampleInvoice);
                    alert("Data Saved sucessfully");

                    var oSampleInvoices =sessionStorage.getItem("SampleInvoices");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    debugger;
                    if(oSampleInvoices!=null)
                    {
                        oSampleInvoices = jQuery.parseJSON(oSampleInvoices);
                    }
                    else
                    {
                        oSampleInvoices=[];
                    }
                    if(nIndex!=-1)
                    {
                        oSampleInvoices[nIndex]=oSampleInvoice;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oSampleInvoices.length);
                        oSampleInvoices.push(oSampleInvoice);
                    }
                    sessionStorage.setItem("SampleInvoices", JSON.stringify(oSampleInvoices));
                    // window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oSampleInvoice.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });

    });

    var editIndex = undefined;
    function endEditing() {
        if (editIndex == undefined) { return true }
        if ($('#tblSampleInvoiceDetail').datagrid('validateRow', editIndex)) {
            $('#tblSampleInvoiceDetail').datagrid('endEdit', editIndex);
            $('#tblSampleInvoiceDetail').datagrid('selectRow', editIndex);
            var oSIDetail = $('#tblSampleInvoiceDetail').datagrid('getSelected');

            debugger;
            oSIDetail.AmountSt='$'+(oSIDetail.Qty* oSIDetail.UnitPrice);
            oSIDetail.Amount=(oSIDetail.Qty* oSIDetail.UnitPrice);
            $('#tblSampleInvoiceDetail').datagrid('updateRow', { index: editIndex, row: oSIDetail });

            RefreshSummary();
            editIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    function onClickRow(index) {

        if (editIndex != index) {
            if (endEditing()) {
                $('#tblSampleInvoiceDetail').datagrid('selectRow', index).datagrid('beginEdit', index);
                var oPRDetail= $('#tblSampleInvoiceDetail').datagrid('getSelected');

                editIndex = index;
            }
            else {
                $('#tblSampleInvoiceDetail').datagrid('selectRow', editIndex);
            }
        }
    }
    $("#btnDeleteDetail").click(function ()
    {
        var oSampleInvoiceDetail = $("#tblSampleInvoiceDetail").datagrid("getSelected");
        if (oSampleInvoiceDetail == null) { alert("Please select an item from list!"); return false; }
        var nIndex=$('#tblSampleInvoiceDetail').datagrid('getRowIndex',oSampleInvoiceDetail);
        if (!confirm("Confirm to Delete?")) return false;
        if (oSampleInvoiceDetail.SampleInvoiceDetailID > 0)
        {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : sessionStorage.getItem('BaseAddress')+  "/SampleInvoice/DeleteDetail",
                traditional: true,
                data:  JSON.stringify(oSampleInvoiceDetail),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Deleted")
                    {
                        alert("Delete sucessfully");
                        $('#tblSampleInvoiceDetail').datagrid('deleteRow',nIndex);
                        RefreshSummary();

                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
        }
        else if(parseInt(oSampleInvoiceDetail.DyeingOrderID)>0)
        {

            $.ajax
          ({
              type: "POST",
              dataType: "json",
              url : sessionStorage.getItem('BaseAddress')+  "/SampleInvoice/UpdateInvoiceID",
              traditional: true,
              data:  JSON.stringify(oSampleInvoiceDetail),
              contentType: "application/json; charset=utf-8",
              success: function (data) {
                  var feedbackmessage = jQuery.parseJSON(data);
                  if (feedbackmessage == "Deleted")
                  {
                      alert("Delete sucessfully");
                      $('#tblSampleInvoiceDetail').datagrid('deleteRow',nIndex);
                      RefreshList($('#divSI').data('SampleInvoice').SampleInvoiceDetails);
                      RefreshSummary();

                  }
                  else
                  {
                      alert(feedbackmessage);
                  }
              },
              error: function (xhr, status, error)
              {
                  alert(error);
              }
          });


        }
        else
        {
            alert("Delete sucessfully");
            $('#tblSampleInvoiceDetail').datagrid('deleteRow',nIndex);
            RefreshSummary();
        }

    });
    $("#btnDeleteDO").click(function ()
    {
        var oSampleInvoiceDetail = $("#tblDyeingOrders").datagrid("getSelected");
        if (oSampleInvoiceDetail == null) { alert("Please select an item from list!"); return false; }
        var nIndex=$('#tblDyeingOrders').datagrid('getRowIndex',oSampleInvoiceDetail);
        if (!confirm("Confirm to Delete?")) return false;
        if (oSampleInvoiceDetail.SampleInvoiceDetailID>0)
        {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : sessionStorage.getItem('BaseAddress')+  "/SampleInvoice/DeleteDetail",
                traditional: true,
                data:  JSON.stringify(oSampleInvoiceDetail),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Deleted")
                    {
                        alert("Delete sucessfully");
                        $('#tblDyeingOrders').datagrid('deleteRow',nIndex);
                        RefreshSummary();

                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
        }
            //else if(parseInt(oSampleInvoiceDetail.DyeingOrderID)>0)
            //{

            //    $.ajax
            //  ({
            //      type: "POST",
            //      dataType: "json",
            //      url : sessionStorage.getItem('BaseAddress')+  "/SampleInvoice/UpdateInvoiceID",
            //      traditional: true,
            //      data:  JSON.stringify(oSampleInvoiceDetail),
            //      contentType: "application/json; charset=utf-8",
            //      success: function (data) {
            //          var feedbackmessage = jQuery.parseJSON(data);
            //          if (feedbackmessage == "Deleted")
            //          {
            //              alert("Delete sucessfully");
            //              $('#tblSampleInvoiceDetail').datagrid('deleteRow',nIndex);
            //              RefreshList($('#divSI').data('SampleInvoice').SampleInvoiceDetails);
            //              RefreshSummary();

            //          }
            //          else
            //          {
            //              alert(feedbackmessage);
            //          }
            //      },
            //      error: function (xhr, status, error)
            //      {
            //          alert(error);
            //      }
            //  });


            //}
        else
        {
            alert("Delete sucessfully");
            $('#tblDyeingOrders').datagrid('deleteRow',nIndex);
            RefreshSummary();
        }

    });
    $("#btnClose,#btnCloseTwo,#btnCloseThree").click(function(){
        window.location.href = sessionStorage.getItem("BackLink");
    });
    $("#btnRefresh").click(function(){
        endEditing();
    });


    $(document).keydown(function(e) {
        if(e.which == 27)//escape=27
        {
            window.location.href = sessionStorage.getItem("BackLink");
        }
    });


    function RefreshSummary()
    {
        var nTotalQty = 0, nTotalAmount= 0,sMunit="";
        var oSampleInvoiceDetails=$('#tblSampleInvoiceDetail').datagrid('getRows');
        for(var i=0; i<oSampleInvoiceDetails.length;i++)
        {
            nTotalAmount=nTotalAmount+oSampleInvoiceDetails[i].Amount;
            nTotalQty+=parseFloat(oSampleInvoiceDetails[i].Qty);
            sMunit=oSampleInvoiceDetails[i].MUName;
        }
        document.getElementById('lblTotalQty').innerHTML = formatPrice(nTotalQty,0)+" "+sMunit;
        document.getElementById('lblTotalAmount').innerHTML = "$"+formatPrice(nTotalAmount,0);
        debugger;
        var oSampleInvoiceDetails_DO=$('#tblDyeingOrders').datagrid('getRows');

        if(oSampleInvoiceDetails_DO.length>0)
        {
            nTotalAmount=0;nTotalQty=0;
        }

        for(var i=0; i<oSampleInvoiceDetails_DO.length;i++)
        {
            nTotalAmount=nTotalAmount+oSampleInvoiceDetails_DO[i].Amount;
            nTotalQty+=parseFloat(oSampleInvoiceDetails_DO[i].Qty);
            sMunit=oSampleInvoiceDetails_DO[i].MUName;
        }

        document.getElementById('lblTotalQtyDO').innerHTML = formatPrice(nTotalQty,0)+" "+sMunit;
        document.getElementById('lblTotalAmountDO').innerHTML = "$"+formatPrice(nTotalAmount,0);

        var nCRate= icsRemoveComma($("#txtConversionRate").val());
        $("#txtAmount").val(formatPrice(parseFloat(nTotalAmount)));
        $("#txtAmountWithCRateInExchangeCur").val(formatPrice(parseFloat(nTotalAmount)*parseFloat(nCRate)));

    }
    function RefreshSummaryDetail()
    {
        var nTotalQty = 0, nTotalAmount= 0,sMunit="";
        var oDyeingOrderDetails=$('#tblDyeingOrderDetails').datagrid('getRows');
        for(var i=0; i<oDyeingOrderDetails.length;i++)
        {
            nTotalAmount=nTotalAmount+(parseFloat(oDyeingOrderDetails[i].Qty*oDyeingOrderDetails[i].UnitPrice));
            nTotalQty+=parseFloat(oDyeingOrderDetails[i].Qty);
            sMunit=oDyeingOrderDetails[i].MUName;
        }

        document.getElementById('lblTotalQty_DOD').innerHTML ="Qty: "+ formatPrice(nTotalQty,0)+" "+sMunit;
        document.getElementById('lblTotalAmount_DOD').innerHTML = "Amount: $"+formatPrice(nTotalAmount,0);
        if(nTotalQty>0)
        {
            document.getElementById('lblUP_DOD').innerHTML = "AVG Unit Price: $"+(nTotalAmount/nTotalQty).toFixed(5);
        }

    }

    $('#txtConversionRate').keyup(function ()
    {
        var nAmount= icsRemoveComma($("#txtAmount").val());
        var nBDTAmount=parseFloat($('#txtConversionRate').val()) * parseFloat(nAmount);
        document.getElementById("txtAmountWithCRateInExchangeCur").value= formatPrice(nBDTAmount.toFixed(2));
    });


    function RefreshContractorPersonnel(nContractorID)
    {

        var oContractor= {
            ContractorID : nContractorID
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url: '@Url.Action("GetContactPersonnels", "Contractor")',
            traditional: true,
            data:  JSON.stringify(oContractor),
            contentType: "application/json; charset=utf-8",
            success: function (data)
            {
                // debugger;
                var oContactPersonnels;
                oContactPersonnels = jQuery.parseJSON(data);

                $('#cboCPIssueTo').empty();
                var listItems= "";
                for (var i = 0; i < oContactPersonnels.length; i++)
                {
                    if(oContactPersonnels[i].ContractorID==nContractorID)
                    {
                        listItems+= "<option value='" + oContactPersonnels[i].ContactPersonnelID + "'>" + oContactPersonnels[i].Name+" </option>";
                    }
                }
                $("#cboCPIssueTo").html(listItems);

            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

    }



    $("#btnloadContactPersonnels").click(function(){
        if($('#divSI').data('SampleInvoice').ContractorID>0)
        {
            RefreshContractorPersonnel($('#divSI').data('SampleInvoice').ContractorID)
        }

    });


    //Pick Buyer/
    $("#btnResetIssueTo").click(function () {
        $("#txtContractorName").val("");
        $('#divSI').data('SampleInvoice').ContractorID=0;
    });
    $("#btnPickContractorName").click(function () {

        var sContractorName=$.trim($("#txtContractorName").val());
        _bIsIssueTo=true;
        GetContractors(sContractorName, _bIsIssueTo);
    });
    $("#txtContractorName").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){
            var sContractorName=$.trim($("#txtContractorName").val());
            _bIsIssueTo=true;
            GetContractors(sContractorName,_bIsIssueTo);
        }
        else if(nkeyCode==8){
            $("#txtContractorName").val("");
            $('#divSI').data('SampleInvoice').ContractorID=0;
            $("#cboCPIssueTo").empty();
        }
    });
    function GetContractors(sContractorName, bIsIssueTo){

        var oContractor = {
            Params: '2,3' +'~'+sContractorName,
        };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "ContractorID", title: "Code", width: 50, align: "center" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 190, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Phone", title: "Phone", width: 140, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winContractorPicker',
                        winclass:'clsContractorPicker',
                        winwidth: 460,
                        winheight: 460,
                        tableid: 'tblContractorPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Contractor List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("No contractor found.");
            }
        });


    }
    function GetContactPersonel(nContractorID,bIsIssueTo){

        var oContractor = {
            ContractorID: nContractorID
        };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "GetContactPersonnels",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContactPersonnelID > 0) {
                    LoadIssueContactPersonnel(response.objs);
                }
                else
                {
                    LoadIssueContactPersonnel([]);
                }
            }
        });
    }


    $("#btnResetProduct").click(function () {

        $("#txtProduct").val("");
    });
    $("#btnPickProduct").click(function () {
        var sProductName=$.trim($("#txtProduct").val());
        GetProducts(sProductName);
    });
    $("#txtProduct").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){



            var sProductName=$.trim($("#txtProduct").val());
            if(sProductName==""){ alert("Type product name to search."); return false; }
            GetProducts(sProductName);
        }
        else if(nkeyCode==8){
            $("#txtProduct").val("");
        }
    });
    function GetProducts(sProductName){

        var oProduct = {
            ProductName:sProductName,
            ProductCode:sProductName
        };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oProduct,
            ControllerName: "Product",
            ActionName: "SearchByProductNameCode",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "ProductCode", title: "Code", width: 80, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Name", width: 300, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "MUnit", title: "Unit", width: 70, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winProductPicker',
                        winclass:'clsProductPicker',
                        winwidth: 560,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'ProductName',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("No product found.");
            }
        });


    }
    //Order Pick

    $("#btnPickOrder").click(function () {

        var sOrderNo="";
        GetsOrders(sOrderNo);
    });

    $("#txtOrderNo").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){
            var sOrderNo=$.trim($("#txtOrderNo").val());
            GetsOrders(sOrderNo);
        }
        else if(nkeyCode==8){
            $("#txtOrderNo").val("");

        }
    });

    function GetsOrders(sNo){

        var oDyeingOrders= $('#tblDyeingOrders').datagrid('getRows');
        var sDOIDs="";
        if(oDyeingOrders!=null && oDyeingOrders.length>0)
        {
            for (var i = 0;i<oDyeingOrders.length; i++){
                sDOIDs = oDyeingOrders[i].DyeingOrderID + "," + sDOIDs;
            }
            sDOIDs = sDOIDs.substring(0, sDOIDs.length - 1);
        }


        if(parseInt($('#divSI').data('SampleInvoice').ContractorID)<=0 )
        {
            alert("First Pick a Party/Buyer Name.");
            $('#txtContractorName').focus();
            return false;
        }

        var oSampleInvoiceDetail= {
            OrderNo : sNo,
            PaymentType: $("#cboPaymentType").val(),
            OrderType: 2,
            CurrencyID:parseInt($('#cboCurrency_Inv').val()),
            ContractorID: $('#divSI').data('SampleInvoice').ContractorID,
            ErrorMessage:sDOIDs
        };

        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oSampleInvoiceDetail,
            ControllerName: "SampleInvoice",
            ActionName: "GetsOrderOrders",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0)
            {
                if (response.objs[0].DyeingOrderID > 0) {
                    var tblColums = [];var  oColumn = { field: "OrderNo", title: "Order No", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "AmountSt", title: "Amount", width: 80, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorName", title: "Party Name", width:200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "PaymentTypeSt", title: "Payment Type", width:120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "OrderTypeSt", title: "Order Type", width:120, align: "left" }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winPickOrders',
                        winclass: 'clsPickOrders',
                        winwidth: 700,
                        winheight: 460,
                        tableid: 'tblPickOrders',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'OrderNo',
                        windowTittle: 'Order List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiple return
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }
            else{
                alert("Data not Found");
            }
        });

    }


    /////
    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }
    function SetPickerValueAssign(oPickerobj)
    {
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

        if (oPickerobj.winid == 'winContractorPicker')
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0)
            {
                var txtContractorName = document.getElementById("txtContractorName");
                txtContractorName.value = oreturnObj.Name;
                txtContractorName.style.color = "blue";
                txtContractorName.style.fontWeight = "bold";
                $('#divSI').data('SampleInvoice').ContractorID = oreturnObj.ContractorID;
                RefreshContractorPersonnel($('#divSI').data('SampleInvoice').ContractorID);
                $('#txtContractorName').focus();
            }
        }
        else if (oPickerobj.winid == 'winProductPicker')
        {
            debugger;

            if (oreturnobjs!=null && oreturnobjs.length > 0)
            {
                $("#txtProductName").val(oreturnobjs.length+' item(s) selected');
                $("#txtProductName").addClass('fontColorOfPickItem');
                ProductMapping(oreturnobjs);
            }
        }
        else if (oPickerobj.winid == 'winPickOrders')
        {
            if (oreturnobjs!= null && oreturnobjs.length> 0)
            {
                var oSampleInvoiceDetails = $('#tblDyeingOrders').datagrid('getRows');
                for (i=0; i<oreturnobjs.length;i++)
                {
                    if(!ICS_IsExist(oSampleInvoiceDetails,'DyeingOrderID',oreturnobjs[i].DyeingOrderID))
                    {
                        $('#tblDyeingOrders').datagrid('appendRow',oreturnobjs[i]);
                    }
                }

            }
        }
    }

    function ProductMapping(oProducts)
    {
        debugger;
        var oSampleInvoiceDetail=null;

        for (i=0; i<oProducts.length;i++)
        {
            oSampleInvoiceDetail={ SampleInvoiceDetailID: 0,
                SampleInvoiceID:0,
                ProductID:oProducts[i].ProductID,
                ProductCode :oProducts[i].ProductCode,
                ProductName:oProducts[i].ProductName,
                MUnitID :oProducts[i].MeasurementUnitID,
                MUName :oProducts[i].MUnit,
                Qty:0,
                UnitPrice:0,
                Amount:0,
                AmountSt:""
            };

            $('#tblSampleInvoiceDetail').datagrid('appendRow',oSampleInvoiceDetail);
        }

    }
    function IsExists(oSampleInvoiceDetail)
    {
        var oSampleInvoiceDetails = $('#tblSampleInvoiceDetail').datagrid('getRows');
        for(var i =0;i<oSampleInvoiceDetails.length;i++)
        {
            if(oSampleInvoiceDetails[i].DyeingOrderID==oSampleInvoiceDetail.DyeingOrderID  && oSampleInvoiceDetails[i].OrderType==oSampleInvoiceDetail.OrderType)
            {
                return true;
            }
        }
        return false;
    }

    $("#btnLoadIssueToCP").click(function () {
        if($('#divSI').data('SampleInvoice').ContractorID===null ||parseInt($('#divSI').data('SampleInvoice').ContractorID) <=0)
        {
            alert("Please Pick a Issue To!");
            return;
        }
        GetContactPersonel(parseInt($('#divSI').data('SampleInvoice').ContractorID), true);
    });
    function GetContactPersonel(nContractorID,bIsIssueTo){

        var oContractor = {
            ContractorID: nContractorID
        };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "GetContactPersonnels",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContactPersonnelID > 0) {
                    LoadIssueContactPersonnel(response.objs);
                }
                else
                {
                    LoadIssueContactPersonnel([]);
                }
            }
        });
    }
    function LoadIssueContactPersonnel(oCPs){
        $("#cboCPIssueTo").icsLoadCombo({
            List: oCPs,
            OptionValue: "ContactPersonnelID",
            DisplayText: "Name",

        });
    }
    $('#btnNewIssueToCP').click(function(e){
        if($('#divSI').data('SampleInvoice').ContractorID===null ||parseInt($('#divSI').data('SampleInvoice').ContractorID) <=0)
        {
            alert("Please Pick a Issue To!");
            return;
        }
        sessionStorage.setItem("ContractorBackTo", "");
        sessionStorage.setItem("SelectedRowIndex", 0);
        sessionStorage.setItem("ContractorHeader", "Add Contact Personnel");
        window.open(sessionStorage.getItem('BaseAddress')+"/Contractor/ViewContactPersonnel?id="+parseInt($('#divSI').data('SampleInvoice').ContractorID),"_blank");
    });
    $('#btnPrint,#btnPrintTwo').click(function(e){
        if($('#divSI').data('SampleInvoice')==null || $('#divSI').data('SampleInvoice').SampleInvoiceID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        var tsv=((new Date()).getTime())/1000;
        //window.open(_sBaseAddress+ "/SampleInvoice/PrintToExcelSampleInvoice?id="+oSampleInvoice.SampleInvoiceID+ "&bQtyFormat="+sessionStorage.getItem("QtyFormat") + "&nTitleTypeInImg="+sessionStorage.getItem("ImageFormat"), "_blank");
        window.open(sessionStorage.getItem('BaseAddress')+ "/SampleInvoice/PrintSampleInvoice?id="+$('#divSI').data('SampleInvoice').SampleInvoiceID+ "&bQtyFormat="+sessionStorage.getItem("QtyFormat") + "&nTitleTypeInImg="+sessionStorage.getItem("ImageFormat"), "_blank");
    });

    $('#btnPrintExcel').click(function(e){
        if($('#divSI').data('SampleInvoice')==null || $('#divSI').data('SampleInvoice').SampleInvoiceID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/SampleInvoice/PrintToExcelSampleInvoice?id="+$('#divSI').data('SampleInvoice').SampleInvoiceID+ "&bQtyFormat="+sessionStorage.getItem("QtyFormat") + "&nTitleTypeInImg="+sessionStorage.getItem("ImageFormat"), "_blank");
    });


    var editRateIndex = undefined;
    function endEditingRate() {
        if (editRateIndex == undefined) { return true }
        if ($('#tblDyeingOrderDetails').datagrid('validateRow', editRateIndex)) {
            $('#tblDyeingOrderDetails').datagrid('endEdit', editRateIndex);
            $('#tblDyeingOrderDetails').datagrid('selectRow', editRateIndex);
            var oDODetail = $('#tblDyeingOrderDetails').datagrid('getSelected');
            debugger;
            if(oDODetail!=null)
            {
                oDODetail.Amount=parseFloat(oDODetail.Qty* oDODetail.UnitPrice);
                oDODetail.AmountST= oDODetail.Amount;//oDODetail.Currency+''+(oDODetail.Qty* oDODetail.UnitPrice);
                $('#tblDyeingOrderDetails').datagrid('updateRow', { index: editRateIndex, row: oDODetail });
            }
            RefreshSummaryDetail();
            editRateIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    function onClickRowRate(index) {

        if (editRateIndex != index) {
            if (endEditingRate()) {
                $('#tblDyeingOrderDetails').datagrid('selectRow', index)
                        .datagrid('beginEdit', index);
                editRateIndex = index;
            }
            else {
                $('#tblDyeingOrderDetails').datagrid('selectRow', editRateIndex);
            }
        }
    }


    $("#btnSave_Rate").click(function (){
        debugger;
        //  if(!Validation()) return false;
        endEditingRate();

        var oSampleInvoiceDetails= $('#tblDyeingOrders').datagrid('getRows');
        var oDyeingOrderDetails= $('#tblDyeingOrderDetails').datagrid('getRows');

        var oSampleInvoice= {
            SampleInvoiceID : $('#divSI').data('SampleInvoice').SampleInvoiceID,
            SampleInvoiceNo:$('#divSI').data('SampleInvoice').SampleInvoiceNo,
            CurrencyID: $('#divSI').data('SampleInvoice').CurrencyID,
            ExchangeCurrencyID: $('#cboCurrency').val(),
            SampleInvoiceDate:$('#txtSampleInvoiceDate ').datebox('getValue'),
            PaymentDate:$('#txtPaymentDate').datebox('getValue'),
            RequirementDate: $('#txtRequirementDate').datebox('getValue'),
            ContractorID: $('#divSI').data('SampleInvoice').ContractorID,
            PaymentType:parseInt($("#cboPaymentType").val()),
            MRNo : $('#txtMRNo').val() ,
            ConversionRate  : $('#txtConversionRate').val() ,
            Remark:$('#txtRemarks').val() ,
            Amount:parseFloat(icsRemoveComma($('#txtAmount').val())),
            AmountST:$('#txtAmount').val() ,
            AmountWithCRateST: $('#txtAmountWithCRateInExchangeCur').val() ,
            MKTEmpID:$('#divSI').data('SampleInvoice').MKTEmpID,
            BUID:sessionStorage.getItem('BUID'),
            DyeingOrderDetails:oDyeingOrderDetails,
            SampleInvoiceDetails:oSampleInvoiceDetails
        };

        if(oSampleInvoice.DyeingOrderDetails.length<=0)
        {
            alert("please select atleast one item");
            return;
        }
        if(oSampleInvoice.SampleInvoiceDetails.length<=0)
        {
            alert("please select atleast one item");
            return;
        }
        if(oSampleInvoice.SampleInvoiceID<=0)
        {
            alert("please select a valid Bill");
            return;
        }

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/SampleInvoice/Save_Rate",
            traditional: true,
            data:  JSON.stringify(oSampleInvoice),
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                var oSampleInvoice= jQuery.parseJSON(data);

                if (oSampleInvoice.ErrorMessage=="" || oSampleInvoice.ErrorMessage==null)
                {
                    alert("Data Saved sucessfully");
                    var oSampleInvoices =sessionStorage.getItem("SampleInvoices");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    debugger;
                    if(oSampleInvoices!=null)
                    {
                        oSampleInvoices = jQuery.parseJSON(oSampleInvoices);
                    }
                    else
                    {
                        oSampleInvoices=[];
                    }
                    if(nIndex!=-1)
                    {
                        oSampleInvoices[nIndex]=oSampleInvoice;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oSampleInvoices.length);
                        oSampleInvoices.push(oSampleInvoice);
                    }
                    sessionStorage.setItem("SampleInvoices", JSON.stringify(oSampleInvoices));


                }
                else
                {
                    alert(oSampleInvoice.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    });


    $("#txtRGB").keydown(function(e){
        if(e.keyCode === 13)
        {
            endEditingRate();

            var oDyeingOrderDetails=$('#tblDyeingOrderDetails').datagrid('getRows');
            for (i=0; i<oDyeingOrderDetails.length;i++)
            {

                if(oDyeingOrderDetails[i].RGB==""|| oDyeingOrderDetails[i].RGB==null)
                {
                    oDyeingOrderDetails[i].RGB= $.trim($("#txtRGB").val());
                }
                var SelectedRowIndex=$('#tblDyeingOrderDetails').datagrid('getRowIndex',oDyeingOrderDetails[i]);
                $('#tblDyeingOrderDetails').datagrid('updateRow', { index: SelectedRowIndex, row: oDyeingOrderDetails[i]});
            }

        }
    });

    $("#txtRate").keypress(function (e) {
        if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
            return false;
        }

    });
    $("#txtRate").keydown(function(e){
        if(e.keyCode === 13)
        {
            endEditingRate();

            var oDyeingOrderDetails=$('#tblDyeingOrderDetails').datagrid('getRows');
            for (i=0; i<oDyeingOrderDetails.length;i++)
            {
                if(oDyeingOrderDetails[i].UnitPrice<=0)
                {
                    oDyeingOrderDetails[i].UnitPrice= $.trim($("#txtRate").val());
                }
                var SelectedRowIndex=$('#tblDyeingOrderDetails').datagrid('getRowIndex',oDyeingOrderDetails[i]);
                $('#tblDyeingOrderDetails').datagrid('updateRow', { index: SelectedRowIndex, row: oDyeingOrderDetails[i]});
            }

        }
    });

    //nazmul-17/11/2019
    $('#btnSICAdd').click(function(){
        debugger;
        var oSampleInvoiceCharge =
            {
                SampleInvoiceChargeID : 0,
                SampleInvoiceID: parseInt($('#divSI').data('SampleInvoice').SampleInvoiceID),
                InoutType : $("#cboInOutType").val(),
                Name :  $('#txtName').val(),
                Amount : parseFloat(TempRemoveComma($("#txtAmountSIC").val()))
            }
        debugger;
        // if(!ValidateInputCharge()){return;}
        if(oSampleInvoiceCharge.SampleInvoiceID == 0 || oSampleInvoiceCharge.SampleInvoiceID == null)
        {
            alert("Sample Invoice Required!");
            return ;
        }
        if(oSampleInvoiceCharge.Name=="" || oSampleInvoiceCharge.Name==null)
        {
            alert("Name is Required");
            $("#txtName").focus();
            return ;
        }        
        if(parseFloat(oSampleInvoiceCharge.Amount) <= 0 )
        {
            alert("Amount is Required");
            $("#txtAmountSIC").focus();
            return ;
        }        
       
        $.ajax({
            type: "POST",
            dataType: "json",
            url :  _sBaseAddress+"/SampleInvoice/SICSave",
            traditional: true,
            data:  JSON.stringify(oSampleInvoiceCharge),
            contentType: "application/json; charset=utf-8",
            success: function (data)
            {
                debugger;
                oSampleInvoiceCharge = jQuery.parseJSON(data);
                if (oSampleInvoiceCharge.ErrorMessage=="" || oSampleInvoiceCharge.ErrorMessage==null)
                {
                    alert("Data Saved sucessfully");
                    RefreshSIC();
                    $('#tblSampleInvoiceCharge').datagrid('appendRow',oSampleInvoiceCharge);
                    var oData = $('#tblSampleInvoiceCharge').datagrid('getRows');
                    $('#tblSampleInvoiceCharge').datagrid('selectRow',oData.length-1);
                }
                else
                {
                    alert("Failed to save Sample Invoice Charge");
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });

    });
    
    function ValidateInputCharge()
    {
        debugger;
        var nSampleInvoiceID =  parseInt(oSampleInvoice.SampleInvoiceID);
        var mAmount = parseFloat(TempRemoveComma($("#txtAmountSIC").val()));
        var nInoutType = $("#cboInOutType").val();

        if(nSampleInvoiceID == 0 || nSampleInvoiceID == null)
        {
            alert("Sample Invoice Required!");
            return false;
        }

        if(mAmount == 0 || mAmount == null)
        {
            alert("Amount is Required");
            $("#txtAmountSIC").focus();
            return false;
        }           
        return true;
    }
    $("#btnSICDelete").click(function(){
        debugger;
        var oSampleInvoiceCharge = $('#tblSampleInvoiceCharge').datagrid('getSelected');
        if(oSampleInvoiceCharge==null || oSampleInvoiceCharge.SampleInvoiceChargeID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        var SelectedRowIndex=$('#tblSampleInvoiceCharge').datagrid('getRowIndex',oSampleInvoiceCharge);
        $.ajax({
            type: "GET",
            dataType: "json",
            url :  _sBaseAddress+ "/SampleInvoice/SICDelete",
            data: {id: oSampleInvoiceCharge.SampleInvoiceChargeID},
            contentType: "application/json; charset=utf-8",
            success: function (data)
            {
                debugger;
                feedbackmessage = jQuery.parseJSON(data);
                if (feedbackmessage == "Deleted")
                {
                    alert("Delete sucessfully");
                    $('#tblSampleInvoiceCharge').datagrid('deleteRow',SelectedRowIndex);

                }
                else
                {
                    alert(feedbackmessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

    });
    function RefreshSIC(){
        $('#txtName').val("");
        $("#cboInOutType").val(0);
        $('#txtAmountSIC').val(0);
    }


    //REMOVE COMMA
    function TempRemoveComma(userInput) {
        var amountInString = "";
        if (userInput === null || userInput === "") {
            amountInString = "0.00";
        }
        else {
            amountInString = "";
            for (var i = 0; i < userInput.length; i++) {
                var char = userInput.charAt(i);
                var charForCheck = char;
                char = char.match(/\d+/g);
                if (char != null) {
                    amountInString = amountInString + userInput.charAt(i);
                    count = 1;
                }
                else if (charForCheck == ",") {
                    continue;
                }
                else if (charForCheck == ".") {
                    amountInString = amountInString + userInput.charAt(i);
                }
            }
        }
        //debugger;
        return (isNaN(parseFloat(amountInString)) ? parseFloat(0.00) : parseFloat(amountInString)).toFixed(3);
    }
    function TempAddComma(nStr) {
        nStr += '';
        x = nStr.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var process = /(\d+)(\d{3})/;
        while (process.test(x1)) {
            x1 = x1.replace(process, '$1' + ',' + '$2');
        }
        return x1 + x2;
    }

</script>