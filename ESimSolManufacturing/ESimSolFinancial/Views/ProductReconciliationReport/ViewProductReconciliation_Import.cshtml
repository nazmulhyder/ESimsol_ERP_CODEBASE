@model IEnumerable<ESimSol.BusinessObjects.ProductReconciliationReport>
  
    @{
        ViewBag.Title = "Product Reconciliation Report";
    }

                      <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
                          <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
                              <label style="font-size:18px;">Please wait</label>
                              <div id="progressbar" style="width:100%;height:37px;"></div>
                          </div>
                      </div>

                      <div class="easyui-panel menuMainCollectionTable" style="font-family:Tahoma; margin-left: 0px; height: 100%; width:100%">
                          <table id="tblPRs" style="width:100%; height:100%" title="Product Reconciliation Report(Import)" class="easyui-datagrid" fit="true" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar" data-options="rowStyler: function(index,row){
                                         if (row.ProductName=='Total'){
                                  return 'background-color:#016B18;font-weight:bold';
                                        }
                                        if (row.ProductID==0){
                                            return 'background-color:#4dffff;font-weight:bold';
                                        }
                                    }
                    ">
                              <thead>
                                  <tr>
                                      <th field="ProductCode" width="8%" align="left">Code</th>
                                      <th field="CategoryName" width="6%" align="left">Category Name</th>
                                      <th field="ProductName" width="25%" align="left">Product Name</th>
                                      <th field="StockInHand" width="10%" align="right" formatter="formatPrice">StockInHand</th>
                                      <th field="GoodsinTrasit" width="10%" align="right" formatter="formatPrice">Goods in Trasit</th>
                                      <th field="GoodsRelease" width="10%" align="right" formatter="formatPrice">Goods Release</th>
                                      <th field="DocInCnF" width="10%" align="right" formatter="formatPrice">DOC IN CnF</th>
                                      <th field="DocReceive" width="10%" align="right" formatter="formatPrice">DOC Received</th>
                                      <th field="ShipmentDone" width="10%" align="right" formatter="formatPrice">Shipment Done</th>
                                      <th field="InvoiceWithoutBL" width="10%" align="right" formatter="formatPrice">Copy Doc Receive</th>
                                      <th field="LCOpen" width="10%" align="right" formatter="formatPrice">L/C Open</th>
                                      <th field="POReceive" width="10%" align="right" formatter="formatPrice">P/I Recd</th>
                                      <th field="Total_Import" width="10%" align="right" formatter="formatPrice">Total</th>

                                      @*<th field="MinimumStock" width="10%" align="right">Mini Stock</th>
                    <th field="BookingQty" width="10%" align="right">BookingQty</th>
                    <th field="Short_Excess" width="10%" align="right">Short/Excess</th>*@

                                  </tr>
                              </thead>
                          </table>
                          <div id="toolbar">
                              <table border="0" cellpadding="2" cellspacing="2">

                                  <tr>
                                      <td style="width:12%;  font-size:12px; text-align:left">
                                          <select id="cboReportType" style="width:90%" />
                                      </td>
                                      <td style="width:80%;  font-size:12px; text-align:left">
                                          <input type="text" style="width: 300px; float: left;" id="txtProduct_Raw" placeholder="Type Name then press enter" />
                                          <a id="btnProduct_Raw" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                                          <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="Refresh()">Refresh All</a>
                                          <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true" onclick="ReDetail_Import()"> Show Detail</a>
                                          <a id="btnPrintDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Preview Detail</a>
                                          <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print(PDF)</a>
                                          <a id="btnPrintXL" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true">ExportXL</a>
                                      </td>


                                  </tr>

                              </table>
                          </div>
                      </div>
    <script type="text/javascript">
    var _oProductReconciliationReports=[];
    var _oProductReconciliationReport=null;
    var _sBaseAddress="";
    var _sProductIDs="";
    var _nBUID=0;
    $(document).ready(function () {
        debugger;
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oProductReconciliationReports=@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
        RefreshDateSearch();
        _nID =parseInt(sessionStorage.getItem("SelectedRowIndex_WU"));
        RefreshDateSearch();
        var oPRs =sessionStorage.getItem("oPRs");
        if(oPRs!=null)
        {
            oPRs =  jQuery.parseJSON(oPRs);
        }
        else
        {
            oPRs=_oProductReconciliationReports;
        }
        RefreshList(oPRs);
        if(_nID!=-1)
        {
            $('#tblPRs').datagrid('selectRow', _nID);
        }
        $("#progressbar").progressbar({value: 0});
        $("#progressbarParent").hide();
        $(".lblLoadingMessage").hide();
    });

    function RefreshDateSearch()
    {

        $('#cboReportType').empty();
        var listDates = "<option value='"+1+"'>" + "Product Wise" + "</option>";
        listDates+= "<option value='"+2+"'>" + "Group Wise" + "</option>";
        $("#cboReportType").html(listDates);
        $("#cboReportType").val(1);

    }


    function Refresh()
    {
        _sProductIDs='';
        RefreshByProduct(_sProductIDs);
    }
    function RefreshByProduct(_sProductIDs)
    {

        var oProductReconciliationReport= {
            ProductName : _sProductIDs,
            ReportType:$("#cboReportType").val(),
            BUID:_nBUID
        }
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/ProductReconciliationReport/GetsPRImport",
            traditional: true,
            data:  JSON.stringify(oProductReconciliationReport),
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                var _oProductReconciliationReports = data;
                if (_oProductReconciliationReports.length>0)
                {
                    RefreshList(_oProductReconciliationReports);
                    RefreshSummary();
                }
                else {
                    alert("Data not Found");
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }


    function RefreshList(oProductReconciliationReport)
    {
        $('#tblPRs').empty();
        DynamicRefreshList(oProductReconciliationReport, 'tblPRs');
       
    }
    function RefreshSummary()
    {

        var oRows = $('#tblPRs').datagrid('getRows');
        if(oRows.length>0)
        {
            var nStockInHand = 0,nDocInCnF=0,nDocReceive=0,nInvoiceWithoutBL=0,nLCOpen=0,nPOReceive=0,nTotal_Import=0,nShipmentDone=0,nGoodsRelease=0,nGoodsinTrasit=0;
            for(var i=0;i<oRows.length;i++)
            {
                nStockInHand = parseFloat(nStockInHand)+parseFloat(oRows[i].StockInHand);
                nDocInCnF = parseFloat(nDocInCnF)+parseFloat(oRows[i].DocInCnF);
                nDocReceive = parseFloat(nDocReceive)+parseFloat(oRows[i].DocReceive);
                nInvoiceWithoutBL = parseFloat(nInvoiceWithoutBL)+parseFloat(oRows[i].InvoiceWithoutBL);
                nLCOpen = parseFloat(nLCOpen)+parseFloat(oRows[i].LCOpen);
                nPOReceive = parseFloat(nPOReceive)+parseFloat(oRows[i].POReceive);
                nTotal_Import = parseFloat(nTotal_Import)+parseFloat(oRows[i].Total_Import);
                nShipmentDone = parseFloat(nShipmentDone)+parseFloat(oRows[i].ShipmentDone);
                nGoodsRelease = parseFloat(nGoodsRelease)+parseFloat(oRows[i].GoodsRelease);
                nGoodsinTrasit = parseFloat(nGoodsinTrasit)+parseFloat(oRows[i].GoodsinTrasit);
            }
            nStockInHand = parseFloat(nStockInHand).toFixed(2);
            nDocInCnF = parseFloat(nDocInCnF).toFixed(2);
            nDocReceive = parseFloat(nDocReceive).toFixed(2);
            nInvoiceWithoutBL = parseFloat(nInvoiceWithoutBL).toFixed(2);
            nLCOpen = parseFloat(nLCOpen).toFixed(2);
            nPOReceive = parseFloat(nPOReceive).toFixed(2);
            nTotal_Import = parseFloat(nTotal_Import).toFixed(2);
            debugger
            var oRow =
            {
                ProductName : 'Total',
                StockInHand:nStockInHand,
                DocInCnF:nDocInCnF,
                DocReceive:nDocReceive,
                InvoiceWithoutBL:nInvoiceWithoutBL,
                LCOpen:nLCOpen,
                POReceive:nPOReceive,
                ShipmentDone:nShipmentDone,
                GoodsRelease:nGoodsRelease,
                GoodsinTrasit:nGoodsinTrasit,
                Total_Import:nTotal_Import
            }
            $('#tblPRs').datagrid('appendRow',oRow); 
          
          
        } 

    }


    $("#btnPrint").click(function(){

        var sTempString=_nBUID+"~"+_sProductIDs+"~"+$("#cboReportType").val();
        window.open(_sBaseAddress + '/ProductReconciliationReport/PrintPriview_Import?sTempString='+sTempString, "_blank");
    });
    $("#btnPrintXL").click(function () {
        debugger;
        var sTempString=_nBUID+"~"+_sProductIDs+"~"+$("#cboReportType").val();
        window.open(_sBaseAddress + '/ProductReconciliationReport/PrintPRR_ImportXL?sTempString='+sTempString,"_blank");
    });
  

    function formatPrice(val,row){
        //debugger;
        if(val==null)
        {
            val=0.00;
        }
        val=parseFloat(val);
        var test = val.toFixed(2);
        var tests = addComma(test);
        return tests;
    }
    function addComma(nStr)
    {
        nStr += '';
        x = nStr.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1)) {
            x1 = x1.replace(rgx, '$1' + ',' + '$2');
        }
        return x1 + x2;
    }
    function start(){
        var value = $('#p').progressbar('getValue');
        if (value < 100){
            value += Math.floor(Math.random() * 10);
            $('#p').progressbar('setValue', value);
            setTimeout(arguments.callee, 200);
        }
    };




    //Product Pick Part
    $("#txtProduct_Raw").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            debugger;
            var TextBox=$(this);
            var oProduct = { BUID:sessionStorage.getItem("BUID"),ProductName:$('#txtProduct_Raw').val()};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oProduct,
                ControllerName: "Product",
                ActionName: "SearchByProductBUWise",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ProductID > 0) {
                        var tblColums = [];var oColumn = { field: "ProductCode", title: "ProductCode", width: 80, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "ProductName", title: "Name", width: 250, align: "left" };tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winProducts',
                            winclass:'clsProducts',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblProducts',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName:'ProductName',
                            windowTittle: 'Product List',
                            TextBox:TextBox
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }
    });
    $("#btnProduct_Raw").click(function () {
        var oProduct = { BUID:sessionStorage.getItem("BUID"),ProductName:$('#txtProduct_Raw').val()};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProduct,
            ControllerName: "Product",
            ActionName: "SearchByProductBUWise",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = [];var oColumn = { field: "ProductCode", title: "ProductCode", width: 80, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Name", width: 250, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winProducts',
                        winclass: 'clsProducts',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProducts',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'ProductName',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });

    });
    $('#txtProduct_Raw').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            var txtProduct_Raw = document.getElementById("txtProduct_Raw");
            txtProduct_Raw.value = '';
            txtProduct_Raw.style.color = "black";
            txtProduct_Raw.style.fontWeight = "normal";
            //_oPurchaseInvoice.SupplierID = 0;

        }
    });

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }
    function SetPickerValueAssign(oPickerobj) {
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid == 'winProducts')
        {
            if (oreturnobjs != null && oreturnobjs.length > 0)
            {
                debugger;
                var txtProduct_Raw = document.getElementById("txtProduct_Raw");
                //txtProduct_Raw.value = oreturnobjs[0].ProductCode;
                txtProduct_Raw.style.color = "blue";
                txtProduct_Raw.style.fontWeight = "bold";

                _sProductIDs = "";
                if(oreturnobjs.length > 0)
                {
                    for (i = 0; i < oreturnobjs.length; ++i) {
                        _sProductIDs = _sProductIDs +  oreturnobjs[i].ProductID + ',';
                    }
                    _sProductIDs = _sProductIDs.substring(0, _sProductIDs.length - 1);
                }


                RefreshByProduct(_sProductIDs);
                $('#txtProduct_Raw').focus();
            }
        }

    }
    //Pick PR Part


    ///Detail  Show
    function ReDetail_Import()
    {
        var oPRReport= $('#tblPRs').datagrid('getSelected');
        if(oPRReport==null || oPRReport.ProductID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        //var Date = document.getElementById("cboDateSearch");
        //var nDateType = Date.options[Date.selectedIndex].value;
        //var date1=$('#txtStartDate').datebox('getValue');
        //var date2= $('#txtEndDate').datebox('getValue');
        //if(parseInt(nDateType) == 1)//Equ
        //{
        //    date2=date1;
        //}
        //oPRReport.StartDate=date1;
        //oPRReport.EndDate=date2;
        var SelectedRowIndex=$('#tblPRs').datagrid('getRowIndex',oPRReport);
        var oPRs= $('#tblPRs').datagrid('getRows');
        sessionStorage.setItem("oPRs", JSON.stringify(oPRs));
        sessionStorage.setItem("oPR",JSON.stringify(oPRReport));
        sessionStorage.setItem("SelectedRowIndex_WU", SelectedRowIndex);
        //sessionStorage.setItem("ITHeader", "Product Wise:"+oInventoryTraking.WUName);
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href = _sBaseAddress+"/ProductReconciliationReport/ViewProductReconciliation_ImportDetail?nProductID="+parseInt(oPRReport.ProductID)+"&buid="+_nBUID;
        

    }

        
    function formatPrice(val,row)
    {
   
        val=parseFloat(val);
        var test = val.toFixed(2);
        if (val < 0)
        {
            test=(-1*test);
        }
        var tests = addComma(test);
        if (val < 0)
        {
            return '<span style="color:red;">('+tests+')</span>';
        }
        else 
        {
            return tests;
        }

    }


    function addComma(nStr)
    {

        nStr += '';
        x = nStr.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1)) {
            x1 = x1.replace(rgx, '$1' + ',' + '$2');
        }
        return x1 + x2;
    }

    $("#btnPrintDetail").click(function(){

        var oPRReport= $('#tblPRs').datagrid('getSelected');
        if(oPRReport==null || oPRReport.ProductID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        //var Date = document.getElementById("cboDateSearch");
        var nDateType =1;// Date.options[Date.selectedIndex].value;
        var date1=icsdateformat(new Date());//$('#txtStartDate').datebox('getValue');
        var date2=icsdateformat(new Date());// $('#txtEndDate').datebox('getValue');
        if(parseInt(nDateType) == 1)//Equ
        {  
            date2=date1;
        }
        oPRReport.StartDate=date1;
        oPRReport.EndDate=date2;
        oPRReport.ReportType=parseInt(nDateType);
        var SelectedRowIndex=$('#tblPRs').datagrid('getRowIndex',oPRReport);
        var oPRs= $('#tblPRs').datagrid('getRows');
        sessionStorage.setItem("oPRs", JSON.stringify(oPRs));
        sessionStorage.setItem("oPR",JSON.stringify(oPRReport));
        sessionStorage.setItem("SelectedRowIndex_WU", SelectedRowIndex);
           
          
            
        var  sTempString =_nBUID+"~"+oPRReport.ProductID+'~'+oPRReport.ReportType+ '~'+ oPRReport.StartDate+'~'+oPRReport.EndDate+'~'+0;
        window.open(_sBaseAddress + '/ProductReconciliationReport/PrintPriviewPRDetailTwo?sTempString='+sTempString, "_blank");
    });

    </script>
