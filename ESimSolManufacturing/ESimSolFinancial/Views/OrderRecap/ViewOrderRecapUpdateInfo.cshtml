<html>
@{
    ViewBag.title = "Order Recap Update Info";
}
<body>
    @model ESimSol.BusinessObjects.OrderRecap

    <div class="menuMainCollectionTable easyui-tabs" style="height:560px">
        <div title="Order Recap">
            <fieldset style="height:460px;">
                <legend>Update Recap Info :</legend>
                    <table border="0" cellpadding="2" cellspacing="2" style="width:100%; font-size: 12px">
                        <tr>
                            <td style="width:25%; text-align: right;">
                                Shipment Date:
                            </td>
                            <td style="width:75%; text-align: left;">
                                <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                    <tr>
                                        <td style="width:35%"><input id="txtShipmentDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width: 100%;" /></td>
                                        <td style="width:30%; font-size:12px; text-align:right"> Transport Type :</td>
                                        <td style="width:35%;">@Html.DropDownList("TransportType", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumTransportType))), new { id = "cboTransportType", style = "width: 100%" })</td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:25%; text-align: right; vertical-align:top">
                                Production Factory:
                            </td>
                            <td style="width: 75%; text-align: left;">
                                <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                    <tr>
                                        <td style="width:0%">@Html.HiddenFor(model => model.ProductionFactoryID, new { id = "txtProductionFactoryID" })</td>
                                        <td style="width:95%">@Html.TextBoxFor(model => model.FactoryName, new { style = "width:100%;", placeholder = "Type Factory & Press Enter", id = "txtFactoryName" })</td>
                                        <td style="width:5%"><input type="button" style="width:100%;" onclick="PickProductionFactory()" value="Pick" id="btnProductionFactory" /></td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:25%; text-align: right; vertical-align:top">
                                LocalYarn Supplier:
                            </td>
                            <td style="width: 75%; text-align: left;">
                                <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                    <tr>
                                        <td style="width:0%">
                                            @Html.HiddenFor(model => model.LocalYarnSupplierID, new { id = "txtLocalYarnSupplierID" })
                                        </td>
                                        <td style="width:95%">
                                            @Html.TextBoxFor(model => model.LocalYarnSupplierName, new { style = "width:100%;", placeholder = "Type Supplier & Press Enter", id = "txtLocalYarnSupplierName" })
                                        </td>
                                        <td style="width:5%">
                                            <input type="button" style="width:100%;" onclick="PickLocalYarnSupplier()" value="Pick" id="btnLocalYarnSupplier" />
                                        </td>
                                    </tr>
                                </table>
                                
                        </tr>
                        <tr>
                            <td style="width:25%; text-align: right; vertical-align:top">
                                ImportYarn Supplier:
                            </td>
                            <td style="width: 75%; text-align: left;">
                                <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                    <tr>
                                        <td style="width:0%">
                                            @Html.HiddenFor(model => model.ImportYarnSupplierID, new { id = "txtImportYarnSupplierID" })</td>
                                        <td style="width:95%">
                                            @Html.TextBoxFor(model => model.ImportYarnSupplierName, new { style = "width:100%;", placeholder = "Type Supplier & Press Enter", id = "txtImportYarnSupplierName" })</td>
                                        <td style="width:5%">
                                            <input type="button" style="width:100%;" onclick="PickImportYarnSupplier()" value="Pick" id="btnImportYarnSupplier" />
                                        </td>
                                    </tr>
                                </table>
                            </td>
                                    </tr>
                        <tr>
                            <td style="width:25%; text-align: right; vertical-align:top">
                                Remarks:
                            </td>
                            <td style="width: 75%; text-align: left;">
                                @Html.TextAreaFor(model => model.Description, new { style = "width:100%;font-size:12", id = "txtDescription" })
                            </td>
                        </tr>
                        <tr>
                            <td style="width:25%; text-align: right; vertical-align:top">
                                Commercial Remarks:
                            </td>
                            <td style="width: 75%; text-align: left;">
                                @Html.TextAreaFor(model => model.CommercialRemarks, new { style = "width:100%;font-size:12", id = "txtCommercialRemarks" })
                            </td>
                        </tr>
                  </table>
            </fieldset>

            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; width:100%;
                font-weight: bold; font-size:12px;">
                    <tr>
                        <td style="width:85%; text-align: right"></td>
                        <td style="width: 15%;">
                            <a id="btnUpdate" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Update()">Update</a>
                            <a id="btnClos" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>

        <div title="Sample Requirement">
            <table border="0" style=" width:100%; font-size:12px">
                <tr>
                    <td style="width: 20%; text-align: right;">
                        Sample Type:
                    </td>
                    <td style="width: 70%; text-align: left;">

                        <select id="cboSampleType" style=" width:80%;"></select>
                    </td>
                </tr>

                <tr>
                    <td style="width: 20%; text-align: right;">
                        Remark:
                    </td>
                    <td style="width: 70%; text-align: left;">
                        <input type="text" id="txtRemark" style=" width:80%;" />
                    </td>
                </tr>
            </table>

            <div id="toolbar">
                <table>
                    <tr>
                        <td style="width: 60px; text-align: left">
                            <input type="button" id="btnAdd" value="Add" onclick="AddSampleRequirement()"
                                   style="width: 60px; font-size: 12px" />
                        </td>
                        <td style="width:70px; text-align: left">
                            <input type="button" id="btnRemove" value="Remove" onclick="RemoveSampleRequirement()"
                                   style="width: 80px; font-size: 12px" />
                        </td>

                    </tr>
                </table>
            </div>
            <table id="tblSampleRequirement" title="Sample Requirement" class="easyui-datagrid" style="width:100%; height: 400px" fitcolumns="false" rownumbers="true" pagination="false" toolbar="#toolbar">
                <thead>
                    <tr>
                        <th field="Code" width="20%" align="left">Code</th>
                        <th field="SampleName" width="50%" align="left">Sample Name</th>
                        <th field="Remark" width="29%" align="left">Remark</th>
                    </tr>
                </thead>
            </table>

            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; width:100%;
                font-weight: bold; font-size:12px;">
                    <tr>
                        <td style="width:93%; text-align: right"></td>
                        <td style="width:7%; font-size:13px">
                            <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>

        <div title="Factory Price Update">
            <fieldset style="height:460px;">
                <legend>Style Info :</legend>
                <table border="0" style=" width:100%; font-size:12px;">
                    <tr>
                        <td style="width: 20%; text-align: right;">
                            Order No :
                        </td>
                        <td style="width: 70%; text-align: left;">
                            @Html.TextBoxFor(model => model.OrderRecapNo, new { style = "width: 90%;", id = "txtOrderRecapNo", disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 20%; text-align: right;">
                            Style No :
                        </td>
                        <td style="width: 70%; text-align: left;">
                            @Html.TextBoxFor(model => model.StyleNo, new { style = "width: 90%;", id = "txtStyleNo", disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 20%; text-align: right;">
                            Buyer Name :
                        </td>
                        <td style="width: 70%; text-align: left;">
                            @Html.TextBoxFor(model => model.BuyerName, new { style = "width: 90%;", id = "txtBuyerName", disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 20%; text-align: right;">
                            Session Name :
                        </td>
                        <td style="width: 70%; text-align: left;">
                            @Html.TextBoxFor(model => model.SessionName, new { style = "width: 90%;", id = "txtSessionName", disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 20%; text-align: right;">
                            <label id="lblPreCMValueCaption"> Previous Factory Price :</label>
                        </td>
                        <td style="width: 70%; text-align: left;">
                            @Html.TextBoxFor(model => model.CMValueSt, new { style = "width: 90%; text-align:right", id = "txtPreCMValue", disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 20%; text-align: right;">
                            <label id="lblCMValueCaption">Factory Price:</label>
                        </td>
                        <td style="width: 70%; text-align: left;">
                            <input type="text" id="txtCMValue" style=" width:90%;" />
                        </td>
                    </tr>

                </table>
            </fieldset>

            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; width:100%; font-weight: bold; font-size:12px;">
                    <tr>
                        <td style="width: 85%; text-align: right"></td>
                        <td style="width:15%;">
                            <a id="btnUpdateCMValue" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="UpdatCMValue()">Update</a>
                            <a id="btnClosCM" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>

        
    </div>
</body>
</html>
<script type="text/javascript">
    var _oOrderRecap=null;
    var _sBaseAddress="";
    var _oEmployees =null;
    var _oSampleRequirements =null;
    var _oAuthorizationRolesMapping =[];
    $(document).ready(function () {
        ////debugger;
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oOrderRecap =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oSampleRequirements =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.SampleRequirements));
        _oSampleTypes =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.SampleTypes));
         _oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        
        _objName =sessionStorage.getItem("RecapHeader");
        //document.getElementById ("lblHeaderName").innerHTML =_objName;
        $('#txtShipmentDate').datebox('setValue',_oOrderRecap.ShipmentDateInString);
        LoadSampleTypes();
        RefreshSampleRequirements(_oSampleRequirements);

        var txtFactoryName=document.getElementById("txtFactoryName");
        txtFactoryName.value=  _oOrderRecap.FactoryName;
        txtFactoryName.style.color="blue";
        txtFactoryName.style.fontWeight="bold";
        document.getElementById("txtProductionFactoryID").value=  _oOrderRecap.ProductionFactoryID;

        if(parseInt(_oOrderRecap.LocalYarnSupplierID)>0)
        {
            var txtLocalYarnSupplierName=document.getElementById("txtLocalYarnSupplierName");
            txtLocalYarnSupplierName.value=  _oOrderRecap.LocalYarnSupplierName;
            txtLocalYarnSupplierName.style.color="blue";
            txtLocalYarnSupplierName.style.fontWeight="bold";
        }
        document.getElementById("txtLocalYarnSupplierID").value=  _oOrderRecap.LocalYarnSupplierID;

        if(parseInt(_oOrderRecap.ImportYarnSupplierID)>0)
        {
            var txtImportYarnSupplierName=document.getElementById("txtImportYarnSupplierName");
            txtImportYarnSupplierName.value=  _oOrderRecap.ImportYarnSupplierName;
            txtImportYarnSupplierName.style.color="blue";
            txtImportYarnSupplierName.style.fontWeight="bold";
        }
        document.getElementById("txtImportYarnSupplierID").value=  _oOrderRecap.ImportYarnSupplierID;        
        RefreshControlLayout();
        $('#txtCMValue').numberbox({min:0, precision:2 });//number box
        $('#txtCMValue').numberbox('setValue', 0.00);
 });

    function UpdatCMValue()
    {
        var nCMValue = $('#txtCMValue').numberbox('getValue');
        if(parseFloat(nCMValue)<=0)
        {
            alert("CM Value Shoule be Greater than 0");
            return;
        }
        if (_oOrderRecap.OrderRecapID > 0)
        {

            $.ajax
            ({
                type: "GET",
                dataType: "json",
                url : _sBaseAddress+  "/OrderRecap/UpdateCMValue",
                data: { id: _oOrderRecap.OrderRecapID, CMValue:nCMValue},
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    ////debugger;
                    oOrderRecap = jQuery.parseJSON(data);
                    if (oOrderRecap.OrderRecapID>0)
                    {
                        alert("CM Update Successfully");
                        _oOrderRecap.CMValue = oOrderRecap.CMValue;
                        $('#txtPreCMValue').val(oOrderRecap.CMValueSt);
                        $('#txtCMValue').numberbox('setValue', 0.00);
                    }
                    else
                    {
                        alert(oOrderRecap.ErrorMessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });
        }

    }

 function LoadSampleTypes()
 {
     ////debugger;
   $('#cboSampleType').empty();
   var listItems= "<option value='"+0+"'>" +"--Select Sample Type--" + "</option>";
   if(_oSampleTypes.length>0)
   {

             for (var i = 0; i < _oSampleTypes.length; i++) {
                  listItems += "<option value='" + _oSampleTypes[i].SampleTypeID+"'>" + _oSampleTypes[i].SampleName+"</option>";
             }
   }
   $("#cboSampleType").html(listItems);

 }


function RemoveSampleRequirement()
{
    //debugger;
    var oSampleRequirement =$('#tblSampleRequirement').datagrid('getSelected');
    if(oSampleRequirement==null || parseInt(oSampleRequirement.SampleRequirementID)<=0)
    {
        alert("Select At least One item !");
        return;
    }
    var SelectedRowIndex=$('#tblSampleRequirement').datagrid('getRowIndex',oSampleRequirement);
    if (!confirm("Confirm to Delete?")) return ;
     var tsv=((new Date()).getTime())/1000;
            $.ajax
            ({
                type: "GET",
                dataType: "json",
                url : _sBaseAddress+  "/OrderRecap/DeleteSampleRequirement",
                data: { id: oSampleRequirement.SampleRequirementID, ts:tsv},
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //debugger;
                    feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Delete sucessfully")
                    {
                        alert("Delete sucessfully");
                        $('#tblSampleRequirement').datagrid('deleteRow',SelectedRowIndex);

                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });

}




 function RefreshSampleRequirements(oSampleRequriments)
  {
         data=oSampleRequriments;
         data={"total":""+data.length+"","rows":data};
        $('#tblSampleRequirement').datagrid('loadData',data);
 }



 function AddSampleRequirement()
{
   //debugger;

      if(!ValidateInput()) return;
      var oSampleRequriement=SampleRequirment();
       $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+"/OrderRecap/SaveSampleRequirement",
                traditional: true,
                data:  JSON.stringify(oSampleRequriement),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
               //debugger;
                var oSampleRequirement= jQuery.parseJSON(data);
                if (oSampleRequirement.ErrorMessage=="" )
                    {

                       alert("Data Save Successfully!!");
                       $('#tblSampleRequirement').datagrid('appendRow',oSampleRequirement);
                       document.getElementById("txtRemark").value ="";
                    }
                else
                    {
                        alert(oSampleRequirement.ErrorMessage);
                    }
                 },
            error: function (xhr, status, error)
                {
                    alert(error);
                }
            });

}



function ValidateInput()
{
  //debugger;
   if(document.getElementById("cboSampleType").value=="Select Sample Type" || $("#cboSampleType").val()==0) { alert("Please select Sample Type"); $('#cboSampleType').focus(); return false; }
   var scboSampleType =document.getElementById("cboSampleType");

   var oSampleRequrements =  $('#tblSampleRequirement').datagrid('getRows');
   var nSampleTypeID = scboSampleType.options[scboSampleType.selectedIndex].value;
   if(oSampleRequrements.length>0)
   {
        for(var i = 0;i<oSampleRequrements.length;i++)
        {
            if(parseInt(oSampleRequrements[i].SampleTypeID) == parseInt(nSampleTypeID))
            {
                alert("Selected Sample Type Already Exist");
                return false;
            }
        }
   }

    return true;
}


function SampleRequirment()
{
      //debugger;
      var scboSampleType =document.getElementById("cboSampleType");
     var oSampleRequirment= {
            SampleRequirementID: 0,
            OrderRecapID:_oOrderRecap.OrderRecapID,
            SampleTypeID:scboSampleType.options[scboSampleType.selectedIndex].value,
            Remark :document.getElementById("txtRemark").value
           };
   return oSampleRequirment;
}



function Update()
{
    debugger;
    if(document.getElementById("txtDescription").value == null || document.getElementById("txtDescription").value =="")
    {
        alert("Please Type Remark");
        return;
    }
    var oOrderRecap = {
        OrderRecapID:_oOrderRecap.OrderRecapID,
        ShipmentDate:$('#txtShipmentDate').datebox('getValue'),
        Description :  $('#txtDescription').val(),
        CommercialRemarks :$('#txtCommercialRemarks').val(),
        TransportType:$('#cboTransportType').val(),
        ProductionFactoryID :parseInt($('#txtProductionFactoryID').val()),
        LocalYarnSupplierID : parseInt($('#txtLocalYarnSupplierID').val()),
        ImportYarnSupplierID :parseInt($('#txtImportYarnSupplierID').val())
    };

    if(parseInt(oOrderRecap.OrderRecapID)>0)
    {
      $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+"/OrderRecap/UpdateInfo",
                traditional: true,
                data:  JSON.stringify(oOrderRecap),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
               debugger;
               var oNewOrderRecap= jQuery.parseJSON(data);
               if (oNewOrderRecap.ErrorMessage=="" || oNewOrderRecap.ErrorMessage== null)
               {
                        alert("Data Update Successfully!!");
                        window.returnValue = oNewOrderRecap;
                        window.close();
               }
               else
                {
                    alert(oNewOrderRecap.ErrorMessage);
                }
                 },
            error: function (xhr, status, error)
                {
                    alert(error);
                }
            });

     }
}

function PickProductionFactory(){
    // debugger;
    var oParameter = new Object();
    oParameter.MultipleItemReturn = false;
    oParameter.ContractorType="3";
    var url = _sBaseAddress+"/Contractor/ContractorSearch";
    var oSelectedContractor = window.showModalDialog(url, oParameter, 'dialogHeight:420px;dialogWidth:455px;dialogLeft:400;dialogTop:100;center:yes;resizable:no;status:no;scroll:no');
    // debugger;
    if(oSelectedContractor!=null)
    {
        if(oSelectedContractor.ContractorID>0)
        {
            var txtFactoryName=document.getElementById("txtFactoryName");
            txtFactoryName.value=  oSelectedContractor.Name;
            txtFactoryName.style.color="blue";
            txtFactoryName.style.fontWeight="bold";
            $("#txtProductionFactoryID").val(oSelectedContractor.ContractorID);
        }
        else
        {
            document.getElementById("txtFactoryName").value=  "";
            $("#txtProductionFactoryID").val(0);
        }
    }
}

function PickLocalYarnSupplier(){
    // debugger;
    var oParameter = new Object();
    oParameter.MultipleItemReturn = false;
    oParameter.ContractorType="1";
    var url = _sBaseAddress+"/Contractor/ContractorSearch";
    var oSelectedContractor = window.showModalDialog(url, oParameter, 'dialogHeight:420px;dialogWidth:455px;dialogLeft:400;dialogTop:100;center:yes;resizable:no;status:no;scroll:no');
    // debugger;
    if(oSelectedContractor!=null)
    {
        if(oSelectedContractor.ContractorID>0)
        {
            var txtLocalYarnSupplierName=document.getElementById("txtLocalYarnSupplierName");
            txtLocalYarnSupplierName.value=  oSelectedContractor.Name;
            txtLocalYarnSupplierName.style.color="blue";
            txtLocalYarnSupplierName.style.fontWeight="bold";
            document.getElementById("txtLocalYarnSupplierID").value=  oSelectedContractor.ContractorID;
        }
        else
        {
            document.getElementById("txtLocalYarnSupplierName").value=  "";
            document.getElementById("txtLocalYarnSupplierID").value=  "";
        }
    }
}

function PickImportYarnSupplier(){
    // debugger;
    var oParameter = new Object();
    oParameter.MultipleItemReturn = false;
    oParameter.ContractorType="1";
    var url = _sBaseAddress+"/Contractor/ContractorSearch";
    var oSelectedContractor = window.showModalDialog(url, oParameter, 'dialogHeight:420px;dialogWidth:455px;dialogLeft:400;dialogTop:100;center:yes;resizable:no;status:no;scroll:no');
    // debugger;
    if(oSelectedContractor!=null)
    {
        if(oSelectedContractor.ContractorID>0)
        {
            var txtFactoryName=document.getElementById("txtImportYarnSupplierName");
            txtImportYarnSupplierName.value=  oSelectedContractor.Name;
            txtImportYarnSupplierName.style.color="blue";
            txtImportYarnSupplierName.style.fontWeight="bold";
            document.getElementById("txtImportYarnSupplierID").value=  oSelectedContractor.ContractorID;
        }
        else
        {
            document.getElementById("txtImportYarnSupplierName").value=  "";
            document.getElementById("txtImportYarnSupplierID").value=  "";
        }
    }
}


// Search Factory Start
$('#txtFactoryName').keypress(function (e) {
    //debugger;
    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 13) {
        var txtFactoryName = document.getElementById('txtFactoryName').value;
        if(txtFactoryName!="")
        {
            //debugger;
            var tsv=((new Date()).getTime())/1000;
            var oParameter = new Object();
            oParameter.EnteredText=txtFactoryName;
            var url =_sBaseAddress+ "/Contractor/ViewContractorSearch?sTemp="+txtFactoryName+"&pt=3&ts="+tsv;
            var oContractor = window.showModalDialog(url, oParameter, 'dialogHeight:270px;dialogWidth:383px;dialogLeft:520;dialogTop:310;center:yes;resizable:no;status:no;scroll:no');

            //debugger;
            if(oContractor !=null)
            {
                if(parseInt(oContractor.ContractorID)>0)
                {
                    var txttBuyerName=document.getElementById("txtFactoryName");
                    txttBuyerName.value=oContractor.Name;
                    txttBuyerName.style.color="blue";
                    txttBuyerName.style.fontWeight="bold";
                    $("#txtProductionFactoryID").val(oContractor.ContractorID);
                }
            }
            else
            {
                var txttBuyerName=document.getElementById("txtFactoryName");
                txttBuyerName.style.color="black";
                txttBuyerName.style.fontWeight="normal";
                $("#txtProductionFactoryID").val(0);
                document.getElementById("txtFactoryName").value=  "";
            }

        }
    }
});

$('#txtFactoryName').keydown(function (e) {
    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 8) //backspace=8
    {
        //debugger;
        var txtFactoryName=document.getElementById("txtFactoryName");
        txtFactoryName.style.color="black";
        txtFactoryName.style.fontWeight="normal";
        document.getElementById("txtProductionFactoryID").value=  0;

    }
});
// Search Factory End


// Search Local Yarn Supplier Start
$('#txtLocalYarnSupplierName').keypress(function (e) {
    //debugger;
    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 13) {
        var txtLocalYarnSupplierName = document.getElementById('txtLocalYarnSupplierName').value;
        if(txtLocalYarnSupplierName!="")
        {
            //debugger;
            var tsv=((new Date()).getTime())/1000;
            var oParameter = new Object();
            oParameter.EnteredText=txtLocalYarnSupplierName;
            var url =_sBaseAddress+ "/Contractor/ViewContractorSearch?sTemp="+txtLocalYarnSupplierName+"&pt=1&ts="+tsv;
            var oContractor = window.showModalDialog(url, oParameter, 'dialogHeight:270px;dialogWidth:383px;dialogLeft:520;dialogTop:310;center:yes;resizable:no;status:no;scroll:no');

            //debugger;
            if(oContractor !=null)
            {
                if(parseInt(oContractor.ContractorID)>0)
                {
                    var txtLocalYarnSupplierName=document.getElementById("txtLocalYarnSupplierName");
                    txtLocalYarnSupplierName.value=oContractor.Name;
                    txtLocalYarnSupplierName.style.color="blue";
                    txtLocalYarnSupplierName.style.fontWeight="bold";
                    document.getElementById("txtLocalYarnSupplierID").value=  oContractor.ContractorID;
                }
            }
            else
            {
                var txtLocalYarnSupplierName=document.getElementById("txtLocalYarnSupplierName");
                txtLocalYarnSupplierName.style.color="black";
                txtLocalYarnSupplierName.style.fontWeight="normal";
                document.getElementById("txtLocalYarnSupplierID").value=  0;
                document.getElementById("txtLocalYarnSupplierName").value=  "";
            }

        }
    }
});

$('#txtLocalYarnSupplierName').keydown(function (e) {
    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 8) //backspace=8
    {
        //debugger;
        var txtLocalYarnSupplierName=document.getElementById("txtLocalYarnSupplierName");
        txtLocalYarnSupplierName.style.color="black";
        txtLocalYarnSupplierName.style.fontWeight="normal";
        document.getElementById("txtLocalYarnSupplierID").value=  0;

    }
});
// Search Local Yarn Supplier End


// Search Import Yarn Supplier Start
$('#txtImportYarnSupplierName').keypress(function (e) {
    //debugger;
    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 13) {
        var txtImportYarnSupplierName = document.getElementById('txtImportYarnSupplierName').value;
        if(txtImportYarnSupplierName!="")
        {
            //debugger;
            var tsv=((new Date()).getTime())/1000;
            var oParameter = new Object();
            oParameter.EnteredText=txtImportYarnSupplierName;
            var url =_sBaseAddress+ "/Contractor/ViewContractorSearch?sTemp="+txtImportYarnSupplierName+"&pt=1&ts="+tsv;
            var oContractor = window.showModalDialog(url, oParameter, 'dialogHeight:270px;dialogWidth:383px;dialogLeft:520;dialogTop:310;center:yes;resizable:no;status:no;scroll:no');

            //debugger;
            if(oContractor !=null)
            {
                if(parseInt(oContractor.ContractorID)>0)
                {
                    var txtImportYarnSupplierName=document.getElementById("txtImportYarnSupplierName");
                    txtImportYarnSupplierName.value=oContractor.Name;
                    txtImportYarnSupplierName.style.color="blue";
                    txtImportYarnSupplierName.style.fontWeight="bold";
                    document.getElementById("txtImportYarnSupplierID").value=  oContractor.ContractorID;
                }
            }
            else
            {
                var txtImportYarnSupplierName=document.getElementById("txtImportYarnSupplierName");
                txtImportYarnSupplierName.style.color="black";
                txtImportYarnSupplierName.style.fontWeight="normal";
                document.getElementById("txtImportYarnSupplierID").value=  0;
                document.getElementById("txtImportYarnSupplierName").value=  "";
            }

        }
    }
});

$('#txtImportYarnSupplierName').keydown(function (e) {
    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 8) //backspace=8
    {
        //debugger;
        var txtImportYarnSupplierName=document.getElementById("txtImportYarnSupplierName");
        txtImportYarnSupplierName.style.color="black";
        txtImportYarnSupplierName.style.fontWeight="normal";
        document.getElementById("txtImportYarnSupplierID").value=  0;
    }
});
    // Search Import Yarn End


function Close()
{
    window.location.href = sessionStorage.getItem("BackLink");
}


$(document).keydown(function(e) {
    //debugger;
    if(e.which == 27)//escape=27
    {
        //debugger;
        window.location.href = sessionStorage.getItem("BackLink");
    }
});

function RefreshControlLayout()
{
    document.getElementById('lblPreCMValueCaption').style.display = '';
    document.getElementById('txtPreCMValue').style.display = '';
    document.getElementById('lblCMValueCaption').style.display = '';
    document.getElementById('txtCMValue').style.display = '';
    document.getElementById('btnUpdateCMValue').style.display = '';

    if(!HavePermission('ViewCMValue','OrderRecap'))
    {
        document.getElementById('lblPreCMValueCaption').style.display = 'none';
        document.getElementById('txtPreCMValue').style.display = 'none';
        document.getElementById('lblCMValueCaption').style.display = 'none';        
        document.getElementById('txtCMValue').style.display = 'none';
        document.getElementById('btnUpdateCMValue').style.display = 'none';
    }

}

function HavePermission(sOperationType, sDbObject)
{
    var nSessionID =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.currentUserID]));
    if(nSessionID == -9) //check SuperUser 
    {
        return true;
    }else
    {
        
        for(var i =0;i<_oAuthorizationRolesMapping.length;i++)
        {
            if(_oAuthorizationRolesMapping[i].OperationTypeInString == sOperationType && _oAuthorizationRolesMapping[i].DBObjectName == sDbObject)
                return  true;
        }
        return false;
    }
}
</script>
