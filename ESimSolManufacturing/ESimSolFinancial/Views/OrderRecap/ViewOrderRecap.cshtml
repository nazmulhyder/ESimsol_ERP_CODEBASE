@{
    ViewBag.Title = "Order Recap";
}
<html>
<body>
 @{var MenuID = HttpContext.Current.Session[SessionInfo.MenuID];}
 @model ESimSol.BusinessObjects.OrderRecap
    <div class="menuMainCollectionTable" id="divOR">
        <div class="easyui-panel" title="Order Recap" style="font-family:Tahoma;width:100%;height:100%;">
            <div id="tabOrderRecap" class="easyui-tabs" style="width:100%;height:91%;">
                <div title="Order Info" style="padding:10px; font-size:12px; font-style:normal;width:100%;">
                    <fieldset>
                        <table border="0" cellspacing="0" cellpadding="1" style="font-size:11px; font-weight:bold">
                            <tr>
                                <td style="width:130px; text-align:right">
                                    <label class="asterixStyle">*</label><input type="button" style="width:100px;" onclick="StylePiker()" value="Pick Style" id="btnStyle" />
                                </td>
                                <td style="width:215px"><input type="text" style="width: 215px;color:black" id="txtStyleNo" placeholder="Search By Style" />   </td>
                                <td style="width:5px"></td>
                                <td style="width:120px; text-align:right">
                                    <label class="asterixStyle">*</label>PAM No :
                                </td>
                                <td style="width:180px; text-align:left"><select id="cboPAM" style="width:100%"></select></td>
                                <td style="width:280px; vertical-align:bottom; text-align:right;" rowspan="10">
                                    <table border="1" style="height:285px; width:265px;">
                                        <tr>
                                            <td style=" text-align:center;">
                                                <img id="imgCoverImage" src="@Url.Action("GetLargeImage", "TechnicalSheet", new { id = Model.TechnicalSheetID })" alt="Photo" style="width:265px; height:285px" />
                                            </td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>

                            <tr>
                                <td style="width:130px; text-align:right">
                                    <label class="asterixStyle">*</label>Seasons :
                                </td>
                                <td style="width:215px">
                                    <table border="0" cellpadding="1" cellspacing="1" style="font-size:11px; font-weight:bold">
                                        <tr>
                                            <td style="width:70px">@Html.DropDownListFor(model => model.BusinessSessionID, Model.BusinessSessions.Select(x => new SelectListItem() { Text = x.SessionName, Value = x.BusinessSessionID.ToString() }), new { id = "cboSeasons", style = "width: 70px;" }) </td>
                                            <td style="width:50px; text-align:right">SL No :</td>
                                            <td style="width:95px">@Html.TextBoxFor(model => model.SLNo, new { style = "width: 95px;", id = "txtSLNo", disabled = "disabled" })</td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width:5px"></td>
                                <td style="width:120px; text-align:right">
                                    <label class="asterixStyle">*</label>Order No :
                                </td>
                                <td style="width:180px; text-align:left">@Html.TextBoxFor(model => model.OrderRecapNo, new { style = "width: 180px;", id = "txtOrderRecapNo" })</td>
                            </tr>

                            <tr>
                                <td style="width:130px; text-align:right">
                                    Product Name :
                                </td>
                                <td style="width:215px">
                                    
                                    <input type="text" style="width:173px;color:black" id="txtProductName" disabled="disabled" />
                                    <input type="button" style="width:38px;" onclick="PickProduct()" value="Pick" id="btnProduct" />
                                </td>
                                <td style="width:5px"></td>
                                <td style="width:120px; text-align:right">
                                    Collection Name :
                                </td>
                                <td style="width:180px; text-align:left"> @Html.TextBoxFor(model => model.CollectionNo, new { style = "width: 180px;", id = "txtCollectionID" }) </td>
                              
                            </tr>

                            <tr>
                                <td style="width:130px; text-align:right">
                                    Buyer Name :
                                </td>
                                <td style="width:215px">
                                    <input type="text" style="width: 215px;color:black" id="txtBuyerName" disabled="disabled" />
                                </td>
                                <td style="width:5px"></td>
                                <td style="width:120px; text-align:right">
                                    <label class="asterixStyle">*</label>Contact Person :
                                </td>
                                <td style="width:180px; text-align:left"><select id="cboContactPersonnels" style="width:120px;font-size:12px;"/><input type="button" id="btnReload" style="width:25px;" value="Load" ><input type="button" style="width:30px;" onclick="ConPersonnelPiker()" value="N" id="btnConPersonnel" /></td>
                            </tr>

                            <tr>
                                <td style="width:130px; text-align:right">
                                    Brand :
                                </td>
                                <td style="width:215px">@Html.TextBoxFor(model => model.BrandName, new { style = "width: 215px;", id = "txtBrandName", disabled = "disabled" })</td>

                                <td style="width:5px"></td>
                                <td style="width:120px; text-align:right">
                                    Count :
                                </td>
                                <td style="width:180px; text-align:left">
                                    <table border="0" cellpadding="0" cellspacing="0">
                                        <tr>
                                            <td style="width:50px; text-align:left;">@Html.TextBoxFor(model => model.Count, new { style = "width: 50px;", id = "txtCount" })</td>
                                            <td style="width:65px; text-align:right">
                                                GG/GSM :
                                            </td>
                                            <td style="width:65px">@Html.TextBoxFor(model => model.GG, new { style = "width: 65px;", id = "txtGG" })</td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>

                            <tr>
                                <td style="width:130px; text-align:right">
                                    <label class="asterixStyle">*</label>Order Date :
                                </td>
                                <td style="width:215px"><input id="txtOrderDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:215px" /></td>

                                <td style="width:5px"></td>
                                <td style="width:120px; text-align:right">
                                    <label class="asterixStyle">*</label>Shipment Date :
                                </td>
                                <td style="width:180px; text-align:left"><input id="txtShipmentDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:180px" /></td>
                            </tr>

                            <tr>
                                <td style="width:130px; text-align:right">
                                    Actual Board Date:
                                </td>
                                <td style="width:215px">
                                    <input id="txtBoardDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:215px" />
                                </td>
                                <td style="width:5px"></td>
                                <td style="width:120px; text-align:right">
                                    <label class="asterixStyle">*</label>Factory Shipment :
                                </td>
                                <td style="width:180px; text-align:left"><input id="txtFactoryShipmentDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:180px" /></td>
                            </tr>

                            <tr>
                                <td style="width:130px; text-align:right">
                                    <label class="asterixStyle">*</label>Transport Type :
                                </td>
                                <td style="width:215px">@Html.DropDownList("TransportType", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumTransportType))), new { id = "cboTransportType", style = "width: 215px;" })</td>

                                <td style="width:5px"></td>
                                <td style="width:120px; text-align:right">
                                    Weight :
                                </td>
                                <td style="width:180px; text-align:left">@Html.TextBoxFor(model => model.Weight, new { style = "width: 180px;", id = "txtWeight" })</td>
                            </tr>
                            <tr>
                                <td style="width:130px; text-align:right">
                                    <label class="asterixStyle">*</label>Merchandiser :
                                </td>
                                <td style="width:215px"><select id="cboMerchandiserID" style="width:215px;" /></td>

                                <td style="width:5px"></td>
                                <td style="width:120px; text-align:right">
                                    Currency :
                                </td>
                                <td style="width:180px; text-align:left">@Html.DropDownListFor(m => m.CurrencyID, Model.CurrencyList.Select(x => new SelectListItem() { Text = x.CurrencyName, Value = x.CurrencyID.ToString() }), new { id = "ddlCurrency", style = "width: 180px;", @class = "_select_change" }) </td>
                            </tr>

                            <tr>
                                <td style="width:130px; text-align:right">
                                    Production Factory:
                                </td>
                                <td style="width:215px">
                                    @Html.TextBoxFor(model => model.FactoryName, new { style = "width:173px;", placeholder = "Type Factory & Press Enter", id = "txtFactoryName" })
                                    <input type="button" style="width:38px;" onclick="PickProductionFactory()" value="Pick" id="btnProductionFactory" />
                                </td>
                                <td style="width:5px"></td>
                                <td style="width:120px; text-align:right">
                                    <label class="asterixStyle">*</label>Payment Term:
                                </td>
                                <td style="width:180px; text-align:left">
                                    <select id="cboPaymentTerm" style="width: 180px;">
                                        <option value="None">None</option>
                                        <option value="LC At Sight">LC At Sight</option>
                                        <option value="LC 30 day">LC 30 day</option>
                                        <option value="LC 45 day">LC 45 day</option>
                                        <option value="LC 60 days">LC 60 days</option>
                                        <option value="LC 90 days">LC 90 days</option>
                                        <option value="TT Advance">TT Advance</option>
                                        <option value="TT After BL">TT After BL</option>
                                        <option value="DP">DP</option>
                                        <option value="LC 120 Days">LC 120 Days</option>
                                    </select>
                                </td>
                            </tr>

                            <tr>
                                <td style="width:130px; text-align:right">
                                    Local Yarn/Fabric Supplier :
                                </td>
                                <td style="width:215px">
                                    @Html.TextBoxFor(model => model.LocalYarnSupplierName, new { style = "width:173px;", placeholder = "Type Supplier & Press Enter", id = "txtLocalYarnSupplierName" })
                                    <input type="button" style="width:38px;" onclick="PickLocalYarnSupplier()" value="Pick" id="btnLocalYarnSupplier" />
                                </td>

                                <td style="width:125px; text-align:right;" colspan="2">
                                    Packing Instruction:
                                </td>
                                <td style="width:457px; text-align:left;" colspan="2"> @Html.TextBoxFor(model => model.PackingInstruction, new { style = "width:457px;", id = "txtPackingInstruction" })</td>
                             
                            </tr>


                            <tr>
                                <td style="width:130px; text-align:right">
                                    Import Yarn/Fabric Supplier :
                                </td>
                                <td style="width:215px">
                                    @Html.TextBoxFor(model => model.ImportYarnSupplierName, new { style = "width:173px;", placeholder = "Type Supplier & Press Enter", id = "txtImportYarnSupplierName" })
                                    <input type="button" style="width:38px;" onclick="PickImportYarnSupplier()" value="Pick" id="btnImportYarnSupplier" />
                                </td>

                                <td style="width:5px"></td>
                                <td style="width:120px; text-align:right"><label id="lblDeliveryTerm">Delivery Term:</label></td>
                                <td style="width:180px; text-align:left; "> @Html.TextBoxFor(model => model.DeliveryTerm, new { style = "width: 180px;", id = "txtDeliveryTerm" })</td>
                                <td style="width:260px; text-align:left;">
                                    <table border="0" cellpadding="0" cellspacing="0" style="font-family:Tahoma; font-size:12px;">
                                        <tr>
                                            <td style="width:80px; text-align:right;"><label class="asterixStyle">*</label>Incoterms :</td>
                                            <td style="width:200px; text-align:left;">
                                            <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                                <tr>
                                                    <td style="width:30%">@Html.DropDownList("Incoterms", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumIncoterms))), new { id = "cboIncoterms", style = "width: 100%;" })</td>
                                                    <td style="width:45%;text-align:right;">Machine Qty :</td>
                                                    <td style="width:25%">@Html.TextBoxFor(model => model.MachineQty, new { style = "width: 100%", id = "txtMachineQty" })</td>
                                                </tr>
                                            </table>
                                            
                                        </tr>
                                    </table>
                                </td>


                            </tr>

                            <tr>
                                <td style="width:130px; text-align:right">
                                    <label class="asterixStyle">*</label><input type="button" style="width:100px;" value="Yarn/Fabric" id="btnFabric" />
                                </td>
                                <td style="width:215px">
                                    @Html.TextBox("txtFabricName", "", new { style = "width: 215px", id = "txtFabricName" })
                                </td>
                                <td style="width:5px"></td>
                                <td style="width:120px; text-align:right">
                                    Assortment:
                                </td>
                                <td style="width:180px; text-align:left; "> @Html.TextBoxFor(model => model.Assortment, new { style = "width: 180px;", id = "txtAssortment" })</td>
                                <td style="width:260px; text-align:left;">
                                    <table border="0" cellpadding="0" cellspacing="0" style="font-family:Tahoma; font-size:12px;">
                                        <tr>
                                            <td style="width:80px; text-align:right;"><label class="asterixStyle">*</label>Asrt. Type:</td>
                                            <td style="width:200px; text-align:left;"><select id="cboAssortmentType" style="width: 196px;" class="chnageAssortmentType"><option value="10">--Select AssortmentType--</option><option value="0">Assort Color Assort Size</option><option value="1">Solid Color Assort Size</option><option value="2">Solid Color Solid Size</option></select> </td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                            <tr>
                                <td style="width:130px; text-align:right">
                                    <label id="lblAgent" class="asterixStyle">*</label>
                                    <input type="button" style="width:100px;" value="Pick Agent" onclick="AgentPiker()" id="btnAgent" />
                                </td>
                                <td style="width:215px">
                                    @Html.TextBox("txtAgentName", "", new { style = "width: 215px", id = "txtAgentName", disabled = "disabled" })
                                </td>
                                <td style="width:5px"></td>
                                <td style="width:120px; text-align:right">
                                    Special Finish :
                                </td>
                                <td style="width:460px; text-align:left; " colspan="2">
                                    @Html.TextBoxFor(model => model.SpecialFinish, new { style = "width: 460px;", id = "txtSpecialFinish" })
                                </td>
                            </tr>
                            <tr>
                                <td style="width:130px; text-align:right">
                                    Required Sample:
                                </td>
                                <td style="width:215px">
                                    @Html.TextBoxFor(model => model.RequiredSample, new { style = "width: 215px;", id = "txtRequiredSample" })
                                </td>
                                <td style="width:5px"></td>
                                <td style="width:120px; text-align:right">
                                    Remarks:
                                </td>
                                <td style="width:460px; text-align:left; " colspan="2"> @Html.TextBoxFor(model => model.Description, new { style = "width: 460px;", id = "txtDescription" })</td>
                            </tr>

                        </table>
                    </fieldset>
                </div>

                <div title="Assort Color Assort Size" style="padding:10px; font-size:12px; font-style:normal;width:100%; ">
                    <table id="tblAssortColorAssortSize" title="Assort Color Assort Size  Assortment" class="easyui-datagrid" style="width:100%;height:430px"
                           data-options="singleSelect: true,toolbar:'#toolbarAssortment', showFooter: false, onClickRow: onClickRowAssortment"></table>
                    <div id="toolbarAssortment">
                        <table border="0" cellpadding="0" cellspacing="0" style="font-size:12px">
                            <tr style="height:20px">
                                <td style="width:50px"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="RefreshAssortmentDetail(true)">Refresh</a></td>
                                <td style="width:50px"><a id="btnAddAssortment" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddColorSizeORAssortmentORBarCode('1')">Add</a></td>
                                <td style="width:50px"><a id="btnDeleteAssortment" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="DeleteAssortmentColor('1')">Delete</a> </td>
                                <td style="width:150px"> </td>
                                <td style="width:80px; text-align:right">Carton Qty :</td>
                                <td style="width:120px">@Html.TextBoxFor(model => model.CartonQty, new { style = "width:100px;", id = "txCartonQty" })</td>
                                <td style="width:80px; text-align:right">Order Qty :</td>
                                <td style="width:120px">@Html.TextBoxFor(model => model.TotalQuantity, new { style = "width:100px;", id = "txtTotalQuantity" })</td>
                            </tr>
                        </table>
                    </div>

                    <table border="0" cellpadding="0" cellspacing="0">
                        <tr>
                            <td>
                                <div id="divTotalAssortmentSummary" style="font-size:12px; height:22px; width:980px; overflow:auto">
                                    <b>Total : </b>
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>

                <div title="Solid Color Assort Size" style="padding:10px; font-size:12px; font-style:normal;width:100%;">
                    <div style="margin-left:2px; height:430px">
                        <table id="tblSolidColorAssortSize" title="solid Color Assort Size  Assortment" class="easyui-datagrid" style="width:100%;height:430px"
                               data-options="singleSelect: true, fitColumns:false, rownumbers:true,pagination:false,autoRowHeight:false,toolbar:'#toolbarSoliColorAssortSize', showFooter: true,onClickRow: onClickSolidColorSolidSizeRowAssortment"></table>
                        <div id="toolbarSoliColorAssortSize">
                            <table border="0" cellpadding="0" cellspacing="0" style="font-size:12px">
                                <tr style="height:20px">
                                    <td style="width:50px"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="RefreshAssortmentDetail(false)">Refresh</a></td>
                                    <td style="width:50px"><a id="btnAddSolidColorSolidSize" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddColorSizeORAssortmentORBarCode('2')">Add</a></td>
                                    <td style="width:50px"><a id="btnDeleteSolidColorSolidSize" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick=" DeleteAssortmentColor('2')">Delete</a></td>
                                    <td style="width:200px; text-align:right">Order Qty :</td>
                                    <td style="width:120px">@Html.TextBoxFor(model => model.TotalQuantity, new { style = "width:100px;", id = "txtTotalOrderQuantity" })</td>

                                </tr>
                            </table>
                        </div>
                    </div>
                    <table border="0" cellpadding="0" cellspacing="0">
                        <tr>
                            <td>
                                <div id="divTotalSolidColorAssortSizeummary" style="font-size:12; height:22px; width:980px; overflow:auto">
                                    <b>Total : </b>
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>

                <div id="divsizeBreakDowns" title="Size BreakDown & Yarn Details" style="padding:10px; font-size:12px; font-style:normal;width:100%;">
                    <div style="margin-left:2px; height:245px">
                        <table id="tblColorSizeWiseRatio" title="Order Recap Details Information" class="easyui-datagrid" style="width:100%;height:245px"
                               data-options="singleSelect: true, fitColumns:false, rownumbers:true,pagination:false,autoRowHeight:false,toolbar:'#toolbar', showFooter: true,onClickRow: onClickRow"></table>
                        <div id="toolbar">
                            <table border="0" cellpadding="0" cellspacing="0" style="font-size:12px">
                                <tr style="height:20px">
                                    <td style="width:120px"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="CalculateFromRatio()">Calculate Ratio</a></td>
                                    <td style="width:50px"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="RefreshOrderRecapDetail()">Refresh</a></td>
                                    <td style="width:50px"><a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddColorSizeORAssortmentORBarCode('3')">Add</a></td>
                                    <td style="width:50px"><a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="Delete()">Delete</a> </td>
                                    <td style="width:60px; text-align:right"><label class="asterixStyle">*</label>Unit :</td>
                                    <td style="width:80px">@Html.DropDownListFor(model => model.Units, Model.Units.Select(x => new SelectListItem() { Text = x.UnitName, Value = x.MeasurementUnitID.ToString() }), new { id = "cboMeasurementUnitID", style = "width: 80px;" })</td>
                                    <td style="width:110px; text-align:right"></td>
                                    <td style="width:70px"></td>
                                    <td style="width:110px; text-align:right"></td>
                                    <td style="width:70px"></td>
                                    <td style="width:150px; text-align:right"><label id="lblCMValue"><label class="asterixStyle">*</label>F. Price:</label><input type="text" style="width: 70px; text-align:right" id="txtCMValue" /></td>
                                </tr>
                            </table>
                        </div>
                    </div>

                    <table border="0" cellpadding="0" cellspacing="0">
                        <tr>
                            <td>
                                <div id="divTotalSummary" style="font-size:12; height:22px; width:980px; overflow:auto">
                                    <b>Total : </b>
                                </div>
                            </td>
                        </tr>
                    </table>

                    <div style="margin-left:3px; margin-top:2px;">
                        <table id="tblRecapYarn" class="easyui-datagrid" title="Yarn Details" style="width:100%;height:170px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#RecapYarnstoolbar" data-options="onClickRow: onClickRowRecapYarn">
                            <thead>
                                <tr>
                                    <th field="YarnCode" width="150">Yarn Code</th>
                                    <th field="YarnName" width="400">Yarn Name</th>
                                    <th field="YarnPly" width="150">Yarn Ply</th>
                                    <th width="100" data-options="field:'Note',editor:{type:'text'}">Note</th>
                                </tr>
                            </thead>
                        </table>
                        <div id="RecapYarnstoolbar" style="text-align:left; font-weight:normal">
                            Yarn :<input type="text" id="txtYarnName" placeholder="Type yarn & Press Enter" style="width:300px" />
                            <a id="btnPickYarn" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true"></a>
                            Ply :<input type="text" id="txtYarnPly" style="width:300px" />
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" id="btnAddRecapYarn" onclick="AddOrderRecapYarn()">Add</a>
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" id="btnRemoveRecapYarn" onclick="DeleteOrderRecapYarn()">Remove</a>
                        </div>


                    </div>
                </div>

                <div id="divsolidsizeassortment" title="Solid Color Solid Size" style="padding:10px; font-size:12px; font-style:normal;width:100%;">
                    <div style="margin-left:2px; height:410px">
                        <table id="tblSolidSizeAssortment" title="Solid Color Solid Size Assortment" class="easyui-datagrid" style="width:100%;height:405px"
                               data-options="singleSelect: true, fitColumns:false, rownumbers:true,pagination:false,autoRowHeight:false,toolbar:'#toolbarsolidAssortment', showFooter: true"></table>
                        <div id="toolbarsolidAssortment">
                            <table border="0" cellpadding="0" cellspacing="0" style="font-size:12px">
                                <tr style="height:20px">
                                    <td style="width:110px; text-align:right">Qty Per Carton : </td>
                                    <td style="width:100px"><input type="text" class="easyui-numberbox" data-options="min:0,value:0, precision:0" style="width: 100px; text-align:right" id="txtQtyPerCarton" /></td>
                                    <td style="width:50px"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="CalculateSolidSizeAssortment()">Calculate</a></td>
                                </tr>
                            </table>
                        </div>
                    </div>

                    <table border="0" cellpadding="0" cellspacing="0">
                        <tr>
                            <td>
                                <div id="divTotalSummarySolidSizeAssortment" style="font-size:12; height:22px; width:980px; overflow:auto">
                                    <b>Total : </b>
                                </div>
                            </td>
                        </tr>
                    </table>


                </div>

                <div title="BarCode" style="padding:10px; font-size:12px; font-style:normal;width:100%;height:450px;">
                    <div style="margin-left:2px; width:100%; height:280px;">
                        <table id="tblColorSizeBarCode" title="Color Size  BarCode" class="easyui-datagrid" style="width:100%;height:250px;" data-options="singleSelect: true, fitColumns:false, rownumbers:true,pagination:false,autoRowHeight:false,toolbar:'#toolbarBarCode', showFooter: true,onClickRow: onClickRowBarCode"></table>
                        <div id="toolbarBarCode">
                            <table border="0" cellpadding="0" cellspacing="0" style="font-size:12px">
                                <tr style="height:20px">
                                    <td style="width:50px"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="RefreshBarCodeDetail()">Refresh</a></td>
                                    <td style="width:50px"><a id="btnAddBarCode" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddColorSizeORAssortmentORBarCode('4')">Add</a></td>
                                    <td style="width:50px"><a id="btnDeleteBarCode" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="DeleteBarCodeColor()">Delete</a> </td>
                                    <td style="width:150px"><a id="btnPackingPolicy" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-attachment" plain="true" onclick="BarCodeAttachment()">BarCode Image</a></td>
                                    <td style="width:80px; text-align:right"></td>
                                    <td style="width:120px"></td>
                                    <td style="width:80px; text-align:right"></td>
                                    <td style="width:120px"></td>
                                </tr>
                            </table>
                        </div>
                    </div>

                    <div title="Comments for BarCode" style="text-align:right; width:100%; height:162px;">
                        <div id="BarCodeCommentstoolbar">
                            <a id="btnRefreshComments" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="RefreshComments()"></a>
                            <a id="btnAddComments" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddComments()">Add</a>
                            <a id="btnRemoveComments" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="RemoveComments()">Remove</a>
                            <a id="btnSaveComments" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="SaveComments()">Save</a>
                        </div>
                        <table id="tblBarCodeComments" title="Comments for BarCode" class="easyui-datagrid" style="width:100%; height:160px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#BarCodeCommentstoolbar" data-options="singleSelect: true, fitColumns:false,  rownumbers:true,pagination:false,autoRowHeight:false, onClickRow: onClickRowIC">
                            <thead>
                                <tr>
                                    <th field="Comments" width="95%" align="left" data-options="field:'Comments',editor:{type:'text'}"> Comments </th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
            <fieldset style="height:45px;">
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="0" cellpadding="0" style="font-size: 11px; width: 100%;font-weight: bold; font-size: 12px;">
                    <tr>
                        <td style="width:160px; text-align:left"><a id="linkOrderSummary" style="cursor:pointer;">Order Summary</a></td>
                        <td style="width:300px; text-align:right">
                            <a id="btnCopy" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-paste" plain="true" onclick="PasteOrderRecap()">Paste</a>
                            <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Save</a>
                            <a id="btnNotApproved" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-undo" plain="true" onclick="NotApprove()">Not Approve</a>
                            <a id="btnApproved" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true" onclick="ApprovedOrderRecap()">Approved</a>
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>
</body>
</html>
<style>
    td,tr{
        height:1px;
    }

</style>
<script type="text/javascript">
    var _sBaseAddress='';
    var _oAuthorizationRolesMapping =[];
    $(document).ready(function () {
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        var oOrderRecap =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oOrderRecapYarns=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.OrderRecapYarns));
        var oEmployees=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.Employees));
        var oColorSizeRations=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.ColorSizeRatios));
        var oAssortmentColorSizeRatios = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.AssortmentColorSizeRatios));
        var oBarCodeColorSizeRatios = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.BarCodeColorSizeRatios));
        var oBarCodeComments = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.BarCodeComments));
        var oTechnicalSheetSizes=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.TechnicalSheetSizes));
        _oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        var nMenuid = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(MenuID));
        var oCurrencyList=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.CurrencyList));
        if(nMenuid==""||nMenuid==null){nMenuid=0;}//Don't delete (Use for Nitification)
        $("#cboMerchandiserID").icsLoadCombo({ List: oEmployees, OptionValue: "EmployeeID", DisplayText: "Name" });
        $('#divOR').data('OrderRecap',oOrderRecap);
        $('#divOR').data('CurrencyList',oCurrencyList);
        $('#divOR').data('TechnicalSheetSizes',oTechnicalSheetSizes);
        $('#divOR').data('ColorSizeRations',oColorSizeRations);
        $('#divOR').data('AssortmentColorSizeRatios',oAssortmentColorSizeRatios);
        $('#divOR').data('BarCodeColorSizeRatios',oBarCodeColorSizeRatios);
        $('#divOR').data('BarCodeComments',oBarCodeComments);
        $('#divOR').data('Menuid',nMenuid);
        $('#divOR').data('ExtraYarn',null);
        $('#divOR').data('MaterialProduct',null);
         
        if(_sBaseAddress!="/tuli")
        {
            //only for tuli
            $('#lblAgent').html("");
        }else{
            //if tuli
            $('#txtDeliveryTerm').hide();
            $('#lblDeliveryTerm').html("");
        }

        var nOT = sessionStorage.getItem("OT");
        if(nOT==null || nOT==""){nOT=1;}
        
        $('#txtOrderDate').datebox('setValue', oOrderRecap.OrderDateInString);
        $('#txtShipmentDate').datebox('setValue', oOrderRecap.ShipmentDateInString);
        $('#txtFactoryShipmentDate').datebox('setValue', oOrderRecap.FactoryShipmentDateInString);
        $('#txtBoardDate').datebox('setValue', oOrderRecap.BoardDateInString);
        $('#txCartonQty,#txtMachineQty').numberbox({min:0,precision:0});
        $('#txtTotalQuantity').numberbox({min:0,precision:0});
        $('#txtTotalOrderQuantity').numberbox({min:0,precision:0});
        //txCartonQty
        var scboCurrency =document.getElementById("ddlCurrency");
        var nCurrencyID = scboCurrency.options[scboCurrency.selectedIndex].value;
        //for(var i =0;i<oCurrencyList.length;i++)
        //{
        //    if(oCurrencyList[i].CurrencyID==nCurrencyID)
        //    {                
        //        break;
        //    }
        //}
        //Order Recap Detail part
        MakeOrderRecapDetailTable(oTechnicalSheetSizes);
        RefreshList(oColorSizeRations);
        if(oOrderRecap.AssortmentTypeInt==0) //Assort color Assort Size
        {
            MakeAssortColorAssortSizeTable(oTechnicalSheetSizes);
            RefreshAssortColorAssortSizeList(oAssortmentColorSizeRatios);
            RefreshSolidColorAssortSizeList([]);
            //enabled tab
            $('#tabOrderRecap').tabs('enableTab', 1);
            //disabled tab
            $('#tabOrderRecap').tabs('disableTab', 2);
            $('#tabOrderRecap').tabs('disableTab', 4);

        }else  if(oOrderRecap.AssortmentTypeInt==1)    //Solid color Assort Size
        {
            //enabled tab
            $('#tabOrderRecap').tabs('enableTab', 2);
            //disabled tab
            $('#tabOrderRecap').tabs('disableTab', 1);
            $('#tabOrderRecap').tabs('disableTab', 4);
            MakeSolidColorAssortSizeTable(oTechnicalSheetSizes);
            RefreshSolidColorAssortSizeList(oAssortmentColorSizeRatios);
            RefreshAssortColorAssortSizeList([]);
        }else if(oOrderRecap.AssortmentTypeInt==2)    //Solid color solid Size
        {
          //enabled tab
          $('#tabOrderRecap').tabs('enableTab', 4);
          //disabled tab
          $('#tabOrderRecap').tabs('disableTab', 1);
          $('#tabOrderRecap').tabs('disableTab', 2);
          RefreshAssortColorAssortSizeList([]);
          RefreshSolidColorAssortSizeList([]);
          $('#txtQtyPerCarton').numberbox('setValue', parseFloat(oOrderRecap.QtyPerCarton));
          MakeSolidColorSolidSizeAssortmentTable(oTechnicalSheetSizes);
          RefreshListForSolidColorSolidSizeAssortment(oColorSizeRations);
        }

         //ORBarCode Part
        MakeORBarCodeTable(oTechnicalSheetSizes);
        RefreshORBarCodeList(oBarCodeColorSizeRatios);

        RefreshOrderRecapYarns(oOrderRecapYarns);

        RefreshControl();
        RefreshControlLayout();
        $('#txtCMValue').icsCurrencyBox();
    });

    function BarCodeAttachment()
    {
        var oOrderRecap = $('#divOR').data('OrderRecap');
        if(oOrderRecap==null || oOrderRecap.OrderRecapID<=0)
        {
            alert("Without Save Order Recap can't add Bar Code Image!");
            return;
        }
        //EnumAttchRefType : 1 Production Order;2 Delivery Order;3 Delivery Challan ..... 15:Order Recap Packing Policy   ;16:BarCodeImage    
        window.open(_sBaseAddress + '/AttachDocument/Attachment?id='+oOrderRecap.OrderRecapID+'&RefType=16&OperationInfo= Attachment of Order Recap No : '+oOrderRecap.OrderRecapNo, '_blank');
    }



  
    $('.chnageAssortmentType').change (function(){
        var nAssortmentType=$('#cboAssortmentType').val();
        var oTechnicalSheetSizes= $('#divOR').data('TechnicalSheetSizes');
        if(oTechnicalSheetSizes.length>0)
        {
            MakeAssortColorAssortSizeTable(oTechnicalSheetSizes);
            MakeSolidColorAssortSizeTable(oTechnicalSheetSizes);
            RefreshAssortColorAssortSizeList([]);
            RefreshSolidColorAssortSizeList([]);
        }
        if($('#divOR').data('OrderRecap').QtyPerCarton>0)
        {
            RefreshListForSolidColorSolidSizeAssortment([]);
        }

        if(nAssortmentType==0)
        {
            //enabled tab
            $('#tabOrderRecap').tabs('enableTab', 1);
            //disabled tab
            $('#tabOrderRecap').tabs('disableTab', 2);
            $('#tabOrderRecap').tabs('disableTab', 4);
            $('#txtQtyPerCarton').numberbox('setValue', parseFloat(0));
            $('#txtTotalQuantity').numberbox('setValue', parseInt(SizeWiseTotal( 21)));

        }else if(nAssortmentType==1)
        {
            //enabled tab
            $('#tabOrderRecap').tabs('enableTab', 2);
            //disabled tab
            $('#tabOrderRecap').tabs('disableTab', 1);
            $('#tabOrderRecap').tabs('disableTab', 4);
            $('#txtQtyPerCarton').numberbox('setValue', parseFloat(0));
            $('#txtTotalOrderQuantity').numberbox('setValue', parseInt(SizeWiseTotal( 21)));
        }else if(nAssortmentType==2)
        {
            //enabled tab
            $('#tabOrderRecap').tabs('enableTab', 4);
            //disabled tab
            $('#tabOrderRecap').tabs('disableTab', 1);
            $('#tabOrderRecap').tabs('disableTab', 2);
        }

    });
    $("form").change(function() {
        RefreshOrderRecapDetail();
    });
    //Product Pick
    $("#btnProduct").click(function () {
        var oProduct = { BUID: sessionStorage.getItem('BUID'),ProductName:''};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProduct,
            ControllerName: "OrderRecap",
            ActionName: "GetFinishGoods",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = []; var oColumn = { field: "NameCode", title: "Product Name", width: 300, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPicker',
                        winclass: 'clsProductPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            } else{
                alert("Data Not Found.");
                return;
            }
        });

    });
    function AddOrderRecapYarn()
    {
        if(!ValidateInputOrderRecapYarn()) return;
        var oOrderRecapYarn=RefreshObjectOrderRecapYarn();
        var oOrderRecapYarns =$('#tblRecapYarn').datagrid('getRows');
        oOrderRecapYarns.push(oOrderRecapYarn);
        RefreshOrderRecapYarns(oOrderRecapYarns);
        $('#divOR').data('ExtraYarn',null);
        $("#txtYarnName,#txtYarnPly").val('');
        $("#txtYarnName").removeClass("fontColorOfPickItem");
        $('#txtYarnName').focus();
    }


    function DeleteOrderRecapYarn()
    {
        var oOrderRecapYarn= $('#tblRecapYarn').datagrid('getSelected');
        if (!confirm("Confirm to Delete?")) return ;

        if(oOrderRecapYarn==null || oOrderRecapYarn.YarnID<=0)
        {
            alert("Invalid Selection!!! please select a valid Item!");
            return false;
        }
        var SelectedRowIndex=$('#tblRecapYarn').datagrid('getRowIndex',oOrderRecapYarn);
        $('#tblRecapYarn').datagrid('deleteRow',SelectedRowIndex);
    }
    function ValidateInputOrderRecapYarn()
    {
        var oSelectedYarn = $('#divOR').data('ExtraYarn');
        if(oSelectedYarn==null)
        {
            alert("Please Select Yarn/Fabrics!.");
            return false;
        }

        if(parseInt(oSelectedYarn.ProductID)<=0)
        {
            alert("Please Select Yarn/Fabrics!.");
            return false;
        }

        var oOrderRecapYarns=$('#tblRecapYarn').datagrid('getRows');
        for(var i=0; i<oOrderRecapYarns.length; i++)
        {
            if(oOrderRecapYarns[i].YarnID==parseInt(oSelectedYarn.ProductID))
            {
                alert("Your selected Yarn/Fabric already exists!.");
                return false;
            }
        }
        return true;
    }
    function RefreshObjectOrderRecapYarn()
    {
        var oSelectedYarn = $('#divOR').data('ExtraYarn');
        var oOrderRecapYarn={
            OrderRecapYarnID : 0,
            OrderRecapID : $('#divOR').data('OrderRecap').OrderRecapID,
            RefType:2,//TechnicalSheet:1;OrderRecap:2
            YarnType:1,//Fabric:1,Contracst:2;pocket:3
            YarnID : oSelectedYarn.ProductID,
            YarnCode : oSelectedYarn.ProductCode,
            YarnName : oSelectedYarn.ProductName,
            Note:'',
            YarnPly :$("#txtYarnPly").val()
        };
        return oOrderRecapYarn;
    }

    ///Factory Pick
    $("#txtFactoryName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($.trim($('#txtFactoryName').val())==null || $.trim($('#txtFactoryName').val())=="")
            {
                alert("Type Factory Name and Press Enter.");
                return;
            }
            GetFactorys();
        }if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtFactoryName").removeClass('fontColorOfPickItem');
            $('#divOR').data('OrderRecap').ProductionFactoryID = 0;
        }
    });
    $("#btnProductionFactory").click(function () {
        GetFactorys();
    });
    function GetFactorys()
    {
        var oContractor = {
            Params: '3' + '~' + $.trim($('#txtFactoryName').val())+'~'+sessionStorage.getItem("BUID")
        };

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winFactorys',
                        winclass: 'clsFactory',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblFactorys',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Factory List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("Data Not Found.");
                return;
            }
        });
    }

    ///LocalYarnSupplier Pick
    $("#txtLocalYarnSupplierName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($.trim($('#txtLocalYarnSupplierName').val())==null || $.trim($('#txtLocalYarnSupplierName').val())=="")
            {
                alert("Type LocalYarnSupplier Name and Press Enter.");
                return;
            }
            GetLocalYarnSuppliers();
        }if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtLocalYarnSupplierName").removeClass('fontColorOfPickItem');
            $('#divOR').data('OrderRecap').LocalYarnSupplierID = 0;
        }
    });
    $("#btnProductionLocalYarnSupplier").click(function () {
        GetLocalYarnSuppliers();
    });
    function GetLocalYarnSuppliers()
    {
        var oContractor = {
            Params: '1' + '~' + $.trim($('#txtLocalYarnSupplierName').val())+'~'+sessionStorage.getItem("BUID")
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winLocalYarnSuppliers',
                        winclass: 'clsLocalYarnSupplier',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblLocalYarnSuppliers',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'LocalYarnSupplier List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("Data Not Found.");
                return;
            }
        });
    }

    ///ImportYarnSupplier Pick
    $("#txtImportYarnSupplierName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($.trim($('#txtImportYarnSupplierName').val())==null || $.trim($('#txtImportYarnSupplierName').val())=="")
            {
                alert("Type ImportYarnSupplier Name and Press Enter.");
                return;
            }
            GetImportYarnSuppliers();
        }if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtImportYarnSupplierName").removeClass('fontColorOfPickItem');
            $('#divOR').data('OrderRecap').ImportYarnSupplierID = 0;
        }
    });
    $("#btnProductionImportYarnSupplier").click(function () {
        GetImportYarnSuppliers();
    });
    function GetImportYarnSuppliers()
    {
        var oContractor = {
            Params: '1' + '~' + $.trim($('#txtImportYarnSupplierName').val())+'~'+sessionStorage.getItem("BUID")
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winImportYarnSuppliers',
                        winclass: 'clsImportYarnSupplier',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblImportYarnSuppliers',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'ImportYarnSupplier List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("Data Not Found.");
                return;
            }
        });
    }

    //Fabric pick
    $("#txtFabricName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($.trim($('#txtFabricName').val())==null || $('#txtFabricName').val()=="")
            {
                alert("Please Type Fabric Name.");
                $('#txtFabricName').focus();
                return;
            }
            GetFabrics();
        }if (code == 8) //backspace=8
        {
            //debugger
            $('#divOR').data('OrderRecap').FabricID = 0;
            $("#txtFabricName").removeClass('fontColorOfPickItem');
        }
    });
    $("#btnFabric").click(function () {
        GetFabrics();
    });
    function GetFabrics()
    {
        var oProduct = { BUID: sessionStorage.getItem('BUID'),ProductName:$('#txtFabricName').val()};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oProduct,
            ControllerName: "OrderRecap",
            ActionName: "GetYarnCategory",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = []; var oColumn = { field: "NameCode", title: "Yarn Name", width: 300, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winFabricCategory',
                        winclass: 'clsFabricCategory',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblYarnPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Yarn List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            } else{
                alert("Data Not Found.");
                return;
            }
        });
    }

    //pick extra yarn
    $('#btnPickYarn').click(function () {
        $('#divOR').data('ExtraYarn',null);
        GetYarns();
    });
    $('#txtYarnName').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) 
        {
            if($.trim($('#txtYarnName').val())==null || $.trim($('#txtYarnName').val())=="")
            {
                alert("Type Yarn Name and Press Enter");
                return;
            }
            GetYarns();
        }else   if (code == 8) //backspace=8
        {            
            $("#txtYarnName").removeClass("fontColorOfPickItem");
            $('#divOR').data('ExtraYarn',null);
        }
    });
    function GetYarns()
    {
        var oProduct = { BUID: sessionStorage.getItem('BUID'),ProductName:$('#txtYarnName').val()};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oProduct,
            ControllerName: "OrderRecap",
            ActionName: "GetYarnCategory",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = []; var oColumn = { field: "NameCode", title: "Yarn Name", width: 300, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winYarnCategory',
                        winclass: 'clsYarnCategory',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblExtraYarns',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Yarn List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            } else{
                alert("Data Not Found.");
                return;
            }
        });
    }


    function StylePiker()
    {
        var oTechnicalSheet = { BUID:sessionStorage.getItem('BUID'),StyleNo:$.trim($('#txtStyleNo').val())};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oTechnicalSheet,
            ControllerName: "OrderRecap",
            ActionName: "StyleSearch",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].TechnicalSheetID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "StyleNo", title: "Style No", width:200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BuyerName", title: "Buyer", width:150, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winStyle',
                        winclass: 'clsStyle',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblStyle',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Style List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            } else{
                alert("Data Not Found.");
                return;
            }
        });
    }
    $('#txtStyleNo').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if(code==13)//enter
        {
            if($.trim($('#txtStyleNo').val())==null || $.trim($('#txtStyleNo').val())=="")
            {
                alert("Type Style No.");
                return;
            }
            StylePiker();
        }else if (code == 8) //backspace=8
        {
            //$("#txtStyleNo").val('');
            debugger;
            var oOrderRecap = $('#divOR').data('OrderRecap');
            oOrderRecap.TechnicalSheetID =0;
            oOrderRecap.FabricID = 0;
            oOrderRecap.ProductID = 0;
            $('#divOR').data('OrderRecap',oOrderRecap);
            $("#cboSeasons").val(0);
            $("#txtFabricName,#txtProductName,#txtBuyerName,#txtGG,#txtCount,#txtWeight,#txtSpecialFinish").val('');
            $("#txtStyleNo,#txtFabricName").removeClass("fontColorOfPickItem");
            $('#txtStyleNo').focus();
            LoadPAMs(0,0);
            MakeOrderRecapDetailTable([]);
            RefreshList([]);
            MakeAssortColorAssortSizeTable([]); //Reset Assort color Assort Size table
            MakeSolidColorAssortSizeTable([]); //Reset Solid Color Assort Size table
            RefreshAssortColorAssortSizeList([]);//Reset data
            MakeORBarCodeTable([]); //Reset BarCode table
            RefreshORBarCodeList([]);//Reset data
            GetContactPersonnel(0);
            RefreshStyleImage(0);
            TechnicalSheetSize(0);
            GetMeasurementUnitByProduct(0);

        }
    });
    function AgentPiker()
    {
        var oContractor = {
            Params: '5'+'~'+'~'+sessionStorage.getItem("BUID")
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winAgents',
                        winclass: 'clsAgent',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblAgents',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Agent List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("Data Not Found.");
                return;
            }
        });

    }

    function LoadPAMs(nTechnicalSheetID, nPAMID)
    {
        $("#cboPAM").icsLoadCombo({ List: [], OptionValue: "PAMID", DisplayText: "PAMNo" });
        if(nTechnicalSheetID>0)
        {
        var oTechnicalSheet={
            TechnicalSheetID : nTechnicalSheetID
        };
        $.ajax ({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/OrderRecap/GetPAMs",
            data:  JSON.stringify(oTechnicalSheet),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                var  oPAMs = jQuery.parseJSON(data);
                if (oPAMs!=null)
                {
                    if(oPAMs.length>0)
                    {
                        debugger;
                        $("#cboPAM").icsLoadCombo({ List: oPAMs, OptionValue: "PAMID", DisplayText: "PAMNo" });
                        $('#cboPAM').val(nPAMID);
                    }
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
       }
    }
    function TechnicalSheetSize(nTechnicalSheetID)
    {
        var oTechnicalSheet={
            TechnicalSheetID : nTechnicalSheetID
        };
        $.ajax ({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/OrderRecap/GetTechnicalSheetSize",
            data:  JSON.stringify(oTechnicalSheet),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                var  oTechnicalSheetSizes = jQuery.parseJSON(data);
                if (oTechnicalSheetSizes!=null)
                {
                    if(oTechnicalSheetSizes.length>0)
                    {
                        debugger;
                        MakeOrderRecapDetailTable(oTechnicalSheetSizes);
                        MakeAssortColorAssortSizeTable(oTechnicalSheetSizes);
                        MakeSolidColorAssortSizeTable(oTechnicalSheetSizes);
                        MakeORBarCodeTable(oTechnicalSheetSizes);
                    }
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }

    function GetContactPersonnel(nBuyerID)
    {
        var nBuyerID =nBuyerID;
        var tsv= (new Date().getTime())/1000;
        var listItems= "<option value='"+0+"'>" +"--Select Contact Person--" + "</option>";
        $.ajax ({
            type: "GET",
            dataType: "json",
            url : _sBaseAddress+  "/OrderRecap/GetContactPersonnel",
            data: {nBuyerID:nBuyerID, ts:tsv  },
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                var  oOrderRecap = jQuery.parseJSON(data);
                 oContactPersonnels=oOrderRecap.ContactPersonnelList;
                    if(oContactPersonnels.length>0)
                    {
                        for (i = 0; i<oContactPersonnels.length; i++)
                        {
                            listItems += "<option value='"+oContactPersonnels[i].ContactPersonnelID+"'>" + oContactPersonnels[i].Name+"</option>";
                        }
                        $("#cboContactPersonnels").html(listItems);
                        $('#cboContactPersonnels').val( $('#divOR').data('OrderRecap').BuyerContactPersonID);
                }
                else
                {
                    $("#cboContactPersonnels").html(listItems);
                }

            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }
    function GetMeasurementUnitByProduct(nProductID)
    {

        var oTechnicalSheet={
            ProductID : nProductID
        };
        $.ajax ({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/OrderRecap/GetMeasurementUnitByProduct",
            data:  JSON.stringify(oTechnicalSheet),
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                var  oUnits = jQuery.parseJSON(data);
                if (oUnits!=null)
                {
                    if(oUnits.length>0)
                    {
                        var listItems= "<option value='"+0+"'>" +"--Select Unit--" + "</option>";
                        for (i = 0; i < oUnits.length; i++)
                        {
                            listItems += "<option value='" + oUnits[i].MeasurementUnitID+"'>" + oUnits[i].UnitName+"</option>";
                        }
                        $("#cboMeasurementUnitID").html(listItems);

                    }
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }
    function GetStyleFabrics(nTSID)
    {
        var oTechnicalSheet={
            TechnicalSheetID : nTSID
        };
        $.ajax ({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/OrderRecap/GetStyleFabrics",
            data:  JSON.stringify(oTechnicalSheet),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var  oFabrics = jQuery.parseJSON(data);
                if (oFabrics!=null)
                {
                    DynamicRefreshList(oFabrics, 'tblRecapYarn');
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }

    function MakeOrderRecapDetailTable(oTechnicalSheetSizes)
    {
        debugger;
        var oTempTechnicalSheetSizes = [];
        var tblColums=[];
        var oColumn=null;
        oColumn= { field :"ColorName", title:"Color Name", width:"120"};
        tblColums.push(oColumn);
        var count =0;
        for(var i=0; i<oTechnicalSheetSizes.length;i++)
        {
            count++;
            oColumn= {
                field:"OrderQty"+count,
                title: oTechnicalSheetSizes[i].SizeCategoryName,
                width: "60",
                align: "right",
                editor: {type:'numberbox',options:{ precision:0}}
            };
            tblColums.push(oColumn);
            oTempTechnicalSheetSizes.push(oTechnicalSheetSizes[i]);
        }
        oColumn= { field :"ColorWiseTotal", title:"Total", width:"100",  align: "right"};
        tblColums.push(oColumn);
        oColumn= { field :"UnitPrice", title:"Unit Price", width:"60",  align: "right",  editor: {type:'numberbox',options:{ precision:3}}};
        tblColums.push(oColumn);
        oColumn= { field :"ColorWiseAmount", title:"Amount", width:"100",  align: "right", formatter:formatPriceFor3digit};
        tblColums.push(oColumn);
        
        $('#tblColorSizeWiseRatio').datagrid({ columns:[tblColums]});
        $('#divOR').data('TechnicalSheetSizes',oTempTechnicalSheetSizes);
        RefreshSummary(oTempTechnicalSheetSizes);
    }

    function RefreshSummary(oTechnicalSheetSizes)
    {
        //var nUnitPrice = $('#txtUnitPrice').numberbox('getValue');
        var oOrderRecap = $('#divOR').data('OrderRecap');
        var nTechnicalSheetID  = oOrderRecap.TechnicalSheetID;
        var sInnerHTML="<table border='0' cellspacing='2' cellpadding='2' style='font-size:11px; font-weight:bold'><tr>";
        sInnerHTML=sInnerHTML+"<td style='width:135px; text-align:right'> Total :</td>";
        var count =0;
        for(var j=0; j<oTechnicalSheetSizes.length;j++)
        {
            count++;
            sInnerHTML = sInnerHTML+"<td style='width:56px; text-align:right'>"+SizeWiseTotal(count)+"</td>";
        }

        var nTotalQuantity = SizeWiseTotal( 21);
        if($('#cboAssortmentType').val()==0)
        {
            var nTotalAssortmentQuantity=AssortmentSizeWiseTotal(21,true);//Asssortemnt Total from Assort color Assort Size
            $('#txtTotalQuantity').numberbox('setValue', parseInt(nTotalQuantity));
        }else  if($('#cboAssortmentType').val()==1)
        {
            var nTotalAssortmentQuantity=AssortmentSizeWiseTotal(21,false);//Asssortemnt Total From solid color Assort Size
            $('#txtTotalOrderQuantity').numberbox('setValue', parseInt(nTotalQuantity));
        }
        //var nTotalValue = parseFloat(parseInt(nTotalQuantity)*parseFloat(nUnitPrice));
        //$('#txtTotalPrice').numberbox('setValue', nTotalValue);
        if(parseFloat(nTotalQuantity)>0 && parseFloat(nTotalAssortmentQuantity)>0 && $('#cboAssortmentType').val()==0)
        {
            $('#txCartonQty').numberbox('setValue', Math.ceil(parseFloat(parseFloat(nTotalQuantity)/ parseFloat(nTotalAssortmentQuantity))));
        }
        else
        {
            $('#txCartonQty').numberbox('setValue', 0);
        }
        var nTotalAmount = 0;
        var  oColorSizeRatios = $('#tblColorSizeWiseRatio').datagrid('getRows');
        for(var i=0;i<oColorSizeRatios.length;i++)
        {
            nTotalAmount+= parseFloat(oColorSizeRatios[i].ColorWiseAmount);
        }
        sInnerHTML=sInnerHTML+"<td style='width:100px; text-align:right'>"+nTotalQuantity+"</td>";//total qty
        sInnerHTML=sInnerHTML+"<td style='width:200px; text-align:right'>"+formatPriceFor3digit(nTotalAmount,0)+"</td>";//total Amount
        sInnerHTML=sInnerHTML+"</tr></table>";

        var divTotalSummary= document.getElementById('divTotalSummary');
        divTotalSummary.innerHTML=sInnerHTML;
    }

    function CalculateFromRatio()
    {

        var nTotalRatioQuantity = 0;var nTotalOrderQuantity = 0;
        if($('#cboAssortmentType').val()==0)
        {
            endEditingAssortment();
             nTotalRatioQuantity =parseInt(AssortmentSizeWiseTotal(21,true));//AsssortemntRatio Total
             nTotalOrderQuantity = parseInt($('#txtTotalQuantity').numberbox('getValue'));
            if(nTotalOrderQuantity<=0)
            {
                alert("Please enter Order Qty!")
                $('#tabOrderRecap').tabs('select',1);
                $('#txtTotalQuantity').focus();
                return;
            }
            if(nTotalRatioQuantity<=0)
            {
                alert("Please enter Assortment Ratio Qty!")
                $('#tabOrderRecap').tabs('select',1);
                return;
            }

        }else  if($('#cboAssortmentType').val()==1)
        {
            endEditingSolidColorAssortSize();
            nTotalRatioQuantity =parseInt(AssortmentSizeWiseTotal(21,false));//AsssortemntRatio Total
            nTotalOrderQuantity = parseInt($('#txtTotalOrderQuantity').numberbox('getValue'));
            if(nTotalOrderQuantity<=0)
            {
                alert("Please enter Order Qty!")
                $('#tabOrderRecap').tabs('select',2);
                $('#txtTotalOrderQuantity').focus();
                return;
            }
            if(nTotalRatioQuantity<=0)
            {
                alert("Please enter Solid Color Assort Size Ratio Qty!")
                $('#tabOrderRecap').tabs('select',2);
                return;
            }

        }



        var oColorSizeRatios=[];
        var oColorSizeRatio=null;
        var nRatioQty = parseInt(nTotalOrderQuantity/nTotalRatioQuantity);
        var oAssortmentColorSizeRatios = [];
        if($('#cboAssortmentType').val()==0)
        {
             oAssortmentColorSizeRatios=$('#tblAssortColorAssortSize').datagrid('getRows');
        }else  if($('#cboAssortmentType').val()==1)
        {
            oAssortmentColorSizeRatios=$('#tblSolidColorAssortSize').datagrid('getRows');
        }
        if(oAssortmentColorSizeRatios!=null)
        {
            if(oAssortmentColorSizeRatios.length>0)
            {
                for(var i=0; i<oAssortmentColorSizeRatios.length; i++)
                {
                    oColorSizeRatio={
                        ColorID   : oAssortmentColorSizeRatios[i].ColorID,
                        ColorName : oAssortmentColorSizeRatios[i].ColorName,
                        OrderObjectID1 :0, OrderQty1 :parseInt(oAssortmentColorSizeRatios[i].OrderQty1 * nRatioQty), OrderObjectID2 :0, OrderQty2 :parseInt(oAssortmentColorSizeRatios[i].OrderQty2 * nRatioQty),
                        OrderObjectID3 :0, OrderQty3 :parseInt(oAssortmentColorSizeRatios[i].OrderQty3 * nRatioQty),  OrderObjectID4 :0, OrderQty4 :parseInt(oAssortmentColorSizeRatios[i].OrderQty4 * nRatioQty),
                        OrderObjectID5 :0, OrderQty5 :parseInt(oAssortmentColorSizeRatios[i].OrderQty5 * nRatioQty), OrderObjectID6 :0, OrderQty6 :parseInt(oAssortmentColorSizeRatios[i].OrderQty6 * nRatioQty),
                        OrderObjectID7 :0, OrderQty7 :parseInt(oAssortmentColorSizeRatios[i].OrderQty7 * nRatioQty), OrderObjectID8 :0,  OrderQty8 :parseInt(oAssortmentColorSizeRatios[i].OrderQty8 * nRatioQty),
                        OrderObjectID9 :0, OrderQty9 :parseInt(oAssortmentColorSizeRatios[i].OrderQty9 * nRatioQty), OrderObjectID10 :0, OrderQty10 :parseInt(oAssortmentColorSizeRatios[i].OrderQty10 * nRatioQty),
                        OrderObjectID11 :0, OrderQty11 :parseInt(oAssortmentColorSizeRatios[i].OrderQty11 * nRatioQty), OrderObjectID12 :0, OrderQty12 :parseInt(oAssortmentColorSizeRatios[i].OrderQty12 * nRatioQty),
                        OrderObjectID13 :0, OrderQty13 :parseInt(oAssortmentColorSizeRatios[i].OrderQty13 * nRatioQty), OrderObjectID14 :0, OrderQty14 :parseInt(oAssortmentColorSizeRatios[i].OrderQty14 * nRatioQty),
                        OrderObjectID15 :0, OrderQty15 :parseInt(oAssortmentColorSizeRatios[i].OrderQty15 * nRatioQty), OrderObjectID16 :0, OrderQty16 :parseInt(oAssortmentColorSizeRatios[i].OrderQty16 * nRatioQty),
                        OrderObjectID17 :0, OrderQty17 :parseInt(oAssortmentColorSizeRatios[i].OrderQty17 * nRatioQty), OrderObjectID18 :0, OrderQty18 :parseInt(oAssortmentColorSizeRatios[i].OrderQty18 * nRatioQty),
                        OrderObjectID19 :0, OrderQty19 :parseInt(oAssortmentColorSizeRatios[i].OrderQty19 * nRatioQty), OrderObjectID20 :0, OrderQty20 :parseInt(oAssortmentColorSizeRatios[i].OrderQty20 * nRatioQty),
                        ColorWiseTotal:0
                    };
                    oColorSizeRatio.ColorWiseTotal = parseInt(oColorSizeRatio.OrderQty1)+parseInt(oColorSizeRatio.OrderQty2)+parseInt(oColorSizeRatio.OrderQty3)+parseInt(oColorSizeRatio.OrderQty4)+parseInt(oColorSizeRatio.OrderQty5)+parseInt(oColorSizeRatio.OrderQty6)+parseInt(oColorSizeRatio.OrderQty7)+parseInt(oColorSizeRatio.OrderQty8)+parseInt(oColorSizeRatio.OrderQty9)+parseInt(oColorSizeRatio.OrderQty10)+parseInt(oColorSizeRatio.OrderQty11)+parseInt(oColorSizeRatio.OrderQty12)+parseInt(oColorSizeRatio.OrderQty13)+parseInt(oColorSizeRatio.OrderQty14)+parseInt(oColorSizeRatio.OrderQty15)+parseInt(oColorSizeRatio.OrderQty16)+parseInt(oColorSizeRatio.OrderQty17)+parseInt(oColorSizeRatio.OrderQty18)+parseInt(oColorSizeRatio.OrderQty19)+parseInt(oColorSizeRatio.OrderQty20);
                    oColorSizeRatios.push(oColorSizeRatio);
                }

            }
        }
        RefreshList(oColorSizeRatios);
    }

    function RefreshOrderRecapDetail()
    {
        endEditing();
        var oColorSizeWiseRatios = $('#tblColorSizeWiseRatio').datagrid('getRows');
        data=oColorSizeWiseRatios;
        data={"total":""+data.length+"","rows":data};
        $('#tblColorSizeWiseRatio').datagrid('loadData',data);
        RefreshSummary($('#divOR').data('TechnicalSheetSizes'));
    }

    function SizeWiseTotal( n)
    {

        var nSizeWiseTotal=0;
          var   oColorSizeWiseRatios =  $('#tblColorSizeWiseRatio').datagrid('getRows');

        if(oColorSizeWiseRatios!= null)
        {
            for(var i=0; i<oColorSizeWiseRatios.length; i++)
            {
                if( parseInt(n)==1){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty1);}
                else if(parseInt(n)==2){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty2);}
                else if(parseInt(n)==3){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty3);}
                else if(parseInt(n)==4){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty4);}
                else if(parseInt(n)==5){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty5);}
                else if(parseInt(n)==6){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty6);}
                else if(parseInt(n)==7){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty7);}
                else if(parseInt(n)==8){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty8);}
                else if(parseInt(n)==9){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty9);}
                else if(parseInt(n)==10){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty10);}
                else if(parseInt(n)==11){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty11);}
                else if(parseInt(n)==12){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty12);}
                else if(parseInt(n)==13){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty13);}
                else if(parseInt(n)==14){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty14);}
                else if(parseInt(n)==15){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty15);}
                else if(parseInt(n)==16){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty16);}
                else if(parseInt(n)==17){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty17);}
                else if(parseInt(n)==18){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty18);}
                else if(parseInt(n)==19){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty19);}
                else if(n==20){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty20);}
                else if(n==21){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].ColorWiseTotal);}
            }
        }
        return nSizeWiseTotal;
    }


    function IntializePickerbutton(oPickerobj) {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            debugger;
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);
            }
        });
    }
    function SetPickerValueAssign(oPickerobj)
    {
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

        if (oPickerobj.winid == 'winFactorys') {
            if (oreturnObj != null && oreturnObj.ContractorID > 0)
            {
                $("#txtFactoryName").val( oreturnObj.Name);
                $('#divOR').data('OrderRecap').ProductionFactoryID = oreturnObj.ContractorID;
                $("#txtFactoryName").addClass('fontColorOfPickItem');
                $('#txtFactoryName').focus();
            }

        }else if (oPickerobj.winid == 'winLocalYarnSuppliers') {
            if (oreturnObj != null && oreturnObj.ContractorID > 0)
            {
                $("#txtLocalYarnSupplierName").val( oreturnObj.Name);
                $('#divOR').data('OrderRecap').LocalYarnSupplierID = oreturnObj.ContractorID;
                $("#txtLocalYarnSupplierName").addClass('fontColorOfPickItem');
                $('#txtLocalYarnSupplierName').focus();
            }

        }else if (oPickerobj.winid == 'winImportYarnSuppliers') {
            if (oreturnObj != null && oreturnObj.ContractorID > 0)
            {
                $("#txtImportYarnSupplierName").val( oreturnObj.Name);
                $('#divOR').data('OrderRecap').ImportYarnSupplierID = oreturnObj.ContractorID ;
                $("#txtImportYarnSupplierName").addClass('fontColorOfPickItem');
                $('#txtImportYarnSupplierName').focus();
            }

        } else if (oPickerobj.winid == 'winProductPicker') {
            if (oreturnObj != null && oreturnObj.ProductID > 0) {
                $('#divOR').data('OrderRecap').ProductID = oreturnObj.ProductID;
                $('#txtProductName,#txtStyleDescription').val(oreturnObj.ProductName);
                //$("#txtProductName").addClass('fontColorOfPickItem');
                $('#txtProductName').focus();
            }
        } else if (oPickerobj.winid == 'winFabricCategory') {
            if (oreturnObj != null && oreturnObj.ProductID > 0) {
                $("#txtFabricName").val( oreturnObj.ProductName);
                $('#divOR').data('OrderRecap').FabricID = oreturnObj.ProductID;
                $("#txtFabricName").addClass('fontColorOfPickItem');
                $('#txtFabricName').focus();
            }
        } else if (oPickerobj.winid == 'winStyle') 
        {
            if (oreturnObj != null && oreturnObj.TechnicalSheetID> 0)
            {
               debugger;
                $("#txtStyleNo").val(oreturnObj.StyleNo);
                $('#divOR').data('OrderRecap').TechnicalSheetID = oreturnObj.TechnicalSheetID;
                $("#txtProductName").val(oreturnObj.ProductName);
                $('#divOR').data('OrderRecap').ProductID = oreturnObj.ProductID;
                $("#txtBuyerName").val( oreturnObj.BuyerName);
                $('#divOR').data('OrderRecap').BuyerID = oreturnObj.BuyerID;
                $('#divOR').data('OrderRecap').BuyerContactPersonID = oreturnObj.BuyerConcernID;
                $('#cboSeasons').val(oreturnObj.BusinessSessionID);                
                $('#divOR').data('OrderRecap').FabricID = oreturnObj.ShellFab;
                $("#txtGG").val(oreturnObj.GG);
                $("#txtCount").val(oreturnObj.Count);
                $("#txtWeight").val(oreturnObj.GSMName);
                $("#txtSpecialFinish").val(oreturnObj.SpecialFinish);                
                //$('#txtTotalQuantity').numberbox('setValue', parseInt(oreturnObj.ApproxQty));
                //$('#txtTotalOrderQuantity').numberbox('setValue', parseInt(oreturnObj.ApproxQty));
                $("#txtFabricName").val(oreturnObj.FabricDescription);
                $("#txtFabricName").addClass('fontColorOfPickItem');
                $('#divOR').data('OrderRecap').FabricID = parseInt(oreturnObj.YarnCategoryID);
                $('#cboMerchandiserID').val(parseInt(oreturnObj.MerchandiserID));
                

                GetContactPersonnel(oreturnObj.BuyerID);
                RefreshStyleImage(oreturnObj.TechnicalSheetID);
                LoadPAMs(oreturnObj.TechnicalSheetID,0);//Load initialize
                TechnicalSheetSize(oreturnObj.TechnicalSheetID);
                GetMeasurementUnitByProduct(oreturnObj.ProductID);
                GetStyleFabrics(oreturnObj.TechnicalSheetID);
                $("#txtStyleNo,#txtFabricName").addClass('fontColorOfPickItem');
                $('#txtStyleNo').focus();
            }
        } else if (oPickerobj.winid == 'winAgents') {
            if (oreturnObj != null && oreturnObj.ContractorID > 0) {
                $('#divOR').data('OrderRecap').AgentID = oreturnObj.ContractorID;
                $("#txtAgentName").val( oreturnObj.Name);
                $("#txtAgentName").addClass('fontColorOfPickItem');
                $('#txtAgentName').focus();
            }
        }else if(oPickerobj.winid=="winYarnCategory")
        {
            if (oreturnObj != null && parseInt(oreturnObj.ProductID)> 0)
            {
                $('#divOR').data('ExtraYarn',oreturnObj);
                $("#txtYarnName").val( oreturnObj.ProductName);
                $("#txtYarnName").addClass('fontColorOfPickItem');
                $('#txtYarnName').focus();
            }
        }
        else if(oPickerobj.winid='winTSColor')
        {
            if (oreturnobjs.length>0 && oreturnobjs[0].ColorCategoryID > 0) 
            {
                var oAssortmentColorSizeRatios = [];
                var oTechnicalSheetColors = oreturnobjs;
                var nIsAssortColorAssortSize = oPickerobj.IsAssortColorAssortSize;
                if(nIsAssortColorAssortSize==1)//ASssort color assort size
                {
                    oAssortmentColorSizeRatios=$('#tblAssortColorAssortSize').datagrid('getRows');

                }else if(nIsAssortColorAssortSize==2)//solid color Assort size
                {
                    oAssortmentColorSizeRatios=$('#tblSolidColorAssortSize').datagrid('getRows');
                }else if(nIsAssortColorAssortSize==3)//size breakdown
                {
                    oAssortmentColorSizeRatios=$('#tblColorSizeWiseRatio').datagrid('getRows');
                }else if(nIsAssortColorAssortSize==4)//Bar Code
                {
                    oAssortmentColorSizeRatios=$('#tblColorSizeBarCode').datagrid('getRows');
                }
                if(oTechnicalSheetColors!=null)
                {
                    if(oTechnicalSheetColors.length>0)
                    {
                        var oAssortmentColorSizeRatio=null;
                        for(var i =0;i<oTechnicalSheetColors.length;i++)
                        {
                            if(nIsAssortColorAssortSize==1 || nIsAssortColorAssortSize==2)
                            {
                                if(!IsExistsAssortment(oTechnicalSheetColors[i].ColorCategoryID,nIsAssortColorAssortSize))
                                {
                                    var oAssortmentColorSizeRatio =GetColorSizeObject(oTechnicalSheetColors[i]);
                                    oAssortmentColorSizeRatios.push(oAssortmentColorSizeRatio);
                                }
                            }else if(nIsAssortColorAssortSize==3)
                            {
                               
                                var oColorSizeWiseRatios = $('#tblColorSizeWiseRatio').datagrid('getRows');
                                if(!ICS_IsExist(oColorSizeWiseRatios,'ColorID',oTechnicalSheetColors[i].ColorCategoryID))
                                {
                                    var oAssortmentColorSizeRatio =GetColorSizeObject(oTechnicalSheetColors[i]);
                                    oAssortmentColorSizeRatios.push(oAssortmentColorSizeRatio);
                                }
                            }else if(nIsAssortColorAssortSize==4)
                            {
                                var oBarCodeColorSizeWiseRatios = $('#tblColorSizeBarCode').datagrid('getRows');
                                if(!ICS_IsExist(oBarCodeColorSizeWiseRatios,'ColorID',oTechnicalSheetColors[i].ColorCategoryID))
                                {
                                    var oBarCodeObject =GetBarCodeObject(oTechnicalSheetColors[i]);
                                    oAssortmentColorSizeRatios.push(oBarCodeObject);
                                }
                            }
                        }
                    }
                }
                if(nIsAssortColorAssortSize ==1)
                {
                    RefreshAssortColorAssortSizeList(oAssortmentColorSizeRatios);//for Assort color Assort Size
                }else if(nIsAssortColorAssortSize ==2){
                    RefreshSolidColorAssortSizeList(oAssortmentColorSizeRatios);//for Solid color Assort Size
                }else if(nIsAssortColorAssortSize ==3)//size breakdwns
                {
                    RefreshList(oAssortmentColorSizeRatios);
                }else if(nIsAssortColorAssortSize ==4)//bar Code
                {
                    RefreshORBarCodeList(oAssortmentColorSizeRatios);
                }
            }
        }
        
    }
    function GetColorSizeObject(oTechnicalSheetColor)
    {
       var  oAssortmentColorSizeRatio={
            ColorID   : oTechnicalSheetColor.ColorCategoryID,
            ColorName : oTechnicalSheetColor.ColorName, //Set Default Qty Set
            OrderObjectID1 :0, OrderQty1 : oTechnicalSheetColor.Quantity, OrderObjectID2 :0, OrderQty2 :0,
            OrderObjectID3 :0, OrderQty3 :0,  OrderObjectID4 :0, OrderQty4 :0,
            OrderObjectID5 :0, OrderQty5 :0, OrderObjectID6 :0, OrderQty6 :0,
            OrderObjectID7 :0, OrderQty7 :0, OrderObjectID8 :0,  OrderQty8 :0,
            OrderObjectID9 :0, OrderQty9 :0, OrderObjectID10 :0, OrderQty10 :0,
            OrderObjectID11 :0, OrderQty11 :0, OrderObjectID12 :0, OrderQty12 :0,
            OrderObjectID13 :0, OrderQty13 :0, OrderObjectID14 :0, OrderQty14 :0,
            OrderObjectID15 :0, OrderQty15 :0, OrderObjectID16 :0, OrderQty16 :0,
            OrderObjectID17 :0, OrderQty17 :0, OrderObjectID18 :0, OrderQty18 :0,
            OrderObjectID19 :0, OrderQty19 :0, OrderObjectID20 :0, OrderQty20 :0,
            UnitPrice:0, ColorWiseTotal:oTechnicalSheetColor.Quantity, ColorWiseCartonQty:0
       };
       return oAssortmentColorSizeRatio;
    }
    function GetBarCodeObject(oTechnicalSheetColor)
    {
      var   oBarCodeColorSizeRatio={
            ColorID   : oTechnicalSheetColor.ColorCategoryID,
            ColorName : oTechnicalSheetColor.ColorName,
            OrderObjectID1 :0, BarCode1 : "", OrderObjectID2 :0, BarCode2 :"",
            OrderObjectID3 :0, BarCode3 :"",  OrderObjectID4 :0, BarCode4 :"",
            OrderObjectID5 :0, BarCode5 :"", OrderObjectID6 :0, BarCode6 :"",
            OrderObjectID7 :0, BarCode7 :"", OrderObjectID8 :0,  BarCode8 :"",
            OrderObjectID9 :0, BarCode9 :"", OrderObjectID10 :0, BarCode10 :"",
            OrderObjectID11 :0, BarCode11 :"", OrderObjectID12 :0, BarCode12 :"",
            OrderObjectID13 :0, BarCode13 :"", OrderObjectID14 :0, BarCode14 :"",
            OrderObjectID15 :0, BarCode15 :"", OrderObjectID16 :0, BarCode16 :"",
            OrderObjectID17 :0, BarCode17 :"", OrderObjectID18 :0, BarCode18 :"",
            OrderObjectID19 :0, BarCode19 :"", OrderObjectID20 :0, BarCode20 :"",ColorWiseTotal:0
        };
      return oBarCodeColorSizeRatio;
    }

    //region Solid color solid size Assortment Start
    function CalculateSolidSizeAssortment()
    {

        MakeSolidColorSolidSizeAssortmentTable($('#divOR').data('TechnicalSheetSizes'));
        if(parseFloat($('#txtQtyPerCarton').numberbox('getValue'))>0)
        {
            var oSODls  =$('#tblColorSizeWiseRatio').datagrid('getRows');
            RefreshListForSolidColorSolidSizeAssortment(oSODls);
        }else{
            RefreshListForSolidColorSolidSizeAssortment([]);
        }
    }
    function MakeSolidColorSolidSizeAssortmentTable(oTechnicalSheetSizes)
    {

        var tblColums=[];
        var oColumn=null;
        oColumn= { field :"ColorName", title:"Color Name", width:"120"};
        tblColums.push(oColumn);
        var count =0;
        for(var i=0; i<oTechnicalSheetSizes.length;i++)
        {
            count++;
            oColumn= {
                field:"OrderQty"+count,
                title: oTechnicalSheetSizes[i].SizeCategoryName,
                width: "60",
                align: "right",
                formatter:formatPriceForsizeAssortment
            };
            tblColums.push(oColumn);

        }
        oColumn= { field :"ColorWiseTotal", title:"Total", width:"100",  align: "right", formatter:formatPriceForsizeAssortment};
        tblColums.push(oColumn);
        $('#tblSolidSizeAssortment').datagrid({ columns:[tblColums]});
        RefreshSummaryForSolidColorSolidSizeAssortment(oTechnicalSheetSizes);
    }

    function RefreshSummaryForSolidColorSolidSizeAssortment(oTechnicalSheetSizes)
    {

        var nQtyPerCarton = parseFloat($('#txtQtyPerCarton').numberbox('getValue'));
        var sInnerHTML="<table border='0' cellspacing='2' cellpadding='2' style='font-size:11px; font-weight:bold'><tr>";
        sInnerHTML=sInnerHTML+"<td style='width:135px; text-align:right'> Total :</td>";
        var count =0;
        for(var j=0; j<oTechnicalSheetSizes.length;j++)
        {
            count++;

            var nSizewiseTotal = SizeWiseTotal(count);
            if(parseFloat(nSizewiseTotal)>0 && parseInt(nQtyPerCarton)>0)
            {
                sInnerHTML = sInnerHTML+"<td style='width:56px; text-align:right'>"+Math.ceil(nSizewiseTotal/nQtyPerCarton)+"</td>";
            }
            else{
                sInnerHTML = sInnerHTML+"<td style='width:56px; text-align:right'>"+Math.ceil(0)+"</td>";
            }
        }

        var nTotalQuantity = SizeWiseTotal(21);
        if(parseFloat(nTotalQuantity)>0 && parseInt(nQtyPerCarton)>0)
        {
            sInnerHTML=sInnerHTML+"<td style='width:100px; text-align:right'>"+Math.ceil(nTotalQuantity/nQtyPerCarton)+"</td>";
        }else{
            sInnerHTML=sInnerHTML+"<td style='width:100px; text-align:right'>"+Math.ceil(0)+"</td>";
        }

        sInnerHTML=sInnerHTML+"</tr></table>";

        var divTotalSummary= document.getElementById('divTotalSummarySolidSizeAssortment');
        divTotalSummary.innerHTML=sInnerHTML;
    }
    function  RefreshListForSolidColorSolidSizeAssortment(oColorSizeRations)
    {
        data= oColorSizeRations;
        data={"total":""+data.length+"","rows":data};
        $('#tblSolidSizeAssortment').datagrid('loadData',data);
        RefreshSummaryForSolidColorSolidSizeAssortment($('#divOR').data('TechnicalSheetSizes'));
    }

    //region Solid color solid size Assortment End



    function RefreshOrderRecapYarns(oOrderRecapYarns)
    {
        data=oOrderRecapYarns;
        data={"total":""+data.length+"","rows":data};
        $('#tblRecapYarn').datagrid('loadData',data);
    }
    

    function RefreshList(oColorSizeRatios)
    {
        data= oColorSizeRatios;
        data={"total":""+data.length+"","rows":data};
        $('#tblColorSizeWiseRatio').datagrid('loadData',data);
        RefreshSummary($('#divOR').data('TechnicalSheetSizes'));
    }

    var editIndex = undefined;
    function endEditing(){
        if (editIndex == undefined){return true}
        if ($('#tblColorSizeWiseRatio').datagrid('validateRow', editIndex)){
            $('#tblColorSizeWiseRatio').datagrid('endEdit', editIndex);
            $('#tblColorSizeWiseRatio').datagrid('selectRow',editIndex);
            var oCSWRatio=$('#tblColorSizeWiseRatio').datagrid('getSelected');
            if(oCSWRatio!=null)
            {
                oCSWRatio.ColorWiseTotal = parseInt(oCSWRatio.OrderQty1)+parseInt(oCSWRatio.OrderQty2)+parseInt(oCSWRatio.OrderQty3)+parseInt(oCSWRatio.OrderQty4)+parseInt(oCSWRatio.OrderQty5)+parseInt(oCSWRatio.OrderQty6)+parseInt(oCSWRatio.OrderQty7)+parseInt(oCSWRatio.OrderQty8)+parseInt(oCSWRatio.OrderQty9)+parseInt(oCSWRatio.OrderQty10)+parseInt(oCSWRatio.OrderQty11)+parseInt(oCSWRatio.OrderQty12)+parseInt(oCSWRatio.OrderQty13)+parseInt(oCSWRatio.OrderQty14)+parseInt(oCSWRatio.OrderQty15)+parseInt(oCSWRatio.OrderQty16)+parseInt(oCSWRatio.OrderQty17)+parseInt(oCSWRatio.OrderQty18)+parseInt(oCSWRatio.OrderQty19)+parseInt(oCSWRatio.OrderQty20);
                oCSWRatio.ColorWiseAmount = parseFloat(parseFloat(oCSWRatio.ColorWiseTotal)*parseFloat(oCSWRatio.UnitPrice));
                $('#tblColorSizeWiseRatio').datagrid('updateRow',{index: editIndex,	row: oCSWRatio});
            }
            RefreshSummary($('#divOR').data('TechnicalSheetSizes'));

            editIndex = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRow(index){
        if (editIndex != index){
            if (endEditing())
            {
                $('#tblColorSizeWiseRatio').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndex = index;
            }
            else
            {
                $('#tblColorSizeWiseRatio').datagrid('selectRow', editIndex);
            }
        }
    }



    var editRecapYarnIndex = undefined;
    function endEditingRecapYarn(){
        if (editRecapYarnIndex == undefined){return true}
        if ($('#tblRecapYarn').datagrid('validateRow', editRecapYarnIndex)){
            $('#tblRecapYarn').datagrid('endEdit', editRecapYarnIndex);
            editRecapYarnIndex  = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }

    function onClickRowRecapYarn(index){

        if (editRecapYarnIndex != index)
        {
            if (endEditingRecapYarn())
            {
                $('#tblRecapYarn').datagrid('selectRow', index)
                        .datagrid('beginEdit', index);
                editRecapYarnIndex  = index;
            }
            else
            {
                $('#tblRecapYarn').datagrid('selectRow', editRecapYarnIndex);
            }
        }
    }


   

    function Delete()
    {

        if (!confirm("Confirm to Delete?")) return ;
        var oColorSizeWiseRatio= $('#tblColorSizeWiseRatio').datagrid('getSelected');
        var SelectedRowIndex=$('#tblColorSizeWiseRatio').datagrid('getRowIndex',oColorSizeWiseRatio);
        $('#tblColorSizeWiseRatio').datagrid('deleteRow',SelectedRowIndex);
        RefreshSummary($('#divOR').data('TechnicalSheetSizes'));
    }

    //Assort color Assort Size Pa Start
    function MakeAssortColorAssortSizeTable(oTechnicalSheetSizes)
    {
        var oTempTechnicalSheetSizes=[];
        var tblColums=[];
        var oColumn=null;
        oColumn= { field :"ColorName", title:"Color Name", width:"120"};
        tblColums.push(oColumn);
        var count =0;
        for(var i=0; i<oTechnicalSheetSizes.length;i++)
        {
            count++;
            oColumn= {
                field:"OrderQty"+count,
                title: oTechnicalSheetSizes[i].SizeCategoryName,
                width: 60,
                align: "right",
                editor: {type:'numberbox',options:{ precision:0}}
            };
            tblColums.push(oColumn);
            oTempTechnicalSheetSizes.push(oTechnicalSheetSizes[i]);
        }
        oColumn= { field :"ColorWiseTotal", title:"Total", width:"100",  align: "right"};
        tblColums.push(oColumn);
        $('#divOR').data('TechnicalSheetSizes',oTempTechnicalSheetSizes);
        $('#tblAssortColorAssortSize').datagrid({ columns:[tblColums]});
        RefreshAssortColorAssortSizeSummary(oTempTechnicalSheetSizes);
    }

    function RefreshAssortColorAssortSizeSummary(oTechnicalSheetSizes)
    {

        var sInnerHTML="<table border='0' cellspacing='2' cellpadding='2' style='font-size:11px; font-weight:bold'><tr>";
        sInnerHTML=sInnerHTML+"<td style='width:135px; text-align:right'> Total :</td>";
        var count =0;
        for(var j=0; j<oTechnicalSheetSizes.length;j++)
        {
            count++;
            sInnerHTML=sInnerHTML+"<td style='width:56px; text-align:right'>"+AssortmentSizeWiseTotal(count, true)+"</td>";
        }
        var nTotalQuantity=AssortmentSizeWiseTotal(21,true);//Asssortemnt Total
        sInnerHTML=sInnerHTML+"<td style='width:100px; text-align:right'>"+nTotalQuantity+"</td>";

        sInnerHTML=sInnerHTML+"</tr></table>";
        var nSizeWiseTotalQuantity = SizeWiseTotal(21);//Get size wise total Qty
        if(parseFloat(nTotalQuantity)>0 && parseFloat(nSizeWiseTotalQuantity)>0)
        {
            $('#txCartonQty').numberbox('setValue', Math.ceil(parseFloat(parseFloat(nSizeWiseTotalQuantity)/ parseFloat(nTotalQuantity))));
        }
        else
        {
            $('#txCartonQty').numberbox('setValue', 0);
        }

        var divTotalSummary= document.getElementById('divTotalAssortmentSummary');
        divTotalSummary.innerHTML=sInnerHTML;

    }


    function AssortmentSizeWiseTotal(n, bIsAssortColorAssortSize)
    {
        var nSizeWiseTotal=0;
        var  oAssortmentColorSizeWiseRatios = [];
        if(bIsAssortColorAssortSize)
        {
             oAssortmentColorSizeWiseRatios =  $('#tblAssortColorAssortSize').datagrid('getRows');
        }else{
            oAssortmentColorSizeWiseRatios =  $('#tblSolidColorAssortSize').datagrid('getRows');
        }
        if(oAssortmentColorSizeWiseRatios .length>0)
        {
            for(var i=0; i<oAssortmentColorSizeWiseRatios .length; i++)
            {
                if( parseInt(n)==1){nSizeWiseTotal=nSizeWiseTotal+parseInt(oAssortmentColorSizeWiseRatios [i].OrderQty1);}
                else if(parseInt(n)==2){nSizeWiseTotal=nSizeWiseTotal+parseInt(oAssortmentColorSizeWiseRatios [i].OrderQty2);}
                else if(parseInt(n)==3){nSizeWiseTotal=nSizeWiseTotal+parseInt(oAssortmentColorSizeWiseRatios [i].OrderQty3);}
                else if(parseInt(n)==4){nSizeWiseTotal=nSizeWiseTotal+parseInt(oAssortmentColorSizeWiseRatios [i].OrderQty4);}
                else if(parseInt(n)==5){nSizeWiseTotal=nSizeWiseTotal+parseInt(oAssortmentColorSizeWiseRatios [i].OrderQty5);}
                else if(parseInt(n)==6){nSizeWiseTotal=nSizeWiseTotal+parseInt(oAssortmentColorSizeWiseRatios [i].OrderQty6);}
                else if(parseInt(n)==7){nSizeWiseTotal=nSizeWiseTotal+parseInt(oAssortmentColorSizeWiseRatios [i].OrderQty7);}
                else if(parseInt(n)==8){nSizeWiseTotal=nSizeWiseTotal+parseInt(oAssortmentColorSizeWiseRatios [i].OrderQty8);}
                else if(parseInt(n)==9){nSizeWiseTotal=nSizeWiseTotal+parseInt(oAssortmentColorSizeWiseRatios [i].OrderQty9);}
                else if(parseInt(n)==10){nSizeWiseTotal=nSizeWiseTotal+parseInt(oAssortmentColorSizeWiseRatios [i].OrderQty10);}
                else if(parseInt(n)==11){nSizeWiseTotal=nSizeWiseTotal+parseInt(oAssortmentColorSizeWiseRatios [i].OrderQty11);}
                else if(parseInt(n)==12){nSizeWiseTotal=nSizeWiseTotal+parseInt(oAssortmentColorSizeWiseRatios [i].OrderQty12);}
                else if(parseInt(n)==13){nSizeWiseTotal=nSizeWiseTotal+parseInt(oAssortmentColorSizeWiseRatios [i].OrderQty13);}
                else if(parseInt(n)==14){nSizeWiseTotal=nSizeWiseTotal+parseInt(oAssortmentColorSizeWiseRatios [i].OrderQty14);}
                else if(parseInt(n)==15){nSizeWiseTotal=nSizeWiseTotal+parseInt(oAssortmentColorSizeWiseRatios [i].OrderQty15);}
                else if(parseInt(n)==16){nSizeWiseTotal=nSizeWiseTotal+parseInt(oAssortmentColorSizeWiseRatios [i].OrderQty16);}
                else if(parseInt(n)==17){nSizeWiseTotal=nSizeWiseTotal+parseInt(oAssortmentColorSizeWiseRatios [i].OrderQty17);}
                else if(parseInt(n)==18){nSizeWiseTotal=nSizeWiseTotal+parseInt(oAssortmentColorSizeWiseRatios [i].OrderQty18);}
                else if(parseInt(n)==19){nSizeWiseTotal=nSizeWiseTotal+parseInt(oAssortmentColorSizeWiseRatios [i].OrderQty19);}
                else if(n==20){nSizeWiseTotal=nSizeWiseTotal+parseInt(oAssortmentColorSizeWiseRatios [i].OrderQty20);}
                else if(n==21){nSizeWiseTotal=nSizeWiseTotal+parseInt(oAssortmentColorSizeWiseRatios [i].ColorWiseTotal);}
                else if(n==22){nSizeWiseTotal=nSizeWiseTotal+parseInt(oAssortmentColorSizeWiseRatios [i].ColorWiseCartonQty);}
            }
        }
        return nSizeWiseTotal;
    }

    function RefreshAssortmentDetail(bIsAssortColorAssortSize)
    {
        var nTotalAssortmentQuantity = 0;
        var nTotalQuantity = 0;
        var oTempTechnicalSheetSizes = $('#divOR').data('TechnicalSheetSizes');
        if(bIsAssortColorAssortSize)
        {
            endEditingAssortment();
            var oAssortmentColorSizeWiseRatios = $('#tblAssortColorAssortSize').datagrid('getRows');
            RefreshAssortColorAssortSizeList(oAssortmentColorSizeWiseRatios);
            RefreshAssortColorAssortSizeSummary(oTempTechnicalSheetSizes);
            nTotalAssortmentQuantity=AssortmentSizeWiseTotal(21,true);//Asssortemnt Total
            nTotalQuantity = parseInt($('#txtTotalQuantity').numberbox('getValue'));
        }else{
            endEditingSolidColorAssortSize();
            var oAssortmentColorSizeWiseRatios = $('#tblSolidColorAssortSize').datagrid('getRows');
            RefreshSolidColorAssortSizeList(oAssortmentColorSizeWiseRatios);
            RefreshSolidColorAssortSizeSummary(oTempTechnicalSheetSizes);
            nTotalAssortmentQuantity=AssortmentSizeWiseTotal(21,false);//Asssortemnt Total
        }

        if(parseFloat(nTotalQuantity)>0 && parseFloat(nTotalAssortmentQuantity)>0 && bIsAssortColorAssortSize)//Calculate only for Assort color Assort Size
        {
            $('#txCartonQty').numberbox('setValue', Math.ceil(parseFloat(parseFloat(nTotalQuantity)/ parseFloat(nTotalAssortmentQuantity))));
        }
        else
        {
            $('#txCartonQty').numberbox('setValue', 0);
        }
    }

    function AddColorSizeORAssortmentORBarCode(nIsAssortColorAssortSize)
    {
        //nIsAssortColorAssortSize: 1:Assort color Assort Size 2: Solid color Assort Size 3:Size Break Down Yarn Details
        if(nIsAssortColorAssortSize==1)
        {
            endEditingAssortment();
        }else if(nIsAssortColorAssortSize==2){
            onClickSolidColorSolidSizeRowAssortment();
        }else if(nIsAssortColorAssortSize==3)
        {
            endEditing();
        }
        var nTechnicalSheetID = $('#divOR').data('OrderRecap').TechnicalSheetID;
        if(nTechnicalSheetID==null || nTechnicalSheetID==""  || parseInt(nTechnicalSheetID)<=0)
        {
            alert("Please Select Style No");
            return;
        }
        var nPAMID = $('#cboPAM').val();
        var oTechnicalSheet = {
            TechnicalSheetID: nTechnicalSheetID,
            Note:nPAMID
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oTechnicalSheet,
            ControllerName: "OrderRecap",
            ActionName: "GetTSColors",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ColorCategoryID > 0) {
                    debugger;
                    var tblColums = []; 
                    var oColumn = { field: "ColorName", title: "Color Name", width:250, align: "left" }; tblColums.push(oColumn);
                    if(nPAMID>0){oColumn = { field: "QuantitySt", title: "Quantity", width:80, align: "right" }; tblColums.push(oColumn);}
                    var oPickerParam = {
                        winid: 'winTSColor',
                        winclass: 'clsTSColor',
                        winwidth: 420,
                        winheight: 460,
                        tableid: 'tblTSColors',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        IsAssortColorAssortSize:nIsAssortColorAssortSize,
                        searchingbyfieldName: 'ColorName',
                        windowTittle: 'Technical Sheet/PAM Color List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("Data Not Found.");
                return;
            }
        });
    }

    function IsExistsAssortment(nColorID,nIsAssortColorAssortSize)
    {
        var oAssortmentColorSizeWiseRatios  = [];
        if(nIsAssortColorAssortSize==1)
        {
            oAssortmentColorSizeWiseRatios = $('#tblAssortColorAssortSize').datagrid('getRows');//Assort Color Assort size
        }else{
            oAssortmentColorSizeWiseRatios = $('#tblSolidColorAssortSize').datagrid('getRows');//Solid Color Assort size
        }

        for(var i =0;i<oAssortmentColorSizeWiseRatios.length;i++)
        {
            if(parseInt(oAssortmentColorSizeWiseRatios[i].ColorID) == parseInt(nColorID))
            {
                return true;
            }
        }
        return false;
    }

    function RefreshAssortColorAssortSizeList(oAssortmentColorSizeRatios)
    {
        var oTempTechnicalSheetSizes = $('#divOR').data('TechnicalSheetSizes');
        data = oAssortmentColorSizeRatios;
        data={"total":""+data.length+"","rows":data};
        $('#tblAssortColorAssortSize').datagrid('loadData',data);
        RefreshAssortColorAssortSizeSummary(oTempTechnicalSheetSizes);
    }

    function DeleteAssortmentColor(nIsAssortColorAssortSize)
    {
        var oTempTechnicalSheetSizes = $('#divOR').data('TechnicalSheetSizes');
        var oAssortmentColorSizeWiseRatio = null;
        if(nIsAssortColorAssortSize==1)
        {
            oAssortmentColorSizeWiseRatio= $('#tblAssortColorAssortSize').datagrid('getSelected');
        }else{
            oAssortmentColorSizeWiseRatio= $('#tblSolidColorAssortSize').datagrid('getSelected');
        }

        if(oAssortmentColorSizeWiseRatio==null)
        {
            alert("Please Select a Item from List");
            return;
        }
        if (!confirm("Confirm to Delete?")) return ;
        if(nIsAssortColorAssortSize==1)
        {
            var SelectedRowIndex=$('#tblAssortColorAssortSize').datagrid('getRowIndex',oAssortmentColorSizeWiseRatio);
            $('#tblAssortColorAssortSize').datagrid('deleteRow',SelectedRowIndex);
            RefreshAssortColorAssortSizeSummary(oTempTechnicalSheetSizes);
        }else{
            var SelectedRowIndex=$('#tblSolidColorAssortSize').datagrid('getRowIndex',oAssortmentColorSizeWiseRatio);
            $('#tblSolidColorAssortSize').datagrid('deleteRow',SelectedRowIndex);
            RefreshSolidColorAssortSizeSummary(oTempTechnicalSheetSizes);
        }

    }
    function GetTotalColorBreakDownQty(nColorID,nAssortmentColorWiseTotal)
    {
        var oColorSizeWiseRatios = $('#tblColorSizeWiseRatio').datagrid('getRows');
        for(var i = 0;i<oColorSizeWiseRatios.length;i++)
        {
            if(parseInt(oColorSizeWiseRatios[i].ColorID)== parseInt(nColorID))
            {
                if(parseFloat(oColorSizeWiseRatios[i].ColorWiseTotal)>0)
                {
                    return parseFloat(oColorSizeWiseRatios[i].ColorWiseTotal) / parseFloat(nAssortmentColorWiseTotal);
                }else
                {
                    return 0;
                }
            }
        }
        return 0;
    }

    var editIndexAssortment = undefined;
    function endEditingAssortment(){
        if (editIndexAssortment == undefined){return true}
        if ($('#tblAssortColorAssortSize').datagrid('validateRow', editIndexAssortment)){
            $('#tblAssortColorAssortSize').datagrid('endEdit', editIndexAssortment);
            $('#tblAssortColorAssortSize').datagrid('selectRow',editIndexAssortment);
            var oCSWRatio=$('#tblAssortColorAssortSize').datagrid('getSelected');
            if(oCSWRatio!=null)
            {
                oCSWRatio.ColorWiseTotal = parseInt(oCSWRatio.OrderQty1)+parseInt(oCSWRatio.OrderQty2)+parseInt(oCSWRatio.OrderQty3)+parseInt(oCSWRatio.OrderQty4)+parseInt(oCSWRatio.OrderQty5)+parseInt(oCSWRatio.OrderQty6)+parseInt(oCSWRatio.OrderQty7)+parseInt(oCSWRatio.OrderQty8)+parseInt(oCSWRatio.OrderQty9)+parseInt(oCSWRatio.OrderQty10)+parseInt(oCSWRatio.OrderQty11)+parseInt(oCSWRatio.OrderQty12)+parseInt(oCSWRatio.OrderQty13)+parseInt(oCSWRatio.OrderQty14)+parseInt(oCSWRatio.OrderQty15)+parseInt(oCSWRatio.OrderQty16)+parseInt(oCSWRatio.OrderQty17)+parseInt(oCSWRatio.OrderQty18)+parseInt(oCSWRatio.OrderQty19)+parseInt(oCSWRatio.OrderQty20);
                $('#tblAssortColorAssortSize').datagrid('updateRow',{index: editIndexAssortment,	row: oCSWRatio});
            }
            var oTempTechnicalSheetSizes = $('#divOR').data('TechnicalSheetSizes');
            RefreshAssortColorAssortSizeSummary(oTempTechnicalSheetSizes);

            editIndexAssortment = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }

    function onClickRowAssortment(index){
        if (editIndexAssortment != index){
            if (endEditingAssortment())
            {
                $('#tblAssortColorAssortSize').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndexAssortment = index;
            }
            else
            {
                $('#tblAssortColorAssortSize').datagrid('selectRow', editIndex);
            }
        }
    }
    //Assort color Assort Size Part End

    //Solid color Assort Size Start

    function MakeSolidColorAssortSizeTable(oTechnicalSheetSizes)
    {
        var oTempTechnicalSheetSizes = [];
        var tblColums=[];
        var oColumn=null;
        oColumn= { field :"ColorName", title:"Color Name", width:"120"};
        tblColums.push(oColumn);
        var count =0;
        for(var i=0; i<oTechnicalSheetSizes.length;i++)
        {
            count++;
            oColumn= {
                field:"OrderQty"+count,
                title: oTechnicalSheetSizes[i].SizeCategoryName,
                width: "60",
                align: "right",
                editor: {type:'numberbox',options:{ precision:0}}
            };
            tblColums.push(oColumn);
            oTempTechnicalSheetSizes.push(oTechnicalSheetSizes[i]);
        }
        oColumn= { field :"ColorWiseTotal", title:"Total", width:"100",  align: "right"};
        tblColums.push(oColumn);

        oColumn= { field :"ColorWiseCartonQty", title:"Carton Qty", width:"100",  align: "right"};
        tblColums.push(oColumn);
        $('#divOR').data('TechnicalSheetSizes',oTempTechnicalSheetSizes);
        $('#tblSolidColorAssortSize').datagrid({ columns:[tblColums]});
        RefreshSolidColorAssortSizeSummary(oTempTechnicalSheetSizes);
    }

    function RefreshSolidColorAssortSizeSummary(oTechnicalSheetSizes)
    {

        var sInnerHTML="<table border='0' cellspacing='2' cellpadding='2' style='font-size:11px; font-weight:bold'><tr>";
        sInnerHTML=sInnerHTML+"<td style='width:135px; text-align:right'> Total :</td>";
        var count =0;
        for(var j=0; j<oTechnicalSheetSizes.length;j++)
        {
            count++;
            sInnerHTML=sInnerHTML+"<td style='width:56px; text-align:right'>"+AssortmentSizeWiseTotal(count,false)+"</td>";
        }
        var nTotalQuantity=AssortmentSizeWiseTotal(21,false);//Asssortemnt Total
        sInnerHTML=sInnerHTML+"<td style='width:100px; text-align:right'>"+nTotalQuantity+"</td>";

        var nTotalCartonQty= Math.ceil(AssortmentSizeWiseTotal(22,false));//Asssortemnt Total
        sInnerHTML=sInnerHTML+"<td style='width:100px; text-align:right'>"+nTotalCartonQty+"</td>";

        sInnerHTML=sInnerHTML+"</tr></table>";
        var nSizeWiseTotalQuantity = SizeWiseTotal(21);//Get size wise total Qty

        var divTotalSummary= document.getElementById('divTotalSolidColorAssortSizeummary');
        divTotalSummary.innerHTML=sInnerHTML;

    }
    function RefreshSolidColorAssortSizeList(oSolidColorAssortSizeRatios)
    {
       var oTempTechnicalSheetSizes = $('#divOR').data('TechnicalSheetSizes');
        data = oSolidColorAssortSizeRatios;
        data={"total":""+data.length+"","rows":data};
        $('#tblSolidColorAssortSize').datagrid('loadData',data);
        RefreshSolidColorAssortSizeSummary(oTempTechnicalSheetSizes);
    }

    var editIndexSolidColorAssortSize = undefined;
    function endEditingSolidColorAssortSize(){
        if (editIndexSolidColorAssortSize == undefined){return true}
        if ($('#tblSolidColorAssortSize').datagrid('validateRow', editIndexSolidColorAssortSize)){
            $('#tblSolidColorAssortSize').datagrid('endEdit', editIndexSolidColorAssortSize);
            $('#tblSolidColorAssortSize').datagrid('selectRow',editIndexSolidColorAssortSize);
            var oCSWRatio=$('#tblSolidColorAssortSize').datagrid('getSelected');
            if(oCSWRatio!=null)
            {
                oCSWRatio.ColorWiseTotal = parseInt(oCSWRatio.OrderQty1)+parseInt(oCSWRatio.OrderQty2)+parseInt(oCSWRatio.OrderQty3)+parseInt(oCSWRatio.OrderQty4)+parseInt(oCSWRatio.OrderQty5)+parseInt(oCSWRatio.OrderQty6)+parseInt(oCSWRatio.OrderQty7)+parseInt(oCSWRatio.OrderQty8)+parseInt(oCSWRatio.OrderQty9)+parseInt(oCSWRatio.OrderQty10)+parseInt(oCSWRatio.OrderQty11)+parseInt(oCSWRatio.OrderQty12)+parseInt(oCSWRatio.OrderQty13)+parseInt(oCSWRatio.OrderQty14)+parseInt(oCSWRatio.OrderQty15)+parseInt(oCSWRatio.OrderQty16)+parseInt(oCSWRatio.OrderQty17)+parseInt(oCSWRatio.OrderQty18)+parseInt(oCSWRatio.OrderQty19)+parseInt(oCSWRatio.OrderQty20);
                oCSWRatio.ColorWiseCartonQty = Math.ceil(GetTotalColorBreakDownQty(oCSWRatio.ColorID,oCSWRatio.ColorWiseTotal));
                $('#tblSolidColorAssortSize').datagrid('updateRow',{index: editIndexSolidColorAssortSize,	row: oCSWRatio});
            }
            var oTempTechnicalSheetSizes = $('#divOR').data('TechnicalSheetSizes');
            RefreshSolidColorAssortSizeSummary(oTempTechnicalSheetSizes);
            editIndexSolidColorAssortSize = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }

    function onClickSolidColorSolidSizeRowAssortment(index){
        if (editIndexSolidColorAssortSize != index){
            if (endEditingSolidColorAssortSize())
            {
                $('#tblSolidColorAssortSize').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndexSolidColorAssortSize = index;
            }
            else
            {
                $('#tblSolidColorAssortSize').datagrid('selectRow', editIndex);
            }
        }
    }
    //Solid color Assort Size end





    //OR BarCode Part Start
    function MakeORBarCodeTable(oTechnicalSheetSizes)
    {
        debugger;
        var oTempTechnicalSheetSizes = [];
        var tblColums=[];
        var oColumn=null;
        oColumn= { field :"ColorName", title:"Color Name", width:"120"};
        tblColums.push(oColumn);
        var count =0;
        for(var i=0; i<oTechnicalSheetSizes.length;i++)
        {
            count++;
            oColumn= {
                field:"BarCode"+count,
                title: oTechnicalSheetSizes[i].SizeCategoryName,
                width: "100",
                align: "left",
                editor: {type:'textbox'}
            };
            tblColums.push(oColumn);
            oTempTechnicalSheetSizes.push(oTechnicalSheetSizes[i]);
        }
        $('#divOR').data('TechnicalSheetSizes', oTempTechnicalSheetSizes);
        $('#tblColorSizeBarCode').datagrid({ columns:[tblColums]});
    }

    function RefreshBarCodeDetail()
    {
        endEditingBarCode();
        var oBarCodeColorSizeWiseRatios = $('#tblColorSizeBarCode').datagrid('getRows');
        RefreshORBarCodeList(oBarCodeColorSizeWiseRatios);
    }


    function RefreshORBarCodeList(oBarCodeColorSizeRatios)
    {
        data = oBarCodeColorSizeRatios;
        data={"total":""+data.length+"","rows":data};
        $('#tblColorSizeBarCode').datagrid('loadData',data);
    }

    function DeleteBarCodeColor()
    {

        if (!confirm("Confirm to Delete?")) return ;
        var oBarCodeColorSizeWiseRatio= $('#tblColorSizeBarCode').datagrid('getSelected');
        var SelectedRowIndex=$('#tblColorSizeBarCode').datagrid('getRowIndex',oBarCodeColorSizeWiseRatio);
        $('#tblColorSizeBarCode').datagrid('deleteRow',SelectedRowIndex);
    }

    var editIndexBarCode = undefined;
    function endEditingBarCode(){
        if (editIndexBarCode == undefined){return true}
        if ($('#tblColorSizeBarCode').datagrid('validateRow', editIndexBarCode)){
            $('#tblColorSizeBarCode').datagrid('endEdit', editIndexBarCode);
            $('#tblColorSizeBarCode').datagrid('selectRow',editIndexBarCode);
            editIndexBarCode = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }

    function onClickRowBarCode(index){
        if (editIndexBarCode != index){
            if (endEditingBarCode())
            {
                $('#tblColorSizeBarCode').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndexBarCode = index;
            }
            else
            {
                $('#tblColorSizeBarCode').datagrid('selectRow', editIndex);
            }
        }
    }
    //OR BarCode Part End


    function ConPersonnelPiker()
    {
        var nTSID = $('#divOR').data('OrderRecap').TechnicalSheetID;
        if(nTSID==null || parseInt(nTSID)<=0)
        {
            alert("Please select Style!");
            return;
        }
        var nBuyerID=$('#divOR').data('OrderRecap').BuyerID;
        if(parseInt(nBuyerID)<0){alert("Sorry, there is no Buyer.");return;}
        sessionStorage.setItem("ContractorBackTo", "");
        sessionStorage.setItem("SelectedRowIndex", 0);
        sessionStorage.setItem("ContractorHeader", "Add ContactPersonnel");
        window.open(_sBaseAddress+  "/Contractor/ViewContactPersonnel?id="+nBuyerID+"&buid="+sessionStorage.getItem("BUID"),"_blank");
    }
    $('#btnReload').click(function(e){
        GetContactPersonnel($('#divOR').data('OrderRecap').BuyerID);
    });

    function Close()
    {
        if(sessionStorage.getItem("BackLink")==null || sessionStorage.getItem("BackLink")=="")
        {
            window.close();
        }else{
            window.location.href = sessionStorage.getItem("BackLink");
        }
    }

    function  Save()
    {

        endEditing();
        endEditingAssortment();
        endEditingSolidColorAssortSize();
        endEditingBarCode();
        endEditingRecapYarn();
        if(!ValidateInput()) return;
        var oOrderRecap=RefreshObject();
        var oColorSizeWiseRatios=$('#tblColorSizeWiseRatio').datagrid('getRows');
        oOrderRecap.ColorSizeRatios=oColorSizeWiseRatios;
        if($('#cboAssortmentType').val()==0)
        {
            oOrderRecap.AssortmentColorSizeRatios = $('#tblAssortColorAssortSize').datagrid('getRows');//Assort color Assort Size
        }else if($('#cboAssortmentType').val()==1)
        {
            oOrderRecap.AssortmentColorSizeRatios = $('#tblSolidColorAssortSize').datagrid('getRows');//Solid color Assort Size
        }else
        {
            oOrderRecap.AssortmentColorSizeRatios =[];//Soli color Solid Size
        }
        oOrderRecap.BarCodeColorSizeRatios = $('#tblColorSizeBarCode').datagrid('getRows');
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/OrderRecap/Save",
            traditional: true,
            data:  JSON.stringify(oOrderRecap),
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                oOrderRecap = jQuery.parseJSON(data);
                if (oOrderRecap.ErrorMessage==null || oOrderRecap.ErrorMessage=="") {
                    alert("Data Saved successfully");
                    var oOrderRecaps = sessionStorage.getItem("OrderRecaps");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oOrderRecaps != null) {
                        oOrderRecaps = jQuery.parseJSON(oOrderRecaps);
                    }
                    else {
                        oOrderRecaps = [];
                    }
                    if (nIndex != -1) {
                        oOrderRecaps[nIndex] = oOrderRecap;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oOrderRecaps.length);
                        oOrderRecaps.push(oOrderRecap);
                    }
                    sessionStorage.setItem("OrderRecaps", JSON.stringify(oOrderRecaps));
                    sessionStorage.setItem("ProductionExecutionPlanHeader", "Edit Production Execution Plan");
                    window.location.href =_sBaseAddress+ "/ProductionExecutionPlan/ViewProductionExecutionPlan?id=0&OrderRecapID="+parseInt(oOrderRecap.OrderRecapID);
                    //window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oOrderRecap.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function PasteOrderRecap()
    {

        endEditing();
        endEditingAssortment();
        endEditingBarCode();
        if(!ValidateInput()) return;
        var oOrderRecap=RefreshObject();
        var oColorSizeWiseRatios=$('#tblColorSizeWiseRatio').datagrid('getRows');
        oOrderRecap.ColorSizeRatios=oColorSizeWiseRatios;
        oOrderRecap.AssortmentColorSizeRatios = $('#tblAssortColorAssortSize').datagrid('getRows');
        oOrderRecap.BarCodeColorSizeRatios = $('#tblColorSizeBarCode').datagrid('getRows');
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/OrderRecap/CopyOrderRecap",
            traditional: true,
            data:  JSON.stringify(oOrderRecap),
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                oOrderRecap = jQuery.parseJSON(data);
                if (oOrderRecap.ErrorMessage==null || oOrderRecap.ErrorMessage=="") {
                    alert("Data Saved successfully");
                    var oOrderRecaps = sessionStorage.getItem("OrderRecaps");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oOrderRecaps != null) {
                        oOrderRecaps = jQuery.parseJSON(oOrderRecaps);
                    }
                    else {
                        oOrderRecaps = [];
                    }
                    if (nIndex != -1) {
                        oOrderRecaps[nIndex] = oOrderRecap;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oOrderRecaps.length);
                        oOrderRecaps.push(oOrderRecap);
                    }
                    sessionStorage.setItem("OrderRecaps", JSON.stringify(oOrderRecaps));
                    sessionStorage.setItem("ProductionExecutionPlanHeader", "Edit Production Execution Plan");
                    window.location.href =_sBaseAddress+ "/ProductionExecutionPlan/ViewProductionExecutionPlan?id=0&OrderRecapID="+parseInt(oOrderRecap.OrderRecapID);
                    //window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oOrderRecap.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }


    function  ApprovedOrderRecap()
    {

        endEditing();
        endEditingAssortment();
        endEditingBarCode();
        if(!ValidateInput()) return;
        var oOrderRecap=RefreshObject();
        var oColorSizeWiseRatios=$('#tblColorSizeWiseRatio').datagrid('getRows');
        oOrderRecap.ColorSizeRatios=oColorSizeWiseRatios;
        oOrderRecap.AssortmentColorSizeRatios = $('#tblAssortColorAssortSize').datagrid('getRows');
        oOrderRecap.BarCodeColorSizeRatios = $('#tblColorSizeBarCode').datagrid('getRows');
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/OrderRecap/ApprovedOrderRecap",
            traditional: true,
            data:  JSON.stringify(oOrderRecap),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oOrderRecap = jQuery.parseJSON(data);
                if (oOrderRecap.ErrorMessage=="" || oOrderRecap.ErrorMessage==null)
                {
                    alert("Successfully Approved");
                    var oOrderRecaps = sessionStorage.getItem("OrderRecaps");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oOrderRecaps != null) {
                        oOrderRecaps = jQuery.parseJSON(oOrderRecaps);
                    }
                    else {
                        oOrderRecaps = [];
                    }
                    if (nIndex != -1) {
                        oOrderRecaps[nIndex] = oOrderRecap;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oOrderRecaps.length);
                        oOrderRecaps.push(oOrderRecap);
                    }
                    sessionStorage.setItem("OrderRecaps", JSON.stringify(oOrderRecaps));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oOrderRecap.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }
    function NotApprove()
    {
        var oOrderRecap = $('#divOR').data('OrderRecap');
        if(oOrderRecap==null || oOrderRecap.OrderRecapID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        else if(oOrderRecap.OrderRecapStatus==1)
        {
            if (!confirm("Realy Do You Want Not Approve?")) return ;
        }
        var oOrderRecap = {OrderRecapID:oOrderRecap.OrderRecapID,Description:$('#txtDescription').val(),ActionTypeInInt:2,};
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/OrderRecap/ChangeStatus",
            traditional: true,
            data:  JSON.stringify(oOrderRecap),
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                var oOrderRecap = jQuery.parseJSON(data);
                if ((oOrderRecap.ErrorMessage=="" || oOrderRecap.ErrorMessage==null) && parseInt(oOrderRecap.OrderRecapStatus)==0)
                {
                    alert("Successfully Send to Entry User!!");
                    var oOrderRecaps = sessionStorage.getItem("OrderRecaps");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oOrderRecaps != null) {
                        oOrderRecaps = jQuery.parseJSON(oOrderRecaps);
                    }
                    else {
                        oOrderRecaps = [];
                    }
                    if (nIndex != -1) {
                        oOrderRecaps[nIndex] = oOrderRecap;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oOrderRecaps.length);
                        oOrderRecaps.push(oOrderRecap);
                    }
                    sessionStorage.setItem("OrderRecaps", JSON.stringify(oOrderRecaps));
                    window.location.href = _sBaseAddress + "/OrderRecap/ViewOrderRecaps?OT="+sessionStorage.getItem("OT")+ "&menuid=" + $('#divOR').data('Menuid');//use for Notification
                }
                else {
                    alert(oOrderRecap.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }
    function RefreshObject()
    {
        var oTempOrderRecap = $('#divOR').data('OrderRecap');
        var nTechnicalSheetID  =oTempOrderRecap.TechnicalSheetID;
        var sContactPersonnels = document.getElementById("cboContactPersonnels");
        var nContractorPersonalID=sContactPersonnels.options[sContactPersonnels.selectedIndex].value;
        var sMerchandisers=document.getElementById("cboMerchandiserID");
        var nMerchandiserID=sMerchandisers.options[sMerchandisers.selectedIndex].value;
        var cboSeasons =document.getElementById("cboSeasons");
        var nBusinessSessionID = cboSeasons.options[cboSeasons.selectedIndex].value;
        var scboCurrency =document.getElementById("ddlCurrency");
        var nCurrencyID = scboCurrency.options[scboCurrency.selectedIndex].value;
        var cboMeasurementUnitID = document.getElementById("cboMeasurementUnitID");
        var nMeasurementUnitID=cboMeasurementUnitID.options[cboMeasurementUnitID.selectedIndex].value;
        var cboPaymentTerm= document.getElementById("cboPaymentTerm");
        var sPaymentTerm=cboPaymentTerm.options[cboPaymentTerm.selectedIndex].text;
        var sDeliveryTerm = "";
        if(_sBaseAddress!="/tuli")
        {
            sDeliveryTerm = $('#txtDeliveryTerm').val();
        }

        var nCMValue = 0;
        if(_sBaseAddress==='/hrm')
        {
            nCMValue = parseFloat(icsRemoveComma($('#txtCMValue').val()));
        }

        var oOrderRecap= {
            OrderRecapID : oTempOrderRecap.OrderRecapID,
            OrderTypeInInt : oTempOrderRecap.OrderTypeInInt,
            SLNo:oTempOrderRecap.SLNo,
            BusinessSessionID:nBusinessSessionID,
            OrderRecapStatusInInt : oTempOrderRecap.OrderRecapStatusInInt,
            OrderRecapNo :  $('#txtOrderRecapNo').val(),
            TechnicalSheetID:nTechnicalSheetID,
            PAMID:parseInt($('#cboPAM').val()),
            ProductID : oTempOrderRecap.ProductID,
            CollectionNo : $('#txtCollectionID').val(),
            BuyerID: $('#divOR').data('OrderRecap').BuyerID,
            BuyerContactPersonID:nContractorPersonalID,
            MerchandiserID:nMerchandiserID,
            Incoterms:$('#cboIncoterms').val(),
            TransportType:$('#cboTransportType').val(),
            BoardDate:$('#txtBoardDate').datetimebox('getValue'),
            GG :$('#txtGG').val(),
            Count :$('#txtCount').val(),
            SpecialFinish :$('#txtSpecialFinish').val(),
            Weight :$('#txtWeight').val(),
            AgentID:oTempOrderRecap.AgentID,
            FabricID:oTempOrderRecap.FabricID,
            Description:$('#txtDescription').val(),
            OrderDate : $('#txtOrderDate').datetimebox('getValue'),
            ShipmentDate:$('#txtShipmentDate').datetimebox('getValue'),
            FactoryShipmentDate:$('#txtFactoryShipmentDate').datetimebox('getValue'),
            CurrencyID:nCurrencyID,
            BUID:sessionStorage.getItem("BUID"),
            ApproveBy:0,
            ApproveDate:"",
            CMValue : nCMValue,
            MeasurementUnitID : nMeasurementUnitID,
            ProductionFactoryID: oTempOrderRecap.ProductionFactoryID,
            LocalYarnSupplierID : oTempOrderRecap.LocalYarnSupplierID,
            ImportYarnSupplierID : oTempOrderRecap.ImportYarnSupplierID,
            DeliveryTerm :sDeliveryTerm,
            PaymentTerm : sPaymentTerm,
            RequiredSample : $('#txtRequiredSample').val(),
            PackingInstruction : $('#txtPackingInstruction').val(),
            Assortment : $('#txtAssortment').val(),
            CartonQty: $('#txCartonQty').numberbox('getValue'),
            MachineQty:$('#txtMachineQty').numberbox('getValue'),
            QtyPerCarton: $('#txtQtyPerCarton').numberbox('getValue'),
            AssortmentTypeInt :$('#cboAssortmentType').val(),
            OrderRecapYarns : $('#tblRecapYarn').datagrid('getRows')

        };
        return oOrderRecap;
    }
    function ValidateInput()
    {
        $('#tabOrderRecap').tabs('select', 0);
        var oOrderRecap = $('#divOR').data('OrderRecap');
        var oColorSizeWiseRatios=$('#tblColorSizeWiseRatio').datagrid('getRows')
        if(parseInt(oOrderRecap.TechnicalSheetID)<=0)
        {
            $('#txtStyleNo').focus();
            $('#txtStyleNo').addClass("errorFieldBorder");
            alert('Please Pick Style No');
            return false;
        }else
        {
            $('#txtStyleNo').removeClass("errorFieldBorder");
        }

        if($('#txtOrderRecapNo').val()=="")
        {
            $('#txtOrderRecapNo').focus();
            $('#txtOrderRecapNo').addClass("errorFieldBorder");
            alert('Please Give a Order No');
            return false;
        }else{
            $('#txtOrderRecapNo').removeClass("errorFieldBorder");
        }

        if($('#cboContactPersonnels').val()==0)
        {
            $('#cboContactPersonnels').focus();
            $('#cboContactPersonnels').addClass("errorFieldBorder");
            alert('Please Select a Contact Person For This Buyer');
            return false;
        }else
        {
            $('#cboContactPersonnels').removeClass("errorFieldBorder");
        }

        if($('#cboTransportType').val()=="None")
        {
            $('#cboTransportType').focus();
            $('#cboTransportType').addClass("errorFieldBorder");
            alert('Please Select a Transport Type');
            return false;
        }else
        {
            $('#cboTransportType').removeClass("errorFieldBorder");
        }
        if($('#cboIncoterms').val()=="None")
        {
            $('#cboIncoterms').focus();
            $('#cboIncoterms').removeClass("errorFieldBorder");
            alert('Please Select a Incoterms');
            return false;
        }else
        {
            $('#cboIncoterms').removeClass("errorFieldBorder");
        }

        if($('#cboMerchandiserID').val()==0)
        {
            $('#cboMerchandiserID').focus();
            $('#cboMerchandiserID').addClass("errorFieldBorder");
            alert('Please Select a Merchandiser');
            return false;
        }else
        {
            $('#cboMerchandiserID').removeClass("errorFieldBorder");
        }

        if(parseInt($('#cboPaymentTerm').val())<=0)
        {
            $('#cboPaymentTerm').focus();
            $('#cboPaymentTerm').addClass("errorFieldBorder");
            alert('Please Select a Payment Term!');
            return false;
        }else
        {
            $('#cboPaymentTerm').addClass("errorFieldBorder");
        }

        
        if($('#txtFabricName').val()=="")
        {
         
            $('#txtFabricName').focus();
            $('#txtFabricName').addClass("errorFieldBorder");
            alert('Please Select a Fabric');
            return false;
        }else
        {
            $('#txtFabricName').removeClass("errorFieldBorder");
        }

        if(parseInt(oOrderRecap.FabricID)==0)
        {
            alert('Please Select a Fabric');
            $('#txtFabricName').focus();
            $('#txtFabricName').addClass("errorFieldBorder");
            return false;
        }else
        {
            $('#txtFabricName').removeClass("errorFieldBorder");
        }

        var cboSeasons = document.getElementById("cboSeasons");
        var sSeasons=cboSeasons.options[cboSeasons.selectedIndex].value;
        if(sSeasons==null || parseInt(sSeasons)<=0)
        {
            $('#cboSeasons').focus();
            $('#cboSeasons').addClass("errorFieldBorder");
            alert('Please Select Seasons!');
            return false;
        }else
        {
            $('#cboSeasons').removeClass("errorFieldBorder");
        }

        if(oColorSizeWiseRatios==null || oColorSizeWiseRatios.length<=0)
        {
            alert('Please Add Order Recap Detail');
            $('#tabOrderRecap').tabs('select', 3);
            return false;
        }
        var cboMeasurementUnitID = document.getElementById("cboMeasurementUnitID");
        var nMeasurementUnitID=cboMeasurementUnitID.options[cboMeasurementUnitID.selectedIndex].value;
        if(parseInt(nMeasurementUnitID) <=0)
        {
            $('#tabOrderRecap').tabs('select', 3);
            $('#cboMeasurementUnitID').focus();
            $('#cboMeasurementUnitID').addClass("errorFieldBorder");
            alert('Please Select Unit!');
            return false;
        }else
        {
            $('#cboMeasurementUnitID').removeClass("errorFieldBorder");
        }

        for(var i=0; i< oColorSizeWiseRatios.length; i++)
        {
            if(oColorSizeWiseRatios[i].ColorWiseTotal<=0)
            {
                alert("Please Enter Qty in Color Size Break Down for Color : "+ oColorSizeWiseRatios[i].ColorName);
                $('#tabOrderRecap').tabs('select', 3);
                return false;
            }
            if(oColorSizeWiseRatios[i].UnitPrice==null || parseFloat(oColorSizeWiseRatios[i].UnitPrice)<=0)
            {
                alert("Unit Price Should be Greater than 0 in Color Size Break Down for Color : "+ oColorSizeWiseRatios[i].ColorName);
                $('#tabOrderRecap').tabs('select', 3);
                return false;
            }
        }
        var oColorSizeAssortments =[];
        if($('#cboAssortmentType').val()==0)
        {
             oColorSizeAssortments = $('#tblAssortColorAssortSize').datagrid('getRows');
        }else if($('#cboAssortmentType').val()==1)
        {
            oColorSizeAssortments = $('#tblSolidColorAssortSize').datagrid('getRows');
        }

        if(parseFloat($('#txCartonQty').numberbox('getValue'))>0)
        {
            if($('#tblAssortColorAssortSize').datagrid('getRows').length<=0)
            {
                alert("Please Enter Qty in color Assortment ");
                $('#tabOrderRecap').tabs('select', 1);
                return false;
            }
        }
        if($('#tblAssortColorAssortSize').datagrid('getRows').length>0)
        {
            if(parseFloat($('#txCartonQty').numberbox('getValue'))<=0)
            {
                alert("Please Enter Carton  Qty ");
                $('#tabOrderRecap').tabs('select', 1);
                return false;
            }
        }
        if(oColorSizeAssortments.length>0)
        {
            for(var i=0; i< oColorSizeAssortments.length; i++)
            {
                if(oColorSizeAssortments[i].ColorWiseTotal<=0)
                {
                    alert("Please Enter Qty in Color Size Assortment for Color : "+ oColorSizeAssortments[i].ColorName);
                    $('#tabOrderRecap').tabs('select', 1);
                    return false;
                }
            }
        }
        if($('#cboAssortmentType').val()==2)
        {
            if(parseFloat($('#txtQtyPerCarton').numberbox('getValue'))<=0)
            {
                $('#txtQtyPerCarton').focus();
                alert("Please Enter Qty Per Carton.");
                return false;
            }else
            {
                $('#txtQtyPerCarton').removeClass("errorFieldBorder");
            }
        }

        return true;
    }

    

    function formatPrice(val){
        //

        if(val==null || val=="")
        {
            val=0.00;
        }

        val=parseFloat(val);
        var test = val.toFixed(0);
        var tests = addComma(test);
        return tests;
    }
    function addComma(nStr)
    {
        nStr += '';
        x = nStr.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var process = /(\d+)(\d{3})/;
        while (process.test(x1)) {
            x1 = x1.replace(process, '$1' + ',' + '$2');
        }
        return x1 + x2;
    }

    // Search yarn Catagory  Start
   
    // Search Fabric End


    // Search Style End
    function RefreshStyleImage(nTechnicalSheetID)
    {
        $.ajax({
            cache:true,
            type: "GET",
            url: "@(Url.Action("GetStyleImageInBase64", "TechnicalSheet"))",
            data: "id=" + nTechnicalSheetID,
            success: function (data) {
                $('#imgCoverImage').attr('src', "data:image/jpg;base64," + data.base64imgage );
            }
        });

    }


    function RefreshControl()
    {
        var oBarCodeComments = $('#divOR').data('BarCodeComments');
        RefreshListBarCodeComments(oBarCodeComments);
        var oOrderRecap = $('#divOR').data('OrderRecap');
        var sParamName = sessionStorage.getItem("RecapHeader");
       
        $("#txtFabricName").val(oOrderRecap.FabricName);
        $("#txtProductName").val(oOrderRecap.ProductName);
        $("#txtFactoryName").val(oOrderRecap.FactoryName);
        if(parseInt(oOrderRecap.LocalYarnSupplierID)>0)
        {
            $("#txtLocalYarnSupplierName").val(oOrderRecap.LocalYarnSupplierName);
            $("#txtLocalYarnSupplierName").addClass('fontColorOfPickItem');
        }
        if(parseInt(oOrderRecap.ImportYarnSupplierID)>0)
        {
            $("#txtImportYarnSupplierName").val(oOrderRecap.ImportYarnSupplierName);
            $("#txtImportYarnSupplierName").addClass('fontColorOfPickItem');
        }

        $("#txtBuyerName").val(oOrderRecap.BuyerName);
        $("#txtStyleNo").val( oOrderRecap.StyleNo);
       
        $('#txtTotalQuantity').numberbox('setValue', parseInt(oOrderRecap.TotalQuantity));
        $('#txtTotalOrderQuantity').numberbox('setValue', parseInt(oOrderRecap.TotalQuantity));//set in Solid color Assort Size .
        $('#txtTotalPrice').numberbox('setValue', parseFloat(parseFloat(oOrderRecap.TotalQuantity) * parseFloat(oOrderRecap.UnitPrice)));
       
        $('#txtCMValue').val(parseFloat(oOrderRecap.CMValue));
        $("#txtAgentName").val(oOrderRecap.AgentName);
        $('#cboMerchandiserID').val(oOrderRecap.MerchandiserID);
        $('#cboAssortmentType').val(oOrderRecap.AssortmentTypeInt);
        var nBuyerID= oOrderRecap.BuyerID;
        GetContactPersonnel(nBuyerID);
        LoadPAMs(oOrderRecap.TechnicalSheetID, oOrderRecap.PAMID);
        
        RefreshStyleImage(oOrderRecap.TechnicalSheetID);
        $('#cboPaymentTerm').val(oOrderRecap.PaymentTerm);
        $("#txtFabricName,#txtStyleNo,#txtFactoryName,#txtAgentName").addClass('fontColorOfPickItem');
        if(sParamName=="Edit Order Recap" || sParamName=="Edit Sales Man Sample" || sParamName == "Copy Order Recap" || sParamName =="Copy Sales Man Sample" )
        {
            $('#btnApproved,#btnNotApproved,#btnCopy').hide();
        }
        if(sParamName=="Approved Order Recap" || sParamName=="Approved Sales Man Sample")
        {
            $('#btnSave,#btnCopy').hide();
        }
        if(sParamName=="View Order Recap" || sParamName=="View Sales Man Sample")
        {
            debugger;
            $('#btnSave,#btnCopy,#btnApproved,#btnNotApproved,#btnAdd,#btnDelete,#btnPickYarn,#btnAddRecapYarn,#btnRemoveRecapYarn,#btnAddAssortment,#btnDeleteAssortment,#btnAddBarCode,#btnDeleteBarCode,#btnAddComments,#btnRemoveComments,#btnSaveComments').hide();
            document.getElementById('ddlCurrency').disabled= true;
            document.getElementById("btnStyle").disabled = true;
            document.getElementById("btnProductionFactory").disabled = true;
            document.getElementById("btnFabric").disabled = true;
            document.getElementById("btnAgent").disabled = true;
            document.getElementById("btnConPersonnel").disabled = true;
            $("#txtDescription,#txtBoardDate,#txtDemandQuantity,#cboIncoterms,#cboTransportType,#cboMerchandiserID,#txtShipmentDate,#txtOrderDate,#cboSeasons,#txtOrderRecapNo,#cboContactPersonnels,#txtCollectionID").attr("disabled", "disabled");
            $("#btnProduct,#txtRequiredSample,#txtAssortment,#txtDeliveryTerm,#txtPackingInstruction,#cboPaymentTerm,#txtWeight,#txtSpecialFinish,#txtCount,#txtCMValue,#txtGG").attr("disabled", "disabled");
        }
        if(sParamName=="Add Order Recap" || sParamName=="Add Sales Man Sample")
        {
            $("#txtFabricName,#txtProductName,#txtBuyerName,#txtStyleNo").val("");
            $('#btnApproved,#btnNotApproved,#btnCopy').hide();
        }
        if(sParamName == "Copy Order Recap" || sParamName == "Copy Sales Man Sample")
        {
            $('#btnSave').hide();
            $('#btnCopy').show();

        }
        $("#cboMeasurementUnitID").val(oOrderRecap.MeasurementUnitID);
    }
    function RefreshControlLayout()
    {
        $('#txtCMValue,#lblCMValue').hide();
        if(_sBaseAddress==='/hrm')
        {
            if(!PermissionChecker('ViewCMValue','OrderRecap',_oAuthorizationRolesMapping)){$('#txtCMValue,#lblCMValue').hide();}
            else{$('#txtCMValue,#lblCMValue').show();}
        }
    }
    var editICIndex = undefined;
    function endEditingIC(){
        if (editICIndex == undefined){return true}
        if ($('#tblBarCodeComments').datagrid('validateRow', editICIndex)){

            $('#tblBarCodeComments').datagrid('endEdit', editICIndex);
            editICIndex  = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRowIC(index){
        if (editICIndex != index){
            if (endEditingIC())
            {
                $('#tblBarCodeComments').datagrid('selectRow', index)
                        .datagrid('beginEdit', index);
                editICIndex  = index;
            }
            else
            {
                $('#tblBarCodeComments').datagrid('selectRow', editICIndex);
            }
        }
    }



    function AddComments()
    {
        var oOrderRecap = $('#divOR').data('OrderRecap');
        if(oOrderRecap==null || parseInt(oOrderRecap.OrderRecapID)<=0)
        {
            alert("Please first off all save Order Recap!");
            return;
        }

        var oBarCodeComment = {
            BarCodeCommentID : 0,
            OrderRecapID : parseInt(oOrderRecap.OrderRecapID),
            Comments : ""

        };

        var oBarCodeComments= $('#tblBarCodeComments').datagrid('getRows');
        var nIndex=oBarCodeComments.length;

        $('#tblBarCodeComments').datagrid('appendRow',oBarCodeComment);
        $('#tblBarCodeComments').datagrid('selectRow', nIndex);
    }
    function RemoveComments()
    {
        var oBarCodeComment= $('#tblBarCodeComments').datagrid('getSelected');
        if(oBarCodeComment==null || parseInt(oBarCodeComment.OrderRecapID)<=0)
        {
            alert("Invalid Comments!!! please select a valid Comments!");
            return false;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblBarCodeComments').datagrid('getRowIndex',oBarCodeComment);
        $('#tblBarCodeComments').datagrid('deleteRow',SelectedRowIndex);


    }
    function RefreshListBarCodeComments(oBarCodeComments)
    {
        data=oBarCodeComments;
        data={"total":""+data.length+"","rows":data};
        $('#tblBarCodeComments').datagrid('loadData',data);
    }

    function RefreshComments()
    {
        endEditingIC();
        var oBarCodeComments= $('#tblBarCodeComments').datagrid('getRows');
        data=oBarCodeComments;
        data={"total":""+data.length+"","rows":data};
        $('#tblBarCodeComments').datagrid('loadData',data);
    }


    function SaveComments()
    {
        endEditingIC();
        var oBarCodeComments= $('#tblBarCodeComments').datagrid('getRows');

        if(oBarCodeComments.length<=0)
        {
            alert("Please enter atleast one Comments!");
            return;
        }
        var oOrderRecap = {
            OrderRecapID : parseInt($('#divOR').data('OrderRecap').OrderRecapID),
            BarCodeComments : oBarCodeComments
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/OrderRecap/SaveBarCodeCommets",
            traditional: true,
            data:  JSON.stringify(oOrderRecap),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //
                var oTempBarCodeComments = jQuery.parseJSON(data);
                if (oTempBarCodeComments!=null)
                {
                    if(oTempBarCodeComments.length>0)
                    {
                        if(oTempBarCodeComments[0].ErrorMessage=="")
                        {
                            alert("Data Save Successfully.");
                        }
                        else
                        {
                            alert(oTempBarCodeComments[0].ErrorMessage);
                        }
                    }
                    else
                    {
                        alert("Invalid Operation!");
                    }
                }
                else {
                    alert("Invalid Operation!");
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    
    $('#linkOrderSummary').click(function(){
        debugger;
        var oOrderRecap = $('#divOR').data('OrderRecap');
        if(parseInt(oOrderRecap.OrderRecapID)<=0)
        {
            alert("Sorry, There is No Order Recap.");
            return;
        }
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href =_sBaseAddress+  "/OrderSummary/ViewOrderSummary?id="+parseInt(oOrderRecap.OrderRecapID)+'&buid='+sessionStorage.getItem('BUID')+'&menuid=0';
    });

    //start price format
    function formatPriceForsizeAssortment(val, row) {
        //
        if (val == null || parseFloat($('#txtQtyPerCarton').numberbox('getValue'))==0)
        {
            return val = 0.0;
        }
        val = parseFloat(parseFloat(val) / parseFloat($('#txtQtyPerCarton').numberbox('getValue')));
        val = Math.ceil(val);
        var test = val.toFixed(0);
        var tests = addComma(test);
        return tests;
    }

    $(document).keydown(function(e) {
        //
        if(e.which == 27)//escape=27
        {
            //
            window.close();
        }
    });


</script>