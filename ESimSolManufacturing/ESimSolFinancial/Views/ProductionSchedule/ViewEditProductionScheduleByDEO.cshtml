<html>
<body>
    <head>
        <link href="@Url.Content("~/Content/CSS/icon.css")" rel="stylesheet" type="text/css" />
        <link href="@Url.Content("~/Content/CSS/easyui.css")" rel="stylesheet" type="text/css" />
        <link href="@Url.Content("~/Content/CSS/Pikerstyle.css")" rel="stylesheet" type="text/css" />
        <script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Scripts/jquery.ics.customize.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Scripts/jquery.easyui.min.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Scripts/jquery-ui.min.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Scripts/json2.js")" type="text/javascript"></script>
    </head>
    @model ESimSol.BusinessObjects.ProductionSchedule
    <div style="font-family: Tahoma">
        <table border="0" cellspacing="2" cellpadding="2">
            <tr>
                <td style="background-color: #CFB53B; text-align: center; width: 800px; color: white">
                    <label id="lblHeaderName" style="font-size: 15px; color: white; font-weight: bold;
                        text-decoration: Underline">
                        Production Schedule
                    </label>
                </td>
            </tr>
        </table>
        <br />
        <div>
            <div style="font-family: Arial; font-size: 12px;">
                <div style="padding-left: 10px; padding-right: 10px; padding-top: 10px;">
                    <table style="font-size: 12px;">
                        <tr>
                            <td>
                                <div>
                                    <div style="padding-left: 5px;">
                                        <div style="float: left; width: 70px;">
                                            Start Time
                                        </div>
                                        <div style="float: left; width: 280px;">
                                            @*<input id="txtStartDate" type="text" class="easyui-datetimebox" data-options=" required:true, showSeconds:false"
                                                style="width: 180px;" />*@<span>
                                                <select id="cboYear"></select>
                                            </span><span>
                                                <select id="cboMonth"></select>
                                            </span><span>
                                                <select id="cboDay"></select>
                                            </span><span>
                                                <select id="cboHour"></select>
                                            </span><span>
                                                <select id="cboMinute"></select>
                                            </span>
                                        </div>
                                        <div style="float: left; padding-left: 50px; width: 70px;">
                                            <div style="float: right; padding-right: 10px;">End time</div> 
                                        </div>
                                        <div style="float: left; width: 280px;">
                                            @*<input id="txtEndDate" type="text" class="easyui-datetimebox" data-options=" required:true, showSeconds:false"
                                                style="width: 180px;" />*@<span>
                                                <select id="cboEndYear"></select>
                                            </span><span>
                                                <select id="cboEndMonth"></select>
                                            </span><span>
                                                <select id="cboEndDay"></select>
                                            </span><span>
                                                <select id="cboEndHour"></select>
                                            </span><span>
                                                <select id="cboEndMinute"></select>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div style="padding-top: 10px;">
                                    <span style="padding-left:75px;">
                                        <input type="button" id="btnScheduleLastTime" value="Default Time" style="font-size: 11px; width: 80px;" />
                                    </span><span>
                                        <input type="button" id="btnCurrenttime" value="Current Time" style="font-size: 11px; width: 80px;" />
                                    </span><span>
                                        <input id="timeSpinner" class="easyui-timespinner" style="width: 75px; font-size:11px;" required="required"
                                               data-options="showSeconds:false" />
                                    </span>
                                    <span>
                                        <input type="button" id="btnAddSpinnerTime" value="Add" style="font-size: 11px; width: 30px;" />
                                    </span>

                                    <span style="padding-left:15px; font-size:11px; padding-right:10px;">Location</span><input type="text" style="font-size: 11px; width:100px;" id="txtLocationName" readonly />
                                    <span style="padding-left:15px; font-size:11px; padding-right:10px;">Machine No</span><input type="text" id="txtMachineName" style="font-size: 11px; width:120px;" readonly />
                                    <button onclick="ChangeLocationMachine()" style="font-size:11px; width:22px;">P</button> 
                            </td>
                        </tr>
                    </table>
                </div>
                <div style="padding-top: 10px; height: 10px;">
                </div>
                <div style="padding-top: 10px;">
                    <div style="padding-left: 11px; padding-right: 10px; padding-top: 10px;">
                        <table id="tblProductionScheduleDetail" title="Production Schedule Detail" class="easyui-datagrid"
                               style="width: 775px; height: 200px;" fitcolumns="false" rownumbers="true" pagination="false"
                               singleselect="true" autorowheight="false" toolbar="#toolbar" data-options="singleSelect: true, fitColumns:false, rownumbers:true,pagination:false, autoRowHeight:false,toolbar: '#toolbar',onClickRow: onClickRow ">
                            <thead>
                                <tr>
                                    <th field="OrderNo" width="120" align="left">
                                        Order No
                                    </th>
                                    <th field="BuyerName" width="150" align="left">
                                        Buyer Name
                                    </th>
                                    <th field="ProductName" width="180" align="left">
                                        Product Name
                                    </th>
                                    <th field="ColorName" width="130" align="left">
                                        Color Name
                                    </th>
                                    <th min-width="120" align="right" data-options="field:'YetToProductionQty',formatter:formatPrice">
                                        Yet To Production Qty
                                    </th>
                                    <th min-width="120" align="right" data-options="field:'WaitingForProductionQty',formatter:formatPrice">
                                        Already Scheduled
                                    </th>
                                    <th min-width="120" align="right" data-options="field:'RemainingScheduleQuantity',formatter:formatPrice">
                                        Yet To Schedule
                                    </th>
                                    <th data-options="field:'ProductionQty',width:120,align:'right',editor:{type:'numberbox',options:{precision:2}},formatter:formatPrice"
                                        align="right">
                                        Scheduled Quantity
                                    </th>
                                    <th data-options="field:'Remarks',width:200,align:'right',editor:{type:'text'}" align="left">
                                        Remarks
                                    </th>
                                </tr>
                            </thead>
                        </table>

                        <div id="toolbar">
                        </div>
                    </div>
                </div>
                <div style="float: right;">
                    <div style="padding-right: 12px;">
                        Total Quantity: &nbsp
                        <label id="lblTotalQuantity" style="width: 144px;" readonly />
                    </div>
                    <div style="padding-top: 5px; padding-right: 10px;">
                        <div style="float: right;">
                            <div style="float: left">
                                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true"
                                   onclick="Save()">Save</a>
                            </div>
                            <div style="float: left">
                                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true"
                                   onclick="Close()">Close</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
<script type="text/javascript">

    var _value ="";
    var _sBaseAddress="";
    var _oUnit=[];
    var _oProductionSchedule;
    var _oLocation=[] ;
    var _oDyeMachine=[];
    var obj=window.dialogArguments;
    var _nProductionScheduleID;
    var _oMachineLocation;
    var _nPSSID;
    var _nLocationID;
    var _flag=0;
    var _nRemoveFlag=0;
    var _nCount=0;



    $(document).ready(function () {
        debugger;
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oProductionSchedule =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oLocation=  @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.LocationList));
        _oDyeMachine=  @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.DyeMachineList));
        _nCount= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Count));
        _nProductionScheduleID=_oProductionSchedule.ProductionScheduleID;
        _nLocationID=_oProductionSchedule.LocationID;
        _nPSSID=_oProductionSchedule.PSSID;

        //$('#txtStartDate').datetimebox('setValue',_oProductionSchedule.StartTimeInString);
        //$('#txtEndDate').datetimebox('setValue', _oProductionSchedule.EndTimeInString);
        SetDateTime();
        SetStartTime(new Date(_oProductionSchedule.StartTimeInString));
        SetEndTime(new Date(_oProductionSchedule.EndTimeInString));
        SetSpinnerValue(new Date(_oProductionSchedule.StartTimeInString),new Date(_oProductionSchedule.EndTimeInString));
        document.getElementById('txtLocationName').value=_oProductionSchedule.LocationName;
        document.getElementById('txtMachineName').value=_oProductionSchedule.MachineName;

        data=_oProductionSchedule.ProductionScheduleDetailList;
        data={"total":""+data.length+"","rows":data};
        $('#tblProductionScheduleDetail').datagrid('loadData',data);
        $('#tblProductionScheduleDetail').datagrid({selectOnCheck:false, checkOnSelect:false});


        newTotalQuantity();



    });

    
    function SetDateTime()
    {
        var oDate=new Date();

        /*---------------------------------------- Start Set Year-------------------------------------------*/
        var sYear="";
        sYear +="<option value='0'>"+'Year'+"</option>";
        for(var i=0; i<=10; i++)
        {
            sYear += "<option value='" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"'>" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"</option>";
        }
        $('#cboYear').html(sYear);
        $('#cboEndYear').html(sYear);
        /*---------------------------------------- End Set Year-------------------------------------------*/


        /*---------------------------------------- Start Set Month-------------------------------------------*/
        var sMonth="";
        var oMonths=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];
        sMonth +="<option value='0'>"+'Month'+"</option>";
        for(var i=0; i<oMonths.length; i++)
        {
            sMonth += "<option value='" +(parseInt(i)+1)+"'>" + oMonths[i] +"</option>";
        }
        $('#cboMonth').html(sMonth);
        $('#cboEndMonth').html(sMonth);
        /*---------------------------------------- End Set Month-------------------------------------------*/


        /*---------------------------------------- Start Set Date-------------------------------------------*/
        var sDay ="<option value='0'>"+'Day'+"</option>";
        $('#cboDay').html(sDay);
        $('#cboEndDay').html(sDay);
        /*---------------------------------------- End Set Date-------------------------------------------*/


        /*---------------------------------------- Start Set Hour-------------------------------------------*/
        var sHour="";
        sHour +="<option value='-1'>"+'hh'+"</option>";
        for(var i=0; i<24; i++)
        {
            if(i<10)
            {
                sHour += "<option value='" +i+"'>" + '0'+i+"</option>";
            }
            else
            {
                sHour += "<option value='" +i+"'>" + i+"</option>";
            }
        }
        $('#cboHour').html(sHour);
        $('#cboEndHour').html(sHour);
        /*---------------------------------------- End Set hour-------------------------------------------*/


        /*---------------------------------------- Start Set Minute-------------------------------------------*/
        var sMinute="<option value='-1'>"+'mm'+"</option>";
        $('#cboMinute').html(sMinute);
        $('#cboEndMinute').html(sMinute);
        /*---------------------------------------- End Set Minute-------------------------------------------*/

    }


 
    $('#cboYear').change(function(e)
    {
        var nYear=$('#cboYear').val();
        var nMonth=$('#cboMonth').val();
        if(nYear>0 && nMonth>0)
        {
            $('#cboDay').html(SetDateEvent(nYear, nMonth));
        }

    });

    $('#cboEndYear').change(function(e)
    {
        var nYear=$('#cboEndYear').val();
        var nMonth=$('#cboEndMonth').val();
        if(nYear>0 && nMonth>0)
        {
            $('#cboEndDay').html(SetDateEvent(nYear, nMonth));
        }

    });

    $('#cboMonth').change(function(e)
    {
        var nYear=$('#cboYear').val();
        var nMonth=$('#cboMonth').val();
        if(nYear>0 && nMonth>0)
        {
            $('#cboDay').html(SetDateEvent(nYear, nMonth));
        }

    });

    $('#cboEndMonth').change(function(e)
    {

        var nYear=$('#cboEndYear').val();
        var nMonth=$('#cboEndMonth').val();
        if(nYear>0 && nMonth>0)
        {
            $('#cboEndDay').html(SetDateEvent(nYear, nMonth));
        }

    });

    function SetDateEvent(nYear, nMonth)
    {

        var oDate=new Date();
        var sDay="";
        if( parseInt(nMonth)>0)
        {
            var nDay= new Date(parseInt(nYear), parseInt(nMonth), 0).getDate();
            sDay +="<option value='0'>"+'Day'+"</option>";
            for(var i=1; i<=parseInt(nDay); i++)
            {
                if(i<10)
                {
                    sDay += "<option value='" +i+"'>" + '0'+i +"</option>";
                }
                else
                {
                    sDay += "<option value='" +i+"'>" + i +"</option>";
                }
            
            }
        }
        return sDay;
    }





    $('#cboHour').change(function(e) 
    {
        if($('#cboHour').val()>=0)
        {
            $('#cboMinute').html(SetMinuteEvent());
        }

    });

    $('#cboEndHour').change(function(e) 
    {
        if($('#cboEndHour').val()>=0)
        {
            $('#cboEndMinute').html(SetMinuteEvent());
        }

    });

    function SetMinuteEvent()
    { 
        var sMinute="";
        sMinute +="<option value='-1'>"+'mm'+"</option>";
        for(var i=0; i<=60; i++)
        {
            if(i<10)
            {
                sMinute += "<option value='" +i+"'>" +'0'+ i+"</option>";
            }
            else
            {
                sMinute += "<option value='" +i+"'>" + i+"</option>";
            }
        
        }
        return sMinute;
    }

    $('#cboMinute').change(function(e) 
    {
        if($('#cboMinute').val()==60)
        {
            var nHour=$('#cboHour').val();
            nHour=parseInt(nHour)+1;
            $('#cboHour').val(nHour);
            $('#cboMinute').val(0);
        }

    });

    $('#cboEndMinute').change(function(e) 
    {
        if($('#cboEndMinute').val()==60)
        {
            var nHour=$('#cboEndHour').val();
            nHour=parseInt(nHour)+1;
            $('#cboEndHour').val(nHour);
            $('#cboEndMinute').val(0);
        }

    });

    function SetStartTime(oDate)
    {
        debugger;
        var nyear=oDate.getFullYear();
        var nmonth=oDate.getMonth()+1;
        var nday=oDate.getDate();
        var nhour=oDate.getHours();
        var nminutes=oDate.getMinutes();
        $('#cboYear').val(nyear);
        $('#cboMonth').val(nmonth); 
        $('#cboDay').html(SetDateEvent(nyear,nmonth)); 
        $('#cboDay').val(nday); 
        $('#cboHour').val(nhour); 
        $('#cboMinute').html(SetMinuteEvent()); 
        $('#cboMinute').val(nminutes); 
    }

    function SetEndTime(oDate)
    {
        debugger;
        var nyear=oDate.getFullYear();
        var nmonth=oDate.getMonth()+1;
        var nday=oDate.getDate();
        var nhour=oDate.getHours();
        var nminutes=oDate.getMinutes();
        $('#cboEndYear').val(nyear);
        $('#cboEndMonth').val(nmonth); 
        $('#cboEndDay').html(SetDateEvent(nyear,nmonth)); 
        $('#cboEndDay').val(nday); 
        $('#cboEndHour').val(nhour); 
        $('#cboEndMinute').html(SetMinuteEvent()); 
        $('#cboEndMinute').val(nminutes); 
    }


    function SetSpinnerValue(oSDate,oEDate)
    {
        var nSeconds= Math.round(oEDate-oSDate)/1000;
        var nMinutes= Math.round(nSeconds)/60;
        var nHour=0;
        if(nMinutes>59)
        {
            nHour= parseInt(nMinutes/60);
            var nTempMinutes= nMinutes-(nHour*60);
            if(nTempMinutes==59)
            {
                nHour= parseInt(nHour)+1;
                nMinutes=0;
            }
            else
            {
                nMinutes= nMinutes-(nHour*60);
            }
        }
        else if(nMinutes==59)
        {
            nHour=1;
            nMinutes=0;
        }
        var sHour="", sMinutes="";
        if(nHour<10)
        {
            sHour='0'+nHour;
        }
        else
        {
            sHour=nHour;
        }
        if(nMinutes<10)
        {
            sMinutes='0'+nMinutes;
        }
        else
        {
            sMinutes=nMinutes;
        }
        var sHourMinute=sHour+':'+sMinutes;
        $('#timeSpinner').timespinner('setValue', sHourMinute); 
    }

    function ValidationOfStartTime()
    {
        if($('#cboYear').val()==0)
        {
            alert("Please select a year of start time.");
            return false;
        }
        if($('#cboMonth').val()==0)
        {
            alert("Please select a month of start time.");
            return false;
        }
        if($('#cboDay').val()==0)
        {
            alert("Please select a day of start time.");
            return false;
        }
        if($('#cboHour').val()==-1)
        {
            alert("Please select hour of start time.");
            return false;
        }
        if($('#cboMinute').val()==-1)
        {
            alert("Please select minute of start time.");
            return false;
        }
        return true;
    }

    function GenerateStartTimeInString()
    {
        var sDate=  $('#cboMonth').val() +'/'+ $('#cboDay').val() +'/'+ $('#cboYear').val() + ' '+ $('#cboHour').val() +':'+ $('#cboMinute').val();
        return sDate;
    }

    function GenerateEndTimeInString()
    {

        var sDate=  $('#cboEndMonth').val() +'/'+ $('#cboEndDay').val() +'/'+ $('#cboEndYear').val() + ' '+ $('#cboEndHour').val() +':'+ $('#cboEndMinute').val();
        return sDate;
    }
    $('#btnAddSpinnerTime').click(function(e)
    {
        if(ValidationOfStartTime())
        {

            AddTime(GenerateStartTimeInString());
        }
    });
    //$('#timeSpinner').keydown(function (e) {

    //    var code = (e.keyCode ? e.keyCode : e.which);
    //    if (code == 13)//Enter key-13
    //    {
    //        if(ValidationOfStartTime())
    //        {
    //            AddTime(GenerateStartTimeInString());
    //        }
    //    }

    //}); 

    function AddTime(sDate)
    {
        var nhr=$('#timeSpinner').timespinner('getHours');
        var nmin=$('#timeSpinner').timespinner('getMinutes');
        if(isNaN(nhr))
        {
            nhr=0;
        }
        if(isNaN(nmin))
        {
            nmin=0;
        }

        var oDate=new Date(sDate);
        oDate.setHours(oDate.getHours()+nhr);
        oDate.setMinutes(oDate.getMinutes()+nmin);

        var nyear=oDate.getFullYear();
        var nmonth=oDate.getMonth()+1;
        var nday=oDate.getDate();
        var nhour=oDate.getHours();
        var nminutes=oDate.getMinutes();

        $('#cboEndYear').val(nyear);
        $('#cboEndMonth').val(nmonth); 
        $('#cboEndDay').html(SetDateEvent(nyear,nmonth)); 
        $('#cboEndDay').val(nday); 
        $('#cboEndHour').val(nhour); 
        $('#cboEndMinute').html(SetMinuteEvent()); 
        $('#cboEndMinute').val(nminutes); 
      
    }


    function dateTimeValidation()
    {
        if(ValidationOfStartTime())
        {
            var sStartTime= new Date(GenerateStartTimeInString());
            var sEndTime= new Date(GenerateEndTimeInString());

            if(new Date()>new Date(GenerateStartTimeInString()))
            {
                alert("Date time must be greater than current date time.");
                return false;
            }

            if(new Date(GenerateStartTimeInString())>=new Date(GenerateEndTimeInString()))
            {
                alert("End date time must be greater than start date time.");
                return false;
            }
            return true;
        }
        else
        {
            return false;
        }

    }


    //function AddTime()
    //{
    //    debugger;

    //    document.getElementById("txtEndDate").disabled= true;

    //    var nhr=$('#timeSpinner').timespinner('getHours');
    //    var nmin=$('#timeSpinner').timespinner('getMinutes');
    //    if(isNaN(nhr))
    //    {
    //        nhr=0;
    //    }
    //    if(isNaN(nmin))
    //    {
    //        nmin=0;
    //    }

    //    var sStartDate=$("#txtStartDate").datetimebox('getValue');
    //    var snewDateTime=new Date(sStartDate);
    //    var nyear=snewDateTime.getFullYear();
    //    var nmonth=snewDateTime.getMonth()+1;
    //    var nday=snewDateTime.getDate();
    //    var nhour=snewDateTime.getHours();
    //    var nminutes=snewDateTime.getMinutes();

    //    nhour=Number(nhour)+Number(nhr);
    //    nminutes=Number(nminutes)+Number(nmin);
    //    var newStartDate=nmonth +'/'+ nday +'/'+ nyear +' '+ nhour +':'+nminutes;
    //    $("#txtEndDate").datetimebox('setValue',newStartDate);
    //    document.getElementById("txtEndDate").disabled= true;

    //}




    //function dateTimeValidation()
    //{

    //    var sStartTime= $('#txtStartDate').datetimebox('getValue');
    //    var sEndTime= $('#txtEndDate').datetimebox('getValue');

    //    var currnetDateTime=new Date();
    //    var nyear=currnetDateTime.getFullYear();
    //    var nmonth=currnetDateTime.getMonth()+1;
    //    var nday=currnetDateTime.getDate();
    //    var nhour=currnetDateTime.getHours();
    //    var nminutes=currnetDateTime.getMinutes();

    //    if(nhour<10)
    //    {
    //        nhour='0'+nhour;
    //    }
    //    if(nminutes<10)
    //    {
    //        nminutes='0'+nminutes;
    //    }

    //    var newStartDate=nmonth +'/'+ nday +'/'+ nyear +' '+ nhour +':'+nminutes;

    //    if(newStartDate>sStartTime)
    //    {
    //        alert("Date time must be greater than current date time.");
    //        return false;
    //    }

    //    if(sEndTime<=sStartTime)
    //    {
    //        alert("End date time must be greater than start date time.");
    //        return false;
    //    }



    //    return true;

    //}

    $('#btnCurrenttime').click(function(e)
    {
        var oDate=new Date();
        oDate.setMinutes(oDate.getMinutes()+5);
        SetStartTime(oDate);
        AddTime(GenerateStartTimeInString());
    });

    $('#btnScheduleLastTime').click(function(e)
    {
        SetLastScheduleTime();
    });


    function SetLastScheduleTime()
    {

        if(parseInt(_nPSSID)>0 && parseInt(_nLocationID)>0)
        {
            var nts=(new Date()).getTime()/1000;
            $.ajax({
                type: "GET",
                dataType: "json",
                url: _sBaseAddress + "/ProductionSchedule/GetPSByMachine",
                data: { nMachineID: _nPSSID ,  nLocationID: _nLocationID , nts:nts },
                contentType: "application/json; charset=utf-8",
                success: function(data) 
                {
                    //debugger;
                    _StratTime = jQuery.parseJSON(data);
                    if ($.trim(_StratTime)!='') 
                    {
                        SetStartTime(new Date(_StratTime));
                        AddTime(GenerateStartTimeInString());
                    }
                    else
                    {
                        
                        var oDate=new Date();
                        oDate.setMinutes(oDate.getMinutes()+5);
                        SetStartTime(oDate);
                    }
                },
                error: function(xhr, status, error)
                {
                    alert(error);
                }
            });
        }

    }
    function ChangeLocationMachine()
    {
        var oParameter = new Object();

        oParameter.Name = "Add New Machine";
        var url =_sBaseAddress+ "/ProductionSchedule/ViewMachine";
        _oMachineLocation=window.showModalDialog(url, oParameter,'dialogHeight:400px;dialogWidth:600px;dialogLeft:450;dialogTop:150;center:yes;resizable:no;status:no;scroll:yes');

        document.getElementById("txtLocationName").value=_oMachineLocation.LocationName;
        document.getElementById("txtMachineName").value=_oMachineLocation.DyeMachines.MachineName;
        _flag=1;

    }


    function isNumberKey(evt)
    {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    var editIndex = undefined;
    function endEditing()
    {
        debugger;

        if (editIndex == undefined)
        {
            newTotalQuantity();
            return true;
        }
        if ($('#tblProductionScheduleDetail').datagrid('validateRow', editIndex))
        {

            $('#tblProductionScheduleDetail').datagrid('endEdit', editIndex);

            if(_nRemoveFlag==0)
            {

                SetNewScheduledQuantity(editIndex);
            }
            editIndex = undefined;
            newTotalQuantity();
            return true;
        }
        else
        {
            return false;
        }

    }

    function onClickRow(index)
    {
        debugger;
        _nRemoveFlag=0;
        if (editIndex != index)
        {
            if (endEditing())
            {
                $('#tblProductionScheduleDetail').datagrid('selectRow', index)
                        .datagrid('beginEdit', index);
                editIndex = index;

            }
            else
            {
                $('#tblProductionScheduleDetail').datagrid('selectRow', editIndex);

            }
        }

        newTotalQuantity();

    }


    function newTotalQuantity()
    {
        debugger;
        var oProductionScheduleDetails=$('#tblProductionScheduleDetail').datagrid('getRows');
        var count=0;
        for(var i=0;i<oProductionScheduleDetails.length;i++)
        {
            count=Number(count) + Number(oProductionScheduleDetails[i].ProductionQty);
        }

        document.getElementById("lblTotalQuantity").innerHTML=count.toFixed(2);
    }


    function TotalQuantity()
    {

        debugger;
        var oProductionScheduleDetails=$('#tblProductionScheduleDetail').datagrid('getRows');
        var count=0;
        for(var i=0;i<oProductionScheduleDetails.length;i++)
        {
            count=Number(count) + Number(oProductionScheduleDetails[i].ProductionQty);
            if(oProductionScheduleDetails[i].ProductionQty<1)
            {
                alert("In row number " + (i+1) + ", production quantity must be greater than one.");
                return false;

            }
        }

        document.getElementById("lblTotalQuantity").innerHTML=count.toFixed(2);
        return true;
    }



    function RefreshObject()
    {
        debugger;

        if(! TotalQuantity())
            return;


        var sDateTime=new Date(GenerateStartTimeInString());
        var eDateTime=new Date(GenerateEndTimeInString());

        if(_flag==1)
        {
            _nPSSID = _oMachineLocation.DyeMachines.PSSID;
            _nLocationID = _oMachineLocation.LocationID;
        }


        var oProductionSchedule = {

            ProductionScheduleID  : _nProductionScheduleID,
            ScheduleStability     : _oProductionSchedule.ScheduleStability,
            PSSID                 : _nPSSID,
            BatchNo               : _oProductionSchedule.BatchNoInString,
            BatchNoInString       : _oProductionSchedule.BatchNoInString,
            BatchGroup            : _oProductionSchedule.BatchGroup,
            ScheduleStatus        : _oProductionSchedule.ScheduleStatusInString,
            ScheduleStatusInString: _oProductionSchedule.ScheduleStatusInString,
            LocationID            : _nLocationID,
            ProductionQty         : document.getElementById("lblTotalQuantity").innerHTML,
            ScheduleType          : _oProductionSchedule.ScheduleType,
            StartTime	            : sDateTime,
            EndTime               : eDateTime

        };



        return oProductionSchedule;
    }


    function RefreshObjectProductionScheduleDetails(oProductionScheduleDetails)
    {

        var oScheduleDetails=[];
        for(var i=0; i<oProductionScheduleDetails.length;i++)
        {

            var oProductionScheduleDetail=
                  {

                      ProductionScheduleDetailID :  oProductionScheduleDetails[i].ProductionScheduleDetailID,
                      ProductionScheduleID       :  oProductionScheduleDetails[i].ProductionScheduleID,
                      ProductionTracingUnitID    :  oProductionScheduleDetails[i].ProductionTracingUnitID,
                      WaitingForProductionQty    :  oProductionScheduleDetails[i].WaitingForProductionQty,
                      ProductionQty              :  oProductionScheduleDetails[i].ProductionQty,
                      Remarks                    :  oProductionScheduleDetails[i].Remarks

                  };
            oScheduleDetails.push(oProductionScheduleDetail);

        }
        return oScheduleDetails;


    }


    function ProductionScheduleDetailTable(oProductionScheduleDetails)
    {


        var oScheduleDetails=[];
        for(var i=0; i<oProductionScheduleDetails.length;i++)
        {

            var oProductionScheduleDetail=
                  {
                      ProductionScheduleDetailID : oProductionScheduleDetails[i].ProductionScheduleDetailID,
                      ProductionScheduleID       : oProductionScheduleDetails[i].ProductionScheduleID,
                      ProductionTracingUnitID    : oProductionScheduleDetails[i].ProductionTracingUnitID,
                      OrderNo                    : oProductionScheduleDetails[i].OrderNo,
                      BuyerName                  : oProductionScheduleDetails[i].BuyerName,
                      ProductName                : oProductionScheduleDetails[i].ProductName,
                      ColorName                  : oProductionScheduleDetails[i].ColorName,
                      YetToProductionQty         : oProductionScheduleDetails[i].YetToProductionQty,
                      WaitingForProductionQty    : oProductionScheduleDetails[i].WaitingForProductionQty,
                      ProductionQty              : oProductionScheduleDetails[i].ProductionQty,
                      RemainingScheduleQuantity  : oProductionScheduleDetails[i].RemainingScheduleQuantity

                  };
            oScheduleDetails.push(oProductionScheduleDetail);

        }
        return oScheduleDetails;


    }


    function SetNewScheduledQuantity(editIndex)
    {
        //  OrderNo BuyerName ProductName ColorName YetToProductionQty WaitingForProductionQty ProductionQty RemainingScheduleQuantity


        var oPSD= $('#tblProductionScheduleDetail').datagrid('getRows');



        var oProductionScheduleDetail=
               {

                   ProductionScheduleDetailID : oPSD[editIndex].ProductionScheduleDetailID,
                   ProductionScheduleID       : oPSD[editIndex].ProductionScheduleID,
                   ProductionTracingUnitID    : oPSD[editIndex].ProductionTracingUnitID,
                   OrderNo                    : oPSD[editIndex].OrderNo,
                   BuyerName                  : oPSD[editIndex].BuyerName,
                   ProductName                : oPSD[editIndex].ProductName,
                   ColorName                  : oPSD[editIndex].ColorName,
                   YetToProductionQty         : oPSD[editIndex].YetToProductionQty,
                   WaitingForProductionQty    : oPSD[editIndex].WaitingForProductionQty,
                   ProductionQty              : oPSD[editIndex].ProductionQty,
                   RemainingScheduleQuantity  : oPSD[editIndex].RemainingScheduleQuantity,
                   Remarks                    : oPSD[editIndex].Remarks


               };


        $('#tblProductionScheduleDetail').datagrid('updateRow',{index: editIndex,	row: oProductionScheduleDetail});


    }

    function  ValidationScheduleQuantity(oProductionScheduleDetails)
    {


        for( var i=0; i<oProductionScheduleDetails.length;i++)
        {
            if(Number(oProductionScheduleDetails[i].YetToProductionQty)<(Number(oProductionScheduleDetails[i].WaitingForProductionQty)+Number(oProductionScheduleDetails[i].ProductionQty)))
            {
                var nTemp=(Number(oProductionScheduleDetails[i].YetToProductionQty)-Number(oProductionScheduleDetails[i].WaitingForProductionQty));
                alert (" In Row number "+ (Number(i)+1) + " Scheduled Quantity Must Less Than or Equal "+ nTemp.toFixed(2));
                return false;
            }

        }

        return true;

    }

    function ChangeMessage()
    {
        var sDate=GenerateStartTimeInString();
        var eDate= GenerateEndTimeInString();

        if(_nLocationID != _oProductionSchedule.LocationID || _nPSSID != _oProductionSchedule.PSSID || (new Date(sDate) > new Date(_oProductionSchedule.StartTimeInString)) || (new Date(eDate) > new Date(_oProductionSchedule.EndTimeInString)))
        {
            alert("This schedule is associated with others.\n So all of it information change automatically.");
        }

    }

    debugger;
    function Save()
    {
        debugger;


        if(! dateTimeValidation())
            return;


        endEditing();

        var oProductionSchedule=RefreshObject();

        if(oProductionSchedule==false)
        {
            return;
        }


        var oProductionScheduleDetails=$('#tblProductionScheduleDetail').datagrid('getRows');
        if(! ValidationScheduleQuantity(oProductionScheduleDetails))
            return;

        if( oProductionScheduleDetails.length==null || oProductionScheduleDetails.length<=0)
        {
            alert("Add Production Detail First!!");
            return;
        }


        oProductionSchedule.ProductionScheduleDetailList= RefreshObjectProductionScheduleDetails(oProductionScheduleDetails);

        var oPSDEtails= ProductionScheduleDetailTable(oProductionScheduleDetails);

        if(_nCount>1)
        {
            ChangeMessage();
        }

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/ProductionSchedule/SaveByDEO",
            traditional: true,
            data:  JSON.stringify(oProductionSchedule),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                oProductionSchedule = jQuery.parseJSON(data);
                if (oProductionSchedule.ErrorMessage=="") {

                    alert("Data Saved successfully");
                    debugger;
                    oPSDEtails=oProductionSchedule.ProductionScheduleDetailList;
                    window.returnValue = [oProductionSchedule,oPSDEtails];
                    window.close();


                }
                else {
                    alert(oProductionSchedule.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }


        });

    }


    function Close()
    {
        this.close();
    }

    function formatPrice(val,row)
    {

        if(parseFloat(val))
        {
            val=parseFloat(val);
            var test = val.toFixed(2);
            if (val < 0)
            {
                test=(-1*test);
            }
            var tests = addComma(test);
            if (val < 0)
            {
                return '<span style="color:red;">('+tests+')</span>';
            }
            else
            {
                return tests;
            }
        }

    }

    function addComma(nStr)
    {

        nStr += '';
        x = nStr.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1)) {
            x1 = x1.replace(rgx, '$1' + ',' + '$2');
        }
        return x1 + x2;
    }
</script>
