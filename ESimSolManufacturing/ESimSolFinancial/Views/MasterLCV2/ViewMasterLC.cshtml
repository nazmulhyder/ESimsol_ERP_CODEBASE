<html>
@{
	ViewBag.title = "Master LC V2";
}
<body>
    @model ESimSol.BusinessObjects.MasterLC
    <script src="~/Views/CommonModal/CommonHistoryModal.js"></script>
    @*
                <div ng-show="MLCC.IsSet(2)">
                    <fieldset>
                        <legend>LC Info </legend>
                        <div class="row col-md-12">
                            <div class="col-md-2 text-right"><label class="control-label">Shipment Port:</label></div>
                            <div class="col-md-4 text-left">
                                <input ng-model="MasterLC.ShipmentPort" class="form-control" disabled />
                            </div>
                            <div class="col-md-2 text-right"><label class="control-label">LC Type:</label></div>
                            <div class="col-md-3 text-left">
                                <select class="form-control" ng-model="MasterLC.LCTypeInInt" ng-options="item.id as item.Value for item in LCTypes" ng-class="ChangeLCType()"></select>
                            </div>
                            <div class="col-md-2 text-right"><label class="control-label">D.Charge(%):</label></div>
                            <div class="col-md-2 text-left">
                                <input type="number" ng-model="MasterLC.DiscrepancyCharge" ng-pattern="[0-9]" class="form-control" required />
                            </div>
                        </div>

                        <div class="row col-md-12">
                            <div class="col-md-2 text-right"><label class="control-label">Partial Shipment:</label></div>
                            <div class="col-md-4 text-left">
                                <div class="col-md-5">
                                    <select class="form-control" ng-model="MasterLC.PartialShipmentAllowInInt" ng-options="item.id as item.Value for item in PartialShipmentAllows"></select>
                                </div>
                                <div class="col-md-5 text-right"><label class="control-label">Transshipment:</label> </div>
                                <div class="col-md-5 text-left">
                                    <select class="form-control" ng-model="MasterLC.TransferableInInt" ng-options="item.id as item.Value for item in Transferables"></select>
                                </div>
                            </div>
                            <div class="col-md-2 text-right"><label class="control-label" id="lblDafferdCountFrom">Days Count From:</label></div>
                            <div class="col-md-3 text-left">
                                <select class="form-control" ng-hide="hidDefferedFrom" ng-disabled="DisabledDeferredFrom" ng-model="MasterLC.DeferredFromInInt" ng-options="item.id as item.Value for item in DeferredFroms"></select>
                            </div>
                            <div class="col-md-2 text-right"><label class="control-label" id="lblDysCount">Days Count:</label></div>
                            <div class="col-md-2 text-left"><input type="text" ng-model="MasterLC.DefferedDaysCount" ng-hide="hideDefferedDaysCount" ng-disabled="DisabledDefferedDaysCount" class="form-control" /></div>
                        </div>
                    </fieldset>
                    <div class="ui-grid-top-panel" style="text-align:left;">
                        <button type="button" id="btnAddTermsAndConditon" class="btn btn-default btn-sm" aria-label="right Align" ng-click="AddTermsAndCondition()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Terms And Condition</span></button>
                        <button type="button" id="btnRemoveTermsAndCondition" class="btn btn-default btn-sm" aria-label="right Align" ng-click="RemoveTermsAndCondition()"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Remove</span></button>
                        <button type="button" id="btnRefreshTermsAndCondition" class="btn btn-default btn-sm" aria-label="right Align" ng-click="RefreshTermsAndCondition()"><span class="glyphicon glyphicon-refresh" aria-hidden="true"> Refresh</span></button>
                    </div>
                    <div style="width: 100%; height:340px;" ui-grid="gridOptionsMLCTermsAndCondition" ui-grid-selection ui-grid-edit ui-grid-row-edit ui-grid-cellnav></div>
                </div>
            </section>
        </div>
        <fieldset>
            <legend>Action</legend>
            <div class="row col-md-12 text-right">
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="save()"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"> Save</span> </button>
                <button type="button" id="btnclose" class="btn btn-sm" aria-label="Left Align" ng-click="close()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"> Close</span> </button>
            </div>
        </fieldset>
    </div>*@

    <div class="menuMainCollectionTable">
        <div class="easyui-panel" title="" style="font-family:Tahoma; text-align:center; height:89%;">
            <div class="easyui-tabs" style="width:100%; height:100%">
                <div id="divMasterLC" title="Master LC" style="font-size:12px; font-style:normal; width:100%">
                    <fieldset style="width:98%; margin-top:2px">
                        <legend>Master LC Info :</legend>
                        <table border="0" cellpadding="1" cellspacing="1" style="width:100%; font-size:12px">
                            <tr>
                                <td style="width: 10%; text-align: right;">File No:</td>
                                <td style="width: 18%; text-align: left;">
                                    <input type="text" style="width:100%" id="txtFileNo" disabled="disabled" />
                                </td>
                                <td style="width: 10%; text-align: right;">LC No:</td>
                                <td style="width: 18%; text-align: left;">
                                    <input type="text" style="width:100%" id="txtLCNo" />
                                </td>
                                <td style="width:10%; text-align: right;">
                                    Applicant :
                                </td>
                                <td style="width: 35%; text-align:left;">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:55%">
                                                <input type="text" style="width:98%" id="txtApplicant" placeholder="Press Enter With Applicant Name" />
                                            </td>
                                            <td style="width:25%; text-align:left">
                                                <input type="button" id="btnApplicantClear" value="C" style="width:32%; text-align:center;" />
                                                <input type="button" id="btnApplicantPicker" onclick="GetBuyers()" value="Pick" style="width:60%; text-align:center;" />
                                            </td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 10%; text-align: right;">Issue Date:</td>
                                <td style="width: 17%; text-align: left;">
                                    <input id="txtIssueDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width: 100%;" />
                                </td>
                                <td style="width: 10%; text-align: right;">Receive Date:</td>
                                <td style="width: 17%; text-align: left;">
                                    <input id="txtReceiveDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width: 100%;" />
                                </td>
                                <td style="width:10%; text-align: right;">
                                    Beneficiary:
                                </td>
                                <td style="width: 35%; text-align:left;">
                                    <select id="cboBeneficiary" style=" width:99.8%;"></select>
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 10%; text-align: right;">Shipment Date:</td>
                                <td style="width: 17%; text-align: left;">
                                    <input id="txtShipmentDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width: 100%;" />
                                </td>
                                <td style="width: 10%; text-align: right;">Expire Date:</td>
                                <td style="width: 17%; text-align: left;">
                                    <input id="txtExpireDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width: 100%;" />
                                </td>
                                <td style="width:10%; text-align: right;">
                                    Issue Bank :
                                </td>
                                <td style="width: 35%; text-align:left;">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:55%">
                                                <input type="text" style="width:98%" id="txtIssueBank" placeholder="Press Enter With Applicant Name" />
                                            </td>
                                            <td style="width:25%; text-align:left">
                                                <input type="button" id="btnIssueBankClear" value="C" style="width:32%; text-align:center;" />
                                                <input type="button" id="btnIssueBankPicker" onclick="GetIssueBank()" value="Pick" style="width:60%; text-align:center;" />
                                            </td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 10%; text-align: right;">Currency :</td>
                                <td style="width: 17%; text-align: left;">
                                    <select id="cboCurrency" style=" width:100%;"></select>
                                </td>
                                <td style="width: 10%; text-align: right;">Amount:</td>
                                <td style="width: 18%; text-align: left;">
                                    <input type="text" style="width:100%" id="txtAmount" />
                                </td>
                                <td style="width:10%; text-align: right;">
                                    Advice Bank:
                                </td>
                                <td style="width: 35%; text-align:left;">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:55%">
                                                <input type="text" style="width:98%" id="txtAdviceBank" placeholder="Press Enter With Bank Account No" />
                                            </td>
                                            <td style="width:25%; text-align:left">
                                                <input type="button" id="btnAdviceBankClear" value="C" style="width:32%; text-align:center;" />
                                                <input type="button" id="btnAdviceBankPicker" onclick="GetAdviceBanks()" value="Pick" style="width:60%; text-align:center;" />
                                            </td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 10%; text-align: right;">LC Status:</td>
                                <td style="width: 18%; text-align: left;">
                                    <input type="text" style="width:100%" id="txtLCStatus" disabled="disabled" />
                                </td>
                                <td style="width:10%; text-align: right;">
                                    Consignee:
                                </td>
                                <td style="width: 15%; text-align:left;">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:55%">
                                                <input type="text" style="width:98%" id="txtConsignee" placeholder="Press Enter With Consignee" />
                                            </td>
                                            <td style="width:25%; text-align:left">
                                                <input type="button" id="btnConsigneeClear" value="C" style="width:32%; text-align:center;" />
                                                <input type="button" id="btnConsigneePicker" onclick="GetConsignee()" value="Pick" style="width:60%; text-align:center;" />
                                            </td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width:10%; text-align: right;">
                                    Notify Party:
                                </td>
                                <td style="width: 15%; text-align:left;">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:55%">
                                                <input type="text" style="width:98%" id="txtNotifyParty" placeholder="Press Enter With Consignee" />
                                            </td>
                                            <td style="width:25%; text-align:left">
                                                <input type="button" id="btnNotifyPartyClear" value="C" style="width:32%; text-align:center;" />
                                                <input type="button" id="btnNotifyPartyPicker" onclick="GetNotifyParty()" value="Pick" style="width:60%; text-align:center;" />
                                            </td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                            <tr>
                                <td style="width:10%; text-align: right;">
                                    Remarks :
                                </td>
                                <td colspan="3" style="width: 45%; text-align:left;">
                                    <input type="text" style="width:100%" id="txtNote" />
                                </td>
                            </tr>
                        </table>
                    </fieldset>

                    <div title="MLC Details" style="padding:0px">
                        <div id="DetailtoolBar">
                            <a id="btnPickOrder" onclick="PickOrder()" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="true">Pick Order</a>
                            <a id="btnRemoveMLCDetail" onclick="RemoveDetail()" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                            <a id="btnRefreshMLCDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-refresh" plain="true">Refresh</a>
                            @*<input type="button" id="btnPickOrder" value="Pick Order" iconcls="icon-pick" onclick="PickOrder()" style="width: 80px; font-size: 12px" />
                            <input type="button" id="btnRemoveMLCDetail" value="Remove" iconcls="icon-remove" onclick="RemoveDetail()" style="width: 80px; font-size: 12px" />
                            <input type="button" id="btnRefreshMLCDetail" value="Refresh" iconcls="icon-refresh" style="width: 80px; font-size: 12px" />*@
                        </div>
                        <table id="tblMasterLCDetail" title="MLC Details" class="easyui-datagrid" style="width:100%; height:215px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#DetailtoolBar">
                            <thead>
                                <tr>
                                    <th field="PINo" width="55">PI No</th>
                                    <th field="PIStatusInString" width="130" align="left">PI Status </th>
                                    <th field="BuyerName" width="130" align="left">Buyer </th>
                                    <th field="PIIssueDateInString" width="78" align="left">Issue Date</th>
                                    <th field="PIQty" width="70" align="right" formatter="formatPricewithoutdecimal"> PI Qty </th>
                                    <th field="Amount" width="70" align="right" formatter="formatPrice4digit">Total Amount</th>
                                </tr>
                            </thead>
                        </table>                        
                    </div>
                </div>
                @*<div title="Terms & Condition with Doc" style="padding:5px; width:100%;height:100%">
                    <div class="easyui-layout" style="width:100%; height:98.5%;">
                        <div data-options="region:'west',title:'Commercial Terms and Condition',split:true" style="width:70%;">
                            <div id="TCtoolbar" style=" height:25px;">
                                <input type="button" id="btnAddTermsAndConditon" value="Pick Term And Condition" style="width:25%; font-size: 12px" />
                                <input type="button" id="btnRemoveTermsAndCondition" value="Remove" style="width:80px; font-size: 12px" />
                                <input type="button" id="btnRefreshTermsAndCondition" value="Refresh" style="width:80px; font-size: 12px" />
                            </div>
                            <table id="tblPITermsAndCondition" title="" class="easyui-datagrid" style="width:100%; height:100%" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#TCtoolbar" data-options="singleSelect: true, fitColumns:false,  rownumbers:true,pagination:false,autoRowHeight:false, onClickRow: onClickRowTC">
                                <thead>
                                    <tr>
                                        <th field="TermsAndCondition" width="590" align="left" data-options="field:'TermsAndCondition',editor:{type:'text',options:{precision:0}}"> Terms & Condition </th>
                                    </tr>
                                </thead>
                            </table>

                        </div>
                        <div data-options="region:'center',title:'Required Documents'">
                            <div id="RDtoolbar" style=" height:25px;">
                                <a id="btnRequiredDocAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                                <a id="btnRequiredDocDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                            </div>
                            <table id="tblPIRequiredDoc" title="" class="easyui-datagrid" style="width:100%; height:100%;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#RDtoolbar">
                                <thead>
                                    <tr>
                                        <th field="DocTypeInString" width="200" align="left">Required Documents</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>*@
            </div>
        </div>
        <fieldset style="height:10%">
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; width: 100%;font-weight: bold; font-size: 12px">
                <tr>
                    <td style="width: 840px; text-align: right"></td>
                    <td style="width: 60px; font-size: 13px">
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                    </td>
                    <td style="width: 60px; font-size: 13px">
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>

<script type="text/javascript">

    $(document).ready(function () {
        debugger;

        var oMasterLC =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oCurrencies =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.Currencies));
        var oBusinessUnits =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.BusinessUnits));
        var oMasterLCDetails = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.MasterLCDetails));
        var oMasterLCTermsAndConditions =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.MasterLCTermsAndConditions));
        var oLCTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.LCTypes));
        var oPartialShipmentAllows = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PartialShipmentAllows));
        var oTransferables = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Transferables));
        var oDeferredFroms = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DeferredFroms));

        oMasterLC.BUID = sessionStorage.getItem('BUID');

        // $('#divMasterLC').data('ApplicantID', oMasterLC.ApplicantID);
        $('#divMasterLC').data('MasterLC', oMasterLC);
        $('#divMasterLC').data('BuyerID', oMasterLC.BuyerID);
        $('#divMasterLC').data('Currencies', oCurrencies);
        $('#divMasterLC').data('BusinessUnits', oBusinessUnits);
        $('#divMasterLC').data('MasterLCDetails', oMasterLCDetails);
        $('#divMasterLC').data('MasterLCTermsAndConditions', oMasterLCTermsAndConditions);
        $('#divMasterLC').data('LCTypes', oLCTypes);
        $('#divMasterLC').data('PartialShipmentAllows', oPartialShipmentAllows);
        $('#divMasterLC').data('Transferables', oTransferables);
        $('#divMasterLC').data('DeferredFroms', oDeferredFroms);

        $('#divMasterLC').data('ProformaInvoices', []);

        RefreshCombobox();
        RefreshControls();
        RefreshControlLayout();
    });

    function RefreshCombobox()
    {        
        var oCurrencies = $('#divMasterLC').data('Currencies');
        var oBusinessUnits = $('#divMasterLC').data('BusinessUnits');

        $("#cboCurrency").icsLoadCombo({List: oCurrencies, OptionValue: "CurrencyID", DisplayText: "CurrencyName"});
        $("#cboBeneficiary").icsLoadCombo({List: oBusinessUnits, OptionValue: "BusinessUnitID", DisplayText: "Name"});        
    }

    function RefreshControls()
    {
        var oMasterLC = $('#divMasterLC').data('MasterLC');
        $('#txtFileNo').val(oMasterLC.FileNo);
        $('#txtLCNo').val(oMasterLC.MasterLCNo);
        $('#txtApplicant').val(oMasterLC.ApplicantName);
        $('#txtIssueDate').datebox('setValue', oMasterLC.MasterLCDateInString);
        $('#txtReceiveDate').datebox('setValue', oMasterLC.ReceiveDateInString);
        $('#cboBeneficiary').val(parseInt(oMasterLC.Beneficiary));
        $('#txtShipmentDate').datebox('setValue', oMasterLC.LastDateofShipment);
        $('#txtExpireDate').datebox('setValue', oMasterLC.ExpireDate);
        $('#txtIssueBank').val(oMasterLC.IssueBank);
        $('#cboCurrency').val(parseInt(oMasterLC.CurrencyID));
        $('#txtAmount').val(oMasterLC.Amount);
        $('#txtAdviceBank').val(oMasterLC.AdviceBank);
        $('#txtLCStatus').val(oMasterLC.LCStatusInString);
        $('#txtConsignee').val(oMasterLC.ConsigneeName);
        $('#txtNotifyParty').val(oMasterLC.NotifyPartyName);
        $('#txtNote').val(oMasterLC.Note);   
        
        RefreshListDetails(oMasterLC.MasterLCDetails);
        //RefreshRequiredDoc(oMasterLC.MasterLCRequiredDocs);
        //RefreshMLCTermsAndCondition(oMasterLC.MasterLCTermsAndConditions);
    }

    function RefreshControlLayout()
    {
        debugger;
        var sMasterLCHeader = sessionStorage.getItem("MasterLCHeader");
        if(sMasterLCHeader === "View Master LC")
        {
            $('#txtIssueDate').datebox('disable');
            $('#txtReceiveDate').datebox('disable');
            $('#txtShipmentDate').datebox('disable');
            $('#txtExpireDate').datebox('disable');
            $("#divMasterLC :input").prop('disabled', true);
            $('#btnSave').hide();
        }
       // $('#txtApplicant,#btnApplicantClear,#btnApplicantPicker,#txtIssueBank,#btnIssueBankClear,#btnIssueBankPicker,#txtAdviceBank,#btnAdviceBankClear,#btnAdviceBankPicker,#txtConsignee,#btnConsigneeClear,#btnConsigneePicker,#txtNotifyParty,#btnNotifyPartyClear,#btnNotifyPartyPicker').prop('disabled',true);
        if (parseInt($('#divMasterLC').data('ClientOperationSetting').ClientOperationSettingID) > 0 && parseInt($('#divMasterLC').data('ClientOperationSetting').Value) == 8)//if applicant format
        {
            $('#txtApplicant,#btnApplicantClear,#btnApplicantPicker,#txtIssueBank,#btnIssueBankClear,#btnIssueBankPicker,#txtAdviceBank,#btnAdviceBankClear,#btnAdviceBankPicker,#txtConsignee,#btnConsigneeClear,#btnConsigneePicker,#txtNotifyParty,#btnNotifyPartyClear,#btnNotifyPartyPicker').prop('disabled', false);
        }
    }

    function RefreshListDetails(oMasterLCDetails)
    {
        data=oMasterLCDetails;
        data={"total":""+data.length+"","rows":data};
        $('#tblMasterLCDetail').datagrid('loadData',data);
    }

    //function RefreshRequiredDoc(oMasterLCRequriedDocs)
    //{
    //    data=oMasterLCRequriedDocs;
    //    data={"total":""+data.length+"","rows":data};
    //    $('#tblPIRequiredDoc').datagrid('loadData',data);
    //}

    //function RefreshMLCTermsAndCondition(oMasterLCTermsAndConditions)
    //{
    //    data=oMasterLCTermsAndConditions;
    //    data={"total":""+data.length+"","rows":data};
    //    $('#tblPITermsAndCondition').datagrid('loadData',data);
    //}

    $('#btnRemoveMLCDetail').click(function(){
        var oMLCDetail =$('#tblMasterLCDetail').datagrid('getSelected');
        if(oMLCDetail==null)
        {
            alert("Select At least One item !");
            return;
        }
        var SelectedRowIndex=$('#tblMasterLCDetail').datagrid('getRowIndex',oMLCDetail);
        if (!confirm("Confirm to Delete?")) return ;
        $('#tblMasterLCDetail').datagrid('deleteRow',SelectedRowIndex);
        RefreshTotal();
    });

    $('#btnRefreshMLCDetail').click(function(){
        endEditing();
        var oMLCDetails = $('#tblMasterLCDetail').datagrid('getRows');
        RefreshListDetails(oMLCDetails);
        RefreshTotal();
    });

    function GetBuyers() {
        var oContractor = { Params: 2 + '~' + $.trim($('#txtApplicant').val()) + '~' + sessionStorage.getItem("BUID") };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {

                    var tblColums = []; var oColumn = { field: "ContractorID", title: "Code", width: 60, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Applicant Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 320, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winBuyers',
                        winclass: 'clsBuyer',
                        winwidth: 700,
                        winheight: 460,
                        tableid: 'tblBuyers',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Buyer List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function GetIssueBank() {

        var oBankBranch = { BankName: $.trim($('#txtIssueBank').val()), BUID: sessionStorage.getItem("BUID"),      DeptIDs: '5' };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oBankBranch,
            ControllerName: "BankBranch",
            ActionName: "GetsBankBranchSearchByBankName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
 
            if (response.status && response.objs.length > 0) {
                debugger;
                if (response.objs[0].BankID>0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "BankName", title: "Bank Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BranchName", title: "Branch Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 320, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winBanks',
                        winclass: 'clsBank',
                        winwidth: 700,
                        winheight: 460,
                        tableid: 'tblBanks',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'BankName',
                        windowTittle: 'Bank List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    $("#txtAdviceBank").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if ($.trim($('#txtAdviceBank').val()) == null || $.trim($('#txtAdviceBank').val()) == "") {
                alert("Please Type Advice Bank Account");
                return;
            }
            GetAdviceBanks();
        } else if (code == 8) //backspace=8
        {
            //debugger;
            var txtAdviceBank = document.getElementById("txtAdviceBank");
            txtAdviceBank.style.color = "black";
            txtAdvicBank.style.fontWeight = "normal";
            $('#divMasterLC').data('AdviceBankIDs', "");
        }
    });

    function GetAdviceBanks() {
        var oAccountNo = { BankNameAccountNo: $.trim($('#txtAdviceBank').val()), BUID: sessionStorage.getItem("BUID") };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oAccountNo,
            ControllerName: "BankAccount",
            ActionName: "GetsBUWithDeptWise",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].BankAccountID > 0) {
                    var tblColums = []; var oColumn = { field: "BankNameAccountNo", title: "Account No", width: 250, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BranchName", title: "Branch Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winAdviceBanks',
                        winclass: 'clsAdviceBank',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblAdviceBanks',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'BankNameAccountNo',
                        windowTittle: 'Advice Bank Account List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            } else {
                alert("Data Not Fount");
                return;
            }
        });
    }

    function GetConsignee() {
        var oContractor = { Params: 2 + '~' + $.trim($('#txtConsignee').val()) + '~' + sessionStorage.getItem("BUID") };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {

                    var tblColums = []; var oColumn = { field: "ContractorID", title: "Code", width: 60, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Applicant Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 320, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winConsignees',
                        winclass: 'clsConsignee',
                        winwidth: 700,
                        winheight: 460,
                        tableid: 'tblConsignees',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Consignee List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function GetNotifyParty() {
        var oContractor = { Params: 2 + '~' + $.trim($('#txtNotifyParty').val()) + '~' + sessionStorage.getItem("BUID") };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {

                    var tblColums = []; var oColumn = { field: "ContractorID", title: "Code", width: 60, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Applicant Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 320, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winNotifyPartys',
                        winclass: 'clsNotifyParty',
                        winwidth: 700,
                        winheight: 460,
                        tableid: 'tblNotifyPartys',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Notify Party List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializePickerbutton(oPickerobj) {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            debugger;
            //for Single Select
            PickerEvents(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                PickerEvents(oPickerobj);
            }
        });
    }

    function PickerEvents(oPickerobj) {
        var oreturnobj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnobj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }

        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winclass == 'clsBuyer') {
            var sBuyerIDs = "";
            if (oPickerobj.multiplereturn) {
                var ncount = 0;
                for (var i = 0; i < oreturnobjs.length; i++) {
                    var nBuyerID = oreturnobjs[i].ContractorID;
                    sBuyerIDs = sBuyerIDs + nBuyerID + ',';
                    ncount++;
                }
                if (ncount > 1) {
                    $('#txtApplicant').val("Select " + ncount + " Buyer's");
                } else {
                    $('#txtApplicant').val(oreturnobjs[0].Name);
                }
                sBuyerIDs = sBuyerIDs.substring(0, sBuyerIDs.length - 1);

            } else {
                $('#txtApplicant').val(oreturnobj.Name);
                sBuyerIDs = "" + oreturnobj.ContractorID + "";
                $('#txtApplicant').focus();
            }
            $('#divMasterLC').data('BuyerIDs', sBuyerIDs);
            var txtApplicantName = document.getElementById("txtApplicant");
            txtApplicantName.style.color = "blue";
            txtApplicantName.style.fontWeight = "bold";
        }
        else if (oPickerobj.winclass == 'clsBank') {
            var sBankIDs = "";
            if (oPickerobj.multiplereturn) {
                var ncount = 0;
                for (var i = 0; i < oreturnobjs.length; i++) {
                    var nBankID = oreturnobjs[i].BankID;
                    sBankIDs = sBankIDs + nBankID + ',';
                    ncount++;
                }
                if (ncount > 1) {
                    $('#txtIssueBank').val("Select " + ncount + " Bank's");
                } else {
                    $('#txtIssueBank').val(oreturnobjs[0].BankName);
                }
                sBankIDs = sBankIDs.substring(0, sBankIDs.length - 1);

            } else {
                $('#txtIssueBank').val(oreturnobj.BankName);
                sBankIDs = "" + oreturnobj.BankID + "";
                $('#txtIssueBank').focus();
            }
            $('#divMasterLC').data('BankIDs', sBankIDs);
            var txtIssueBank = document.getElementById("txtIssueBank");
            txtIssueBank.style.color = "blue";
            txtIssueBank.style.fontWeight = "bold";
        }
        else if (oPickerobj.winclass == 'clsAdviceBank') {
            var nAdviceBankIDs = "";
            if (oPickerobj.multiplereturn) {
                var ncount = 0;
                for (var i = 0; i < oreturnobjs.length; i++) {
                    var nAdviceBankID = oreturnobjs[i].BankAccountID;
                    nAdviceBankIDs = nAdviceBankIDs + nAdviceBankID + ',';
                    ncount++;
                }
                if (ncount > 1) {
                    $('#txtAdviceBank').val("Select " + ncount + " AdviceBank's");
                } else {
                    $('#txtAdviceBank').val(oreturnobjs[0].BankNameAccountNo);
                }
                nAdviceBankIDs = nAdviceBankIDs.substring(0, nAdviceBankIDs.length - 1);
            } else {
                $('#txtAdviceBank').val(oreturnobj.BankNameAccountNo);
                nAdviceBankIDs = "" + oreturnobj.BankAccountID + "";
                $('#txtAdviceBank').focus();
            }
            $('#divMasterLC').data('AdviceBankIDs', nAdviceBankIDs);
            $("#txtAdviceBank").addClass('fontColorOfPickItem');
            var txtAdviceBank = document.getElementById("txtAdviceBank");
            txtAdviceBank.style.color = "blue";
            txtAdviceBank.style.fontWeight = "bold";
        }
        else if (oPickerobj.winclass == 'clsConsignee') {
            var sBuyerIDs = "";
            if (oPickerobj.multiplereturn) {
                var ncount = 0;
                for (var i = 0; i < oreturnobjs.length; i++) {
                    var nBuyerID = oreturnobjs[i].ContractorID;
                    sBuyerIDs = sBuyerIDs + nBuyerID + ',';
                    ncount++;
                }
                if (ncount > 1) {
                    $('#txtConsignee').val("Select " + ncount + " Consignee's");
                } else {
                    $('#txtConsignee').val(oreturnobjs[0].Name);
                }
                sBuyerIDs = sBuyerIDs.substring(0, sBuyerIDs.length - 1);

            } else {
                $('#txtConsignee').val(oreturnobj.Name);
                sBuyerIDs = "" + oreturnobj.ContractorID + "";
                $('#txtConsignee').focus();
            }
            $('#divMasterLC').data('BuyerIDs', sBuyerIDs);
            var txtConsignee = document.getElementById("txtConsignee");
            txtConsignee.style.color = "blue";
            txtConsignee.style.fontWeight = "bold";
        }
        else if (oPickerobj.winclass == 'clsNotifyParty') {
            var sBuyerIDs = "";
            if (oPickerobj.multiplereturn) {
                var ncount = 0;
                for (var i = 0; i < oreturnobjs.length; i++) {
                    var nBuyerID = oreturnobjs[i].ContractorID;
                    sBuyerIDs = sBuyerIDs + nBuyerID + ',';
                    ncount++;
                }
                if (ncount > 1) {
                    $('#txtNotifyParty').val("Select " + ncount + " NotifyParty's");
                } else {
                    $('#txtNotifyParty').val(oreturnobjs[0].Name);
                }
                sBuyerIDs = sBuyerIDs.substring(0, sBuyerIDs.length - 1);

            } else {
                $('#txtNotifyParty').val(oreturnobj.Name);
                sBuyerIDs = "" + oreturnobj.ContractorID + "";
                $('#txtNotifyParty').focus();
            }
            $('#divMasterLC').data('BuyerIDs', sBuyerIDs);
            var txtNotifyParty = document.getElementById("txtNotifyParty");
            txtNotifyParty.style.color = "blue";
            txtNotifyParty.style.fontWeight = "bold";
        }
    }

    $("#btnApplicantClear").click(function () {
        $('#txtApplicant').val('');
        $('#txtApplicant').removeClass('fontColorOfPickItem');
        $('#divMasterLC').data('BuyerIDs', 0);
    });

    $("#btnIssueBankClear").click(function () {
        $('#txtIssueBank').val('');
        $('#txtIssueBank').removeClass('fontColorOfPickItem');
        $('#divMasterLC').data('BankIDs', 0);
    });

    $("#btnAdviceBankClear").click(function () {
        $('#txtAdviceBank').val('');
        $('#txtAdviceBank').removeClass('fontColorOfPickItem');
        $('#txtAdviceBank').data('AdviceBankIDs', 0);
    });

    $("#btnConsigneeClear").click(function () {
        $('#txtConsignee').val('');
        $('#txtConsignee').removeClass('fontColorOfPickItem');
        $('#divMasterLC').data('BuyerIDs', 0);
    });

    $("#btnNotifyPartyClear").click(function () {
        $('#txtNotifyParty').val('');
        $('#txtNotifyParty').removeClass('fontColorOfPickItem');
        $('#divMasterLC').data('BuyerIDs', 0);
    });

    $('#btnPickOrder').click(function () {
        var nBUID = parseInt(sessionStorage.getItem('BUID'));
        var nBuyerID = parseInt($('#divMasterLC').data('BuyerID'));
        var oTempProformaInvoice = $('#divMasterLC').data('MasterLC');

        if (nBUID <= 0) {
            alert('Invalid Business Unit!');
            return;
        }

        if (nBuyerID <= 0) {
            alert('Please select an Buyer!');
            return;
        }

        var oProformaInvoice = {
            BUID: parseInt(nBUID),
            BuyerID: parseInt(nBuyerID),
            ProformaInvoiceID: parseInt(oTempProformaInvoice.ProformaInvoiceID)
        };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oProformaInvoice,
            ControllerName: "ProformaInvoice",
            ActionName: "GetsBuyerWiseOrderRecap",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].OrderRecapID > 0) {
                    var tblColums = []; var oColumn = { field: "StyleNo", title: "Style No", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "OrderRecapNo", title: "Recap No", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BuyerName", title: "Buyer", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "DeptName", title: "Dept", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "SessionName", title: "Session", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Product Name", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShipmentDateInString", title: "Shipment Date", width: 80, align: "center" }; tblColums.push(oColumn);
                    oColumn = { field: "UnitPriceInString", title: "Unit Price", width: 80, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "TotalQuantityInString", title: "Order Qty", width: 100, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "AmountInString", title: "Amount", width: 100, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "PIAttachQty", title: "PI Attach Qty", width: 100, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "YetToAttachQty", title: "Yet To Attach", width: 100, align: "right" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winOrderRecaps',
                        winclass: 'clsOrderRecap',
                        winwidth: 800,
                        winheight: 500,
                        tableid: 'tblOrderRecaps',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'SessionName',
                        searchingbyfieldCaption: 'Search By Season Name',
                        windowTittle: 'Order Recap List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    $('#btnClose').click(function(){
        window.location.href = sessionStorage.getItem("BackLink");
    });
    
    debugger;
    //var MasterLCApp = angular.module('MasterLCApp', ['ngAnimate', 'ui.bootstrap','ui.grid','ui.grid.selection','ui.grid.edit', 'ui.grid.rowEdit','ui.grid.cellNav','ms.service','CommonHistory.service']);
    MasterLCApp.controller('MasterLCController', function ($scope,$http,$uibModal,$log,uiGridConstants,msModal,userSession,msGridControl,commonhistoryservice) {
        debugger;
        $('.date-container').datepicker({
            format: "dd M yyyy",
            calendarWeeks: true,
            autoclose: true,
            todayHighlight: true
        });
        
        
        /*$scope.ProformaInvoices = [];

        $scope.MLCDetailTotalAmount = 0;*/

        

       //Master LC Terms and condition
        $scope.gridOptionsMLCTermsAndCondition = {
            multiSelect: false,
            enableRowSelection: true,
            multiSelect: false,
            //enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,
            columnDefs: [
              { field: 'TermsAndCondition', name:'Terms and condition', width:'90%',enableCellEdit:true  }
            ],
            data:oMasterLCTermsAndConditions,
            onRegisterApi: function (gridApi) {
                $scope.gridApiTermsAndCondition = gridApi;
            }
        };

        $scope.hidDefferedFrom = true;
        $scope.hideDefferedDaysCount = true;
        document.getElementById('lblDafferdCountFrom').innerHTML ='';
        document.getElementById('lblDysCount').innerHTML ='';


        $scope.RefreshDetail = function ()
        {
            $scope.gridOptionsMLCDetail.data =  $scope.gridOptionsMLCDetail.data;
        };
        $scope.AddMasterLCDetail= function ()
        {
            debugger;

            if($scope.ProformaInvoices.length<=0)
            {
                alert("Please Load Proforma Invoice");
                return;
            }
            if(document.getElementById("cboPI").value<=0)
            {
                alert("Please select PI");
                return;
            }

            var oMLCDetails =  $scope.gridOptionsMLCDetail.data;
            for(var i =0;i<$scope.ProformaInvoices.length;i++)
            {

                if($scope.ProformaInvoices[i].ProformaInvoiceID == $("#cboPI").val())
                {

                    if(!ICS_IsExist(oMLCDetails,'ProformaInvoiceID', $scope.ProformaInvoices[i].ProformaInvoiceID))
                    {
                        var oMLCDetail = $scope.ProformaInvoices[i];
                        oMLCDetail.Amount = $scope.ProformaInvoices[i].NetAmount>0?$scope.ProformaInvoices[i].NetAmount:$scope.ProformaInvoices[i].Amount;
                        oMLCDetail.PIStatusInInt = $scope.ProformaInvoices[i].PIStatus;
                        oMLCDetail.PIQty = $scope.ProformaInvoices[i].Quantity;
                        oMLCDetail.PIIssueDateInString =$scope.ProformaInvoices[i].IssueDateInString;
                        oMLCDetail.PIIssueDate = new Date($scope.ProformaInvoices[i].IssueDateInString);
                        $scope.gridOptionsMLCDetail.data.push(oMLCDetail);
                        //$scope.SetTotal();
                        return;

                    }
                }
            }

        };
        $scope.RemoveDetail = function ()
        {
            debugger;
            var oMLCDetail = $scope.gridDetailApi.selection.getSelectedRows()[0];
            if(oMLCDetail==null)
            {
                alert("Select At least One item !");
                return;
            }
            var SelectedRowIndex=$scope.gridOptionsMLCDetail.data.indexOf(oMLCDetail);
            if (!confirm("Confirm to Delete?")) return ;
            $scope.gridOptionsMLCDetail.data.splice(SelectedRowIndex,1);
            //$scope.SetTotal();
        };
        $scope.PIHistory =function ()
        {
            debugger;
            var oProformaInvoice = $scope.gridDetailApi.selection.getSelectedRows()[0];
            if(oProformaInvoice==null || oProformaInvoice.ProformaInvoiceID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(oProformaInvoice.PIStatus<2 )
            {
                alert("There is No Revise History!");
                return;
            }
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/ProformaInvoice/GetProformaInvoiceReviseHistory',$.param(oProformaInvoice), config).then(
                                function (response)
                                {
                                    var results=jQuery.parseJSON(response.data);
                                    var oColumns = [];
                                    var oColumn = { field: 'PINo', name: 'PI No', width: '10%' };
                                    oColumn = { field: 'PIStatusInString', name: 'Status', width: '10%' };oColumns.push(oColumn);
                                    oColumn = { field: 'BuyerName', name: 'Buyer', width: '15%' };oColumns.push(oColumn);
                                    oColumn = { field: 'IssueDateInString', name: 'Issue Date', width: '8%' };oColumns.push(oColumn);
                                    oColumn = { field: 'LCFavorOfName', name: 'LC Favor Of', width: '10%' };oColumns.push(oColumn);
                                    oColumn = { field: 'TransferingBankName', name: 'Transferin Bank', width: '15%' };oColumns.push(oColumn);
                                    oColumn = { field: 'ApprovedByName', name: 'Approved By', width: '15%' };oColumns.push(oColumn);
                                    oColumn = { field: 'Quantity', name: 'Quantity', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, width: '8%' };oColumns.push(oColumn);
                                    oColumn = { field: 'NetAmount', name: 'Total Amount', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, width: '10%' };oColumns.push(oColumn);
                                    var results=jQuery.parseJSON(response.data);
                                    var modalObj={
                                        size:'lg',
                                        appcontroller:'MasterLCController',
                                        //objs:results,
                                        result : results,
                                        multiSelect:false,
                                        showColumnFooter:true,
                                        pickertitle:'PI Revise History List',
                                        objectFieldName:'ProformaInvoiceLogID',
                                        controllerName:'ProformaInvoice',
                                        controlleractionName:'PrintProformaInvoiceLogPreview',
                                        //columns:oColumns
                                        columnDefs : oColumns
                                    }
                                    var modalInstance=commonhistoryservice.Instance(modalObj);

                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message);}
                            );
        };
        $scope.SetTotal = function ()
        {
            debugger;
            var oMLCDetails = $scope.gridOptionsMLCDetail.data;
            var nTotalQty =0;
            var nTotalLCValue = 0;
            if(oMLCDetails.length>0)
            {

                for(var i =0;i<oMLCDetails.length;i++)
                {
                    nTotalQty+=parseFloat(oMLCDetails[i].PIQty);
                    nTotalLCValue+= parseFloat(oMLCDetails[i].Amount);
                    parseFloat(nTotalQty);
                    parseFloat(nTotalLCValue);
                }
            }
            $scope.MasterLC.LCValue = nTotalLCValue;
        };
        $scope.GetTotal = function (){
            debugger;
            var oMLCDetails = $scope.gridOptionsMLCDetail.data;
            var nTotalLCValue = 0;
            if(oMLCDetails.length > 0){
                for(var i = 0; i < oMLCDetails.length; i++){
                    nTotalLCValue += parseFloat(oMLCDetails[i].Amount);
                }
            }
            return nTotalLCValue;
        };

        $scope.AddTermsAndCondition= function ()
        {
            debugger;
            var oExportTermsAndCondition = {
                Note: "1,5", //common and MasterLC Terms
                BUID: sessionStorage.getItem("BUID")
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/ExportTermsAndCondition/GetsByType',$.param(oExportTermsAndCondition), config).then(
                    function (response)
                    {
                        var oColumns = [];
                        var oColumn = { field: 'Clause', name: 'Terms And Condition',width: '70%'  };oColumns.push(oColumn);
                        oColumn = { field: 'Note', name: 'Remarks',width: '30%', enableSorting: false  };oColumns.push(oColumn);
                        var results=jQuery.parseJSON(response.data);
                        var modalObj={
                            size:'md',
                            modalcontroller:'ModalCommonListCtrl',
                            appcontroller:'MasterLCController',
                            objs:results,
                            multiSelect:true,
                            pickertitle:'Applicant List',
                            searchingbyfieldName:'Clause',
                            columns:oColumns
                        }
                        var modalInstance=msModal.Instance(modalObj);
                        modalInstance.result.then(function (result)
                        {
                            debugger;
                            if (result!= null && result.length > 0)
                            {
                                for(var i =0;i<result.length;i++)
                                {
                                    var oMasterLCTermsAndConditions = $scope.gridOptionsMLCTermsAndCondition.data;
                                    if(!ICS_IsExist(oMasterLCTermsAndConditions,'TermsAndCondition', result[i].Clause))
                                    {
                                        var oLCTAndC ={
                                            MasterLCTermsAndConditionID : 0,
                                            MasterLCID : $scope.MasterLC.MasterLCID,
                                            TermsAndCondition : result[i].Clause
                                        };
                                        $scope.gridOptionsMLCTermsAndCondition.data.push(oLCTAndC);
                                    }
                                }
                            }
                        }, function () {
                            $log.info('Modal dismissed at: ' + new Date());
                        });
                    },
                        function (response) { alert(jQuery.parseJSON(response.data).Message);}
                );

        };
        $scope.RemoveTermsAndCondition=  function ()
        {
            debugger;
            //$scope.gridApi.selection.getSelectedRows()[0];
            var oLCTermsAndCondition=$scope.gridApiTermsAndCondition.selection.getSelectedRows()[0];
            if(oLCTermsAndCondition==null)
            {
                alert("Select At least One item !");
                return;
            }
            var SelectedRowIndex= $scope.gridOptionsMLCTermsAndCondition.data.indexOf(oLCTermsAndCondition);
            if (!confirm("Confirm to Delete?")) return ;
            $scope.gridOptionsMLCTermsAndCondition.data.splice(SelectedRowIndex,1);
        };
        $scope.RefreshTermsAndCondition = function ()
        {
            $scope.gridOptionsMLCTermsAndCondition.data =  $scope.gridOptionsMLCTermsAndCondition.data;
        };

        $scope.save = function ()
        {
            debugger;
            if(!$scope.ValidateInput()) return;
            var oMasterLC= $scope.MasterLC;
            oMasterLC.MasterLCDate = new Date(oMasterLC.MasterLCDateSt);
            oMasterLC.ReceiveDate = new Date(oMasterLC.ReceiveDateInString);
            oMasterLC.LastDateofShipment = new Date(oMasterLC.LastDateofShipmentSt);
            oMasterLC.ExpireDate = new Date(oMasterLC.ExpireDateSt);
            oMasterLC.LCStatusInInt = 1;
            oMasterLC.MLCWithOrder = ($scope.gridOptionsMLCDetail.data.length <= 0) ? true : false;
            oMasterLC.MasterLCDetails=$scope.GetMasterLCDetails();
            oMasterLC.MasterLCTermsAndConditions= $scope.gridOptionsMLCTermsAndCondition.data;
            $.ajax({
                type: "POST",
                dataType: "json",
                url : sessionStorage.getItem('BaseAddress')+"/MasterLC/Save",
                traditional: true,
                data:  JSON.stringify(oMasterLC),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //debugger;
                    var oMasterLC= jQuery.parseJSON(data);
                    if (oMasterLC.ErrorMessage=="" || oMasterLC.ErrorMessage==null)
                    {
                        alert("Data Save Successfully!!");
                        var oMasterLCs = sessionStorage.getItem("MasterLCs");
                        var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                        if (oMasterLCs != null) {
                            oMasterLCs = jQuery.parseJSON(oMasterLCs);
                        }
                        else {
                            oMasterLCs = [];
                        }
                        if (nIndex != -1) {
                            oMasterLCs[nIndex] = oMasterLC;
                        }
                        else {
                            sessionStorage.setItem("SelectedRowIndex", oMasterLCs.length);
                            oMasterLCs.push(oMasterLC);
                        }
                        sessionStorage.setItem("MasterLCs", JSON.stringify(oMasterLCs));
                        window.location.href = sessionStorage.getItem("BackLink");
                    }
                    else
                    {
                        alert(oMasterLC.ErrorMessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });

        };

        $scope.ValidateInput =  function ()
        {
            debugger;

            if($scope.MasterLC.MasterLCNo=="") { alert("Please Type Master LC."); return false; }
            if(parseInt($scope.MasterLC.Applicant)<=0) { alert("Please Pick Applicant"); /*$('#txtApplicantName').focus();*/ return false; }
            if(parseInt($scope.MasterLC.Beneficiary) ==0) { alert("Please select Beneficiary"); return false; }
            if(parseInt($scope.MasterLC.IssueBankID)<=0) { alert("Please Pick Issue Bank"); return false; }
            if(parseInt($scope.MasterLC.AdviceBankID)<=0) { alert("Please Pick Advice Bank"); return false; }
            if(parseFloat($scope.MasterLC.LCValue)<=0 ) { alert("Ammount Should Be greater than O");  return false; }
            if(parseFloat($scope.MasterLC.LCValue) < parseFloat($scope.GetTotal())) { alert("LC Detail amount should be less than or equal MLC amount"); return false;}
            if(parseInt($scope.MasterLC.CurrencyID)==0) { alert("Please select Currency"); return false; }
            if(parseInt($scope.MasterLC.LCType)!=0)
            {
                if(parseInt($scope.MasterLC.DeferredFrom)==0)
                {
                    alert("Please Select Deffered Count From");
                    return false;
                }
                if(parseInt($scope.MasterLC.DefferedDaysCount)<=0)
                {
                    alert("Please Type Days Count Value. ");
                    //$('#txtDefferedDaysCount').focus();
                    return false;
                }
            }else
            {
                $scope.MasterLC.DeferredFrom = 0;
                $scope.MasterLC.DefferedDaysCount = 0;
            }
            var dMasterLCDate = new Date($scope.MasterLC.MasterLCDateSt); //$('#txtMasterLCDate').datebox('getValue')
            var dReceiveDate = new Date($scope.MasterLC.ReceiveDateInString); //$('#txtReceiveDate').datebox('getValue')
            var dLastDateofShipment = new  Date($scope.MasterLC.LastDateofShipmentSt);//$('#txtLastDateofShipment').datebox('getValue')
            var dExpireDate = new Date($scope.MasterLC.ExpireDateSt); //$('#txtExpireDate').datebox('getValue')
            if(dMasterLCDate>=dReceiveDate)
            {
                alert("Receive Date Should be Greter than Issue Date");
                return false;
            }
            if(dReceiveDate>=dLastDateofShipment)
            {
                alert("Shipment Date Should be Greater than than Receive Date");
                return false;
            }
            if(dLastDateofShipment>=dExpireDate)
            {
                alert("Expire Date Should be Greater than Shipment Date");
                return false;
            }
            //if($scope.gridOptionsMLCDetail.data.length <=0){alert("Please Add Master LC Details");  return false;}
            return true;
        };
        $scope.GetMasterLCDetails= function ()
        {
            var oMLCDetails = $scope.gridOptionsMLCDetail.data;
            for(var i = 0;i<oMLCDetails.length;i++)
            {
                oMLCDetails[i].MasterLCDate = new Date(oMLCDetails[i].MasterLCDateInString);
            }
            return oMLCDetails;
        };
        $scope.close=function ()
        {
            window.location.href = sessionStorage.getItem("BackLink");
        };

        $scope.PickPI = function () {
            debugger;
            if(parseInt($scope.MasterLC.Applicant) <= 0){
                alert(" Please Pick Buyer");
                $('#txtApplicantName').focus();
                return;
            }
            var config = { headers: { 'Content-Type': 'application/json; charset=utf-8;' } };
            $http.get(_sBaseAddress + '/MasterLC/GetPI',{params:{BuyerID : parseInt($scope.MasterLC.Applicant)}}, config).then(
                function (response) {
                    debugger;
                    var oPIs = jQuery.parseJSON(response.data);
                    if(oPIs != null && oPIs.length > 0){
                        debugger;
                        var oColumns = [
                            {field : 'PINo', name : 'PINo', width : '25%'},
                            {field : 'IssueDateInString', name : 'IssueDate', width : '25%'},
                        ];
                        var modalObj = {
                            size:'md',
                            modalcontroller : 'ModalCommonListCtrl',
                            appcontroller : 'MasterLCController',
                            objs : oPIs,
                            multiSelect : true,
                            pickertitle : 'PI List',
                            searchingbyfieldName : 'PINo',
                            columns : oColumns
                        }
                        var modalInstance = msModal.Instance(modalObj);
                        modalInstance.result.then(
                            function (result) {
                                debugger;
                                var oMLCDetails = $scope.gridOptionsMLCDetail.data;
                                angular.forEach(result, function(oItem, index) {
                                    if(!ICS_IsExist(oMLCDetails,'ProformaInvoiceID', oItem.ProformaInvoiceID)){
                                        var oMLCDetail = oItem;
                                        oMLCDetail.Amount = (oItem.NetAmount > 0)? oItem.NetAmount : oItem.Amount;
                                        oMLCDetail.PIStatusInInt = oItem.PIStatus;
                                        oMLCDetail.PIQty = oItem.Quantity;
                                        oMLCDetail.PIIssueDateInString = oItem.IssueDateInString;
                                        oMLCDetail.PIIssueDate = new Date(oItem.IssueDateInString);
                                        $scope.gridOptionsMLCDetail.data.push(oMLCDetail);
                                    }
                                });
                            },
                            function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                    }
                    else{
                        alert("Data Not Found");
                    }
                },
                function (response) {
                    alert(response.statusText);
                });
        };

        
        $scope.ChangeLCType =function ()
        {
            //debugger;
            var ncboLCType = $scope.MasterLC.LCTypeInInt;//  $("#cboLCType").val();
            if (parseInt(ncboLCType)==1)//deffered
            {
                $scope.hidDefferedFrom = false;
                $scope.hideDefferedDaysCount = false;
                document.getElementById('lblDafferdCountFrom').innerHTML ='Daffered Count From:';
                document.getElementById('lblDysCount').innerHTML ='Days Count:';
            }
            else //at-sight
            {
                $scope.hidDefferedFrom = true;
                $scope.hideDefferedDaysCount = true;
                document.getElementById('lblDafferdCountFrom').innerHTML ='';
                document.getElementById('lblDysCount').innerHTML ='';
            }
        };

        if($scope.MasterLC.MasterLCID>0)
        {
            if($scope.MasterLC.LCType!=0)
            {
                $scope.hidDefferedFrom =  false;
                $scope.hideDefferedDaysCount = false;

                document.getElementById('lblDafferdCountFrom').innerHTML ='Daffered Count From:';
                document.getElementById('lblDysCount').innerHTML ='Days Count:';
            }
            //$scope.SetTotal();
            if(sessionStorage.getItem("MasterLCHeader")=="View Master LC")
            {

                $("#divMLC :input").prop('disabled', true);
                $('#btnclose').prop('disabled', false);
                $scope.DisabledDeferredFrom = true;
                $scope.DisabledDefferedDaysCount = true;
            }

        };

        //TAb selection
        this.tab = 1;
        this.SetTab = function (tabId)
        {
            this.tab = tabId;
        }
        this.IsSet = function (tabid)
        {
            return this.tab === tabid;
        }
    });

</script>
