@{
    ViewBag.Title = "Master LC V2 list";
}
@model IEnumerable<ESimSol.BusinessObjects.MasterLC>
    <script src="~/Views/CommonModal/CommonRequestModal.js"></script>
    <script src="~/Views/CommonModal/CommonHistoryModal.js"></script>
    <script src="~/Views/ExportDocTnC/ExportDocTAndC.js"></script>
    <script src="~/Views/MasterLC/AdvanceSearch.js"></script>

    <div class="menuMainCollectionTable" id="divMLC" style="height:100%">
        <table id="tblMasterLC" title="MasterLC" class="easyui-datagrid" fit="true" fitcolumns="true" rownumbers="true" pagination="true" singleselect="true" autorowheight="false" toolbar="#toolbar">
            <thead>
                <tr>
                    <th field="FileNo" width="11%"> File No </th>
                    <th field="MasterLCNo" width="11%"> LC No </th>
                    <th field="LCStatusInString" width="11%"> Status </th>
                    <th field="ApplicantName" width="11%"> Buyer Name </th>
                    <th field="MasterLCDateSt" width="11%"> Issue Date </th>
                    <th field="BeneficiaryName" width="11%"> Benificiary </th>
                    <th field="AdviceBankName" width="11%"> Advise Bank </th>
                    <th field="ApprovedByName" width="11%"> Approved By</th>
                    <th field="LCValue" align="right" width="11%">LC Amount</th>
                </tr>
            </thead>
        </table>
        <div id="toolbar">
            <input type="text" id="txtLCNo" placeholder="Type LC No & Press Enter" style="width: 150px;" />
            <input type="text" id="txtBuyerName" placeholder="Type Buyer Name & Press Enter" style="width: 150px;" />
            <a id="btnAdvanceSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Search</a>
            <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
            <a id="btnEdit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a>
            <a id="btnDetails" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">View</a>
            <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
            <a id="btnRequestforApproval" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-redo" plain="true">Rqst for App</a>
            <a id="btnUndoRequest" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-undo" plain="true">Undo Req</a>
            <a id="btnWaitforApproval" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-waitforapproval" plain="true"> Wait For Approval</a>
            <a id="btnApproved" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true">Approved</a>
            <a id="btnUndoApproved" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-undo" plain="true">Undo Approve</a>
            <a id="btnRFRevise" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-redo" plain="true">Req For Amendment</a>
            <a id="btnAcceptAmendment" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true">Accept Amendment</a>
            <a id="btnWaitforRevise" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-waitforapproval" plain="true">Wait For Revise</a>
            <a id="btnB2BLCAllocation" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-redo" plain="true">B2B LC Allocation</a>
            <a id="btnAddCommerecialInvoice" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Invoice</a>
            <a id="btnAddLCTransfer" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-transfer" plain="true">LC Transfer</a>
            <a id="btnHistory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">History</a>
            <a id="btnAmendment" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">Amendment History</a>
            <a id="btnDocumentSetup" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Document Setup</a>
            <a id="btnUpdatePartyInfo" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Update Party Info</a>
            <a id="btnOrderTrack" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-tag" plain="true">Order Tag</a>
            <a id="btnPreView" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Preview</a>
            <a id="btnPrintList" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print List</a>
        </div>
    </div>

    <div id="winMasterLCAdvanceSearch" class="easyui-window" title="Advance Search" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width:960px; float: left;">
            <table border="0" cellpadding="0" cellspacing="0">
                <tr style="height:330px">
                    <td style="width:850px">
                        <table border="0" cellpadding="0" cellspacing="0">
                            <tr style="height: 260px">
                                <td style="width: 400px; vertical-align: top; height: 320px">
                                    <fieldset>
                                        <legend style="font-weight: bold; font-size: 12px">Searching Criteria : </legend>
                                        <table border="0" cellpadding="0" cellspacing="0" style="width: 340px; font-size: 12px">
                                            <tr>
                                                <td style="width: 130px; text-align: left; font-weight: bold">
                                                    LC No:
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 325px; text-align: left">
                                                    @Html.TextBox("txtLCNoForSearch", "", new { style = "width: 325px", id = "txtLCNoForSearch" })
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 130px; text-align: left; font-weight: bold">
                                                    File No:
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 325px; text-align: left">
                                                    @Html.TextBox("txtFileNo", "", new { style = "width: 325px", id = "txtFileNo" })
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 130px; text-align: left; font-weight: bold">
                                                    Applicant Name:
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 325px; text-align: left">
                                                    @Html.TextBox("txtBuyer", "", new { style = "width: 253px", id = "txtBuyer", placeholder = "Type Buyer Name & Press Enter" })<input type="button" id="btnBuyer" style="width: 70px; font-size: 12px" value="Pick" />
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 130px; text-align: left; font-weight: bold">
                                                    Proforma Invoice:
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 325px; text-align: left">
                                                    @Html.TextBox("txtPI", "", new { style = "width: 253px", id = "txtPI", placeholder = "Type PI No" })
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 130px; text-align: left; font-weight: bold">
                                                    Session:
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 325px; text-align: left">
                                                    <select id="cboBusinessSession" style=" width:325px;"></select>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 130px; text-align: left; font-weight: bold">
                                                    Issue Date:
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 325px; text-align: left; font-size: 12px">
                                                    <table border="0" style="font-size: 12px">
                                                        <tr>
                                                            <td style="width: 100px; font-size: 12px; text-align: left">
                                                                @Html.DropDownList("cboIssueDate", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumCompareOperator))), new { id = "cboIssueDate", style = "width: 100px;font-size:12px;text-align:left", @class = "_select_changeA" })
                                                            </td>
                                                            <td style="width: 98px; font-size: 12px">
                                                                <input id="txtIssueStartDate" type="text" style="width: 98px;" class="easyui-datebox"
                                                                       required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                                            </td>
                                                            <td style="width: 9px; font-size: 12px" id="enddateT">
                                                                To
                                                            </td>
                                                            <td style="width: 97px; font-size: 12px" id="enddate">
                                                                <input id="txtIssueEndDate" type="text" style="width: 97px;" class="easyui-datebox"
                                                                       required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                                            </td>
                                                        </tr>
                                                    </table>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 130px; text-align: left; font-weight: bold">
                                                    Receive Date:
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 325px; text-align: left; font-size: 12px">
                                                    <table border="0" style="font-size: 12px">
                                                        <tr>
                                                            <td style="width: 100px; font-size: 12px; text-align: left">
                                                                @Html.DropDownList("cboReceiveDate", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumCompareOperator))), new { id = "cboReceiveDate", style = "width: 100px;font-size:12px;text-align:left", @class = "_select_changeA" })
                                                            </td>
                                                            <td style="width: 98px; font-size: 12px">
                                                                <input id="txtReceiveStartDate" type="text" style="width: 98px;" class="easyui-datebox"
                                                                       required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                                            </td>
                                                            <td style="width: 9px; font-size: 12px" id="ReceiveenddateT">
                                                                To
                                                            </td>
                                                            <td style="width: 97px; font-size: 12px" id="enddate">
                                                                <input id="txtReceiveEndDate" type="text" style="width: 97px;" class="easyui-datebox"
                                                                       required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                                            </td>
                                                        </tr>
                                                    </table>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 130px; text-align: left; font-weight: bold">
                                                    Shipment Date:
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 325px; text-align: left; font-size: 12px">
                                                    <table border="0" style="font-size: 12px">
                                                        <tr>
                                                            <td style="width: 100px; font-size: 12px; text-align: left">
                                                                @Html.DropDownList("cboShipmentDate", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumCompareOperator))), new { id = "cboShipmentDate", style = "width: 100px;font-size:12px;text-align:left", @class = "_select_changeA" })
                                                            </td>
                                                            <td style="width: 98px; font-size: 12px">
                                                                <input id="txtShipmentStartDate" type="text" style="width: 98px;" class="easyui-datebox"
                                                                       required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                                            </td>
                                                            <td style="width: 9px; font-size: 12px" id="ShipmentenddateT">
                                                                To
                                                            </td>
                                                            <td style="width: 97px; font-size: 12px" id="enddate">
                                                                <input id="txtShipmentEndDate" type="text" style="width: 97px;" class="easyui-datebox"
                                                                       required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                                            </td>
                                                        </tr>
                                                    </table>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 130px; text-align: left; font-weight: bold">
                                                    Expire Date:
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 325px; text-align: left; font-size: 12px">
                                                    <table border="0" style="font-size: 12px">
                                                        <tr>
                                                            <td style="width: 100px; font-size: 12px; text-align: left">
                                                                @Html.DropDownList("cboExpireDate", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumCompareOperator))), new { id = "cboExpireDate", style = "width: 100px;font-size:12px;text-align:left", @class = "_select_changeA" })
                                                            </td>
                                                            <td style="width: 98px; font-size: 12px">
                                                                <input id="txtExpireStartDate" type="text" style="width: 98px;" class="easyui-datebox"
                                                                       required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                                            </td>
                                                            <td style="width: 9px; font-size: 12px" id="ExpireenddateT">
                                                                To
                                                            </td>
                                                            <td style="width: 97px; font-size: 12px" id="enddate">
                                                                <input id="txtExpireEndDate" type="text" style="width: 97px;" class="easyui-datebox"
                                                                       required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                                            </td>
                                                        </tr>
                                                    </table>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 130px; text-align: left; font-weight: bold">
                                                    Advice Bank:
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 325px; text-align: left">
                                                    @Html.TextBox("txtAdviceBank", "", new { style = "width: 253px", id = "txtAdviceBank", placeholder = "Type Bank Account & Press Enter" })<input type="button" style="width: 70px; font-size: 12px" onclick="GetAdviceBanks()" value="Pick" />
                                                </td>
                                            </tr>
                                            <tr style="height:38px; vertical-align: bottom">
                                                <td style=" text-align:left; width:325px;">
                                                    <table border="0" cellpadding="0" cellspacing="0">
                                                        <tr>
                                                            <td style=" text-align:left;"><input type="button" value="Reset" id="btnReset" onclick="Reset()" style="width:70px; text-align:left;" /></td>
                                                            <td style=" text-align:right; width:255px;"><input type="button" value="Search" id="btnRefresh" style="width:70px; text-align:right;" /></td>
                                                        </tr>
                                                    </table>
                                                </td>
                                            </tr>
                                        </table>
                                    </fieldset>
                                </td>
                                <td style="width: 323px; height:340px; vertical-align: top">
                                    <div style=" margin-top:6px;">
                                        <table id="tblMasterLCSearch" title="Master LC List" class="easyui-datagrid" style="width:565px;height:375px; font-size: 12px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                                            <thead>
                                                <tr>
                                                    <th data-options="field:'Selected',checkbox:true"></th>
                                                    <th field="LCNo" width="70">LC No</th>
                                                    <th field="IssueDateInString" width="80">Issue Date</th>
                                                    <th field="BuyerName" width="100">Buyer Name</th>
                                                    <th field="ReceiveDateInString" width="80">Receive Date</th>
                                                    <th field="ShipmentDateInString" width="90">Shipment Date</th>
                                                    <th field="ExpireDateInString" width="80">Expire Date</th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
                <tr style="height:50px">
                    <td style="width:850px; text-align:right">
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                    </td>
                </tr>
            </table>
        </div>
    </div>


    <script type="text/javascript">

        $(document).ready(function () {
        var oTempMasterLCs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oAuthorizationRolesMapping = @Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        var oBusinessSessions = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BussinessSessions));
        var oCompareOperators = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
        var oClientOperationSetting = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ClientOperationSetting));
        var nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));

        sessionStorage.setItem("BUID", nBUID);
        
        $('#divMLC').data('BusinessSessions',oBusinessSessions);
        $('#divMLC').data('CompareOperators',oCompareOperators);
        $('#divMLC').data('ClientOperationSetting',oClientOperationSetting);
        $('#divMLC').data('BuyerIDs',"");
        $('#divMLC').data('AdviceBankIDs',"");
        var oMasterLCs = sessionStorage.getItem("MasterLCs");
        if(oMasterLCs!=null)
        {
            oMasterLCs = jQuery.parseJSON(oMasterLCs);
        }
        else
        {
            oMasterLCs = oTempMasterLCs;
        }
        RefreshList(oMasterLCs);
        RefreshControlLayout(oAuthorizationRolesMapping);
        });

        function RefreshList(oMasterLCs) {
            data = oMasterLCs;
            data = { "total": "" + data.length + "", "rows": data };
            $('#tblMasterLC').datagrid('loadData', data);
            var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
            $('#tblMasterLC').datagrid('selectRow', nIndex);
        }

        function RefreshControlLayout(oAuthorizationRolesMapping) {

            $("#btnAdvanceSearch").hide();
            $("#btnAdd").hide();
            $("#btnEdit").hide();
            $("#btnDetails").hide();
            $("#btnDelete").hide();
            $("#btnRequestforApproval").hide();
            $("#btnUndoRequest").hide();
            $("#btnWaitforApproval").hide();
            $("#btnApproved").hide();
            $("#btnUndoApproved").hide();
            $("#btnRFRevise").hide();
            $("#btnAcceptAmendment").hide();
            $("#btnWaitforRevise").hide();
            $("#btnB2BLCAllocation").hide();
            $("#btnAddCommerecialInvoice").hide();
            $("#btnAddLCTransfer").hide();
            $("#btnHistory").hide();
            $("#btnAmendment").hide();
            $("#btnDocumentSetup").hide();
            $("#btnUpdatePartyInfo").hide();
            $("#btnOrderTrack").hide();
            $("#btnPreView").hide();
            $("#btnPrintList").hide();

            if (PermissionChecker('AdvSearch', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnAdvanceSearch").show(); }
            if (PermissionChecker('Add', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnAdd").show(); }
            if (PermissionChecker('Edit', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnEdit").show(); }
            if (PermissionChecker('View', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnDetails").show(); }
            if (PermissionChecker('Delete', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnDelete").show(); }
            if (PermissionChecker('Add', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnRequestforApproval").show(); }
            if (PermissionChecker('Add', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnUndoRequest").show(); }
            if (PermissionChecker('Approved', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnWaitforApproval").show(); }
            if (PermissionChecker('Approved', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnApproved").show(); }
            if (PermissionChecker('Approved', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnUndoApproved").show(); }
            if (PermissionChecker('Add', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnRFRevise").show(); }
            if (PermissionChecker('Approved', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnAcceptAmendment").show(); }
            if (PermissionChecker('Approved', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnWaitforRevise").show(); }
            if (PermissionChecker('Add', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnB2BLCAllocation").show(); }
            if (PermissionChecker('Add', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnAddCommerecialInvoice").show(); }
            if (PermissionChecker('Add', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnAddLCTransfer").show(); }
            if (PermissionChecker('View', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnHistory").show(); }
            if (PermissionChecker('View', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnAmendment").show(); }
            if (PermissionChecker('Add', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnDocumentSetup").show(); }
            if (PermissionChecker('Edit', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnUpdatePartyInfo").show(); }
            if (PermissionChecker('View', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnOrderTrack").show(); }
            if (PermissionChecker('Preview', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnPreView").show(); }
            if (PermissionChecker('PrintList', 'MasterLC', oAuthorizationRolesMapping)) { $("#btnPrintList").show(); }
        }

        //LC wise Start
        $('#txtLCNo').keypress(function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var txtLCNo = $("#txtLCNo").val();
                if (txtLCNo != "") {
                    $("#txtBuyerName").val('');
                    //debugger;
                    var tsv = ((new Date()).getTime()) / 1000;
                    $.ajax
                        ({
                            type: "GET",
                            dataType: "json",
                            url: _sBaseAddress + "/MasterLCV2/SearchLCAndBuyer",
                            data: { sTempData: txtLCNo, buid: sessionStorage.getItem("BUID"), bIsStyle: true, ts: tsv },
                            contentType: "application/json; charset=utf-8",
                            success: function (data) {
                                //debugger;
                                var _oMasterLCs = jQuery.parseJSON(data);
                                if (_oMasterLCs.length > 0) {
                                    var data = _oMasterLCs;
                                    data = { "total": "" + data.length + "", "rows": data };
                                    $('#tblMasterLC').datagrid('loadData', data);
                                }
                                else {
                                    alert("Data Not found");
                                }
                            },
                            error: function (xhr, status, error) {
                                alert(error);
                            }
                        });             //debugger;

                }
            } else if (code == 8) //backspace=8
            {
                var txtLCNo = document.getElementById("txtLCNo");
                txtLCNo.value = '';
                txtLCNo.style.color = "Normal";
                txtLCNo.style.fontWeight = "Black";

            }

        });

        //Buyer wise Start
        $('#txtBuyerName').keydown(function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var txtBuyerName = document.getElementById('txtBuyerName').value;
                if (txtBuyerName != "") {
                    document.getElementById("txtLCNo").value = '';
                    //debugger;
                    var tsv = ((new Date()).getTime()) / 1000;
                    $.ajax
                        ({
                            type: "GET",
                            dataType: "json",
                            url: _sBaseAddress + "/MasterLCV2/SearchLCAndBuyer",
                            data: { sTempData: txtBuyerName, buid: sessionStorage.getItem("BUID"), bIsStyle: false, ts: tsv },
                            contentType: "application/json; charset=utf-8",
                            success: function (data) {
                                //debugger;
                                var _oMasterLCs = jQuery.parseJSON(data);
                                if (_oMasterLCs.length > 0) {
                                    var data = _oMasterLCs;
                                    data = { "total": "" + data.length + "", "rows": data };
                                    $('#tblMasterLC').datagrid('loadData', data);
                                }
                                else {
                                    alert("Data Not found");
                                }
                            },
                            error: function (xhr, status, error) {
                                alert(error);
                            }
                        });             //debugger;

                }
            } else if (code == 8) //backspace=8
            {
                var txtBuyerName = document.getElementById("txtBuyerName");
                txtBuyerName.value = '';
                txtBuyerName.style.color = "Normal";
                txtBuyerName.style.fontWeight = "Black";

            }

        });

        //Start Search
        $("#btnAdvanceSearch").click(function () {
            $("#winMasterLCAdvanceSearch").icsWindow('open', "Master LC Search");
            $("#winMasterLCAdvanceSearch input").not("input[type='button']").val("");
            $("#winMasterLCAdvanceSearch select").val(0);
            SetTodayDate();
            Reset();
            $("#cboBusinessSession").icsLoadCombo({ List: $('#divMLC').data('BusinessSessions'), OptionValue: "BusinessSessionID", DisplayText: "SessionName" });
        });

        function SetTodayDate() {
            $('#txtIssueStartDate').datebox('setValue', icsdateformat(new Date()));
            $('#txtIssueEndDate').datebox('setValue', icsdateformat(new Date()));
            $('#txtReceiveStartDate').datebox('setValue', icsdateformat(new Date()));
            $('#txtReceiveEndDate').datebox('setValue', icsdateformat(new Date()));
            $('#txtShipmentStartDate').datebox('setValue', icsdateformat(new Date()));
            $('#txtShipmentEndDate').datebox('setValue', icsdateformat(new Date()));
            $('#txtExpireStartDate').datebox('setValue', icsdateformat(new Date()));
            $('#txtExpireEndDate').datebox('setValue', icsdateformat(new Date()));

        }

        function Reset() {
            $("#txtLCNoForSearch").val('');
            $("#txtFileNo").val('');
            $("#txtBuyer").val('');
            $("#txtBuyer").removeClass('fontColorOfPickItem');
            $("#txtPI").val('');
            $("#txtAdviceBank").val('');

            document.getElementById("enddateT").style.display = '';
            document.getElementById("ReceiveenddateT").style.display = '';
            document.getElementById("ShipmentenddateT").style.display = '';
            document.getElementById("ExpireenddateT").style.display = '';
            $('#divMLC').data('BuyerIDs', "");
            $('#divMLC').data('AdviceBankIDs', "");
            $('#cboIssueDate').val('None');
            $('#cboReceiveDate').val('None');
            $('#cboShipmentDate').val('None');
            $('#cboExpireDate').val('None');
            $('#cboBusinessSession').val(0);
            SetTodayDate();
            var oMasterLCs = [];
            RefreshListForSearch(oMasterLCs);

        };

        function RefreshListForSearch(oMasterLCs) {
            data = oMasterLCs;
            data = { "total": "" + data.length + "", "rows": data };
            $('#tblMasterLCSearch').datagrid('loadData', data);
        }

        $('._select_changeA').change(function () {
            //debugger;
            var x = $("#cboIssueDate").val();
            var y = $("#cboReceiveDate").val();
            var z = $("#cboShipmentDate").val();
            var k = $("#cboExpireDate").val();
            if (x == "EqualTo" || x == "NotEqualTo" || x == "GreaterThan" || x == "SmallerThan") {
                //document.getElementById("enddate").style.display = 'none';
                document.getElementById("enddateT").style.display = 'none';
                
            }
            else {
                //document.getElementById("enddate").style.display = '';
                document.getElementById("enddateT").style.display = '';
                
            }
            if (x == "None") {

                $('#txtIssueStartDate').datebox('setValue', icsdateformat(new Date()));
                $('#txtIssueEndDate').datebox('setValue', icsdateformat(new Date()));
            }

            if (y == "EqualTo" || y == "NotEqualTo" || y == "GreaterThan" || y == "SmallerThan") {
                //document.getElementById("enddate").style.display = 'none';
                
                document.getElementById("ReceiveenddateT").style.display = 'none';
                
            }
            else {
                //document.getElementById("enddate").style.display = '';
                
                document.getElementById("ReceiveenddateT").style.display = '';
                
            }
            if (y == "None") {

                $('#txtReceiveStartDate').datebox('setValue', icsdateformat(new Date()));
                $('#txtReceivceEndDate').datebox('setValue', icsdateformat(new Date()));
            }

            if (z == "EqualTo" || z == "NotEqualTo" || z == "GreaterThan" || z == "SmallerThan") {
                //document.getElementById("enddate").style.display = 'none';
                
                document.getElementById("ShipmentenddateT").style.display = 'none';
                
            }
            else {
                //document.getElementById("enddate").style.display = '';
                
                document.getElementById("ShipmentenddateT").style.display = '';
                
            }
            if (z == "None") {

                $('#txtShipmentStartDate').datebox('setValue', icsdateformat(new Date()));
                $('#txtShipmentEndDate').datebox('setValue', icsdateformat(new Date()));
            }

            if (k == "EqualTo" || k == "NotEqualTo" || k == "GreaterThan" || k == "SmallerThan") {
                //document.getElementById("enddate").style.display = 'none';
                
                document.getElementById("ExpireenddateT").style.display = 'none';
            }
            else {
                //document.getElementById("enddate").style.display = '';
                
                document.getElementById("ExpireenddateT").style.display = '';
            }
            if (k == "None") {

                $('#txtExpireStartDate').datebox('setValue', icsdateformat(new Date()));
                $('#txtExpireEndDate').datebox('setValue', icsdateformat(new Date()));
            }
        });

        $('#btnRefresh').click(function () {

            var cboIssueDate = document.getElementById("cboIssueDate");
            var cboReceiveDate = document.getElementById("cboReceiveDate");
            var cboShipmentDate = document.getElementById("cboShipmentDate");
            var cboExpireDate = document.getElementById("cboExpireDate");

            var nOrderDate = cboIssueDate.options[cboIssueDate.selectedIndex].index;
            var dIssueStartDate = $('#txtIssueStartDate').datebox('getValue');
            var dIssueEndDate = $('#txtIssueEndDate').datebox('getValue');

            var nReceiveOrderDate = cboReceiveDate.options[cboReceiveDate.selectedIndex].index;
            var dReceiveStartDate = $('#txtReceiveStartDate').datebox('getValue');
            var dReceiveEndDate = $('#txtReceiveEndDate').datebox('getValue');

            var nShipmentOrderDate = cboShipmentDate.options[cboShipmentDate.selectedIndex].index;
            var dShipmentStartDate = $('#txtShipmentStartDate').datebox('getValue');
            var dShipmentEndDate = $('#txtShipmentEndDate').datebox('getValue');

            var nExpireOrderDate = cboExpireDate.options[cboExpireDate.selectedIndex].index;
            var dExpireStartDate = $('#txtExpireStartDate').datebox('getValue');
            var dExpireEndDate = $('#txtExpireEndDate').datebox('getValue');

            var sLCNo = document.getElementById("txtLCNoForSearch").value;
            var sPINo = document.getElementById("txtPI").value;
            var sFileNo = document.getElementById("txtFileNo").value;
            var chkResult = CheckEmpty();
            if (chkResult != true) {
                alert("Please Select at least one Criteria !!");
                return;
            }
            var sTempString = nOrderDate + '~' + dIssueStartDate + '~' + dIssueEndDate + '~' + nReceiveOrderDate + '~' + dReceiveStartDate + '~' + dReceiveEndDate + '~' + nShipmentOrderDate + '~' + dShipmentStartDate + '~' + dShipmentEndDate + '~' + nExpireOrderDate + '~' + dExpireStartDate + '~' + dExpireEndDate + '~' + sLCNo + '~' + sPINo + '~' + sFileNo + '~' + $('#divMLC').data('BuyerIDs') + '~' + $('#divMLC').data('AdviceBankIDs') + '~' + $('#cboBusinessSession').val() + '~' + sessionStorage.getItem("BUID");

            $.ajax({
                type: "GET",
                dataType: "json",
                url: sessionStorage.getItem('BaseAddress') + "/MasterLCV2/Search",
                data: { sTemp: sTempString },
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oMasterLCs = jQuery.parseJSON(data);
                    if (oMasterLCs != null) {
                        if (oMasterLCs.length > 0) {
                            RefreshListForSearch(oMasterLCs);
                            $('#tblMasterLC').datagrid({ selectOnCheck: false, checkOnSelect: false })
                        }
                        else {
                            alert("Data not found!!");
                            RefreshListForSearch(oMasterLCs);
                        }
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });

        });

        function CheckEmpty() {
            var cboIssueDate = document.getElementById("cboIssueDate");
            var cboReceiveDate = document.getElementById("cboReceiveDate");
            var cboShipmentDate = document.getElementById("cboShipmentDate");
            var cboExpireDate = document.getElementById("cboExpireDate");
            var nOrderDate = cboIssueDate.options[cboIssueDate.selectedIndex].index;
            var nReceiveOrderDate = cboReceiveDate.options[cboReceiveDate.selectedIndex].index;
            var nShipmentOrderDate = cboShipmentDate.options[cboShipmentDate.selectedIndex].index;
            var nExpireOrderDate = cboExpireDate.options[cboExpireDate.selectedIndex].index;

            var sLCNo = document.getElementById("txtLCNoForSearch").value;
            var sPINo = document.getElementById("txtPI").value;
            var sFileNo = document.getElementById("txtFileNo").value;
            var sAdviceBank = document.getElementById("txtAdviceBank").value;

            if (nOrderDate == 0 && nReceiveOrderDate == 0 && nShipmentOrderDate == 0 && nExpireOrderDate == 0 && sLCNo == 0 && sPINo == "" && sFileNo == "" && sAdviceBank == "" && $('#divMLC').data('BuyerIDs') == "" && $('#divMLC').data('AdviceBankIDs') == "" && $('#cboBusinessSession').val() == 0) {
                return true;
            }
            return true;
        }

        //Pick Buyer
        $("#txtBuyer").keydown(function (e) {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) // Enter Press
            {
                if ($.trim($('#txtBuyer').val()) == null || $.trim($('#txtBuyer').val()) == "") {
                    alert("Type Buyer Name and Press Enter.");
                    return;
                }
                GetBuyers();
            } else if (code == 8) //backspace=8
            {
                //debugger;
                var txtBuyer = document.getElementById("txtBuyer");
                txtBuyer.style.color = "black";
                txtBuyer.style.fontWeight = "normal";
                $('#divMLC').data('BuyerIDs', "");
            }
        });

        $("#btnBuyer").click(function () {
            GetBuyers();
        });

        function GetBuyers() {
            var oContractor = { Params: 2 + '~' + $.trim($('#txtBuyer').val()) + '~' + sessionStorage.getItem("BUID") };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oContractor,
                ControllerName: "Contractor",
                ActionName: "ContractorSearchByNameType",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ContractorID > 0) {

                        var tblColums = []; var oColumn = { field: "ContractorID", title: "Code", width: 60, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Name", title: "Applicant Name", width: 250, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Address", title: "Address", width: 320, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winBuyers',
                            winclass: 'clsBuyer',
                            winwidth: 700,
                            winheight: 460,
                            tableid: 'tblBuyers',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'Name',
                            windowTittle: 'Buyer List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }

        $("#txtAdviceBank").keydown(function (e) {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) // Enter Press
            {
                if ($.trim($('#txtAdviceBank').val()) == null || $.trim($('#txtAdviceBank').val()) == "") {
                    alert("Please Type Advice Bank Account");
                    return;
                }
                GetAdviceBanks();
            } else if (code == 8) //backspace=8
            {
                //debugger;
                var txtAdviceBank = document.getElementById("txtAdviceBank");
                txtAdviceBank.style.color = "black";
                txtAdvicBank.style.fontWeight = "normal";
                $('#divMLC').data('AdviceBankIDs', "");
            }
        });

        function GetAdviceBanks() {
            var oAccountNo = { BankNameAccountNo: $.trim($('#txtAdviceBank').val()), BUID: sessionStorage.getItem("BUID") };
            var obj = {
                BaseAddress: sessionStorage.getItem('BaseAddress'),
                Object: oAccountNo,
                ControllerName: "BankAccount",
                ActionName: "GetsBUWithDeptWise",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].BankAccountID > 0) {
                        var tblColums = []; var oColumn = { field: "BankNameAccountNo", title: "Account No", width: 250, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "BranchName", title: "Branch Name", width: 250, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winAdviceBanks',
                            winclass: 'clsAdviceBank',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblAdviceBanks',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName: 'BankNameAccountNo',
                            windowTittle: 'Advice Bank Account List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                } else {
                    alert("Data Not Fount");
                    return;
                }
            });
        }

        function IntializePickerbutton(oPickerobj) {
            debugger;
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {
                debugger;
                //for Single Select
                PickerEvents(oPickerobj);
            });
            $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
                if (e.which == 13)//enter=13
                {
                    PickerEvents(oPickerobj);
                }
            });
        }

        function PickerEvents(oPickerobj) {
            var oreturnobj = null, oreturnobjs = [];
            if (oPickerobj.multiplereturn) {
                oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
            } else {
                oreturnobj = $('#' + oPickerobj.tableid).datagrid('getSelected');
            }

            $("#" + oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winclass == 'clsBuyer') {
                var sBuyerIDs = "";
                if (oPickerobj.multiplereturn) {
                    var ncount = 0;
                    for (var i = 0; i < oreturnobjs.length; i++) {
                        var nBuyerID = oreturnobjs[i].ContractorID;
                        sBuyerIDs = sBuyerIDs + nBuyerID + ',';
                        ncount++;
                    }
                    if (ncount > 1) {
                        $('#txtBuyer').val("Select " + ncount + " Buyer's");
                    } else {
                        $('#txtBuyer').val(oreturnobjs[0].Name);
                    }
                    sBuyerIDs = sBuyerIDs.substring(0, sBuyerIDs.length - 1);

                } else {
                    $('#txtBuyer').val(oreturnobj.Name);
                    sBuyerIDs = "" + oreturnobj.ContractorID + "";
                    $('#txtBuyer').focus();
                }
                $('#divMLC').data('BuyerIDs', sBuyerIDs);
                var txtBuyerName = document.getElementById("txtBuyer");
                txtBuyerName.style.color = "blue";
                txtBuyerName.style.fontWeight = "bold";
            }
            else if (oPickerobj.winclass == 'clsAdviceBank') {
                var nAdviceBankIDs = "";
                if (oPickerobj.multiplereturn) {
                    var ncount = 0;
                    for (var i = 0; i < oreturnobjs.length; i++) {
                        var nAdviceBankID = oreturnobjs[i].BankAccountID;
                        nAdviceBankIDs = nAdviceBankIDs + nAdviceBankID + ',';
                        ncount++;
                    }
                    if (ncount > 1) {
                        $('#txtAdviceBank').val("Select " + ncount + " AdviceBank's");
                    } else {
                        $('#txtAdviceBank').val(oreturnobjs[0].BankNameAccountNo);
                    }
                    nAdviceBankIDs = nAdviceBankIDs.substring(0, nAdviceBankIDs.length - 1);
                } else {
                    $('#txtAdviceBank').val(oreturnobj.BankNameAccountNo);
                    nAdviceBankIDs = "" + oreturnobj.BankAccountID + "";
                    $('#txtAdviceBank').focus();
                }
                $('#divMLC').data('AdviceBankIDs', nAdviceBankIDs);
                $("#txtAdviceBank").addClass('fontColorOfPickItem');
            }
        }

        function Close() {
            $("#winMasterLCAdvanceSearch").icsWindow('close');
        }

        function OkButtonClick() {
            //   debugger;
            var oMasterLCs = [];
            var oMasterLCs = $('#tblMasterLCSearch').datagrid('getChecked');
            if (oMasterLCs.length <= 0) {
                alert("please select atleast one item");
                return;
            }
            RefreshList(oMasterLCs);
            $("#winMasterLCAdvanceSearch").icsWindow('close');
        }
        //end search

        $('#btnAdd').click(function () {
            var oMasterLCs = $('#tblMasterLC').datagrid('getRows');
            sessionStorage.setItem("MasterLCs", JSON.stringify(oMasterLCs));
            sessionStorage.setItem("SelectedRowIndex", -1);
            sessionStorage.setItem("MasterLCHeader", "Add Master LC");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = sessionStorage.getItem('BaseAddress') + "/MasterLCV2/ViewMasterLC?id=0&buid=" + parseInt(sessionStorage.getItem('BUID'));
        });

    
    //var MLCapp= angular.module('MasterLCApp', ['ngAnimate','ui.bootstrap','ui.grid','ui.grid.selection','ms.service','masterlc.service','CommonHistory.service','ExportDocTnC.service','CommonRequest.service']);
    MLCapp.controller('MasterLCController',  function ($scope,$http,$uibModal,$log,uiGridConstants,msModal,userSession, lcservice, commonhistoryservice,DocumentSetupService,CommonRequestservice) {
        oMasterLCs=(userSession.getData('MasterLCs').length>0)? userSession.getData('MasterLCs'):oMasterLCs;
        $('.date-container').datepicker({format: "dd M yyyy",calendarWeeks:true,autoclose:true,todayHighlight:true});

        $scope.BussinessSessions = oBussinessSessions;
        $scope.CompareOperators= oCompareOperators;

        $scope.Edit =  function () {
            debugger;
            var oMasterLC = $scope.gridApi.selection.getSelectedRows()[0];
            if (oMasterLC == null) {
                alert("Please Select an item from list");
                return;
            }
            if (oMasterLC.LCStatus != 1 ) {
                alert("Without Initialized Item can't Update!");
                return;
            }
            var SelectedRowIndex = $scope.gridOptions.data.indexOf(oMasterLC);
            sessionStorage.setItem("MasterLCs", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("BackLink", window.location.href);

            sessionStorage.setItem("MasterLCHeader", "Edit Master LC");
            window.location.href =sessionStorage.getItem('BaseAddress')+"/MasterLC/ViewMasterLC?id="+oMasterLC.MasterLCID+"&buid="+sessionStorage.getItem('BUID');

        };
        $scope.View =  function () {
            debugger;
            var oMasterLC = $scope.gridApi.selection.getSelectedRows()[0];
            if (oMasterLC == null) {
                alert("Please Select an item from list");
                return;
            }
            var SelectedRowIndex = $scope.gridOptions.data.indexOf(oMasterLC);
            sessionStorage.setItem("MasterLCs", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("BackLink", window.location.href);

            if (oMasterLC.MLCWithOrder == true) {
                sessionStorage.setItem("MasterLCHeader", "View Master LC With Order");
                window.location.href =sessionStorage.getItem('BaseAddress')+"/MasterLC/ViewMasterLCWithOrder?id="+oMasterLC.MasterLCID+"&buid="+sessionStorage.getItem('BUID');
            }
            else {
                sessionStorage.setItem("MasterLCHeader", "View Master LC");
                window.location.href =sessionStorage.getItem('BaseAddress')+"/MasterLC/ViewMasterLC?id="+oMasterLC.MasterLCID+"&buid="+sessionStorage.getItem('BUID');
            }


        };

        $scope.UpdatePartyInfo =  function ()
        {
            //debugger;
            var oMasterLC = $scope.gridApi.selection.getSelectedRows()[0];
            if(oMasterLC==null || parseInt(oMasterLC.MasterLCID)<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.MasterLCID == oMasterLC.MasterLCID)
                {
                    sessionStorage.setItem("MasterLCs", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("MasterLCHeader", "View Master LC");
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.open(sessionStorage.getItem("BaseAddress") + '/ExportPartyInfo/ViewPartyWiseExportInfo?pid='+parseInt(oMasterLC.Applicant), '_blank');
                }
            }, $scope.gridOptions.data);
        }
        $scope.Delete= function ()
        {
            debugger;
            var data = $scope.gridApi.selection.getSelectedRows();
            if(data==null || data.length<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            if(data[0].LCStatus!=1)
            {
                alert("Please select Only Initialized Item from List!");
                return;
            }
            if (!confirm("Confirm to Delete?")) return ;
            $http.post(sessionStorage.getItem('BaseAddress')+'/MasterLC/Delete', JSON.stringify(data[0])).then(
                            function (response) {
                                if (jQuery.parseJSON(response.data) == 'Deleted') {
                                    angular.forEach($scope.gridOptions.data, function (value, index)
                                    {
                                        if (value.MasterLCID == data[0].MasterLCID)
                                        {
                                            alert("Successfully Deleted.");
                                            $scope.gridOptions.data.splice(index, 1);
                                        }
                                    }, $scope.gridOptions.data);
                                }
                                else {
                                    alert(jQuery.parseJSON(response.data));
                                }
                            },
                            function (response) { alert(jQuery.parseJSON(response.data)); }
                        );

        };

        $scope.WaitForApproval= function()
        {
            $.ajax
            ({
                type: "GET",
                dataType: "json",
                url : sessionStorage.getItem('BaseAddress')+  "/MasterLC/WaitingSearch",
                data: {},
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //debugger;
                    var oMasterLCs = jQuery.parseJSON(data);
                    if (_oMasterLCs.length>0)
                    {
                        $scope.gridOptions.data = oMasterLCs;
                    }
                    else
                    {
                        alert("Data Not found");
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
        }
        $scope.WaitForRevise=function()
        {
            var tsv=((new Date()).getTime())/1000;
            $.ajax
                ({
                    type: "GET",
                    dataType: "json",
                    url : sessionStorage.getItem('BaseAddress')+"/MasterLC/WaitForRevise",
                    data: {ts:tsv},
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        //debugger;
                        var oMasterLCs = jQuery.parseJSON(data);
                        if (oMasterLCs[0].ErrorMessage=="" || oMasterLCs[0].ErrorMessage==null)
                        {
                            $scope.gridOptions.data = oMasterLCs;
                        }
                        else
                        {
                            RefreshList([]);
                        }
                    },
                    error: function (xhr, status, error)
                    {
                        alert(error);
                    }

                });
        }

        $scope.RequestforApproval= function ()
        {
            debugger;
            var data = $scope.gridApi.selection.getSelectedRows();
            var oMasterLC = data[0];
            if(oMasterLC==null || parseInt(oMasterLC.MasterLCID)<=0)
            {
                alert("Select an item from list");
                return false;
            }

            if  (oMasterLC.LCStatus!=1)
            {
                alert("Please select only Initialized item from list");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.MasterLCID== oMasterLC.MasterLCID)
                {
                    debugger;
                    sessionStorage.setItem("SelectedRowIndex", index);
                    var oEmployee = { DesignationName : '2,24' };
                    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                    $http.post(sessionStorage.getItem('BaseAddress')+"/User/GetsRequestedUsers",$.param(oEmployee), config).then(
                            function (response)
                            {
                                var results=jQuery.parseJSON(response.data);
                                var modalObj={
                                    size:'sm',
                                    url:sessionStorage.getItem('BaseAddress')+'/CommonModal/CommonRequestModal',
                                    modalcontroller:'ModalCommonRequestCtrl',
                                    appcontroller:'MasterLCController',
                                    Users:results,
                                    pickertitle:'Request For Approve',
                                    objectFieldName:'MasterLCID',
                                    objectID:oMasterLC.MasterLCID,
                                    controllerName:'MasterLC',
                                    requestactionType:'RequestForApproved'
                                }
                                var modalInstance=CommonRequestservice.Instance(modalObj);
                                modalInstance.result.then(function (result)
                                {
                                    debugger;
                                    $scope.gridOptions.data[index]=result;
                                    $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                                    $scope.gridApi.selection.selectRow(result);

                                }, function () {
                                    $log.info('Modal dismissed at: ' + new Date());
                                });
                            },
                                function (response) { alert(jQuery.parseJSON(response.data).Message);}
                        );

                }
            }, $scope.gridOptions.data);
        }

        $scope.UndoRequest =function ()
        {
            //debugger;
            var data = $scope.gridApi.selection.getSelectedRows();
            var oMasterLC = data[0];
            if(oMasterLC==null || parseInt(oMasterLC.MasterLCID)<=0)
            {
                alert("Select an item from list");
                return false;
            }
            if(oMasterLC.LCStatus!=2)
            {
                alert("Please select only Requested  item from list");
                return;
            }
            if (!confirm("Confirm to Undo Request?")) return ;
            oMasterLC.ActionTypeExtra="UndoRequest";
            $scope.StatusChange(oMasterLC,"Undo Request");
        }

        $scope.Approved= function ()
        {
            var data = $scope.gridApi.selection.getSelectedRows();
            var oMasterLC = data[0];
            if(oMasterLC==null || oMasterLC.MasterLCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(oMasterLC.LCStatus!=2)
            {
                alert("Please select only Requested  item from list");
                return;
            }
            if (!confirm("Confirm to Approve?")) return ;
            oMasterLC.ActionTypeExtra="Approve";
            $scope.StatusChange(oMasterLC,"Approve");
        };

        $scope.UndoApprove= function ()
        {
            //debugger;
            var data = $scope.gridApi.selection.getSelectedRows();
            var oMasterLC = data[0];
            if(oMasterLC==null || oMasterLC.MasterLCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }else if(oMasterLC.LCStatus!=3)
            {
                alert("Please select only Approved item from list");
                return;
            }
            if (!confirm("Confirm to Undo Approve?")) return ;
            oMasterLC.ActionTypeExtra="UndoApprove";
            $scope.StatusChange(oMasterLC,"Undo Approve");
        };

        $scope.RequestForAmendment= function ()
        {
            //debugger;
            var data = $scope.gridApi.selection.getSelectedRows();
            var oMasterLC = data[0];
            if(oMasterLC==null || oMasterLC.MasterLCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }else if(oMasterLC.LCStatus!=3)
            {
                alert(oMasterLC.LCStatusInString+" Item Can't Request for Ammendment");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.MasterLCID== oMasterLC.MasterLCID)
                {
                    debugger;
                    sessionStorage.setItem("SelectedRowIndex", index);
                    var oEmployee = { DesignationName : '2' };
                    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                    $http.post(sessionStorage.getItem('BaseAddress')+"/User/GetsRequestedUsers",$.param(oEmployee), config).then(
                            function (response)
                            {
                                var results=jQuery.parseJSON(response.data);
                                var modalObj={
                                    size:'sm',
                                    url:sessionStorage.getItem('BaseAddress')+'/CommonModal/CommonRequestModal',
                                    modalcontroller:'ModalCommonRequestCtrl',
                                    appcontroller:'MasterLCController',
                                    Users:results,
                                    pickertitle:'Request For Ammendment',
                                    objectFieldName:'MasterLCID',
                                    objectID:oMasterLC.MasterLCID,
                                    controllerName:'MasterLC',
                                    requestactionType:'Req_for_Ammendment'
                                }
                                var modalInstance=CommonRequestservice.Instance(modalObj);
                                modalInstance.result.then(function (result)
                                {
                                    debugger;
                                    $scope.gridOptions.data[index]=result;
                                    $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                                    $scope.gridApi.selection.selectRow(result);

                                }, function () {
                                    $log.info('Modal dismissed at: ' + new Date());
                                });
                            },
                                function (response) { alert(jQuery.parseJSON(response.data).Message);}
                        );

                }
            }, $scope.gridOptions.data);
        };


        $scope.AcceptAmendment =  function ()
        {

            ////debugger;
            var data = $scope.gridApi.selection.getSelectedRows();
            var oMasterLC = data[0];
            if(oMasterLC==null || oMasterLC.MasterLCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(oMasterLC.LCStatus!=4 )
            {
                alert("Without Request for Amendment Item can't Accept!");
                return;
            }

            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.MasterLCID == data[0].MasterLCID)
                {
                    sessionStorage.setItem("MasterLCs", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("MasterLCHeader", "Master LC Ammendment");
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/MasterLC/ViewMasterLCAmendment?id="+oMasterLC.MasterLCID+"&buid="+sessionStorage.getItem('BUID');
                }
            }, $scope.gridOptions.data);

        };

        $scope.AdvanceSearch = function ()
        {
            debugger;

            var modalObj={
                modalcontroller:'ModalAdvanceSearchCtrl',
                appcontroller:'MasterLCController',
                CompareOperators:$scope.CompareOperators,
                BussinessSessions:$scope.BussinessSessions
            }
            var modalInstance=lcservice.Instance(modalObj);
            modalInstance.result.then(function (result)
            {
                debugger;
                $scope.gridOptions.data = result;
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };

        $scope.B2BLCAllocation= function ()
        {
            //debugger;
            var data = $scope.gridApi.selection.getSelectedRows();
            var oMasterLC = data[0];
            if(oMasterLC==null || oMasterLC.MasterLCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var oParameter = new Object();
            oParameter.Name = "B2B LC Allocation";

            var SelectedRowIndex=$('#tblMasterLC').datagrid('getRowIndex',oMasterLC);
            var tsv=((new Date()).getTime())/1000;
            var url = sessionStorage.getItem('BaseAddress')+"/B2BLCAllocation/ViewB2BLCAllocation?id="+oMasterLC.MasterLCID+"&ts="+tsv;
            var oB2BLCAllocation = window.showModalDialog(url, oParameter,  'dialogHeight:635px;dialogWidth:1200px;dialogLeft:100;dialogTop:10;center:yes;resizable:yes;status:no;scroll:yes');
        };

        $scope.DocumentSetup = function()
        {
            var oMasterLC= $scope.gridApi.selection.getSelectedRows()[0];
            if(oMasterLC==null || oMasterLC.MasterLCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            //RefTypeInInt = 1;//EnumMasterLCType:1:MasterLC;2:ExportLC  don't remove this code without ask developer;
            var oExportLC= {MasterLCID:oMasterLC.MasterLCID,RefTypeInInt:1,BUID:sessionStorage.getItem('BUID')};
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/ExportDocTnC/Get_ExportDocTnCSetup',$.param(oExportLC), config).then(
                                function (response)
                                {
                                    var result=jQuery.parseJSON(response.data);
                                    var modalObj={
                                        modalcontroller:'ModalAdvanceSearchCtrl',
                                        appcontroller:'MasterLCController',
                                        ExportDocTnC:result
                                    }
                                    var modalInstance=DocumentSetupService.Instance(modalObj);

                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message);}
                            );


            GetFormatInformation(oExportLC);
        };

        $scope.AmendmentHistory =  function ()
        {
            ////debugger;
            var data = $scope.gridApi.selection.getSelectedRows();
            var oMasterLC = data[0];
            if(oMasterLC==null || oMasterLC.MasterLCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(oMasterLC.LCStatus<3 )
            {
                alert("In this can't see Amendment History!");
                return;
            }
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/MasterLC/GetMasterLCReviseHistory',$.param(oMasterLC), config).then(
                                function (response)
                                {
                                    var oColumns = [];
                                    var oColumn = { field: 'FileNo', name: 'File No', width: '10%' };
                                    oColumn = { field: 'MasterLCNo', name: 'LC No', width: '10%' };oColumns.push(oColumn);
                                    oColumn = { field: 'LCStatusInString', name: 'Status', width: '15%' };oColumns.push(oColumn);
                                    oColumn = { field: 'ApplicantName', name: 'Buyer', width: '10%' };oColumns.push(oColumn);
                                    oColumn = { field: 'IssueDateInString', name: 'Issue Date', width: '8%' };oColumns.push(oColumn);
                                    oColumn = { field: 'BeneficiaryName', name: 'Beneficiary', width: '15%' };oColumns.push(oColumn);
                                    oColumn = { field: 'AdviceBankName', name: 'Advice Bank', width: '15%' };oColumns.push(oColumn);
                                    oColumn = { field: 'ApprovedByName', name: 'Approved By', width: '10%' };oColumns.push(oColumn);
                                    oColumn = { field: 'LCValue', name: 'Amount', width: '10%' };oColumns.push(oColumn);
                                    var results=jQuery.parseJSON(response.data);
                                    var modalObj={
                                        size:'lg',
                                        appcontroller:'MasterLCController',
                                        objs:results,
                                        multiSelect:false,
                                        showColumnFooter:false,
                                        pickertitle:'LC Ammendment History',
                                        objectFieldName:'MasterLCLogID',
                                        controllerName:'MasterLC',
                                        controlleractionName:'PrintMasterLCLogPreview',
                                        columns:oColumns
                                    }
                                    var modalInstance=commonhistoryservice.Instance(modalObj);

                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message);}
                            );
        };


        $scope.Cancel =  function ()
        {
            var oMasterLC= $scope.gridApi.selection.getSelectedRows()[0];
            if(oMasterLC==null || oMasterLC.MasterLCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }else if(oMasterLC.LCStatus<1 || oMasterLC.LCStatus>4)
            {
                alert("In this stage you can't Cancel the Item");
                return;
            }
            if (!confirm("Confirm to Cancel?")) return ;
            oMasterLC.ActionTypeExtra="Cancel";
            $scope.StatusChange(oMasterLC,"Cancel");
        };

        $scope.SetOrderStatusExtra =  function(oMasterLC)
        {

            switch (oMasterLC.LCStatus)
            {
                case 1 : {
                    oMasterLC.LCStatusInInt =1;
                    break;
                }
                case 2 :{
                    oMasterLC.LCStatusInInt =2;
                    break;
                }
                case 3 :{
                    oMasterLC.LCStatusInInt =3;
                    break;
                }
                case 4 :{
                    oMasterLC.LCStatusInInt =4;
                    break;
                }
                case 5 :{
                    oMasterLC.LCStatusInInt =5;
                    break;
                }

            }

            return oMasterLC;
        };

        $scope.StatusChange = function (oMasterLC,sParamIdentifier)
        {
            debugger;
            var oMasterLC = $scope.SetOrderStatusExtra(oMasterLC);
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.MasterLCID== oMasterLC.MasterLCID)
                {
                    debugger;
                    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                    $http.post(sessionStorage.getItem('BaseAddress')+"/MasterLC/ChangeStatus",$.param(oMasterLC), config).then(
                            function (response)
                            {
                                //var result=jQuery.parseJSON(response.data);
                                var oMasterLC= jQuery.parseJSON(response.data);
                                if (oMasterLC.ErrorMessage=="" || oMasterLC.ErrorMessage == null)
                                {
                                    if(sParamIdentifier=="Undo Request")
                                    {
                                        alert("Successfully Undo the Request !");
                                    }
                                    else if(sParamIdentifier=="Req_for_Ammendment")
                                    {
                                        alert("Successfully Request for Ammendment!");
                                    }else   if(sParamIdentifier=="Approve")
                                    {
                                        alert("Approved Successfully!!");

                                    }else  if(sParamIdentifier=="Undo Approve")
                                    {
                                        alert("Successfully Undo Approve !");

                                    }
                                    else  if(sParamIdentifier=="Accept Revise")
                                    {
                                        alert("Successfully Accept Revise!");

                                    }
                                    else if(sParamIdentifier=="Cancel")
                                    {
                                        alert("Successfully Cancel Selected Item!");
                                    }
                                    $scope.gridOptions.data[index]=oMasterLC;
                                    $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                                    $scope.gridApi.selection.selectRow(oMasterLC);
                                }else
                                {
                                    alert(oMasterLC.ErrorMessage);
                                }

                            },
                                function (response) { alert(jQuery.parseJSON(response.data).Message);}
                        );

                }
            }, $scope.gridOptions.data);



        };

        $scope.PrintPreview = function ()
        {
            var data = $scope.gridApi.selection.getSelectedRows();
            var oMasterLC = data[0];
            if(oMasterLC==null || oMasterLC.MasterLCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(sessionStorage.getItem('BaseAddress') + '/MasterLC/PrintMasterLCPreview?id='+oMasterLC.MasterLCID);
        };

        $scope.OrderTrack =  function () {
            debugger;
            var oMasterLC = $scope.gridApi.selection.getSelectedRows()[0];
            if(oMasterLC == null || oMasterLC.length <= 0){
                alert("Please Select an item from list");
                return;
            }
            if (oMasterLC.MLCWithOrder == false) {
                alert("Can't perfom order track operation");
                return;
            }
            var SelectedRowIndex = $scope.gridOptions.data.indexOf(oMasterLC);
            sessionStorage.setItem("MasterLCs", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("MasterLCHeader", "Add Master LC With Order");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href =sessionStorage.getItem('BaseAddress')+"/MasterLC/ViewMasterLCWithOrder?id="+oMasterLC.MasterLCID+"&buid="+sessionStorage.getItem('BUID');
        };
        $scope.PrintList = function ()
        {
            var oMasterLCs=  $scope.gridOptions.data;//$('#tblMasterLC').datagrid('getRows');
            var ids ="";
            if(oMasterLCs.length >0)
            {

                for(var i =0;i<oMasterLCs.length;i++)
                {
                    ids =ids+oMasterLCs[i].MasterLCID+",";
                }
                ids= ids.substring(0, ids.length - 1);
            }
            else
            {
                alert("Data not found ");
                return;
            }
            window.open(sessionStorage.getItem('BaseAddress') + '/MasterLC/PrintMasterList?sIDs='+ids);


        };

        $scope.searchByLCNo = function (e) {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var LCNo = $.trim($scope.LCNo);
                if (LCNo=!"")
                {
                    debugger;
                    $scope.BuyerName = "";
                    var tsv=((new Date()).getTime())/1000;
                    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                    $http.get(sessionStorage.getItem('BaseAddress') + '/MasterLC/SearchLCAndBuyer', {params:{sTempData:$scope.LCNo,bIsLC:true,BUID:sessionStorage.getItem('BUID'), ts:tsv} }, config).then(
                                function (response)
                                {
                                    var oResults = jQuery.parseJSON(response.data);
                                    if(oResults.length>0)
                                    {
                                        $scope.gridOptions.data = jQuery.parseJSON(response.data);
                                    }else{
                                        alert("Data Not found.");
                                    }

                                },
                                    function (response) { alert(jQuery.parseJSON(response.data).Message); }
                            );


                }
            }else if (code == 8) //backspace=8
            {
                $scope.LCNo='';
            }
        };

        $scope.searchByBuyerName = function (e) {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var BuyerName = $.trim($scope.BuyerName);
                if (BuyerName=!"")
                {
                    debugger;
                    $scope.LCNo = "";
                    var tsv=((new Date()).getTime())/1000;
                    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                    $http.get(sessionStorage.getItem('BaseAddress') + '/MasterLC/SearchLCAndBuyer', {params:{sTempData:$scope.BuyerName,bIsLC:false,BUID:sessionStorage.getItem('BUID'), ts:tsv} }, config).then(
                                function (response)
                                {
                                    var oResults = jQuery.parseJSON(response.data);
                                    if(oResults.length>0)
                                    {
                                        $scope.gridOptions.data = jQuery.parseJSON(response.data);
                                    }else{
                                        alert("Data Not found.");
                                    }

                                },
                                    function (response) { alert(jQuery.parseJSON(response.data).Message); }
                            );


                }
            }else if (code == 8) //backspace=8
            {
                $scope.BuyerName='';
            }
        };

        $scope.History = function ()
        {

            var data = $scope.gridApi.selection.getSelectedRows();
            var oMasterLC = data[0];
            if(oMasterLC==null || oMasterLC.MasterLCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/MasterLC/GetMasterLCHistory',$.param(oMasterLC), config).then(
                                function (response)
                                {
                                    var results=jQuery.parseJSON(response.data);
                                    var oColumns = [];
                                    var oColumn = { field: 'PreviousStatusInString', name: 'Previous State', width: '20%' };
                                    oColumn = { field: 'CurrentStatusInString', name: 'Current State', width: '20%' };oColumns.push(oColumn);
                                    oColumn = { field: 'Note', name: 'Note', width: '15%' };oColumns.push(oColumn);
                                    oColumn = { field: 'OperateByName', name: 'Operation By', width: '30%' };oColumns.push(oColumn);
                                    oColumn = { field: 'OperationDateTimeInString', name: 'Operation Date', width: '15%' };oColumns.push(oColumn);
                                    var results=jQuery.parseJSON(response.data);
                                    var modalObj={
                                        size:'lg',
                                        url:sessionStorage.getItem('BaseAddress')+'/CommonModal/CommonHistoryModal',
                                        modalcontroller:'ModalCommonHistoryCtrl',
                                        appcontroller:'MasterLCController',
                                        objs:results,
                                        multiSelect:false,
                                        showColumnFooter:false,
                                        pickertitle:'Master LC History List',
                                        objectFieldName:'MasterLCID',
                                        controllerName:'MasterLC',
                                        controlleractionName:'MasterLCHistoryPreview',
                                        columns:oColumns
                                    }
                                    var modalInstance=msModal.call(modalObj);

                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message);}
                            );

        };

        $scope.AddLCTransfer = function()
        {
            var oMasterLC = $scope.gridApi.selection.getSelectedRows()[0];
            if(oMasterLC==null || oMasterLC.MasterLCID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (parseInt(value.MasterLCID)== parseInt(oMasterLC.MasterLCID))
                {
                    sessionStorage.setItem("MasterLCs", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("MasterLCHeader", "LC Transfer For Master LC : "+oMasterLC.MasterLCNo);
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/LCTransfer/ViewLCWiseTransfers?id="+oMasterLC.MasterLCID;
                }
            }, $scope.gridOptions.data);
        };

        $scope.AddCommercialInvioice= function()
        {
            var data = $scope.gridApi.selection.getSelectedRows();
            if(data==null || data.length<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.MasterLCID == data[0].MasterLCID)
                {
                    var oMasterLC = data[0];
                    sessionStorage.setItem("MasterLCs", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("MasterLCHeader", "Commercial Invoice For Master LC : "+oMasterLC.MasterLCNo);
                    sessionStorage.setItem("BackLinkCI", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/CommercialInvoice/ViewLCWiseCommercialInvoices?id="+oMasterLC.MasterLCID;
                }
            }, $scope.gridOptions.data);
        };

        //button hide
        $scope.btnAdvanceSearch = $scope.btnAdd = $scope.btnEdit = $scope.btnDetails = $scope.btnDelete = $scope.btnRequestforApproval = $scope.btnUndoRequest = $scope.btnWaitforApproval =  false;
        $scope.btnApproved = $scope.btnUndoApproved = $scope.btnRFRevise = $scope.btnAcceptAmendment = $scope.btnB2BLCAllocation = $scope.btnHistory = $scope.btnAmendment = $scope.btnWaitforRevise =  false;
        $scope.btnAddCommerecialInvoice = $scope.btnAddLCTransfer= $scope.btnOrderTrack = $scope.btnPreView = $scope.btnPrintList = $scope.btnDocumentSetup = $scope.btnUpdatePartyInfo= false;

        //button show
        if(PermissionChecker('AdvSearch','MasterLC',oAuthorizationRolesMapping)){$scope.btnAdvanceSearch = true;}
        if(PermissionChecker('Add','MasterLC',oAuthorizationRolesMapping)){$scope.btnAdd = $scope.btnRequestforApproval = $scope.btnWaitforRevise= $scope.btnRFRevise= $scope.btnDocumentSetup= $scope.btnUpdatePartyInfo= $scope.btnOrderTrack = true; }
        if(PermissionChecker('Edit','MasterLC',oAuthorizationRolesMapping)){$scope.btnEdit = true;}
        if(PermissionChecker('View','MasterLC',oAuthorizationRolesMapping)){$scope.btnDetails = $scope.btnHistory = $scope.btnAmendment= true;}
        if(PermissionChecker('Delete','MasterLC',oAuthorizationRolesMapping)){$scope.btnDelete = true;}
        if(PermissionChecker('UndoRequest','MasterLC',oAuthorizationRolesMapping)){$scope.btnUndoRequest = true;}
        if(PermissionChecker('WaitforApproval','MasterLC',oAuthorizationRolesMapping)){$scope.btnWaitforApproval = true;}
        if(PermissionChecker('Approved','MasterLC',oAuthorizationRolesMapping)){$scope.btnApproved = $scope.btnUndoApproved= true;}
        if(PermissionChecker('Amendment','MasterLC',oAuthorizationRolesMapping)){$scope.btnAcceptAmendment = true;}
        if(PermissionChecker('Add','LCTransfer',oAuthorizationRolesMapping)){$scope.btnAddLCTransfer = true;}
        if(PermissionChecker('Add','CommercialInvoice',oAuthorizationRolesMapping)){$scope.btnAddCommerecialInvoice = true;}
        if(PermissionChecker('View','B2BLCAllocation',oAuthorizationRolesMapping)){$scope.btnB2BLCAllocation = true;}
        if(PermissionChecker('Preview','MasterLC',oAuthorizationRolesMapping)){$scope.btnPreView = true;}
        if(PermissionChecker('PrintList','MasterLC',oAuthorizationRolesMapping)){$scope.btnPrintList = true;}
        if(parseInt(oClientOperationSetting.Value)==16)//for garments format
        {
            $scope.btnAddCommerecialInvoice = true;
            $scope.btnAddLCTransfer = false;
        }else
        {
            $scope.btnAddCommerecialInvoice = false; //for buying format
        }

    });

    </script>
