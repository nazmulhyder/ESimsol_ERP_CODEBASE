@{
    ViewBag.Title = "Export Claim Settle";
}

@model IEnumerable<ESimSol.BusinessObjects.ExportClaimSettle>

<div style="padding-top:5px" ng-app="ExportClaimSettleAPP" ng-controller="ExportClaimSettleCtrl" class="form-horizontal regionExportClaimSettle">
    <div class="ui-grid-top-panel panel-danger" style="height:85px; padding:10px 0 0 10px">
        <div class="row col-md-12">
            <div class="col-md-1 text-right"><label class="control-label">Bill No:</label></div>
            <div class="col-md-2 text-left">
                <input ng-model="ExportBill.ExportLCNo" class="form-control" disabled />
            </div>
            <div class="col-md-1 text-right"><label class="control-label">Bill Amount:</label></div>
            <div class="col-md-2 text-left">
                <input ng-model="ExportBill.AmountSt" class="form-control" disabled />
            </div>
            <div class="col-md-1 text-right"><label class="control-label">L/C No:</label></div>
            <div class="col-md-2 text-left">
                <input ng-model="ExportBill.ExportLCNo" class="form-control" disabled />
            </div>
        </div>
        <div class="row col-md-12">
            <div class="col-md-1 text-right"><label class="control-label">Party Name:</label></div>
            <div class="col-md-2 text-left">
                <input ng-model="ExportBill.ApplicantName" class="form-control" disabled />
            </div>
            <div class="col-md-1 text-right"><label class="control-label">Issue Bank:</label></div>
            <div class="col-md-2 text-left">
                <input ng-model="ExportBill.BankName_Issue" class="form-control" disabled />
            </div>
            <div class="col-md-1 text-right"><label class="control-label">Advice Bank:</label></div>
            <div class="col-md-2 text-left">
                <input ng-model="ExportBill.BankName_Advice" class="form-control" disabled />
            </div>
        </div>
    </div>
    <div>
    <div class="col-md-12">
        <fieldset>
            <legend> Claim Settle Entry </legend>
            <div class="ui-grid-top-panel">
                <div class="col-md-12">
                    <div class="input-group">
                        <select style="width:25%;" ics-tab="1" ng-model="ExportClaimSettle.InoutTypeInt" ng-options="obj.id as obj.Value for obj in InOutTypes" ng-disabled="disabled" class="form-control">
                            <option value="">--Select Type--</option>
                        </select>
                        <input style="width:25%; margin-left:5px;" ics-tab="2" ng-model="ExportClaimSettle.SettleName" class="form-control input-group-sm" ng-disabled="disabled_OrderBy" placeholder="Type Settle Name" required />
                        <input style="width:25%;margin-left:5px;" ics-tab="3" ng-model="ExportClaimSettle.Amount" class="form-control input-group-sm number" ng-disabled="disabled_OrderBy" ng-keydown="KeyDownAmount($event)" placeholder="Amount" required />
                       
                        <button type="button" class="btn btn-sm  btn-primary" aria-label="left Align" ng-click="Add('')" ng-disabled="disabled_OrderBy">
                            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Add
                        </button>
                        <button style="margin-left: 5px;" class="btn btn-sm btn-danger" ng-click="Delete()"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Remove </button>
                    </div>
                </div>
            </div>
            <div ui-grid="gridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-edit ui-grid-row-edit class="grid ui-grid-selectable"></div>
        </fieldset>
    </div>
    <fieldset>
        <legend>Action</legend>
        <div class="row col-md-12 text-right">  @*ng-hide="hide_Save">*@
            <button type="button" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="close()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"> Close</span> </button>
        </div>
    </fieldset>
    </div>
</div>

<style type="text/css">

    .grid{
        width:100%; 
        height:320px;
    }
    .regionExportClaimSettle .form-horizontal .control-label{
        padding-top:3px;
    }
    .regionExportClaimSettle .form-control{
        height:26px;
        padding:0px 6px;
        font-size:12px;
    }
    .regionExportClaimSettle .col-md-12{
        width:100%;
        padding-right:5px;
        padding-left:5px;
        margin-bottom:5px;
    }
     .regionExportClaimSettle .col-md-1{
        width:9%;
        padding-right:5px;
        padding-left:5px;
    }
    .regionExportClaimSettle .col-md-2{
        width:24%;
        padding-right:5px;
        padding-left:5px;
    }
    .regionExportClaimSettle .col-md-3{
        width:20%;
        padding-right:5px;
        padding-left:5px;
    }

    .regionExportClaimSettle .col-md-4{
        width:28%;
        padding-right:5px;
        padding-left:5px;
    }

    .regionExportClaimSettle .col-md-5{
        width:40%;
        padding-right:5px;
        padding-left:0px;
    }

     .regionExportClaimSettle .col-md-10{
        width:86%;
        padding-right:5px;
        padding-left:5px;
    }
    .regionExportClaimSettle .btn-sm{
         padding:3px 10px;
     }
     .regionExportClaimSettle .input-group-addon{
         padding: 4px 8px;
     }
</style>

<script type="text/javascript">

    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oExportClaimSettles =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
    var oExportBill = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ExportBill));

    var ExportClaimSettleModule = angular.module('ExportClaimSettleAPP', ['ngAnimate', 'ui.bootstrap', 'ui.grid', 'ui.grid.selection', 'ui.grid.edit','ms.service']);
    ExportClaimSettleModule.controller('ExportClaimSettleCtrl', function ($scope, $http, $uibModal, $log, uiGridConstants, msModal, userSession) {
        debugger;

        $scope.InOutTypes = [{id:101,Value:'Add'},{id:102,Value:'Deduct'}];

        $scope.ExportBill=oExportBill;
        $scope.ExportClaimSettles=oExportClaimSettles;

        $scope.MakeGrid= function()
        {
            debugger;
            var oDetailColumns = [];
            var oColumn = { field: 'InoutTypeSt', name:'Type', width:'15%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
            oColumn = { field: 'SettleName', name:'Name', width:'45%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
            oColumn = { field: 'Amount', name:'Amount', width:'20%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
            oColumn = { field: 'SettleByName', name:'SettleBy', width:'20%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);

            $scope.gridOptions = 
            {
                enableRowSelection: true,
                enableRowHeaderSelection: false,
                multiSelect: true,
                enableColumnResizing: true,
                showColumnFooter: false,
                //enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,
                columnDefs:oDetailColumns,
                data:  $scope.ExportClaimSettles,
                onRegisterApi: function (gridApi)
                {
                    $scope.gridDetailApi = gridApi;
                }
            };

            //var oLabdipChallanDetails=$scope.LabdipChallan.LabdipChallanDetails;
            // $scope.gridOptionsLabdipChallanDetail.data=[];
            // $scope.gridOptionsLabdipChallanDetail.data= $scope.LabdipChallan.LabdipChallanDetails;
        }
        $scope.MakeGrid();

        function chkDuplicate(nPID,oList)
        {
            debugger;
            if(nPID<=0 || oList==undefined)
                return false;
            for(var i=0;i<oList.length;i++)
            {
                if(oList[i].BUID==nPID)
                {
                    return true;
                }else false;
            }
        }

        $scope.KeyDownAmount= function (e) {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) 
            {
                $scope.Add();
            }
        };

        $scope.Validation=function()
        { 
            if($scope.ExportBill.ExportBillID<=0)
            {
                alert("Sorry, This Export Bill Is Not Valid!"); return;
            }
            if($scope.ExportClaimSettle.InoutTypeInt==undefined || $scope.ExportClaimSettle.InoutTypeInt<=0)
            {
                alert("Please Select Settle Type And Try Again!");
                $('.ics-tab-1').focus();
                return false;
            }
            if($scope.ExportClaimSettle.SettleName==undefined || $scope.ExportClaimSettle.SettleName=="")
            {
                alert("Please Type Settle Name And Try Again!");
                $('.ics-tab-2').focus();
                return false;
            }
            if(isNaN(parseFloat($scope.ExportClaimSettle.Amount)) || parseFloat($scope.ExportClaimSettle.Amount) <=0)
            {
                alert("Please Type Settle Amount And Try Again!");  $('.ics-tab-3').focus(); return false;
            }
            return true
        }
        $scope.Add = function () 
        {   
            if(!$scope.Validation())return;
            $scope.ExportClaimSettle.ExportBillID = $scope.ExportBill.ExportBillID;
            $scope.ExportClaimSettle.CurrencyID = $scope.ExportBill.CurrencyID;

            $http.post(_sBaseAddress+'/ExportBill/SaveExportClaimSettle',JSON.stringify($scope.ExportClaimSettle)).then(
                function (response) 
                {
                    var result=jQuery.parseJSON(response.data);
                    if(result.ExportClaimSettleID>0 && result.ErrorMessage=="")
                    {
                        debugger;
                        alert('Added Successfully.');
                        $scope.gridOptions.data.push(result);
                        $scope.ExportClaimSettle={};
                        $('.ics-tab-1').focus();
                        // msModal.Message({headerTitle : '', bodyText:'Save Successfully.', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    }
                    else
                    {
                        alert(result.ErrorMessage);
                    }
                },
                function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
            );
        };
        $scope.Delete= function()
        {
            var data=$scope.gridDetailApi.selection.getSelectedRows();

            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'No item found to delete.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }

            if (!confirm("Confirm to Delete?")) return ;

            var oCP=
              {
                  ExportClaimSettleID: data[0].ExportClaimSettleID,
                  Contractors:data
              }

            $http.post(_sBaseAddress+'/ExportBill/DeleteExportClaimSettle',JSON.stringify(oCP)).then(
                            function (response) {
                                var result=jQuery.parseJSON(response.data);
                                if(result=="Data delete successfully")
                                {
                                    debugger;
                                    alert('Removed Successfully.');
                                    var index = $scope.gridOptions.data.indexOf(data[0]);
                                    $scope.gridOptions.data.splice(index,1);
                                }
                                else
                                {
                                    alert(result.ErrorMessage);
                                }

                            },
                            function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                      );
        }

        $scope.close = function () {
            window.close();
        };
    });

</script>
