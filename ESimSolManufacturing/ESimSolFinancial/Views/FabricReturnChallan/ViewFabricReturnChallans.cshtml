@{
    ViewBag.Title = "Fabric Return Challan List";
}

@model IEnumerable <ESimSol.BusinessObjects.FabricReturnChallan>

<div ng-app="FabricReturnChallanModule" >
    <div ng-controller="FabricReturnChallanController">
        <div class="row ui-grid-top-panel" style="width: 100%;">
            <div class="container">
                <div class="form-inline">

                    <input type="text" style="width:10%" class="form-control" ng-model="DispoNo" aria-label="Left Align" ng-keydown="SearchByDispoNo($event)" ng-hide="btnAdvSearch" placeholder="Type Dispo No And Press Enter..">
                    <input type="text" style="width:10%" class="form-control" ng-model="ReturnNo" aria-label="Left Align" ng-keydown="SearchByReturnNo($event)" ng-hide="btnAdvSearch" placeholder="Type Return Challan And Press Enter..">
                    <input type="text" style="width:10%" class="form-control" ng-model="ChallanNo" aria-label="Left Align" ng-keydown="SearchByChallanNo($event)" ng-hide="btnAdvSearch" placeholder="Type Challan No And Press Enter..">
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="AdvanceSearch()" ng-hide="btnAdvSearch"> <span class="glyphicon glyphicon-search" aria-hidden="true"> Adv.Search</span></button>

                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="add()" ng-hide="btnAdd"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> New</button>
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="edit()" ng-hide="btnEdit"> <span class="glyphicon glyphicon-edit" aria-hidden="true"></span> Edit</button>
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="delete()" ng-hide="btnDelete"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Delete</button>
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="view()" ng-hide="btnView"> <span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span> View </button>
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="Approve()" ng-hide="btnApprove"> <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Approve</button>
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="UndoApprove()" ng-hide="btnUndoApprove"> <span class="glyphicon glyphicon-circle-arrow-down" aria-hidden="true"></span> Unapprove</button>
                    @*<button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="Issue()" ng-hide="btnIssue"> <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Issue</button>*@
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="Receive()" ng-hide="btnReceive"> <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Receive</button>
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="PrintPreview()"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Preview</button>
                </div>
                @*<button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="PrintReport()"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Report</button>*@
            </div>
        </div>
        <div class="row" style="margin:0px; padding:0; width:99%">
            <div style="height:520px" ui-grid="gridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav class="grid ui-grid-selectable"></div>
        </div>
    </div>
</div>

<style type="text/css">

     .form-control{
        height:26px;
        padding:0px 6px;
        font-size:12px;
    }
    .grid {
        height: 450px;
        width: 100%;
    }

    .custom-pagination {
        margin-top: -15px;
        margin-bottom: -15px;
    }

    .spacing {
        padding-bottom: 5px;
    }
</style>

<script type="text/javascript">
    
    var oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
    var _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oFabricReturnChallans =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var _nBUID =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));

    var oCompareOperators = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));

    var _nChallanFrom = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.ChallanUnit));
    var _oWorkingUnits = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.WorkingUnits));

    debugger;
    var  FabricReturnChallanModule = angular.module('FabricReturnChallanModule', ['ngAnimate', 'ui.bootstrap', 'ui.grid','ui.grid.selection', 'ui.grid.cellNav','ui.grid.resizeColumns','ms.service']);
    FabricReturnChallanModule.controller('FabricReturnChallanController', function ($scope, $http, $uibModal,$interval,$timeout,  $log, uiGridConstants, msModal, userSession, advanceSearch ) {
        debugger;
        oFabricReturnChallans= (userSession.getData('FabricReturnChallans').length>0)? userSession.getData('FabricReturnChallans'):oFabricReturnChallans;
        $scope.CompareOperators= oCompareOperators;
        $scope.ReceiveStores=_oWorkingUnits;
     
        $scope.BUID=_nBUID;
        //$scope.btnAdd = $scope.btnEdit = $scope.btnDelete = $scope.btnApprove= $scope.btnIssue =$scope.btnReceive = $scope.btnUndoApprove =false;
        $scope.btnAdd = $scope.btnEdit = $scope.btnDelete = $scope.btnReceive =$scope.btnReturn =$scope.btnApprove=$scope.btnUndoApprove =false;

        $scope.gridOptions ={
            enableSorting: true,
            enableFullRowSelection: true,
            //enableRowHeaderSelection: false,
            enableSelectAll: false,
            multiSelect:false,
            enableHorizontalScrollbar: uiGridConstants.scrollbars.ALWAYS,
            columnDefs: [
                {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
                { field: 'ReturnNo', name: 'Return No', width: '10%' },
                { field: 'ReturnDateSt', name: 'Date', width:'10%', enableCellEdit: false },
                 { field: 'BuyerName', name: 'Buyer', width:'17%', enableCellEdit: false },
                //{ field: 'Qty', name: 'Receive Qty', width: '10%', cellClass:'text-right', cellFilter:'number:2' },
                { field: 'GetInNo', name: 'GetInNo', width:'10%', enableCellEdit: false },
                { field: 'ReturnPerson', name: 'ReturnPerson', width: '12%' },
                { field: 'IssuedByName', name: 'IssuedBy', width: '10%' },
                { field: 'ApprovedByName', name: 'ApprovedBy', width: '10%' },
                { field: 'ReceivedByName', name: 'ReceivedBy', width: '12%' },
            ],
            data:oFabricReturnChallans,
            onRegisterApi:function(gridApi)
            {
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.core.refresh();
                debugger;
                if(oFabricReturnChallans.length>0 && userSession.getRowIndex()>=0)
                {
                    $scope.gridApi.grid.modifyRows(oFabricReturnChallans);
                    $scope.gridApi.selection.selectRow(oFabricReturnChallans[userSession.getRowIndex()]);
                    $scope.RowSelect(oFabricReturnChallans[userSession.getRowIndex()]);
                }
                $scope.gridApi.selection.on.rowSelectionChanged($scope, function (row) {
                    $scope.RowSelect(row.entity ); });
                userSession.clear();
            }
        };
        $scope.RowSelect =  function (entity){
            debugger;
            if(entity.ReceivedBy==0 && entity.ApprovedBy==0)//Receive&Approve&Return
            {
                $scope.btnApprove=false;
                $scope.btnUndoApprove=true;
                $scope.btnEdit=false;
                $scope.btnDelete=false;
                $scope.btnReceive=true;
                $scope.btnReturn =true;
                CheckControll();
            }
            else if(entity.ApprovedBy!=0 && entity.ReceivedBy==0)
            { //ApproveOnly
                $scope.btnApprove=true;
                $scope.btnEdit=true;
                $scope.btnDelete=true;
                $scope.btnReturn=true;
                $scope.btnUndoApprove=false;
                $scope.btnReceive=false;
                CheckControll();
            }
            else if(entity.ReceivedBy!=0)
            {
                $scope.btnApprove=true;
                $scope.btnEdit=true;
                $scope.btnDelete=true;
                $scope.btnUndoApprove=true;
                $scope.btnReceive=true;
                $scope.btnReturn =false;
                CheckControll();
            }
            else
            {
                $scope.btnReturn =false;
                $scope.btnApprove=false;
                $scope.btnUndoApprove=false;
                $scope.btnEdit=false;
                $scope.btnDelete=false;
                $scope.btnReceive=false;
                CheckControll();
            }
        }

        $scope.SearchByReturnNo= function(event)
        {
            debugger;
            if(event.which==13)
            {
                if ($scope.ReturnNo == "" || $scope.ReturnNo ==undefined) 
                {
                    msModal.Message({ headerTitle: '', bodyText: 'Please Type Return No !!', sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                    $scope.lblLoadingMessage = false;
                    return false;
                }
                var sTempString = ""+'~'+($scope.ReturnNo == undefined ? "" : $scope.ReturnNo)+'~'+""+'~'+"";               
                var obj = {
                    Params : sTempString
                };    
                $http.post(_sBaseAddress+ '/FabricReturnChallan/GridSearch',JSON.stringify(obj)).then(
                            function (response) {
                                debugger;
                                $scope.lblLoadingMessage = true;
                                var results = jQuery.parseJSON(response.data);
                                if (results.length > 0) {
                                    $scope.gridOptions.data = results;
                                } else
                                {
                                    msModal.Message({ headerTitle: '', bodyText: 'No Data Found !!', sucessText: 'Yes', cancelText: 'Close', feedbackType: false, autoClose: false });
                                    return;
                                }
                            },
                                function (response) { alert(jQuery.parseJSON(response.data).Message); }
                        );
            }
        };
        $scope.SearchByDispoNo= function(event)
        {
            debugger;
            if(event.which==13)
            {
                if ($scope.DispoNo == "" || $scope.DispoNo ==undefined) 
                {
                    msModal.Message({ headerTitle: '', bodyText: 'Please Type Return No !!', sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                    $scope.lblLoadingMessage = false;
                    return false;
                }
                var sTempString = ""+'~'+""+'~'+($scope.DispoNo == undefined ? "" : $scope.DispoNo)+'~'+"";               
                var obj = {
                    Params : sTempString
                };    
                $http.post(_sBaseAddress+ '/FabricReturnChallan/GridSearch',JSON.stringify(obj)).then(
                            function (response) {
                                debugger;
                                $scope.lblLoadingMessage = true;
                                var results = jQuery.parseJSON(response.data);
                                if (results.length > 0) {
                                    $scope.gridOptions.data = results;
                                } else
                                {
                                    msModal.Message({ headerTitle: '', bodyText: 'No Data Found !!', sucessText: 'Yes', cancelText: 'Close', feedbackType: false, autoClose: false });
                                    return;
                                }
                            },
                                function (response) { alert(jQuery.parseJSON(response.data).Message); }
                        );
            }
        };
        $scope.SearchByChallanNo= function(event)
        {
            debugger;
            if(event.which==13)
            {
                if ($scope.ChallanNo == "" || $scope.ChallanNo ==undefined) 
                {
                    msModal.Message({ headerTitle: '', bodyText: 'Please Type Return No !!', sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                    $scope.lblLoadingMessage = false;
                    return false;
                }
                var sTempString = ""+'~'+""+'~'+""+'~'+($scope.ChallanNo == undefined ? "" : $scope.ChallanNo);               
                var obj = {
                    Params : sTempString
                };    
                $http.post(_sBaseAddress+ '/FabricReturnChallan/GridSearch',JSON.stringify(obj)).then(
                            function (response) {
                                debugger;
                                $scope.lblLoadingMessage = true;
                                var results = jQuery.parseJSON(response.data);
                                if (results.length > 0) {
                                    $scope.gridOptions.data = results;
                                } else
                                {
                                    msModal.Message({ headerTitle: '', bodyText: 'No Data Found !!', sucessText: 'Yes', cancelText: 'Close', feedbackType: false, autoClose: false });
                                    return;
                                }
                            },
                                function (response) { alert(jQuery.parseJSON(response.data).Message); }
                        );
            }
        };

        $scope.singleFilter=function(renderableRows){
            var matcherName = new RegExp(angular.uppercase($scope.Name));
            var matcherOperationTypeST = new RegExp(angular.uppercase($scope.OperationTypeST));
            renderableRows.forEach( function( row ) {
                debugger;
                var match = false;
                if (angular.uppercase(row.entity['Name']).match(matcherName) && angular.uppercase(row.entity['OperationTypeST']).match(matcherOperationTypeST)){
                    match = true;
                }
                if ( !match ){
                    row.visible = false;
                }
            });
            return renderableRows;
        };

        $scope.AdvanceSearch_OFF = function ()
        {
            debugger;
            $scope.MRNo ="";

            var modalObj={
                modalcontroller:'ModalFabricReturnChallanAdvanceSearchCtrl',
                appcontroller:'FabricReturnChallanController',
                CompareOperators:$scope.CompareOperators,
                ProductTypes:$scope.ProductTypes,
                OrderTypes:$scope.OrderTypes,
                ReceiveStores: $scope.ReceiveStores
            }
          
        };

        $scope.AdvanceSearch=function()
        {
            oColumns1 = [];
            var oColumn1 = { field: 'Name', name: 'Buyer Name',width: '70%', enableSorting: false  };oColumns1.push(oColumn1);
            oColumn1 = { field: 'Address', name: 'Address',width: '30%', enableSorting: false  };oColumns1.push(oColumn1);

            var paramObj_Buyer={
                obj:{Params: '2,3' + '~' +'@@ContractorID'+'~'+_nBUID},
                objName:'Params',
                objField:'ContractorID',
                url:_sBaseAddress+'/Contractor/ContractorSearchByNameType',
                title:'Buyer List',
                multiSelect:true,
                columns:oColumns1
            }

            var oColumns = [];
            var oColumn = { field: 'ModelNo', name: 'ModelNo',width: '30%'  };oColumns.push(oColumn);
            oColumn = { field: 'CategoryName', name: 'CategoryName',width: '40%', enableSorting: false  };oColumns.push(oColumn);

            var paramObj_Model={
                obj:{ModelNo: '@@VehicleModelID'},
                objName:'ModelNo',
                url:_sBaseAddress+'/VehicleModel/GetVehicleModels',
                title:'Model List',
                multiSelect:true,
                columns:oColumns
            }
            var oElementList = [
                
                                { DisplayName: "Return Date",   BOField: "ReturnDate",   InputType: 'date' },
                                { DisplayName: "Challan Date",  BOField: "ChallanDate",  InputType: 'date' },
                                { DisplayName: "Buyer Name",    BOField: "BuyerName",    InputType: 'picker', PickerObject:paramObj_Buyer },
                                { DisplayName: ["Yet To Approve","Yet To Receive"],  BOField: ["YetToApprove","YetToReceive"],   InputType: 'bool'},
            ];
            var modalObj={
                size:'md',
                title:"Advance Search",
                url:_sBaseAddress+'/Home/AdvanceSearch',
                CompareOperators:$scope.CompareOperators,
                HtmlElements:oElementList,
                isAdvanceSearch:true, // if TRUE: 'urlAdvanceSearch' has to be defined
                urlAdvanceSearch:_sBaseAddress + '/FabricReturnChallan/AdvSearch'
            }

            var modalInstance=advanceSearch.Instance(modalObj);
            modalInstance.result.then(function (result)
            {
                console.log(result);
                $scope.gridOptions.data=result;
            }, function ()
            {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };


        $scope.add = function () {
            sessionStorage.setItem("Operation", "New");
            sessionStorage.removeItem("SelectedRowIndex");
            sessionStorage.setItem("SelectedRowIndex",-1);
            sessionStorage.setItem("FabricReturnChallanHeader", "Add FabricReturnChallan");
            sessionStorage.setItem("FabricReturnChallans", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("FabricReturnChallan", JSON.stringify([]));
            sessionStorage.setItem("BackLink", window.location.href);

            var tsv=((new Date()).getTime())/1000;
            window.location.href = _sBaseAddress+ "/FabricReturnChallan/ViewFabricReturnChallan?nFRCID=0&nChallanFrom=0&buid="+_nBUID+"&ts="+tsv;
        };
        $scope.edit = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();

            if(data==null || data.length<=0)
            {
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            if(data[0].ReceivedBy!=0)
            {
                alert("Please Select 'Initiaziled' Production");  return;
            }
            angular.forEach($scope.gridOptions.data,function(value,index){
                if(value.FabricReturnChallanID==data[0].FabricReturnChallanID){

                    sessionStorage.setItem("Operation", "Edit");
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("FabricReturnChallanHeader", "Edit FabricReturnChallan");
                    sessionStorage.setItem("FabricReturnChallans", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("FabricReturnChallan", JSON.stringify($scope.gridOptions.data[index]));
                    sessionStorage.setItem("BackLink", window.location.href);
                    var tsv=((new Date()).getTime())/1000;
                    window.location.href = _sBaseAddress+ "/FabricReturnChallan/ViewFabricReturnChallan?nFRCID="+value.FabricReturnChallanID+"&nChallanFrom=0&buid="+_nBUID+"&ts="+tsv;
                }
            },$scope.gridOptions.data);
        };
        $scope.view = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            angular.forEach($scope.gridOptions.data,function(value,index){
                if(value.FabricReturnChallanID==data[0].FabricReturnChallanID){
                    sessionStorage.setItem("Operation", "View");
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("FabricReturnChallanHeader", "View FabricReturnChallan");
                    sessionStorage.setItem("FabricReturnChallans", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("FabricReturnChallan", JSON.stringify($scope.gridOptions.data[index]));
                    sessionStorage.setItem("BackLink", window.location.href);
                    var tsv=((new Date()).getTime())/1000;
                    window.location.href = _sBaseAddress+ "/FabricReturnChallan/ViewFabricReturnChallan?nFRCID="+value.FabricReturnChallanID+"&nChallanFrom=0&buid="+_nBUID+"&ts="+tsv;
                }
            },$scope.gridOptions.data);
        };
        $scope.delete = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();

            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'No item found to delete.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }

            if(data[0].ApprovedBy!=0)
            {
                alert("Please Select 'Initiaziled' Production");  return;
            }

            if (!confirm("Confirm to Delete?")) return ;

            $http.post(_sBaseAddress+ '/FabricReturnChallan/DeleteFRC',JSON.stringify(data[0])).then(
                            function (response) {
                                if(jQuery.parseJSON(response.data)=='Deleted'){
                                    angular.forEach($scope.gridOptions.data,function(value,index){
                                        if(value.FabricReturnChallanID==data[0].FabricReturnChallanID){
                                            $scope.gridOptions.data.splice(index,1);
                                        }
                                    },$scope.gridOptions.data);
                                    alert("Delete Successfully.");
                                }
                                else{
                                    alert(jQuery.parseJSON(response.data));
                                }
                            },
                            function (response) {alert(jQuery.parseJSON(response.data));}
                        );

        };

        $scope.Approve = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            if(data[0].ApprovedBy!=0)
            {
                alert("Please Select 'Initiaziled' Production"); return;
            }
            if(data[0].ReceivedBy!=0)
            {
                alert("Already Received!!"); return;
            }
            angular.forEach($scope.gridOptions.data,function(value,index){
                if(value.FabricReturnChallanID==data[0].FabricReturnChallanID){
                    sessionStorage.setItem("Operation", "Approve");
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("FabricReturnChallanHeader", "Approve FabricReturnChallan");
                    sessionStorage.setItem("FabricReturnChallans", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("FabricReturnChallan", JSON.stringify($scope.gridOptions.data[index]));
                    sessionStorage.setItem("BackLink", window.location.href);
                    var tsv=((new Date()).getTime())/1000;
                    window.location.href = _sBaseAddress+ "/FabricReturnChallan/ViewFabricReturnChallan?nFRCID="+value.FabricReturnChallanID+"&nChallanFrom=0&buid="+_nBUID+"&ts="+tsv;
                }
            },$scope.gridOptions.data);
        };
        $scope.UndoApprove = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            if(data[0].ApprovedBy==0)
            {
                alert("Production Yet Not Approved"); return;
            }
            if(data[0].ReceivedBy!=0)
            {
                alert("Already Received!!"); return;
            }
            angular.forEach($scope.gridOptions.data,function(value,index){
                if(value.FabricReturnChallanID==data[0].FabricReturnChallanID){
                    sessionStorage.setItem("Operation", "UndoApprove");
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("FabricReturnChallanHeader", "UndoApprove FabricReturnChallan");
                    sessionStorage.setItem("FabricReturnChallans", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("FabricReturnChallan", JSON.stringify($scope.gridOptions.data[index]));
                    sessionStorage.setItem("BackLink", window.location.href);
                    var tsv=((new Date()).getTime())/1000;
                    window.location.href = _sBaseAddress+ "/FabricReturnChallan/ViewFabricReturnChallan?nFRCID="+value.FabricReturnChallanID+"&nChallanFrom=0&buid="+_nBUID+"&ts="+tsv;
                }
            },$scope.gridOptions.data);
        };
       
        $scope.Receive = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            if(data[0].ApprovedBy==0)
            {
                alert("Production Yet Not Approved!!");  return;
            }
            if(data[0].ReceivedBy!=0)
            {
                alert("Production Already Received!!");  return;
            }
            angular.forEach($scope.gridOptions.data,function(value,index){
                if(value.FabricReturnChallanID==data[0].FabricReturnChallanID){
                    sessionStorage.setItem("Operation", "Receive");
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("FabricReturnChallanHeader", "Request FabricReturnChallan");
                    sessionStorage.setItem("FabricReturnChallans", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("FabricReturnChallan", JSON.stringify($scope.gridOptions.data[index]));
                    sessionStorage.setItem("BackLink", window.location.href);
                    var tsv=((new Date()).getTime())/1000;
                    window.location.href = _sBaseAddress+ "/FabricReturnChallan/ViewFabricReturnChallan?nFRCID="+value.FabricReturnChallanID+"&nChallanFrom=0&buid="+_nBUID+"&ts="+tsv;
                }
            },$scope.gridOptions.data);
        };

        $scope.PrintPreview = function ()
        {
            var data = $scope.gridApi.selection.getSelectedRows();
            var oFabricReturnChallan = data[0];
            if(oFabricReturnChallan==null || oFabricReturnChallan.FabricReturnChallanID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(_sBaseAddress + '/FabricReturnChallan/PrintPreviewFabricReturnChallan?sParams='+oFabricReturnChallan.FabricReturnChallanID+"&nBUID="+$scope.BUID);
        };
       
        //button hide
        $scope.btnAdd = $scope.btnEdit = $scope.btnView = $scope.btnDelete = $scope.btnApprove =$scope.btnReceive = $scope.btnReturn = $scope.btnAdvSearch = true ;
        //button show
        if(PermissionChecker('Add','FabricReturnChallan',oAuthorizationRolesMapping)){$scope.btnAdd = false; }
        if(PermissionChecker('Edit','FabricReturnChallan',oAuthorizationRolesMapping)){$scope.btnEdit = false;}
        if(PermissionChecker('View','FabricReturnChallan',oAuthorizationRolesMapping)){$scope.btnView = false;}
        if(PermissionChecker('Delete','FabricReturnChallan',oAuthorizationRolesMapping)){$scope.btnDelete = false;}
        if(PermissionChecker('Approved','FabricReturnChallan',oAuthorizationRolesMapping)){$scope.btnApprove = false;}
        //if(PermissionChecker('Issued','FabricReturnChallan',oAuthorizationRolesMapping)){$scope.btnIssue = false;}
        if(PermissionChecker('Received','FabricReturnChallan',oAuthorizationRolesMapping)){$scope.btnReceive = $scope.btnReturn =false;}
        //if(PermissionChecker('UndoRequest','FabricReturnChallan',oAuthorizationRolesMapping)){$scope.btnUndoApprove = false;}
        if(PermissionChecker('AdvSearch','FabricReturnChallan',oAuthorizationRolesMapping)){$scope.btnAdvSearch = false;}

        function CheckControll()
        {
            debugger;
            if($scope.btnAdd == false  && !PermissionChecker('Add','FabricReturnChallan',oAuthorizationRolesMapping))
                {$scope.btnAdd = true; } 
            if($scope.btnEdit == false && !PermissionChecker('Edit','FabricReturnChallan',oAuthorizationRolesMapping))
                {$scope.btnEdit = true;}  
            if($scope.btnView == false && !PermissionChecker('View','FabricReturnChallan',oAuthorizationRolesMapping))
                {$scope.btnView = true;}  
            if($scope.btnApprove == false && !PermissionChecker('Approved','FabricReturnChallan',oAuthorizationRolesMapping))
                {$scope.btnApprove = true;}  
            if($scope.btnDelete == false && !PermissionChecker('Delete','FabricReturnChallan',oAuthorizationRolesMapping))
                {$scope.btnDelete = true;}  
            if($scope.btnIssue == false && !PermissionChecker('Issued','FabricReturnChallan',oAuthorizationRolesMapping))
                {$scope.btnIssue = true;} 
            if($scope.btnReceive == false && !PermissionChecker('Received','FabricReturnChallan',oAuthorizationRolesMapping))
            {$scope.btnReceive = true;}  
            if($scope.btnUndoApprove == false && !PermissionChecker('UndoRequest','FabricReturnChallan',oAuthorizationRolesMapping))
                {$scope.btnUndoApprove = true;}  
            if($scope.btnAdvSearch == false && !PermissionChecker('AdvSearch','FabricReturnChallan',oAuthorizationRolesMapping))
                {$scope.btnAdvSearch = true;} 
        }
        
    });
</script>
                       


              
