@{
    ViewBag.Title = "Financial Deshboard";
}
@model ESimSol.BusinessObjects.CapacityAllocation
<html>
<body>
    <div id="MainBord" class="easyui-layout menuMainCollectionTable" style="width:100%">
        <div data-options="region:'center',title:'Accounts & Finance'" style="width:50%;">
            <table style="width:100%;height:65%" id="tblFPMgtReports" class="easyui-datagrid" fitcolumns="true" showfooter="true" toolbar="#toolBarAccounts">
                <thead data-options="frozen:true">
                    <tr>
                        <th field="BUShortName" width="15%">Unit</th>
                    </tr>
                </thead>
                <thead>
                    <tr>
                        <th field="TotalRecAndMarginSt" width="20%" align="right">Receivables Margin</th>
                        <th field="TotalBTBLiabilitySt" width="15%" align="right">BTB Liability</th>
                        <th field="TotalLCContactSt" width="15%" align="right" >L/C Contract</th>
                        <th field="TotalSTLAmountSt" width="17%" align="right" >Short/Term Borrowing</th>
                        <th field="TotalLTLAmountSt" width="17%" align="right">Long/Term Borrowing</th>
                    </tr>
                </thead>
            </table>
            <div id="toolBarAccounts">
               Curency: <select id="cboCurrency" style="width:70px;"></select>&nbsp;
                <input type="checkbox" id="chkIsApproved" checked />&nbsp;Is Approved&nbsp;
                Position Date:<input id="txtStartDatePosition" type="text" class="easyui-datebox" style="width:100px;" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp;
                Rate: <input id="txtCRate" type="text"  style="width:50px;" />&nbsp;
                <a id="btnRefreshAccounts" href="javascript:void(0)" class="easyui-linkbutton" onclick="RefreshAccounts()" iconcls="icon-search" plain="true">Refresh</a>
                <a id="btnPrintFinancial" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print</a>
                <a id="btnReLoad" href="javascript:void(0)" class="easyui-linkbutton" onclick="ReLoad()" iconcls="icon-reload" plain="true">ReLoad</a>
            </div>
            <table width="100%">
                <tr>
                    <td style="width:45%">
                        <table border="1">
                            <tr><td colspan="2">Total Export As of Now</td></tr>
                            <tr><td>Qty:</td><td style="text-align:right"><label id="lblExportQty">0</label></td></tr>
                            <tr><td>Value:</td><td style="text-align:right"><label id="lblExportValue">0</label></td></tr>
                        </table>
                    </td>
                    <td style="width:15%;text-align:center;">
                        <input type="button" id="btnBalanceSheet" onclick="BalanceSheet()" value="Balance Sheet"/><br/><br />
                        <input type="button" id="btnInComeStatement" onclick="IncomeStatement()" value="Income Statement" />
                    </td>
                    <td style="width:40%">
                        <table border="0">
                            <tr><td style="font-weight:bold;">SurPlus/(Shortage):</td> <td style="width:15px;">&nbsp;</td> <td style="text-align:right"><label id="lblSurplus">0</label></td></tr>
                            <tr><td>Operation Cost:</td><td style="width:15px;">&nbsp;</td><td style="text-align:right"><label id="lblOperationCost" style="font-weight:normal;">0</label></td></tr>
                            <tr><td>BTB Cost:</td><td style="width:15px;">&nbsp;</td><td style="text-align:right;"><label id="lblBTBCost" style="font-weight:normal;">0</label> </td></tr>
                            <tr><td style="font-weight:bold;">Net SurPlus:</td><td style="width:15px;">&nbsp;</td><td style="text-align:right"><label id="lblNetSurPlus">0</label></td></tr>
                        </table>
                    </td>
                </tr>
            </table>
        </div>
        <div data-options="region:'east',split:true,title:'Booking Status',collapsible:false" style="width:50%;">
            <table id="tblBookingStaus" class="easyui-datagrid" style="width:100%;height:65%" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolBarBooking">
                <thead>
                    <tr>
                        <th field="ShipmentDateSt" width="12%">Month </th>
                        <th field="MonthWiseCapacity" align="right" width="20%">Total Capacity</th>
                        <th field="MonthWiseBooking" align="right" width="20%">Total Booking</th>
                        <th field="MonthWiseFreeCapacity" align="right" width="20%">Free Capacity</th>
                        <th field="MonthWiseValue" align="right" width="20%" formatter="formatPrice">Total Value</th>
                    </tr>
                </thead>
            </table>
            <div id="toolBarBooking">
                Date:<input id="txtStartDateBooking" type="text" class="easyui-datebox" style="width: 99px;" data-options="formatter:icsdateformat,parser:icsdateparser" /> To <input id="txtEndDateBooking" type="text" class="easyui-datebox" style="width:99px;" data-options="formatter:icsdateformat,parser:icsdateparser" />
                <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" onclick="RefreshBooking()" iconcls="icon-search" plain="true">Search</a>
                <a id="btnPrintBooking" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print</a>
                <a id="btnPrintBookingInExcel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true">XL</a>
                <a id="btnReLoad" href="javascript:void(0)" class="easyui-linkbutton" onclick="ReLoad()" iconcls="icon-reload" plain="true">ReLd</a>
            </div>
            <div style="text-align:left;width:100%">
                <table style="text-align:center; width:60%" border="1">
                    <tr>
                        <td rowspan="3" style="width:35%">Periodic Summery (<label id="lblMonthRange" style="font-size:11px;font-weight:normal;"> 03 Months</label>):</td>
                        <td style="width:35%">Total Capacity:</td>
                        <td style="text-align:right;width:30%"><label id="lblTotalCapacity">0</label></td>
                    </tr>
                    <tr>
                        <td style="width:35%">Total Booking:</td>
                        <td style="text-align:right;width:30%"><label id="lblTotalBooking">0</label></td>
                    </tr>
                    <tr>
                        <td style="width:35%">Free Capacity:</td>
                        <td style="text-align:right;width:30%"><label id="lblFreeCapacity">0</label></td>
                    </tr>
                </table>
                <table border="0" style="text-align:center;">
                    <tr>
                        <td colspan="3" style="text-align:center;">Average FOB :<label id="lblAverageFOB">0</label></td>
                    </tr>
                </table>
            </div>
        </div>
        <div data-options="region:'south',split:true" style="height:250px;">
            <div class="easyui-layout" data-options="fit:true">
                <div data-options="region:'center', title:'Production'" style="width:50%">
                    <table id="tblProductionPlan" title="" class="easyui-datagrid" style="width:100%;height:100%" autorowheight="true" data-options="singleSelect: true,rownumbers:true,pagination:false,autoRowHeight:false,toolbar: '#toolbar'"></table>
                    <div style="text-align:left" id="toolbar">
                        BU : <select id="cboBU" style="width:120px;"></select>&nbsp;
                        P/U : <select id="cboPUnit" style="width:100px;"></select>&nbsp;
                        Date :<input id="txtStartDate" type="text" class="easyui-datebox" style="width: 100px;" data-options="formatter:icsdateformat,parser:icsdateparser" /> To &nbsp;&nbsp;<input id="txtEndDate" type="text" class="easyui-datebox" style="width: 100px;" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" onclick="RefreshProductionPlan()" iconcls="icon-search" plain="true">Refresh</a>
                        <a id="btnPlanDetails" href="javascript:void(0)" class="easyui-linkbutton" onclick="DetilsPlan()" iconcls="icon-details" plain="true">Details</a>
                        <a id="btnReLoad" href="javascript:void(0)" class="easyui-linkbutton" onclick="ReLoad()" iconcls="icon-reload" plain="true">ReLoad</a>
                        <table>
                        <tr>
                            <td style="width:15px;background-color:#0B3B17"></td> 
                            <td style="width:20px;">Full</td>
                            <td style="width:15px;background-color:#eee63f"></td>
                            <td style="width:20px;">Partial</td>
                            <td style="width:15px;background-color:#f34430"></td>
                            <td style="width:20px;">Blank</td>
                        </tr>
                        </table>
                    </div>
                </div>
                <div data-options="region:'east',title:'HR/Payroll', split:true,collapsible:false" style="width:50%"></div>
            </div>
        </div>
    </div>
</body>
</html>
<script type="text/javascript">
    var oCapacityAllocation = null;
    var oFPMgtReports=[];
    var oAllocations = [],oCurrencyList = [], oBUs =[], oProductionUnits = [], oPLineConfigures = [], oProductionPlanData=[];
    var oFPData = null;
    var _sBaseAddress="";
    var sBookingDateRange = "";
    var sPlanDateRange = "";
    var oComapny = null;
    $(document).ready(function () {
        debugger;
        oCapacityAllocation =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        oFPMgtReports =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.FPMgtReports));
        oAllocations =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Allocations));
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        oBUs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        oProductionUnits = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ProductionUnits));
        oPLineConfigures = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PLineConfigures));
        oProductionPlanData = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ProductionPlanData));
        oCurrencyList = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CurrencyList));
        oFPData = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FPData));
        sBookingDateRange = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BookingDateRange));
        sPlanDateRange = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PlanDateRange));
        oComapny = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Comapny));
        $('#Mainlayout').layout('collapse', 'west');
        $('#MainLayout').layout('expand', 'west');
        //$("#txtCRate").icsNumberField({});
        $("#txtCRate").val(80);
        $("#cboCurrency").icsLoadCombo({List: oCurrencyList,OptionValue: "CurrencyID",DisplayText: "CurrencyName",InitialValue:"--Select One--"});
        $("#cboBU").icsLoadCombo({List: oBUs,OptionValue: "BusinessUnitID",DisplayText: "Name",InitialValue:"--Select One--"});
        $("#cboPUnit").icsLoadCombo({List: oProductionUnits,OptionValue: "ProductionUnitID",DisplayText: "ShortName",InitialValue:"Default"});
        $('#txtStartDatePosition').datebox('setValue', icsdateformat(new Date()));
        debugger;
        $('#txtStartDate').datebox('setValue',sPlanDateRange.split('~')[0]);
        $('#txtEndDate').datebox('setValue',sPlanDateRange.split('~')[1]);
        $('#txtStartDateBooking').datebox('setValue',sBookingDateRange.split('~')[0]);
        $('#txtEndDateBooking').datebox('setValue',sBookingDateRange.split('~')[1]);
        $("#cboCurrency").val(2);
        DynamicRefreshList(oFPMgtReports, 'tblFPMgtReports');
        CalculateAccountsSurPlus();
        LoadBookingTables();
        MakeDynamicTable();
        LoadProductionPlans();
    });
    function RefreshAccounts()
    {
        var dPositionDate = icsdateformat(new Date($('#txtStartDatePosition').datebox('getValue')));
        if(parseInt($("#cboCurrency").val())<=0)
        {
            alert("Please Select Currency.");
            return;
        }
        if(parseFloat($("#txtCRate").val())<=0)
        {
            alert("Convertion Rate Should be Greater than 0.");
            return;
        }
        var oFPMgtReport = {
            Param:dPositionDate+'~'+$("#cboCurrency").val()+'~'+$("#chkIsApproved").is(":checked")+'~'+ $("#txtCRate").val()
        };
        $.icsProgressBar(true);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/CapacityAllocation/GetAccountsWithFinance",
            traditional: true,
            data:  JSON.stringify(oFPMgtReport),
            contentType: "application/json; charset=utf-8",
            success: function (data)
            {
                $.icsProgressBar(false);
                debugger;
                var oFPMgtReport = jQuery.parseJSON(data);
                oFPData = oFPMgtReport.FPData;
                oFPMgtReports = oFPMgtReport.FPMgtReports;
                DynamicRefreshList(oFPMgtReports, 'tblFPMgtReports');
                CalculateAccountsSurPlus();
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }
    function CalculateAccountsSurPlus()
    {

        var nRate = (parseInt(oComapny.BaseCurrencyID)==parseInt($("#cboCurrency").val()))?1:parseFloat($("#txtCRate").val());
        var TotalRecAndMargin=parseFloat(ICS_TotalCalculation(oFPMgtReports,'TotalRecAndMargin'))*nRate;
        var TotalBTBLiability=parseFloat(ICS_TotalCalculation(oFPMgtReports,'TotalBTBLiability'))*nRate;
        var TotalLCContact=parseFloat(ICS_TotalCalculation(oFPMgtReports,'TotalLCContact'))*parseFloat($("#txtCRate").val());
        var TotalSTLAmount=ICS_TotalCalculation(oFPMgtReports,'TotalSTLAmount');
        var TotalLTLAmount=ICS_TotalCalculation(oFPMgtReports,'TotalLTLAmount');

        var oCurrency = ICS_FindObject(oCurrencyList,'CurrencyID',parseInt($("#cboCurrency").val()));

        $('#tblFPMgtReports').datagrid('reloadFooter',[{
            BUShortName:'Total',
            TotalRecAndMarginSt:TotalRecAndMargin<0?'BDT ('+formatPriceWithZeroDecimal(TotalRecAndMargin*-1,0)+')':'BDT '+formatPriceWithZeroDecimal(TotalRecAndMargin,0),
            TotalBTBLiabilitySt:TotalBTBLiability<0?'BDT ('+formatPriceWithZeroDecimal(TotalBTBLiability*-1,0)+')':'BDT '+formatPriceWithZeroDecimal(TotalBTBLiability,0),
            TotalLCContactSt:TotalLCContact<0?'BDT ('+formatPriceWithZeroDecimal(TotalLCContact*-1,0)+')':'BDT '+formatPriceWithZeroDecimal(TotalLCContact,0),
            TotalSTLAmountSt:TotalSTLAmount<0?'BDT ('+formatPriceWithZeroDecimal(TotalSTLAmount*-1,0)+')':'BDT '+formatPriceWithZeroDecimal(TotalSTLAmount,0),
            TotalLTLAmountSt:TotalLTLAmount<0?oCurrency.Symbol+' ('+formatPriceWithZeroDecimal(TotalLTLAmount*-1,0)+')':oCurrency.Symbol+' '+formatPriceWithZeroDecimal(TotalLTLAmount,0)
        }]);


        var Value_A = 0, Value_B = 0, Value_C = 0, Value_D = 0;
        Value_A = TotalRecAndMargin;
        Value_B = TotalLCContact;//ICS_TotalCalculation(oFPMgtReports,'TotalLCContact')*parseFloat( $("#txtCRate").val());
        Value_C = TotalBTBLiability;
        Value_D = TotalSTLAmount;//ICS_TotalCalculation(oFPMgtReports,'TotalSTLAmount')*parseFloat( $("#txtCRate").val());
        $('#lblSurplus').html(formatPriceWithZeroDecimal( parseFloat(parseFloat(Value_A)+parseFloat(Value_B))- parseFloat(parseFloat(Value_C)+parseFloat(Value_D)),0));
        $('#lblNetSurPlus').html('<u>'+formatPriceWithZeroDecimal((parseFloat(parseFloat(Value_A)+parseFloat(Value_B))- parseFloat(parseFloat(Value_C)+parseFloat(Value_D)))-((oFPData==null?0:parseFloat(oFPData.OperationalCost))+(oFPData==null?0:parseFloat(oFPData.BTBCost))),0)+'</u>');

        if(oFPData!=null)
        {
            $('#lblExportQty').html(formatPriceWithZeroDecimal(parseFloat(oFPData.ExportHQty)+parseFloat(oFPData.ExportQty),0));
            $('#lblExportValue').html(formatPriceWithZeroDecimal(parseFloat(oFPData.EHValue)+parseFloat(oFPData.ExportValue),0));
            var sOperationalCost = parseFloat(oFPData.OperationalCost)<0?"("+formatPriceWithZeroDecimal(parseFloat(oFPData.OperationalCost*-1),0)+")":formatPriceWithZeroDecimal(parseFloat(oFPData.OperationalCost),0);
            $('#lblOperationCost').html(sOperationalCost);
            var sBTBCost = parseFloat(oFPData.BTBCost)<0?"("+formatPriceWithZeroDecimal(parseFloat(oFPData.BTBCost*-1),0)+")":formatPriceWithZeroDecimal(parseFloat(oFPData.BTBCost),0);
            $('#lblBTBCost').html('<u>'+sBTBCost+'</u>');
        }
    }
    function RefreshProductionPlan()
    {
        debugger;
        var dStartDate = new Date($('#txtStartDate').datebox('getValue'));
        var dEndDate = new Date($('#txtEndDate').datebox('getValue'));
        var oProductionExecutionPlanDetail = {
            StartDate:dStartDate,
            EndDate:dEndDate,
            BUID : $('#cboBU').val(),
            ProductionUnitID:$('#cboPUnit').val()
        };
        RefreshList([]);
        $.icsProgressBar(true);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/CapacityAllocation/GetPlans",
            traditional: true,
            data:  JSON.stringify(oProductionExecutionPlanDetail),
            contentType: "application/json; charset=utf-8",
            success: function (data)
            {
                debugger;
                $.icsProgressBar(false);
                var result = data;
                oPLineConfigures = result.PLineConfigures;
                oProductionPlanData =result.Dynamics;
                MakeDynamicTable();
                RefreshList([]);
                LoadProductionPlans();
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }
    function ReLoad()
    {
        window.location.href = window.location.href;
    }
    function MakeDynamicTable()
    {
        var dStartDate = new Date($('#txtStartDate').datebox('getValue'));
        var dEndDate = new Date($('#txtEndDate').datebox('getValue'));
        var tblColums=[], tblFrozenColumns = [];
        var oColumn=null;
        oColumn  ={field :"DateField", title:"Detail", width:70 };
        tblFrozenColumns.push(oColumn);
        var count =0;
        for(var i = 0;i<oPLineConfigures.length;i++)
        {
            count++;
            oColumn= {
                field:"Line"+oPLineConfigures[i].PLineConfigureID,
                title:oPLineConfigures[i].LineNo+'</br>('+oPLineConfigures[i].PUShortName+')',
                width:50,
                align: "left"
            };
            tblColums.push(oColumn);
        }
        $('#tblProductionPlan').datagrid({frozenColumns:[tblFrozenColumns], columns:[tblColums]});
    }
    function LoadProductionPlans()
    {
        debugger;
        var results= oProductionPlanData;
        var TempList = [];
        for(var i=0; i<results.length;i++)
        {
            var dynamicObj=new Object();
            var obj=results[i];
            for(var j=0; j<obj.length;j++)
            {
                if(j==0)
                {
                    dynamicObj[obj[j].Key]=obj[j].Value;
                    continue;
                }
                dynamicObj[obj[j].Key]=obj[j].Value;
            }
            TempList.push(dynamicObj);
        }
        RefreshList(TempList);
    }
    function RefreshList(oProductionPlans)
    {
        var data=oProductionPlans;
        data={"total":""+data.length+"","rows":data};
        $('#tblProductionPlan').datagrid('loadData',data);
    }
    function DetilsPlan()
    {
        debugger;
        window.open(_sBaseAddress+ '/ProductionTimeSetup/ViewProductionPlan?OrderRecapID=0&menuid=0','_blank');
    }
    function RefreshBooking()
    {
        var dStartDate = icsdateformat( new Date($('#txtStartDateBooking').datebox('getValue')));
        var dEndDate = icsdateformat(new Date($('#txtEndDateBooking').datebox('getValue')));
        if(new Date(dStartDate)> new Date(dEndDate))
        {
            alert("Start Date Should be Less than End Date.");
            return;
        }
        var oCapacityAllocation = {Param:dStartDate+'~'+dEndDate};
        $.icsProgressBar(true);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/CapacityAllocation/SetSessionData",
            traditional: true,
            data:  JSON.stringify(oCapacityAllocation),
            contentType: "application/json; charset=utf-8",
            success: function (data)
            {
                debugger;
                $.icsProgressBar(false);
                window.location.href = window.location.href;

            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }
    function LoadBookingTables()
    {
        debugger;
        var nTotalCapacity=ICS_TotalCalculation(oAllocations,'MonthWiseCapacity');
        var nTotalBooking=ICS_TotalCalculation(oAllocations,'MonthWiseBooking');
        var nTotalValue = ICS_TotalCalculation(oAllocations,'MonthWiseValue');
        var nFreeCapacity=parseFloat(nTotalCapacity)-parseFloat(nTotalBooking);


        $('#lblMonthRange').html(oAllocations[0].ShipmentDateSt+" To "+oAllocations[oAllocations.length-1].ShipmentDateSt);
        $('#lblTotalCapacity').html(formatPriceWithZeroDecimal(nTotalCapacity,0));
        $('#lblTotalBooking').html(formatPriceWithZeroDecimal(nTotalBooking,0));
        $('#lblFreeCapacity').html(formatPriceWithZeroDecimal(nFreeCapacity,0));
        $('#lblAverageFOB').html(formatPrice(parseFloat(nTotalValue)/parseFloat(nTotalBooking),0));


        $('#tblBookingStaus').datagrid({
            data:oAllocations,
            view: detailview,
            detailFormatter:function(index,row){
                return '<div id="divBookingStatus" style="padding:2px;width:100%"><table id="tblBookingStaus" class="ddv" ></table></div>';
            },
            onExpandRow: function(index,row){
                var ddv = $(this).datagrid('getRowDetail',index).find('table.ddv');
                ddv.datagrid({
                    data:row.MonthWiseDetailsAllocations,
                    fitColumns:true,
                    singleSelect:true,
                    rownumbers:true,
                    loadMsg:'',
                    height:'auto',
                    columns:[[
                        {field:'BuyerName',title:'Buyer',width:130},
                        {field:'Quantity',title:'Allocated Qty',width:100,align:'right'},
                        {field:'OrderQty',title:'Order/Booking Qty', formatter:function(value,row,index){ return formatPrice(value); },width:100,align:'right'},
                        {field:'OrderValue',title:'Total Value', formatter:function(value,row,index){ return formatPrice(value); },width:100,align:'right'},
                        {field:'BuyerIDWithDateInString',title:'Print', formatter:function(value,row,index){ return formatButtonPrint(value); },width:100,align:'right'}
                        //BuyerIDWithDate
                    ]],
                    onResize:function(){
                        $('#tblBookingStaus').datagrid('fixDetailRowHeight',index);
                    },
                    onLoadSuccess:function(){
                        setTimeout(function(){
                            $('#tblBookingStaus').datagrid('fixDetailRowHeight',index);
                        },0);
                    }
                });
                $('#tblBookingStaus').datagrid('fixDetailRowHeight',index);
            }
        });
    }


    
    function formatButtonPrint(value)
    {
        debugger
        var values=value.split("~");
        var nBuyerID=0;
        var dShipmentDates=[];
        var dShipmentDate=null;
        values=value.split("~");
        nBuyerID=values[0];
        dShipmentDates=values[1].split(' ');
        dShipmentDate = dShipmentDates[0]+'~'+dShipmentDates[1]+'~'+dShipmentDates[2];
        var sLink = "<a  id='btnPrint"+nBuyerID+"' href='javascript:void(0)'  onclick = ORPrint("+nBuyerID+",'"+dShipmentDate+"',true)>pdf</a> &nbsp; <a  href='javascript:void(0)' id='btnPrintXL"+nBuyerID+"' onclick = ORPrint("+nBuyerID+",'"+dShipmentDate+"',false)>XL</a>";
        $('#btnPrint'+nBuyerID).linkbutton({ iconCls:'icon-print', plain: true });
        $('#btnPrintXL'+nBuyerID).linkbutton({ iconCls:'icon-excel', plain: true });
        return sLink;
    }

    function ORPrint(nBuyerID,sShipmentDate,bIsPdf )
    {
        debugger;
        var dShipmentDate = sShipmentDate.split('~').join(' ');
        if(bIsPdf)
        {
            window.open(_sBaseAddress+ '/CapacityAllocation/PrintOrderRecapList?nBuyerID='+nBuyerID+'&dShipmentDate='+dShipmentDate,'_blank');
        }else{
            window.open(_sBaseAddress+ '/CapacityAllocation/PrintOrderRecapListInExcel?nBuyerID='+nBuyerID+'&dShipmentDate='+dShipmentDate,'_blank');
        }
    }

    function BalanceSheet()
    {
        window.open(_sBaseAddress+ '/BalanceSheet/ViewFinancialPosition?menuid=0','_blank');
    }
    function IncomeStatement()
    {
        window.open(_sBaseAddress+ '/IncomeStatement/ViewComprehensiveIncome?menuid=0','_blank');
    }

    $('#btnPrintFinancial').click(function(){
        var dPositionDate = icsdateformat(new Date($('#txtStartDatePosition').datebox('getValue')));
        if(parseInt($("#cboCurrency").val())<=0)
        {
            alert("Please Select Currency.");
            return;
        }
        if(parseFloat($("#txtCRate").val())<=0)
        {
            alert("Convertion Rate Should be Greater than 0.");
            return;
        }
        var Param =dPositionDate+'~'+$("#cboCurrency").val()+'~'+$("#chkIsApproved").is(":checked")+'~'+ $("#txtCRate").val();
        window.open(_sBaseAddress+ '/CapacityAllocation/PrintFPMgtReport?sParam='+Param,'_blank');

    });
    $('#btnPrintBooking').click(function(){
        var dStartDate = icsdateformat( new Date($('#txtStartDateBooking').datebox('getValue')));
        var dEndDate = icsdateformat(new Date($('#txtEndDateBooking').datebox('getValue')));
        var Param =dStartDate+'~'+dEndDate;
        if(dStartDate>dEndDate)
        {
            Param =icsdateformat(new Date())+'~'+icsdateformat(new Date())
        }
        window.open(_sBaseAddress+ '/CapacityAllocation/PrintBookingStatus?sParam='+Param,'_blank');

    });
    $('#btnPrintBookingInExcel').click(function(){
        var dStartDate = icsdateformat( new Date($('#txtStartDateBooking').datebox('getValue')));
        var dEndDate = icsdateformat(new Date($('#txtEndDateBooking').datebox('getValue')));
        var Param =dStartDate+'~'+dEndDate;
        if(dStartDate>dEndDate)
        {
            Param =icsdateformat(new Date())+'~'+icsdateformat(new Date())
        }
        window.open(_sBaseAddress+ '/CapacityAllocation/PrintReportXL?sParam='+Param,'_blank');

    });

    
</script>
