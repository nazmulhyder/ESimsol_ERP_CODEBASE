@model IEnumerable<ESimSol.BusinessObjects.DULedger>
    @{
        ViewBag.Title = "DU Ledger";
    }
<div ng-app="DUSApp" class="form-horizontal regionDULedger" style="width:1020p!important">
    <div ng-controller="DUSCntrl">
        <div class="ui-grid-top-panel" style="height:40px">
            <div class="text-left" style="padding-left:3px;padding-top:6px">
                <div class="row col-md-12">
                    @*<div class="col-md-2 text-right" style="padding-left:35px;">

                            <select style=" " class=" form-control" ng-model="cboDate" ng-change="DateChange()" ng-options="item.id as item.Value for item in CompareOperators">
                                <option value="">--Slecet One</option>
                            </select>
                        </div>*@
                    <div class="form-inline" style="padding-left:10px;">
                        <span class="control-label">Order Type: {{DULedger.DyeingOrderTypeSt}} || Payment Type: {{DULedger.PaymentTypeSt}} || Date: {{DULedger.StartDateSt}} To {{DULedger.EndDateSt}}  || {{DULedger.RefName}}  </span>
                        @*<span style="padding-left:35px;">||  View Type:</span>
                        <div class="input-group">
                            <select style=" " class=" form-control" ng-model="DULedger.ViewType" ng-change="DateChange()" ng-options="item.id as item.Value for item in CompareOperators">
                                @*<option value="">--Slecet One</option>
                            </select>
                        </div>
                        <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Refresh()"> <span class="glyphicon glyphicon-refresh" aria-hidden="true"></span> Refresh</button>
                            <span></span>
                            <div class="input-group date date-container">
                                <input type="text" class="form-control" style="width:100px" ng-model="" disabled><span class="input-group-addon"><i class="glyphicon glyphicon-th" ></i></span>
                            </div>
                        *@
                    </div>
                </div>
            </div>
        </div>

        <div>
            <div style="height:465px" ui-grid="gridOptions" ui-grid-selection ui-grid-pinning class="grid"></div>
        </div>
        @*----ACTION-----*@
        <div style="height:10%">
            <fieldset>
                <legend>Action</legend>
                <div class="row col-md-12 text-right">
                    <div style="float:left; padding-left:20px">
                        <button type="button" class="btn btn-sm btn-primary" style="" aria-label="Left Align" ng-click="PrintDetails()"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Print</button>
                    </div>
                    <button type="button" id="btnclose" class="btn btn-danger btn-sm" aria-label="Left Align" ng-click="Close()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"> Close</span> </button>
                </div>
            </fieldset>
        </div>
    </div>
</div>

<style type="text/css">
    .regionDULedger .form-horizontal .control-label {
        padding-top: 3px;
    }

    .regionDULedger .form-control {
        height: 26px;
        padding: 0px 6px;
        font-size: 12px;
    }

    .regionDULedger .col-md-12 {
        width: 100%;
        padding-right: 5px;
        padding-left: 5px;
        margin-bottom: 5px;
    }

    .regionDULedger .col-md-2 {
        width: 16.6%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionDULedger .col-md-3 {
        width: 20%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionDULedger .col-md-4 {
        width: 28%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionDULedger .col-md-5 {
        width: 40%;
        padding-right: 5px;
        padding-left: 0px;
    }

    .regionDULedger .col-md-6 {
        width: 50%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionDULedger .col-md-10 {
        width: 83%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionDULedger .col-md-8 {
        width: 69%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionDULedger .btn-sm {
        padding: 3px 10px;
    }

    .regionDULedger .input-group-addon {
        padding: 4px 8px;
    }

    .ui-grid-row .ui-grid-cell {
        /*background-color: inherit !important;*/
    }

    .ui-grid-cell.lightGreen {
        background-color: #B5DA69 !important; /*90EE90*/ /*8ab92d*/
        color: #000 !important;
        font-size: 12px;
        font-weight: bold;
    }

    .ui-grid-cell.lightGrey {
        background-color: #DCDCDC !important;
        color: #000 !important;
        font-size: 12px;
        font-weight: normal;
    }

    .ui-grid-cell.lightBlue {
        background-color: #76a0ef !important;
        color: #000 !important;
        font-size: 12px;
        font-weight: normal;
    }

    .ui-grid-cell.lightBlueF7 {
        background-color: #bbd0f7 !important;
        color: #000 !important;
        font-size: 12px;
        font-weight: normal;
    }

    .ui-grid-cell.lightBlueF2 {
        background-color: #8db0f2 !important;
        color: #000 !important;
        font-size: 12px;
        font-weight: normal;
    }

    .ui-grid-cell.lightGreyE6 {
        background-color: #e6e6e6 !important;
        color: #000 !important;
        font-size: 12px;
        font-weight: normal;
    }
</style>

<script type="text/javascript">

    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));

    var oDULedgers =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oDULedger = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DULedger));
    var nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
    var oBusinessUnits = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
    sessionStorage.setItem('BUID',nBUID);

    var  DUSApp = angular.module('DUSApp',['ngAnimate','ui.bootstrap','ui.grid','ui.grid.selection','ui.grid.pinning','ui.grid.resizeColumns','ms.service']);
    DUSApp.controller('DUSCntrl', function ($scope,$http,$uibModal,$log,uiGridConstants,msModal,userSession,icsMethod)
    {
        $('.date-container').datepicker({
            format: "dd M yyyy",
            calendarWeeks: true,
            autoclose: true,
            todayHighlight: false
        });
        debugger;
        $scope.BusinessUnits=oBusinessUnits;
        $scope.BusinessUnitID=nBUID;
        $scope.DUBusinessUnitID=nBUID;
        $scope.DULedger= oDULedger;//JSON.parse(sessionStorage.getItem("DULedger"));

        $scope.CompareOperators=[ {id:1, Value:'Party Wise'},{id:2, Value:'Marketing Person Wise'}]

        if($scope.DULedger.ViewType==1)
            $scope.DULedger.RefName="Party :"+oDULedgers[0].ContractorName;
        else
            $scope.DULedger.RefName="Marketing Person: "+oDULedgers[0].MKTPName;


        $scope.MakeGrid= function()
        {
            var colDetails=[];
            var oFiled=null;

            oFiled={   field: 'OrderDateSt', name: 'Order Date', width:'10%',cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return (row.entity.DyeingOrderType==0)?'lightGreen':'';}, enableCellEdit: false ,pinnedLeft:true};
            colDetails.push(oFiled);
            oFiled={   field: 'OrderNo', name: 'Order No', width:'8%',cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return (row.entity.DyeingOrderType==0)?'lightGreen':'lightGreyE6';}, enableCellEdit: false ,pinnedLeft:true };
            colDetails.push(oFiled);
            oFiled={   field: 'SampleInvocieNo', name: 'Inv No', width:'8%',cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return (row.entity.DyeingOrderType==0)?'lightGreen':'lightGreyE6';}, enableCellEdit: false ,pinnedLeft:false };
            colDetails.push(oFiled);
            oFiled={   field: 'ExportPINo', name: 'PI No', width:'8%',cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return (row.entity.DyeingOrderType==0)?'lightGreen':'lightGrey';}, enableCellEdit: false ,pinnedLeft:false };
            colDetails.push(oFiled);
            oFiled={   field: 'LCNo', name: 'LC No', width:'8%',cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return (row.entity.DyeingOrderType==0)?'lightGreen':'lightGreyE6';}, enableCellEdit: false ,pinnedLeft:false };
            colDetails.push(oFiled);
            //oFiled={   field: 'PaymentTypeSet', name: 'Payment Type',  cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return (row.entity.DyeingOrderType==0)?'lightGreen':'lightGrey';}, width: '12%',enableCellEdit: false };colDetails.push(oFiled);
            //oFiled={   field: 'OrderCount', name: 'Count',  cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return (row.entity.DyeingOrderType==0)?'lightGreen text-center':'lightGreyE6 text-center';},width:'8%',enableCellEdit: false, aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:0', footerCellClass: 'text-right'};colDetails.push(oFiled);
            oFiled={   field: 'Qty', name: 'Qty',  cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return (row.entity.DyeingOrderType==0)?'lightGreen text-right':'lightGrey text-right';},width: '8%',enableCellEdit: false , cellFilter:'number:0', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:0', footerCellClass: 'text-right'};colDetails.push(oFiled);
            oFiled={   field: 'Amount', name: 'Amount',  cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return (row.entity.DyeingOrderType==0)?'lightGreen text-right':'lightGrey text-right';},width: '10%',enableCellEdit: false , cellFilter:'number:0', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:0', footerCellClass: 'text-right' };colDetails.push(oFiled);
            oFiled={   field: 'Qty_DC', name: 'DC Qty',  cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return (row.entity.DyeingOrderType==0)?'lightGreen text-right':'lightBlue text-right';},width: '8%',enableCellEdit: false  , cellFilter:'number:0', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:0', footerCellClass: 'text-right'};colDetails.push(oFiled);
            oFiled={   field: 'Amount_DC', name: 'DC Amount',  cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return (row.entity.DyeingOrderType==0)?'lightGreen text-right':'lightBlue text-right';},width: '10%',enableCellEdit: false  , cellFilter:'number:0', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:0', footerCellClass: 'text-right'};colDetails.push(oFiled);
            oFiled={   field: 'Qty_Yet', name: 'YT Qty ',  cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return (row.entity.DyeingOrderType==0)?'lightGreen text-right':'lightBlueF2 text-right';},  width: '8%',enableCellEdit: false  , cellFilter:'number:0', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:0', footerCellClass: 'text-right' };colDetails.push(oFiled);
            oFiled={   field: 'Amount_Yet', name: 'YT Amount ', cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return (row.entity.DyeingOrderType==0)?'lightGreen text-right':'lightBlueF2 text-right';},width: '10%',enableCellEdit: false  , cellFilter:'number:0', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:0', footerCellClass: 'text-right'};colDetails.push(oFiled);
            oFiled={   field: 'Amount_Paid', name: 'Paid Amount',cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return (row.entity.DyeingOrderType==0)?'lightGreen text-right':'lightBlueF7 text-right';},   width: '10%',enableCellEdit: false  , cellFilter:'number:0', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:0', footerCellClass: 'text-right'};colDetails.push(oFiled);
            oFiled={   field: 'StateSt', name: 'Status',cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return (row.entity.DyeingOrderType==0)?'lightGreen text-right':'lightGrey text-left';},   width: '10%',enableCellEdit: false  }//, cellFilter:'number:0', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:0', footerCellClass: 'text-right'};colDetails.push(oFiled);
            colDetails.push(oFiled);
            $scope.gridOptions ={
                enableSorting: true,
                enableFullRowSelection: true,
                enableSelectAll: false,
                multiSelect:false,
                showColumnFooter: true,
                rowHeight:35,
                //enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,
                //enableVarticalScrollbar: uiGridConstants.scrollbars.ALWAYS,
                columnDefs: colDetails,
                data:oDULedgers,
                onRegisterApi:function(gridApi)
                {
                    $scope.gridApi = gridApi;
                }
            };
        }

        $scope.MakeGrid();

        $scope.Refresh = function()
        {
            var obj= {
                Params:icsdateformat(new Date($scope.DULedger.StartDateSt)) +'~'+ icsdateformat(new Date($scope.DULedger.EndDateSt))+ '~' + $scope.DULedger.ViewType +'~'+ $scope.DULedger.Layout +'~'+ $scope.DULedger.DyeingOrderType +'~'+$scope.DULedger.PaymentType +'~'+0
            }

            console.log(obj);
            $http.post(_sBaseAddress + '/DULedger/GetsDULedger',JSON.stringify(obj)).then(
                    function (response)
                    {
                        debugger;
                        var results=JSON.parse(response.data);
                        console.log(results);
                        if (results.length > 0)
                        {
                            if(results[0].ErrorMessage=='')
                            {
                                $scope.MakeGrid();
                                $scope.gridOptions.data= results;
                            }
                            else
                            {
                                alert(results[0].ErrorMessage); return;
                            }
                        }
                        else
                        {
                            msModal.Message({ headerTitle: '', bodyText: 'No Data Found !!', sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                            return;
                        }
                    },
                    function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage); }
            );
        }

        $scope.PrintDetails=function(value)
        {
            var  Params=icsdateformat(new Date($scope.DULedger.StartDateSt)) +'~'+ icsdateformat(new Date($scope.DULedger.EndDateSt))+ '~' +$scope.DULedger.ViewType +'~'+ 3 +'~'+ oDULedgers[0].DyeingOrderType +'~'+oDULedgers[0].PaymentType +'~'+oDULedgers[0].ContractorID+'~'+0
            window.open(_sBaseAddress + '/DULedger/PrintDULedger?sParam='+Params+'&nBUID='+nBUID);
        }

        $scope.Close=function ()
        {
            window.location.href = sessionStorage.getItem("BackLinkDetail");
        };
    });

</script>
