@{
    ViewBag.Title = "Export Report L/C";
}
@model IEnumerable<ESimSol.BusinessObjects.ReportingObject.ExportLCReport>
    <div ng-app="ExportLCReportApp">
        <script type="text/ng-template" id="ExportLCReport.html">
            <div class="modal-header">
                <h4 class="modal-title" id="modal-title"> Export LC Report </h4>
            </div>
        </script>
        <script type="text/ng-template" id="ExportLCReport.html">
            <div class="modal-header">
                <h4 class="modal-title" id="modal-title">Updat Export LC Information</h4>
            </div>
            <div class="modal-body form-horizontal regionExportUP ms-custom-control" id="modal-body">
                <div class="row">
                    <div class="row">
                        <div class="col-md-12 ">
                            <div class="col-md-4 text-right"><label class="control-label">PI No :</label></div>
                            <div class="col-md-3 text-left">
                                <input type="text" class="form-control" ng-model="PINo" readonly="readonly">
                            </div>
                            <div class="col-md-2 text-right"><label class="control-label">File No :</label></div>
                            <div class="col-md-3 text-left">
                                <input type="text" class="form-control" ng-model="FileNo" readonly="readonly">
                            </div>
                        </div>
                        <div class="col-md-12 ">
                            
                            <div class="col-md-4 text-right"><label class="control-label">L/C Value :</label></div>
                            <div class="col-md-3 text-left">
                                <input type="text" class="form-control" ng-model="LCValue" readonly="readonly">
                            </div>
                            <div class="col-md-2 text-right"><label class="control-label">L/C No :</label></div>
                            <div class="col-md-3 text-left">
                                <input type="text" class="form-control" ng-model="LCNo" readonly="readonly">
                            </div>
                        </div>
                        <div class="col-md-12 ">
                            <div class="col-md-4 text-right"><label class="control-label">Party Name :</label></div>
                            <div class="col-md-8 text-left">
                                <input type="text" class="form-control" ng-model="ApplicantName" readonly="readonly">
                            </div>
                        </div>
                        <div class="col-md-12 ">
                            <div class="col-md-4 text-right"><label class="control-label">Advice Bank :</label></div>
                            <div class="col-md-8 text-left">
                                <input type="text" class="form-control" ng-model="BankName_Nego" readonly="readonly">
                            </div>
                        </div>
                        <div class="col-md-12 ">
                            <div class="col-md-4 text-right"><label class="control-label">Issue Bank Name :</label></div>
                            <div class="col-md-8 text-left">
                                <input type="text" class="form-control" ng-model="BankName_Issue" readonly="readonly">
                            </div>
                        </div>
                        <div class="col-md-12 ">
                            <div class="col-md-4 text-right"><label class="control-label">Negotiation Bank :</label></div>
                            <div class="col-md-8 text-left">
                                <input type="text" class="form-control" ng-model="BankName_Nego" readonly="readonly">
                            </div>
                        </div>
                    </div>
                    @*<div class="row">
                        <div class="col-md-12 ">
                            <div class="col-md-4 text-right"><label class="control-label">UD Receive Info :</label></div>
                            <div class="col-md-3 text-left">
                                <select ng-model="UDRcvTypeChk" class="col-md-3 text-left form-control" ng-options="item.id as item.Value for item in UDRcvTypeChks" style="width:100%">
                                </select>
                            </div>
                            <div class="col-md-3 text-left">
                                <div class="input-group date date-container">
                                    <input type="text" class="form-control" ng-model="UDRecDateST" ng-change="changeDate()"><span class="input-group-addon"><i class="glyphicon glyphicon-th" ng-disabled="disabled"></i></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12 ">
                            <div class="col-md-4 text-right"><label class="control-label">Remarks :</label></div>
                            <div class="col-md-5 text-right">
                                <input type="text" class="form-control" ng-model="NoteUD" style="width:100%">
                            </div>
                            <div class="col-md-3 text-right">
                                <button type="button" class="btn-success btn-sm" aria-label="Right Align" ng-click="UpdateAmn()" ng-hide="hide"> <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Save</button>
                            </div>
                        </div>
                    </div>*@
                    <div class="row">
                        <div class="col-md-12 ">
                            <div class="col-md-4 text-right"><label class="control-label">Orginal Copy Receive ?</label></div>
                            <div class="col-md-3 text-left">
                                <input type="checkbox" ng-model="GetOriginalCopyNo" ng-change="ToggleGetOriginalCopyYes()" ng-disabled="chkOriginalCopyNo" value="value" /><label>No</label>
                                <input type="checkbox" ng-model="GetOriginalCopyYes" ng-change="ToggleGetOriginalCopyNo()" ng-disabled="chkOriginalCopyYes" value="value" /><label>Yes</label>
                            </div>
                            <div class="col-md-5 text-right">
                                <button type="button" class="btn-success btn-sm" aria-label="Right Align" ng-click="UpdateOrginalCopyReceive()" ng-hide="hide"> <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Save</button>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12 ">
                            <div class="col-md-4 text-right"><label class="control-label">Have Any Query ?</label></div>
                            <div class="col-md-8 text-left">
                                <input type="checkbox" ng-model="HaveQueryNo" ng-change="ToggleHaveQueryNo()" /><label>No</label>
                                <input type="checkbox" ng-model="HaveQueryYes" ng-change="ToggleHaveQueryYes()" /><label>Yes</label>
                            </div>
                            <div class="col-md-4 text-right"><label class="control-label">Remarks:</label></div>
                            <div class="col-md-5 text-left">
                                <input type="text" class="form-control" ng-model="NoteQuery" style="width:100%">
                            </div>
                            <div class="col-md-3 text-right">
                                <button type="button" class="btn-success btn-sm" aria-label="Right Align" ng-click="UpdateHaveQuery()" ng-hide="hide"> <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Save</button>
                            </div>
                        </div>
                       
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-danger btn-sm" aria-label="Left Align" ng-click="cancel()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Close</button>
            </div>
        </script>
        <div ng-controller="ExportLCReportCtrl as MLCC" style="overflow-x:hidden">
            <div class="row ui-grid-top-panel">
                <div class="container">
                    <div class="form-inline">
                        <input type="text" class="form-control" style="width:125px;margin:6px 3px;border: 1px solid Gray" ng-model="PINoSearch" ng-keydown="Search($event)" placeholder="Search by P/I No" />
                        <input type="text" class="form-control" style="width:125px;margin:6px 3px;border: 1px solid Gray" ng-model="LCNoSearch" ng-keydown="Search($event)" placeholder="Search by L/C No" />
                        <button type="button" class="btn btn-primary btn-sm" ng-click="AdvanceSearch()"><span class="glyphicon glyphicon-search"></span>&nbsp; Advance Search</button>
                        <button type="button" class="btn btn-success btn-sm" ng-click="UDInformation()"><span class="glyphicon glyphicon-th-list"></span>&nbsp; Information</button>
                        <button type="button" class="btn btn-warning btn-sm" ng-click="Excel()"><span class="glyphicon glyphicon-print"></span>&nbsp;Print Excel</button>
                    </div>
                </div>
            </div>
            <div style="width:100%;" ui-grid="gridOptions" ui-grid-pinning ui-grid-selection ui-grid-resize-columns class="grid"></div>
        </div>
    </div>

    <style type="text/css">
        .form-control {
            height: 26px;
            padding: 0px 6px;
            font-size: 12px;
        }

        .grid {
            height: 520px;
            width: 100%;
        }

        .custom-pagination {
            margin-top: -15px;
            margin-bottom: -15px;
        }

        .spacing {
            padding-bottom: 5px;
        }
    </style>
    <script type="text/javascript">
    var _nBUID=0;
    var _oExportLCReports = [];
    var _oLCReportLevelObjs = [];
    var _oNegoBanks = [];
    var _oCompareOperators = [];
    var _oExportLCStatus = [];
    var _oExportLCReports = [];
    var ntempExportLCID = 0;
    var _oExportLCReport = [];
    var _tempExportLCReport = [];
    var _oExportLC = [];
    var _oLCTypes = [];
    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    _oExportLCReports =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    _nBUID =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
    _oLCReportLevelObjs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.LCReportLevelObjs));
    _oNegoBanks = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.NegoBanks));
    _oAdviceBanks = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.AdviceBanks));
    _oExportLCStatus = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ExportLCStatus));
    _oCompareOperators = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
    _oBusinessUnits =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
    _oLCTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.LCTypes));
    var  ExportLCReport_M = angular.module('ExportLCReportApp', ['ngAnimate', 'ui.bootstrap', 'ui.grid','ui.grid.selection','ui.grid.pinning','ui.grid.resizeColumns', 'ui.grid.cellNav','ms.service']);
    ExportLCReport_M.controller('ExportLCReportCtrl', function ($scope, $http, $uibModal,$log,$filter, uiGridConstants, msModal, userSession,advanceSearch) {
        debugger;

        if(_nBUID>0)
        {
            var oBU = $filter('filter')(_oBusinessUnits, { BusinessUnitID: _nBUID})[0];
            _oBusinessUnits=[oBU];
        }
        //_oExportLCReports= (userSession.getData('ExportLCReports').length>0)? userSession.getData('ExportLCReports'):oExportLCReports;
        $scope.gridOptions ={
            enableSorting: true,
            enableFullRowSelection: true,
            enableRowHeaderSelection: false,
            enableSelectAll: false,
            showColumnFooter: true,
            multiSelect:false,
            //enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,
            enableVerticalScrollbar : false,
            columnDefs: [
                {name: '#SL',width:'5%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false,pinnedLeft:true},
                { field: 'FileNo',               name: 'File No',           width: '7%'  , pinnedLeft:true,  enableCellEdit: false },
                { field: 'ContractorName',       name: 'Applicant Name',    width: '12%' , pinnedLeft:true},
                { field: 'BuyerName',             name: 'Buyer Name',        width: '12%' , pinnedLeft:true},
                 { field: 'LCNo',                 name: 'LCNo',              width: '12%', pinnedLeft:true},
                    { field: 'LCOpenDateSt',      name: 'L/C Open Date',              width: '8%',  cellClass: 'text-center'},
                  { field: 'LCReceiveDateSt',      name: 'Received Date',              width: '8%',  cellClass: 'text-center'},
           
             
               
                { field: 'VersionNo',            name: 'A No',              width: '5%'  },
                  { field: 'AmendmentDateSt',      name: 'Amendment Date',              width: '8%',  cellClass: 'text-center'},
                { field: 'PINo',                 name: 'PINo',              width: '7%'  },
                { field: 'PIDateSt',      name: 'PI Date',              width: '8%',  cellClass: 'text-center'},
                 { field: 'Amount',        name:'L/C Amount($)',       width:'8%',     cellClass: 'text-right',  cellFilter: 'number:2',  aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true,  type: 'number', enableCellEdit:true,footerCellClass: 'text-right' ,footerCellFilter: 'number:2'},
                { field: 'Amount_Bill',        name:'Doc Amount',       width:'8%',     cellClass: 'text-right',  cellFilter: 'number:2',  aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true,  type: 'number', enableCellEdit:true,footerCellClass: 'text-right' ,footerCellFilter: 'number:2'},
                { field: 'YetToBill',        name:'Pending Bill',       width:'8%',     cellClass: 'text-right',  cellFilter: 'number:2',  aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true,  type: 'number', enableCellEdit:true,footerCellClass: 'text-right' ,footerCellFilter: 'number:2'},
                
                //{ field: 'AmountSt',             name: 'Value',             width: '8%',  cellClass: 'text-right' },
                { field: 'ShipmentDateSt',       name: 'Shipment Date',     width: '10%',  cellClass: 'text-center'},
                { field: 'ExpiryDateSt',         name: 'Expiry Date',       width: '10%',  cellClass: 'text-center'},
                { field: 'Qty',        name:'Qty',       width:'8%',     cellClass: 'text-right',  cellFilter: 'number:2',  aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true,  type: 'number', enableCellEdit:true,footerCellClass: 'text-right' ,footerCellFilter: 'number:2'},
                { field: 'Qty_Bill',        name:'Qty Bill',       width:'8%',     cellClass: 'text-right',  cellFilter: 'number:2',  aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true,  type: 'number', enableCellEdit:true,footerCellClass: 'text-right' ,footerCellFilter: 'number:2'},
                { field: 'Qty_DC',               name: 'Qty DC',            width: '8%',  cellClass: 'text-right', cellFilter:'number:2' },
               { field: 'LCTermsName',            name: 'LCTerms',  width: '12%' },
               
               { field: 'BankName_Nego',        name: 'Nego Bank Name',               width: '10%' },
               { field: 'BankName_Issue',        name: 'Issue Bank Name',               width: '10%' },
                //{ field: 'AmountSt',             name: 'L/C Amount',             width: '8%',  cellClass: 'text-right'},
                { field: 'MKTPersonName',        name: 'C/P',               width: '10%' },
                { field: 'LCStatusSt',           name: 'Current Status',    width: '15%' },
                { field: 'UDRcvTypeSt',          name: 'UD',                width: '5%'  },
                { field: 'GetOriginalCopySt',          name: 'Draft Copy',                width: '5%'  },
                { field: 'NoteQuery',            name: 'Remark',  width: '18%' },
                { field: 'BuyerAccSt',           name: 'ACC(Buyer)',        width: '8%' },
                { field: 'BankAccSt',            name: 'ACC(Bank)',         width: '8%'  },


            ],
            data:_oExportLCReports,
            onRegisterApi:function(gridApi)
            {
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.core.refresh();
                debugger;
                if(_oExportLCReports.length>0 && userSession.getRowIndex()>=0)
                {
                    $scope.gridApi.grid.modifyRows(_oExportLCReports);
                    $scope.gridApi.selection.selectRow(_oExportLCReports[userSession.getRowIndex()]);
                    $scope.RowSelect(_oExportLCReports[userSession.getRowIndex()]);
                }
                userSession.clear();
            }
        };

        //$scope.UDRcvTypeChks=[{id:2, Value:'Yes'},{id:0, Value:'No'}];

        $scope.Refresh = function (e)
        {
            $route.reload();
        }
        $scope.Search = function (e)
        {
            var oExportLCReport = [];
            var code =(e.keyCode ? e.keyCode : e.which);
            if(code == 13)
            {
                debugger;
                oExportLCReport = $scope.MakeObject();

                if(oExportLCReport.PINo == "" && oExportLCReport.LCNo == "")
                {
                    alert("Please Enter Any Search Citeria");
                    return;
                }
                _tempExportLCReport = oExportLCReport;
                var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                $http.post(_sBaseAddress+'/ExportLCReport/AdvanceSearchForReport',$.param(oExportLCReport), config).then(
                            function (response)
                            {        debugger;
                                var oResults = response.data;
                                if(oResults.length>0)
                                {
                                    $scope.gridOptions.data = response.data;
                                }else{
                                    alert("Data Not found.");
                                }
                            },
                                function (response) { alert(response.data).Message; }
                        );
            }
        }
        $scope.MakeObject = function () {
            var oExportLCReport = {
                ContractorNd:$.trim($scope.ContractorName),
                PINo:$.trim($scope.PINoSearch),
                LCNo:$.trim($scope.LCNoSearch),
                BUID:_nBUID
            };
            return oExportLCReport;
        }
        $scope.UpdateHaveQuery = function (e) {
            var oExportLC = {
                ExportLCID: ntempExportLCID,
                HaveQuery:$scope.HaveQueryYes,
                NoteQuery:$scope.NoteQuery,
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/ExportLC/UpdateHaveQuery',$.param(oExportLC), config).then(
                        function (response)
                        {        debugger;
                            var oResults = response.data;
                            if(oResults.length>0)
                            {
                                var obj=$scope.gridApi.selection.getSelectedRows()[0];

                                var index=$scope.gridOptions.data.indexOf(obj);
                                obj.NoteQuery = $scope.NoteQuery;
                                $scope.gridOptions.data[index]=obj;
                                alert("Data Saved Successfully");
                            }else{
                                alert("Data Not Saved.");
                            }
                        },
                            function (response) { alert(response.data).Message; }
                    );
        }

        //$scope.UpdateAmn = function (e) {
        //    debugger;
        //    var data=$scope.gridApi.selection.getSelectedRows();
        //    console.log(_oExportLC);

        //    var ncboVersionNo=_oExportLCReport.VersionNo;
        //    for(var i =0;i<_oExportLC.ExportPILCMappings.length;i++)
        //    {
        //        if(_oExportLC.ExportPILCMappings[i].VersionNo==ncboVersionNo)
        //        {
        //            debugger;
        //            _oExportLC.ExportPILCMappings[i].UDRcvType = parseInt($scope.UDRcvTypeChk);
        //            _oExportLC.ExportPILCMappings[i].VersionNo=ncboVersionNo;
        //            if($scope.UDRcvTypeChk<=0)
        //            {
        //                _oExportLC.ExportPILCMappings[i].UDRecDate="";
        //            }
        //            else{
        //                _oExportLC.ExportPILCMappings[i].UDRecDate = $scope.UDRecDateST;
        //            }
        //        }
        //    }
        //    debugger;
        //    _oExportLC.NoteUD = $scope.NoteUD;
        //    console.log(_oExportLC);
        //    //var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
        //    $http.post(_sBaseAddress+'/ExportLC/UpdateUDInfo',JSON.stringify(_oExportLC)).then(
        //                function (response)
        //                {
        //                    var oResults = response.data;
        //                    console.log(oResults);
        //                    if(oResults.length>0)
        //                    {
        //                        alert("Data Saved Successfully");
        //                        var obj=$scope.gridApi.selection.getSelectedRows()[0];
        //                        var index=$scope.gridOptions.data.indexOf(obj);
        //                        obj.UDRcvType = $scope.UDRcvTypeChk;
        //                        if(obj.UDRcvType==2)
        //                        {
        //                            obj.UDRcvTypeSt = "Yes";
        //                        }
        //                        else
        //                        {
        //                            obj.UDRcvTypeSt = "No";
        //                        }
        //                        $scope.gridOptions.data[index]=obj;
        //                    }else{
        //                        alert("Data Not Saved.");
        //                    }
        //                },
        //                    function (response) { alert(response.statusText); }
        //            );
        //}

        $scope.UpdateOrginalCopyReceive = function (e) {
            var oExportLC = {
                ExportLCID: ntempExportLCID,
                GetOriginalCopy:$scope.GetOriginalCopyYes,
            };

            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/ExportLC/UpdateForGetOrginalCopy',$.param(oExportLC), config).then(
                        function (response)
                        {        debugger;
                        //var oResults = response.data;
                        var oResult = jQuery.parseJSON(response.data);
                        //console.log(oResults);
                            if(oResult != null){
                                alert("Data Saved Successfully");
                                if(oResult.GetOriginalCopy == true)
                                {
                                    $scope.GetOriginalCopyYes = true;
                                    $scope.GetOriginalCopyNo = false;
                                }
                                else
                                {
                                    $scope.GetOriginalCopyNo = true;
                                    $scope.GetOriginalCopyYes = false;
                                }
                            var obj=$scope.gridApi.selection.getSelectedRows()[0];
                            var index=$scope.gridOptions.data.indexOf(obj);
                            obj.GetOriginalCopy = $scope.GetOriginalCopy;
                            $scope.gridOptions.data[index]=obj;

                            }else{
                                alert("Data Not Saved.");
                            }
                        },
                            function (response) { alert(response.data).Message; }
                    );
        }
        $scope.cancel= function () {
            modalInstance.close();
        };
        $scope.Excel = function(){
            debugger;
            //console.log(_tempExportLCReport);
            var _tempExportLCReport = {
                ErrorMessage : sessionStorage.getItem("AdvSearchString"),
                PINo : $.trim($scope.PINoSearch),
                LCNo : $.trim($scope.LCNoSearch),
                BUID : _nBUID
            }
            if(sessionStorage.getItem("AdvSearchString")==null && _tempExportLCReport.PINo=="" && _tempExportLCReport.LCNo=="")
            {
                alert("Please Search First");
                return;
            }
            var objs= [{key: 'ExportLCReport',  data: JSON.stringify(_tempExportLCReport) }];
            OpenWindowWithPost(_sBaseAddress+"/ExportLCReport/PrintExcel", objs);
        }
        $scope.AdvanceSearch = function(e){

            $scope.PINoSearch = "";
            $scope.LCNoSearch = "";

            oColumns = [];
            var oColumn = { field: 'Name', name: 'Applicant Name',width: '70%', enableSorting: false  };oColumns.push(oColumn);
            oColumn = { field: 'Address', name: 'Address',width: '30%', enableSorting: false  };oColumns.push(oColumn);

            var paramObj_Contractor={
                obj:{Params: '3' + '~' +'@@ContractorID'+'~'+sessionStorage.getItem('BUID')},
                objName:'Params',
                objField:'ContractorID',
                url:_sBaseAddress+'/Contractor/ContractorSearchByNameType',
                title:'Contractor List',
                multiSelect:true,
                columns:oColumns
            }

            var paramObj_Buyer={
                obj:{Params: '2' + '~' +'@@ContractorID'+'~'+sessionStorage.getItem('BUID')},
                objName:'Params',
                objField:'ContractorID',
                url:_sBaseAddress+'/Contractor/ContractorSearchByNameType',
                title:'Buyer List',
                multiSelect:true,
                columns:oColumns
            }

            var oStatus = [
                //{id: 0, Value: "--Select One--"},
                {id: 1, Value: "LC In Hand"},
                {id: 2, Value: "Delivery Complete Invoice/Bill not Create"},
                {id: 3, Value: "Pending DO"},
                {id: 4, Value: "Pending Challan"},
                {id: 5, Value: "Pending UD"},
                {id: 6, Value: "Pending UP"}
            ]
            debugger
            var oExportLCReport = {
                BUID: 1,
            }
                 oExportLCReport = [
                                { DisplayName: "Unit",    BOField: "BUID",Value:_nBUID, InputType: 'select', OptionList:_oBusinessUnits, OptionValue:{id:'BusinessUnitID', Value:'BUTypeSt'}},
                                { DisplayName: "LC Open Date",             BOField: "LCOpenDate",           InputType: 'date' },
                                { DisplayName: "Receive Date",             BOField: "LCReceiveDate",           InputType: 'date' },
                                { DisplayName: "Receive Date(Report)",             BOField: "LCReceiveDate",           InputType: 'date' },
                                { DisplayName: "LC/Amendment Date",             BOField: "AmendmentDate",           InputType: 'date' },
                                { DisplayName: "Customer Name",       BOField: "ContractorName",          InputType: 'picker', PickerObject:paramObj_Contractor },
                                { DisplayName: "End Buyer",       BOField: "BuyerName",          InputType: 'picker', PickerObject:paramObj_Buyer },
                                { DisplayName: "Shipment Date",             BOField: "ShipmentDate",           InputType: 'date' },
                                { DisplayName: "Expire Date",             BOField: "ExpireDate",           InputType: 'date' },                            
                                { DisplayName: "LC Type",          BOField: "LCType", InputType: 'select', OptionList:_oLCTypes, OptionValue:{id:'id', Value:'Value'}},
                                { DisplayName: "Status",          BOField: "Status", InputType: 'select', OptionList:oStatus, OptionValue:{id:'id', Value:'Value'}},
                                //{ DisplayName: ["Is LC In Hand"],  BOField: ["IsLCInHand"],   InputType: 'bool'},
                                { BOField:     "BUID",          Value:_nBUID,                       InputType: 'hidden'},
                ];
             
            var modalObj={
                size:'md',
                title:"Advance Search",
                CompareOperators:_oCompareOperators,
                HtmlElements:oExportLCReport,
                isAdvanceSearch:true, // if TRUE: 'urlAdvanceSearch' should be define     AdvanceSearch
                urlAdvanceSearch:_sBaseAddress + '/ExportLCReport/AdvanceSearchForReport'
            }
            _tempExportLCReport = oExportLCReport;
            var modalInstance=advanceSearch.Instance(modalObj);
            modalInstance.result.then(function (result)
            {
                $scope.gridOptions.data=result;
            }, function ()
            {
                $log.info('Modal dismissed at: ' + new Date());
            });
        }
        $scope.UDInformation = function (e) {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();

            if(data==null || data == "")
            {
                alert("Please Select Any Export LC");
                return;
            }
            _oExportLCReport = data[0];
            ntempExportLCID = data[0].ExportLCID;

            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            sessionStorage.setItem('SelectedRowIndex',$scope.gridOptions.data.indexOf(data));

                modalInstance = $uibModal.open({
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'md',
                templateUrl: 'ExportLCReport.html',
                controller: 'ExportLCReportCtrl',
                controllerAs: 'ExportLCReportController',
                scope:$scope,
                resolve: {
                    obj: function () {
                        return { ExportLCReport:data, StausList:_oExportLCReports, Operation: 'Update Information'  };
                    }
                }
                });

            var oExportLC = {
                ExportLCID : ntempExportLCID
            }
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/ExportLC/GetExportLC',$.param(oExportLC), config).then(
                        function (response)
                        {
                            var oResults = JSON.parse(response.data);

                            _oExportLC = oResults;
                            if(oResults.ExportLCID>0)
                            {
                                debugger;

                                $scope.chkOriginalCopyNo = true;
                                $scope.chkOriginalCopyYes = true;
                                //console.log(_oExportLC);
                                if(oResults.GetOriginalCopy == 1)
                                {
                                    $scope.GetOriginalCopyYes = true;
                                    $scope.GetOriginalCopyNo = false;
                                }
                                else
                                {
                                    $scope.GetOriginalCopyNo = true;
                                    $scope.GetOriginalCopyYes = false;
                                }
                                if(oResults.HaveQuery == 1)
                                {
                                    $scope.HaveQueryYes = true;
                                    $scope.HaveQueryNo = false;
                                }
                                else
                                {
                                    $scope.HaveQueryYes = false;
                                    $scope.HaveQueryNo = true;
                                }
                                $scope.BankName_Nego = oResults.BankName_Nego;
                                $scope.ApplicantName = oResults.ApplicantName;
                                $scope.LCValue = _oExportLCReport.AmountSt;
                                $scope.NoteQuery = oResults.NoteQuery;
                                $scope.PINo = _oExportLCReport.PINo;
                                $scope.LCNo = _oExportLCReport.LCNo;
                                $scope.FileNo = _oExportLCReport.FileNo;
                                $scope.BankName_Issue = _oExportLCReport.BankName_Issue;

                                $('.date-container').datepicker({
                                    format: "dd M yyyy",
                                    calendarWeeks: true,
                                    autoclose: true,
                                    todayHighlight: true
                                });
                                debugger;

                                $(".number-int").icsNumberField({ min: 0,precision: 0 });
                                $(".number-precision").icsNumberField({ min: 0,precision: 2 });
                                //$scope.UDRcvTypeChk = _oExportLC.ExportPILCMappings[0].UDRcvType;
                                //$scope.UDRecDateST = _oExportLC.ExportPILCMappings[0].UDRecDateSt;
                                //console.log($scope.UDRcvTypeChk)
                                //$scope.NoteUD = oResults.NoteUD;
                            }else{
                                alert("Data Not Found.");
                            }
                        },
                            function (response) { alert(response.data).Message; }
                    );
            // _oExportLCReports[$scope.gridOptions.data.indexOf(data)].NoteQuery = $scope.NoteQuery ;
        }
        $scope.cancel= function () {
            modalInstance.close();
        };
        $scope.ToggleGetOriginalCopyYes = function(){
            $scope.GetOriginalCopyYes = false;
            $scope.GetOriginalCopyNo = true;
        };
        $scope.ToggleGetOriginalCopyNo = function(){
            $scope.GetOriginalCopyYes = true;
            $scope.GetOriginalCopyNo = false;
        };
        $scope.ToggleHaveQueryYes = function(){
            $scope.HaveQueryYes = true;
            $scope.HaveQueryNo = false;
        };
        $scope.ToggleHaveQueryNo = function(){
            $scope.HaveQueryYes = false;
            $scope.HaveQueryNo = true;

        };
    });
    </script>




