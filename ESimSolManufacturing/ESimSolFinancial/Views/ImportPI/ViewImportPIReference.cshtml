<html>
@{
    ViewBag.Title = "View Import PI";
}

<body>
    @model ESimSol.BusinessObjects.ImportPI
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div class="menuMainCollectionTable" id="divImportPI" title="Add ImportPI" style="font-family:Tahoma; height:99%; width:100%">
        <div  title="Create Order" style="font-size: 11px; width: 100%;height:90%; overflow:scroll">
            <div id="tabImportPITabs" class="easyui-tabs">
                <div title="Basic Info" style="width:100%;">
                    <fieldset style="width:auto;">
                        <legend> <span style=" font-weight:bold; color:Gray;">Purchase Informations</span></legend>
                        <table cellpadding="1" cellspacing="1" style="width:100%; font-size:12px;">
                            <tr>
                                <td style=" width:10%;text-align:right; font-size:12px;">
                                    Type
                                </td>
                                <td style="width:16%;"><select id="cboImportPIType" style="width:50%;"></select><select id="cboImportProduct" style="width:50%;"></select></td>
                                <td style=" width:5%;text-align:right; font-size:12px;">Ref.</td>
                                <td style=" width:9%;text-align:left; font-size:12px;">
                                    <select id="cboRefType" style="width:100%;"></select>
                                </td>
                                <td style=" width:10%;text-align:right; font-size:12px;">
                                    File No
                                </td>
                                <td style="width:23%;text-align:left">
                                    <table border="0" cellpadding="0" cellspacing="0" style=" width:100%;">
                                        <tr>
                                            <td style="width:8%;text-align:left;">@Html.TextBoxFor(model => model.SLNo, new { style = "width:95%;", id = "txtSLNo" })</td>
                                            <td style="width:12%;text-align:right;">PI No:@Html.TextBoxFor(model => model.ImportPINo, new { style = "width:70%;", id = "txtImportPI" })</td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width:12%;text-align:right;">PI Date</td>
                                <td style="width:15%">
                                    <input id="issueDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style=" width:100%;" />
                                </td>
                            </tr>
                            <tr>
                                <td style=" width:10%;text-align:right; font-size:12px;">
                                    Supplier Name
                                </td>
                                <td colspan="3" style=" width:30%;text-align:left; font-size:12px;">
                                    <table border="0" cellpadding="0" cellspacing="0" style=" width:100%;">
                                        <tr>
                                            <td style=" width:94%;text-align:left">
                                                <input type="text" style="width:100%; float: left;" id="txtVendorName" placeholder="Type party Name then press enter" />
                                            </td>
                                            <td style="width:6%;text-align:right;"><input id="btnPickVendor" style="width:35px;" type="button" value="Pick" /></td>
                                        </tr>
                                    </table>
                                </td>
                                <td style=" width:10%;text-align:right; font-size:12px;">
                                    Concern Person
                                </td>
                                <td style="width:23%;text-align:left">
                                    <select id="cboSCPerson" style=" width:76%;"></select><a id="btnReload" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true"></a><input type="button" style="width:22px;" id="btnNewContactPerson" value="N" />
                                </td>
                                <td style="width:12%;text-align:right;">Validity Date</td>
                                <td style="width:15%">
                                    <input id="validityDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style=" width:100%;" />
                                </td>
                            </tr>
                            <tr>
                                <td style=" width:10%;text-align:right; font-size:12px;">
                                    Agent Name
                                </td>
                                <td colspan="3" style=" width:30%;text-align:left; font-size:12px;">
                                    <table border="0" cellpadding="0" cellspacing="0" style=" width:100%;">
                                        <tr>
                                            <td style="width:94%;text-align:left"><input type="text" style="width:100%; float: left;" id="txtAgentName" placeholder="Type Agent Name then press enter" /></td>
                                            <td style="width:6%;text-align:right;"><input id="btnPickAgent" style="width:35px;" type="button" value="Pick" /></td>
                                        </tr>
                                    </table>
                                </td>
                                <td style=" width:10%;text-align:right; font-size:12px;">
                                    Concern Person
                                </td>
                                <td style="width:23%;text-align:left">
                                    <select id="cboSCPerson" style=" width:76%;"></select><a id="btnReload" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true"></a><input type="button" style="width:22px;" id="btnNewContactPerson" value="N" />
                                </td>
                                <td style="width:12%;text-align:right;">Receive Date: </td>
                                <td style="width:15%">
                                    <input id="txtReceiveDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style=" width:100%;" />
                                </td>
                            </tr>
                            <tr>
                                <td style=" width:10%;text-align:right; font-size:12px;">
                                    Beneficiary Bank:
                                </td>
                                <td colspan="3" style=" width:30%;text-align:left; font-size:12px;">
                                    <table border="0" cellpadding="0" cellspacing="0" style=" width:100%;">
                                        <tr>
                                            <td style="width:94%;text-align:left"><input type="text" style="width: 100%; float: left;" id="txtBranchName" placeholder="Type Branch Name then press enter" /></td>
                                            <td style="width:6%;text-align:right;"><input style="width:35px; float: left;" type="button" value="Pick" id="btnPickBranch" /></td>
                                        </tr>
                                    </table>
                                </td>
                                <td style=" width:10%;text-align:right; font-size:12px;">
                                    Rate On:
                                </td>

                                <td style="width:23%;text-align:left">
                                    <input type="number" style="width:100%;text-align:right;" id="txtRateUnit" />
                                </td>
                                <td style="width:12%;text-align:right;">ConcernPerson:</td>
                                <td style="width:15%;text-align:right;"><select id="cboConcernPerson" style="width: 100%"></select></td>

                            </tr>
                            <tr>
                                <td style=" width:10%;text-align:right; font-size:12px;">
                                    Currency:
                                </td>
                                <td colspan="3" style=" width:30%;text-align:left; font-size:12px;">
                                    <table border="0" cellpadding="0" cellspacing="0" style=" width:100%;">
                                        <tr>
                                            <td style="width:50%;text-align:left"><select id="cboCurrency" class="changeCurrency" style=" width:100%;" name="cboCurrency"></select></td>
                                            <td style="width:15%;text-align:right;">C.Rate:</td>
                                            <td style="width:35%;text-align:right;"><input style="width:100%;text-align:right;" id="txtConvertionRate" /></td>
                                        </tr>
                                    </table>
                                </td>
                                <td style=" width:10%;text-align:right; font-size:12px;">
                                    Remarks:
                                </td>
                                <td style="width:50%;text-align:left" colspan="3">
                                    @Html.TextBoxFor(model => model.Note, new { style = "width:100%;", id = "txtNote" })
                                </td>
                            </tr>
                        </table>
                    </fieldset>
                </div>
                <div title="Terms and Conditions" style="width:100%; height:47%">
                    <fieldset id="fsTemsCondition">
                        <legend style="font-weight:bold"> Terms & Conditions : </legend>
                        <table border="0" cellspacing="2" cellpadding="2" class="CaptionStyle" style="width:100%;">
                            <tr>
                                <td style="width:15%; text-align:right">Libor Rate</td>
                                <td style="width:10%"><input type="radio" name="LiborRate" value="1" />Yes&nbsp;<input type="radio" name="LiborRate" value="0" />No</td>
                                <td style="width:15%; text-align:right">Shipment Term </td>
                                <td style="width:10%"><select id="cboShipmentTermFDD" style="width:100%;float:right;"></select></td>
                                <td colspan="2" style=" width:50%;text-align:right; font-size:12px;">
                                    <table border="0" cellpadding="0" cellspacing="1" style=" width:100%;">
                                        <tr>
                                            <td style=" width:25%;text-align:right; font-size:12px;">
                                                LC Tenor:
                                            </td>
                                            <td style=" width:25%;text-align:left; font-size:12px;">
                                                <select id="cboLCTerm" style="width:100%;float:left;"></select>
                                            </td>
                                            <td style=" width:25%;text-align:right; font-size:12px;">
                                                From:
                                            </td>
                                            <td style="width:25%;text-align:left">
                                                <select id="cboPaymentInstructionType" style="width:100%;float:right;"></select>
                                            </td>
                                        </tr>
                                    </table>
                                </td>


                            </tr>
                            <tr>
                                <td style="width:15%; text-align:right">Trans Shipment Allow</td>
                                <td style="width:10%"><input type="radio" name="TransShipment" value="1" />Yes&nbsp;<input type="radio" name="TransShipment" value="0" />No</td>
                                <td style="width:15%; text-align:right">Asking LC Date</td>
                                <td style="width:10%"><input type="text" style="width:100%;" id="txtAskingLCDate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>

                                <td colspan="2" style=" width:50%;text-align:right; font-size:12px;">
                                    <table border="0" cellpadding="0" cellspacing="1" style=" width:100%;">
                                        <tr>
                                            <td colspan="3" style=" width:75%;text-align:right; font-size:12px;">
                                                Over Due Rate(%):
                                            </td>

                                            <td style="width:25%;text-align:left">@Html.TextBoxFor(model => model.OverDueRate, new { style = "width:40%;", id = "txtOverDueRate" })</td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                            <tr>
                                <td style="width:15%; text-align:right">Part Shipment Allow</td>
                                <td style="width:10%"><input type="radio" name="PartShipment" value="1" />Yes&nbsp;<input type="radio" name="PartShipment" value="0" />No</td>
                                <td style="width:15%; text-align:right">Asking Delivery Date</td>
                                <td style="width:10%"><input type="text" style="width:100%;" id="txtAskingDeliveryDate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                                <td colspan="2" style="width:50%;text-align:right; font-size:12px;">
                                    <table border="0" cellpadding="0" cellspacing="1" style=" width:100%;">
                                        <tr>
                                            <td style="width:25%; text-align:right">Shipment By:</td>
                                            <td style="width:25%"><select id="cboShipmentBy" style="width:100%"></select> </td>
                                            <td style=" width:25%;text-align:right; font-size:12px;">
                                                Container:
                                            </td>
                                            <td style="width:25%;">@Html.TextBoxFor(model => model.ContainerNo, new { style = "width:100%;", id = "txtContainerNo", placeholder = "Container" })</td>

                                        </tr>
                                    </table>
                                </td>
                            </tr>

                            <tr>
                                <td style="width:15%; text-align:right">Delivery Clause</td>
                                <td style="width:25%" colspan="2"><input type="text" id="txtDeliveryClause" style="width:100%" /></td>
                                <td style="width:10%; text-align:right">Payment Clause</td>
                                <td style="width:50%" colspan="2"><input type="text" id="txtPaymentClause" style="width:100%" /></td>
                            </tr>
                        </table>
                      
                    </fieldset>
                </div>
            </div>
            <div class="divInfo" title="Bill Info" style="width: 100%; height:180px">
                <table id="tblImportPIReferences" title="Bill Info" style="width:100%;height:300px" class="easyui-datagrid"
                       data-options="singleSelect: true,fitColumns:false,showFooter:true, rownumbers:true, pagination:false, autoRowHeight:false, toolbar: '#toolbarBill',onClickRow:onClickRowReference">
                    <thead>
                        <tr>
                            <th field="ReferenceNo" width="12%" align="left">Ref No</th>
                            <th field="BillNo" width="12%" align="left"><label class="lblBill">Bill </label> No</th>
                            <th field="ReferenceDateSt" width="10%" align="left">Date</th>
                            <th field="ReferenceAmountInString" width="12%" align="Right"><label class="lblBill">Bill </label> Amount</th>
                            <th field="YetToReferenceAmountInString" width="12%" align="Right">Yet to Adjust</th>
                            <th width="10%" data-options="field:'Amount',align:'right',editor:{type:'numberbox',options:{precision:4}}" align="right">Amount</th>
                            <th width="13%" field="ConvertionRate" width="12%" align="right">Convertion Rate(<label id="lblConverToSymbol"></label>)</th>
                            <th width="15%" data-options="field:'AmountInBaseCurrency',align:'right',editor:{type:'numberbox',options:{precision:4}}" align="right">Amount(<label id="lblConverToSymbol2"></label>)</th>
                        </tr>
                    </thead>
                </table>
                <div id="toolbarBill">
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" id="btnPickRef">Pick</a>
                    <a id="btnRemovePIReference" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                    <a id="btnRefreshRef" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="RefRefreshDetails()">Refresh </a>
                </div>
            </div>
            <div class="divDetails" title="Product" style="width: 100%; height:250px">
                <table id="tblImportPIDetails" title="Import PI Details" style="width:100%;height:250px" class="easyui-datagrid"
                       data-options="singleSelect: true,
                       fitColumns:true,
                       rownumbers:true,
                       showFooter:true,
                       pagination:false,
                       autoRowHeight:false, toolbar: '#toolbar',onClickRow:onClickRow ">
                    <thead>
                        <tr>
                            <th field="ProductCode" width="10%" align="left">Item Code</th>
                            <th field="ProductName" width="12%" align="left">Item Name</th>
                            <th width="10%" data-options="field:'Note',align:'left',editor:{type:'text'}">Remarks</th>
                            <th field="MUName" width="7%" align="left">Unit</th>
                            <th width="10%" data-options="field:'Qty',align:'right',editor:{type:'numberbox',options:{precision:2}},formatter:formatPrice" align="right">Quantity</th>
                            <th width="10%" data-options="field:'UnitPrice',align:'right',editor:{type:'numberbox',options:{precision:4}}" align="right">Unit Price(<label id="lblConverToSymbol3"></label>)</th>
                            <th field="Amount" width="10%" formatter="formatPrice4digit" align="right">Value(<label id="lblConverToSymbol4"></label>)</th>
                        </tr>
                    </thead>
                </table>
                <div id="toolbar">
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" id="btnBillDetail">Pick <label class="lblBill">Bill </label> Detail</a>
                    <label>Product:</label> &nbsp;<input type="text" id="txtProduct" placeholder="Type Product & Press Enter" style="width:210px;" />
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" id="btnProduct">Pick</a>
                    <select id="cboUnit" style="width:110px;"></select>&nbsp;
                    <input type="text" id="txtQty" placeholder="Type Qty" style="width:80px;" />&nbsp;<input type="text" id="txtUnitPrice" placeholder="Type Unit Price" style="width:80px;" />
                    <a id="btnAddDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" onclick="AddDetail()" plain="true">Add</a>
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="DeleteDetail()" id="btnRemove">Remove</a>
                    <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="RefreshDetails()">Refresh </a>
                </div>
            </div>
        </div>
        <fieldset>
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="1" cellpadding="1" style="font-size: 11px; width: 100%;height:7%;font-weight: bold; font-size: 12px">
                <tr>
                    <td style="width: 85%; text-align: right"></td>
                    <td style="width: 10%; font-size: 13px">
                        <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true" onclick="Approve()">Approve</a>
                        <a id="btnReviseReq" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true" onclick="ReviseReq()">Revise Req</a>
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Save</a>
                    </td>
                    <td style="width: 5%; font-size: 13px">
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-closed" plain="true" onclick="Close()">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
   </div>
</body>
</html>
<script type="text/javascript">
    $(document).ready(function () {
        //debugger;
        var sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        var oImportPI = @Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oLCTerms = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.LCTerms));
        var oImportPITypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ImportPITypeObj));
        var oShipmentByObj= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ShipmentByObj));
        var oPaymentInstructionObj= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PaymentInstructionObj));
        var oCurrencys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
        var oConcernPersones = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ConcernPersons));
        var oImportSetup = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ImportSetup));
        var oImportProducts = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ImportProducts));
        var oShipmentTerms = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ShipmentTerms));
        var oRefTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.RefTypes));
        var oImportPIReferenceList = oImportPI.ImportPIReferenceList;
        var oCompany =  @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Company));
        debugger;
        _sBaseAddress=sBaseAddress;
        var oImportPIDetails=oImportPI.ImportPIDetails;

        
        debugger;
        if(oImportPI.ImportPIID==0)
        {
            var oPO=    JSON.parse(sessionStorage.getItem("PurchaseOrder_Info")); console.log(oPO);
            if(oPO!=null && oPO.POID>0)
            {
                oImportPI.RefTypeInInt= 4;
                oImportPI.SupplierName= oPO.ContractorName;
                oImportPI.SupplierID = oPO.ContractorID;
                oImportPI.CurrencyID = oPO.CurrencyID;
                //LoadContractPersonals(oPO.ContractorID, true);
            }
        }


        Refresh_ImportSetup(oImportSetup);
        $('#btnUpdateDetail').hide();
        $('#txtOverDueRate,#txtUnitPrice,#txtFreightRate').icsCurrencyBox(null, null, 6);
        $('#txtRateUnit').val(oImportPI.RateUnit);
        $('#txtQty,#txtConvertionRate').icsCurrencyBox(null, null, 2);
        $('#txtConvertionRate').val(oImportPI.ConvertionRate);
        $('#divImportPI').data('ImportPIDetail',"");
        $('#divImportPI').data('ImportPI', oImportPI);
        $('#divImportPI').data('Currencys', oCurrencys);
        $('#divImportPI').data('BaseAddress', sBaseAddress);
        $('#divImportPI').data('Company', oCompany);

        $("#cboCurrency").icsLoadCombo({List: oCurrencys,OptionValue: "CurrencyID",DisplayText: "CurrencyName"});
        $("#cboLCTerm").icsLoadCombo({List: oLCTerms,OptionValue: "LCTermID",DisplayText: "NameDaysInString"});
        $("#cboImportPIType").icsLoadCombo({List: oImportPITypes,OptionValue: "id",DisplayText: "Value"});
        $("#cboPaymentInstructionType").icsLoadCombo({List: oPaymentInstructionObj,OptionValue: "id",DisplayText: "Value"});
        $("#cboConcernPerson").icsLoadCombo({List: oConcernPersones,OptionValue: "MarketingAccountID",DisplayText: "Name"});
        $("#cboShipmentBy").icsLoadCombo({List: oShipmentByObj,OptionValue: "id",DisplayText: "Value"});
        $("#cboImportProduct").icsLoadCombo({List: oImportProducts,OptionValue: "ProductTypeInt",DisplayText: "Name"});
        $("#cboShipmentTermFDD").icsLoadCombo({List: oShipmentTerms,OptionValue: "id",DisplayText: "Value"});
        $("#cboRefType").icsLoadCombo({List: oRefTypes,OptionValue:"id",DisplayText: "Value"});
        $("#cboRefType").val($('#divImportPI').data('ImportPI').RefTypeInInt);
        
        LoadDates();
        if(oImportPIDetails!=null)
        {
            LoadImportPIDetails(oImportPIDetails);
        }
        if(oImportPIReferenceList!=null)
        {
            LoadPIReferences(oImportPIReferenceList);
        }
        debugger;
        RefreshControll();
        $('#divImportPIHeader').panel({ title:sessionStorage.getItem("ImportPIHeader")});
        document.getElementById("btnApprove").style.display = 'none';
        document.getElementById("btnReviseReq").style.display = 'none';
        if(sessionStorage.getItem("ImportPIHeader")=="Approve ImportPI" )
        {
            document.getElementById("btnApprove").style.display = '';
            document.getElementById("btnSave").style.display = 'none';
        }
        if(sessionStorage.getItem("ImportPIHeader")=="ReviseReq ImportPI" )
        {
            document.getElementById("btnApprove").style.display = 'none';
            document.getElementById("btnSave").style.display = 'none';
            document.getElementById("btnReviseReq").style.display = '';
        }
        if(sessionStorage.getItem("ImportPIHeader")=="View ImportPI" )
        {
            document.getElementById("btnApprove").style.display = 'none';
            document.getElementById("btnSave").style.display = 'none';
            $('#txtRateUnit').prop('disabled',true);
        }
        if( parseInt(oImportPI.ImportPIID)>0)
        {
            SetTotal();
        }
        cboRefTypeChange();
        cboCurrencyChange();
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();
     
        if( parseInt(oImportPI.ImportPIID)<=0 && sessionStorage.getItem("PurchaseOrderHeader")== "Create PI")
        {
            $("#btnPickRef").trigger("click");
        }
    });
    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }
    function Refresh_ImportSetup(oImportSetup)
    {
        if(!oImportSetup.IsApplyRateOn)
        {
            $('#txtRateUnit').hide();
            $('#lblRateOn').hide();
        }
        //if(parseInt(oImportSetup.FileType)==1)
        //{
        //    $('#cboImportProduct').hide();
        //    $('#cboImportProduct').val(0);
        //}

    }

    $('#txtRateUnit').change(function(){
       //debugger;
        SetTotal();
    });

    function LoadDates()
    {
        var oImportPI=$('#divImportPI').data('ImportPI');
        $('#issueDate').datebox('setValue',oImportPI.IssueDateSt);
        $('#txtReceiveDate').datebox('setValue',oImportPI.ReceiveDateSt);
        $('#validityDate').datebox('setValue',oImportPI.validityDateSt);
        //$('#txtAskingContractDate').datebox('setValue',oImportPI.AskingContractDateSt);
        $('#txtAskingDeliveryDate').datebox('setValue',oImportPI.AskingDeliveryDateInString);
        $('#txtAskingLCDate').datebox('setValue',oImportPI.AskingLCDateInString);
    }
    function DisableAllFields()
    {
        $("#PurchaseField input").attr("disabled","disabled");
        $("#PurchaseField select").attr("disabled","disabled");
        $("#VerifyOrder input").attr("disabled","disabled");
        $("#VerifyOrder select").attr("disabled","disabled");
        $("#VerifyOrder input[Type='CheckBox']").attr("disabled","disabled");
        $("#PaymentCondition input").attr("disabled","disabled");
        $("#PaymentCondition select").attr("disabled","disabled");
        $("#DelivarySpecification input").attr("disabled","disabled");
        $("#DelivarySpecification select").attr("disabled","disabled");
        $("#btnSave").hide();
        $("#Action").find("#btnSave").hide();


    }
    //Supplier Part
    $("#txtVendorName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
           //debugger;
            if($.trim($('#txtVendorName').val())==null || $.trim($('#txtVendorName').val())=="")
            {
                alert("Please Type Suplier Name and Press Enter.");
                return;
            }
            GetVendors($.trim($('#txtVendorName').val()));
        }
    });
    $("#btnPickVendor").click(function ()
    {
        GetVendors($('#txtVendorName').val());
    });
    function GetVendors(sVendorName)
    {
       //debugger;
        var oContractor = { Params:1+'~'+sVendorName+'~'+sessionStorage.getItem('BUID') };
        var obj = {
            BaseAddress: $('#divImportPI').data('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = [];var oColumn = { field: "ContractorID", title: "Code", width: 40, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 355, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 250, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Origin", title: "Origin", width: 60, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winContractors',
                        winclass:'clsSupplier',
                        winwidth: 780,
                        winheight: 500,
                        tableid: 'tblSuppliers',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Vendor List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else { alert("Data not Found"); }
        });
    }
    $('#txtVendorName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            var txtVendorName = document.getElementById("txtVendorName");
            txtVendorName.value = '';
            txtVendorName.style.color = "black";
            txtVendorName.style.fontWeight = "normal";
            $('#divImportPI').data('ImportPI').SupplierID = 0;
            $("#cboSCPerson").icsLoadCombo({List: [],OptionValue: "ContactPersonnelID",DisplayText: "Name"});
        }
    });
    //Agent
    $("#txtAgentName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($.trim($('#txtAgentName').val())==null || $.trim($('#txtAgentName').val())=="")
            {
                alert("Please Type Suplier Name and Press Enter.");
                return;
            }
            GetAgents($.trim($('#txtAgentName').val()));
        }
    });
    $("#btnPickAgent").click(function ()
    {
        GetAgents($('#txtAgentName').val());
    });
    function GetAgents(sAgentName)
    {
        var oContractor = { Params:5+'~'+sAgentName+'~'+sessionStorage.getItem('BUID') };
        var obj = {
            BaseAddress: $('#divImportPI').data('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = [];var oColumn = { field: "Name", title: "Name", width: 250, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 200, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winAgents',
                        winclass:'clsAgent',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblAgents',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Agent List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else { alert("Data not Found"); }
        });
    }
    $('#txtAgentName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $('#txtAgentName').val('');
            $('#txtAgentName').removelass('fontColorOfPickItem');
            $('#divImportPI').data('ImportPI').AgentID = 0;
            $("#cboAgentContactPerson").icsLoadCombo({List: [],OptionValue: "ContactPersonnelID",DisplayText: "Name"});
        }
    });

    $('#txtBranchName').keydown(function (e){
        if(e.which === 13 || e.which === 9)
        {
            var txtBranchName = $('#txtBranchName').val();
            var oBankBranch = {
                BUID:sessionStorage.getItem('BUID'),
                DeptIDs:'3', //EnumOperationalDept:Import_Party = 3,
                BankName : txtBranchName,
                BankID : 0
            };
            var obj = {
                BaseAddress: $('#divImportPI').data('BaseAddress'),
                Object: oBankBranch,
                ControllerName: "BankBranch",
                ActionName: "GetsBankBranchSearchByBankName",
                IsWinClose: false
            };
            $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").show();
            var intervalID = setInterval(updateProgress, 250);
            $.icsDataGets(obj, function (response) {
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (response.status && response.objs.length > 0) {
                    if (parseInt(response.objs[0].BankBranchID) > 0) {
                        var tblColums = []; var oColumn = { field: "BranchCode", title: "Code", width: 80, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "BankName", title: "Bank Name", width: 180, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "BranchName", title: "Branch Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "PhoneNo", title: "Phone No", width: 100, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winBranch',
                            winclass: 'clsBranch',
                            winwidth: 500,
                            winheight: 420,
                            tableid: 'tblBranch',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'BranchName',
                            windowTittle: 'Branch List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
                else
                {
                    alert("Data Not Found!");
                }
            });

        }
    });
    $('#btnPickBranch').click(function (e){
        var txtBranchName = $('#txtBranchName').val();
        var oBankBranch = {
            BUID:sessionStorage.getItem('BUID'),
            DeptIDs:'3', //EnumOperationalDept:Import_Party = 3,
            BranchName : txtBranchName,
            BankID : 0
        };
        var obj = {
            BaseAddress: $('#divImportPI').data('BaseAddress'),
            Object: oBankBranch,
            ControllerName: "BankBranch",
            ActionName: "GetsBankBranchSearchByBankName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (parseInt(response.objs[0].BankBranchID) > 0) {
                    var tblColums = []; var oColumn = { field: "BranchCode", title: "Code", width: 60, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BankName", title: "Bank Name", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BranchName", title: "Branch Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "PhoneNo", title: "Phone No", width: 100, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winBranch',
                        winclass: 'clsBranch',
                        winwidth: 500,
                        winheight: 420,
                        tableid: 'tblBranch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'BranchName',
                        windowTittle: 'Branch List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else
            {
                alert("Data Not Found!");
            }
        });
    });
    $('#txtBranchName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            var txtVendorName = document.getElementById("txtBranchName");
            txtVendorName.value = '';
            txtVendorName.style.color = "black";
            txtVendorName.style.fontWeight = "normal";
            $('#divImportPI').data('ImportPI').BankBranchID_Advise = 0;
        }
    });

    $("#txtProduct").keydown(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {

            if($('#txtProduct').val()=="" || $('#txtProduct').val()==null)
            {
                alert("Please Type Product Name And Press Enter.");
                return;
            }
            var oImportPI = { BUID: sessionStorage.getItem('BUID'),ErrorMessage:$('#txtProduct').val(),ProductType:parseInt( $('#cboImportProduct').val())};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oImportPI,
                ControllerName: "ImportPI",
                ActionName: "GetProductsPI",
                IsWinClose: false
            };
            $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").show();
            var intervalID = setInterval(updateProgress, 250);
            $.icsDataGets(obj, function (response) {
                clearInterval(intervalID);
                $("#progressbarParent").hide();

                if (response.status && response.objs.length > 0)
                {
                    if (response.objs[0].ProductID > 0) {
                        var tblColums = [], searcingField = "", windowTittle = "";
                        var oColumn = { field: "ProductCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "FullName", title: "Item Name", width: 250, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winProduct',
                            winclass: 'clsProduct',
                            winwidth: 450,
                            winheight: 460,
                            tableid: 'tblProduct',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: searcingField,
                            windowTittle: windowTittle
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);//multiple return
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }


                }
                else { alert("Data not Found"); }
            });
        }
        if (code == 8) //backspace=8
        {
            //
            $("#txtProduct").val('');
            $("#txtProduct").removeClass('fontColorOfPickItem');
            _oTempProducts = [];
        }

    });
    $("#btnProduct").click(function () {
        var oImportPI = { BUID: sessionStorage.getItem('BUID'),ErrorMessage:$('#txtProduct').val(),ProductType:parseInt( $('#cboImportProduct').val())};
        var obj = {
            BaseAddress:_sBaseAddress,
            Object: oImportPI,
            ControllerName: "ImportPI",
            ActionName: "GetProductsPI",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0)
            {
                if ( response.objs[0].ProductID > 0) {

                    var tblColums = [], searcingField = "", windowTittle = "";
                    var oColumn = { field: "ProductCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "FullName", title: "Item Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    searcingField = "FullName";
                    windowTittle = "Item List";
                    var oPickerParam = {
                        winid: 'winProduct',
                        winclass: 'clsProduct',
                        winwidth: 450,
                        winheight: 460,
                        tableid: 'tblProduct',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: searcingField,
                        windowTittle: windowTittle
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else
            {
                alert("Data Not Fund");
                return;
            }

        });
    });

    $('#btnPickRef').click(function (e)
    {
        if($('#divImportPI').data('ImportPI').SupplierID<=0)
        {
            alert("Please Select Contractor.");
            $('#txtVendorName').focus();
            return;
        }
        if(parseFloat($('#cboCurrency').val())<=0)
        {
            alert("Please select Currency");
            $('#cboCurrency').focus();
            return;
        }
        if(parseFloat($('#txtConvertionRate').val())<=0)
        {
            alert("Convertion Rate Should be Greater than 0");
            $('#txtConvertionRate').focus();
            return;
        }
       
        var oImportPI = { BUID:sessionStorage.getItem('BUID'),RefTypeInInt:$.trim($('#cboRefType').val()), SupplierID:$('#divImportPI').data('ImportPI').SupplierID};
        
        var sActionName="BillSearch";
        if($('#cboRefType').val()==4)
            sActionName="POSearch"

        var obj = {
                BaseAddress: sessionStorage.getItem('BaseAddress'),
                Object: oImportPI,
                ControllerName: "ImportPI",
                ActionName: sActionName,
                IsWinClose: false
            };

        $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").show();
            var intervalID = setInterval(updateProgress, 250);
            $.icsDataGets(obj, function (response) {
             //debugger;
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ReferenceID > 0) {
                        var tblColums = [];
                        var oColumn = { field: "ReferenceNo", title: "Ref No", width:120, align: "left" }; tblColums.push(oColumn);
                        var oColumn = { field: "BillNo", title: "Bill No", width:120, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ReferenceDateSt", title: "Date", width:130, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Amount", formatter:formatPrice4digit, title: "Amount", width:120, align: "right" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winReference',
                            winclass: 'clsReference',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblReference',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName: 'NameCode',
                            windowTittle: 'Bill List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }

                } else{
                    alert("Data Not Found.");
                    return;
                }
            });

    });

    $("#btnRemovePIReference").click(function () {
        var oImportPIReference = $("#tblImportPIReferences").datagrid("getSelected");
        if (oImportPIReference == null || parseInt(oImportPIReference.ProductID)<=0)
        {
            alert("Please select an item from list!");
            return false;
        }
        if (!confirm("Confirm to Delete?")) return false;
        var SelectedRowIndex=$('#tblImportPIReferences').datagrid('getRowIndex',oImportPIReference);
        $('#tblImportPIReferences').datagrid('deleteRow', SelectedRowIndex);
    });
    //btnBillDetail
    $("#btnBillDetail").click(function ()
    {
        var oList = $('#tblImportPIReferences').datagrid('getRows');
        if(oList.length<=0)
        {
            alert("Please Select Bill.");
            return;
        }
        var sIDs = ICS_PropertyConcatation(oList,'ReferenceID');
        var oImportPI = { RefTypeInInt:parseInt($('#cboRefType').val()),Note:sIDs};

        
        var sActionName="GetImportPIDetails";
        if($('#cboRefType').val()==4)
            sActionName="GetPODetails"


        var obj = {
            BaseAddress:_sBaseAddress,
            Object: oImportPI,
            ControllerName: "ImportPI",
            ActionName: sActionName,
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0)
            {
                if ( response.objs[0].ProductID > 0) {

                    var tblColums = [], searcingField = "", windowTittle = "";
                    var oColumn = { field: "ProductCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Item Name", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Qty", formatter:formatPrice, title: "Quantity", width: 80, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "UnitPrice", formatter:formatPrice4digit,  title: "Rate", width: 80, align: "right" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winBillDetail',
                        winclass: 'clsBillDetail',
                        winwidth: 550,
                        winheight: 460,
                        tableid: 'tblBillDetail',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'ProductName',
                        windowTittle: 'Item List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else
            {
                alert("Data Not Fund");
                return;
            }

        });
    });

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }
    function SetPickerValueAssign(oPickerobj) {

        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid == 'winContractors')
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0)
            {
                $('#txtVendorName').val(oreturnObj.Name);
                $('#txtVendorName').addClass('fontColorOfPickItem');
                $('#divImportPI').data('ImportPI').SupplierID = oreturnObj.ContractorID;
                LoadContractPersonals(oreturnObj.ContractorID, true);
                $('#txtVendorName').focus();
            }
        }else  if (oPickerobj.winid == 'winAgents')
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0)
            {
                $('#txtAgentName').val(oreturnObj.Name);
                $('#txtAgentName').addClass('fontColorOfPickItem');
                $('#divImportPI').data('ImportPI').AgentID = oreturnObj.ContractorID;
                LoadContractPersonals(oreturnObj.ContractorID, false);
                $('#txtAgentName').focus();
            }
        }
        else if (oPickerobj.winid === 'winBranch') {
            if (oreturnObj != null && parseInt(oreturnObj.BankBranchID) > 0) {
                $('#txtBranchName').val(oreturnObj.BankBranchName);
                $('#txtBranchName').addClass('fontColorOfPickItem');
                $('#divImportPI').data('ImportPI').BankBranchID_Advise= parseInt(oreturnObj.BankBranchID);
            }
        }else if (oPickerobj.winid == 'winProduct')
        {
            if (oreturnObj!=null && oreturnObj.ProductID> 0)
            {
                $("#txtProduct").val(oreturnObj.ProductName);
                $("#txtProduct").addClass('fontColorOfPickItem');
                $('#divImportPI').data('Product',oreturnObj);
                LoadUnits(oreturnObj.UnitTypeInInt);
                $('#cboUnit').focus();
            }
        }else if (oPickerobj.winid == 'winBillDetail')
        {
            if (oreturnobjs.length>0)
            {
                var oImportPIDetails =  $('#tblImportPIDetails').datagrid('getRows');
                for(var i =0;i<oreturnobjs.length;i++)
                {
                    if(!ICS_IsExist(oImportPIDetails,'ProductID',oreturnobjs[i].ProductID))
                    {
                        $('#tblImportPIDetails').datagrid('appendRow',oreturnobjs[i]);
                        MakeFooterColumn('tblImportPIDetails');
                    }
                }
            }
        }
        else if(oPickerobj.winid=='winReference')
        {
            if (oreturnobjs.length>0)
            {
                var oImportPIReferences =  $('#tblImportPIReferences').datagrid('getRows');
                for(var i =0;i<oreturnobjs.length;i++)
                {
                    if(!ICS_IsExist(oImportPIReferences,'ReferenceID',oreturnobjs[i].ReferenceID))
                    {
                        if(parseInt($('#cboCurrency').val())==parseInt(oreturnobjs[i].CurrencyID))
                        {
                            oreturnobjs[i].ConvertionRate = 1;
                            oreturnobjs[i].AmountInBaseCurrency = oreturnobjs[i].Amount;
                        }else
                        {
                            oreturnobjs[i].ConvertionRate = parseFloat($('#txtConvertionRate').val());
                            oreturnobjs[i].AmountInBaseCurrency = parseFloat(oreturnobjs[i].Amount)/parseFloat($('#txtConvertionRate').val());
                        }
                        $('#tblImportPIReferences').datagrid('appendRow',oreturnobjs[i]);
                        MakeFooterColumn('tblImportPIReferences');
                    }
                }
            }
        }
    }

    function LoadUnits(nUnitTypeInt)
    {
        //debugger;
        var oMeasurementUnit={
            UnitTypeInInt : nUnitTypeInt
        };
        $.ajax ({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/MeasurementUnit/GetbyUnitType",
            data:  JSON.stringify(oMeasurementUnit),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                var  oUnits = jQuery.parseJSON(data);
                if (oUnits!=null)
                {
                    if(oUnits.length>0)
                    {
                        //alert($('#divImportPI').data('Product').MeasurementUnitID);

                        $("#cboUnit").icsLoadCombo({List: oUnits,OptionValue: "MeasurementUnitID",DisplayText: "Symbol"});
                        $('#cboUnit').val($('#divImportPI').data('Product').MeasurementUnitID);
                        //if( $('#divImportPI').data('ImportPIDetail')!="")
                        //{
                        //    alert("aaaa");
                        //    $('#cboUnit').val( $('#divImportPI').data('Product').MeasurementUnitID);
                        //}

                    }
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }
    function ValidateInputDetail()
    {
        if( $('#divImportPI').data('Product')==null || $('#divImportPI').data('Product')=="")
        {
            alert("Please select Product");
            return false;
        }
        if($('#cboUnit').val()==null || $('#cboUnit').val()<=0)
        {
            alert("Please select Unit");
            $('#cboUnit').focus();
            return false;
        }
        if($('#txtQty').val()==null || $('#txtQty').val()<=0)
        {
            alert("Quantity Should be greater than 0.");
            $('#txtQty').focus();
            return false;
        }
        if($('#txtUnitPrice').val()==null || $('#txtUnitPrice').val()<=0)
        {
            alert("Unit Price Should be greater than 0.");
            $('#txtUnitPrice').focus();
            return false;
        }
        if(parseInt($('#cboCurrency').val())<=0)
        {
            alert("Please Select Currency.");
            $('#cboCurrency').focus();
            return false;
        }
        if(parseFloat($('#txtConvertionRate').val())<=0)
        {
            alert("Convertion Rate Should be Greater than 0.");
            $('#txtConvertionRate').focus();
            return false;
        }
        return true;
    }

    function ResetDetailFields()
    {
        $("#txtProduct").val('');
        $("#txtProduct").removeClass('fontColorOfPickItem');
        $('#cboUnit').empty();
        $('#txtQty,#txtUnitPrice,#txtFreightRate').val('');
        $('#divImportPI').data('Product',"");
        $('#divImportPI').data('ImportPIDetail',"");
        $("#txtProduct").focus();
    }

    function AddDetail()
    {

       //debugger;
        if(!ValidateInputDetail())return;
        var oImportPIDetails =  $('#tblImportPIDetails').datagrid('getRows');
        var oImportPIDetail =
            {
                ImportPIDetailID:0,
                ImportPIID:$('#divImportPI').data('ImportPI').ImportPIID,
                ProductID:$('#divImportPI').data('Product').ProductID,
                ProductCode:$('#divImportPI').data('Product').ProductCode,
                ProductName:$('#divImportPI').data('Product').ProductName,
                Note:'',
                FreightRate : 0,
                UnitPrice : parseFloat(icsRemoveComma($('#txtUnitPrice').val())),
                Qty: parseFloat(icsRemoveComma($('#txtQty').val())),
                ProductUnitTypeInInt:$('#divImportPI').data('Product').UnitTypeInInt,
                MUnitID:$('#cboUnit').val(),
                MUName:$('#cboUnit option:selected').text(),
                Amount: (parseFloat(parseFloat(icsRemoveComma($('#txtQty').val()))/parseInt($('#txtRateUnit').val()))*(parseFloat(icsRemoveComma($('#txtUnitPrice').val()))))

            };
        $('#tblImportPIDetails').datagrid('appendRow',oImportPIDetail);
        ResetDetailFields();
        SetTotal();
    }
    function EditDetail()
    {
        $('#txtOverDueRate,#txtUnitPrice,#txtFreightRate').icsCurrencyBox(null, null, 6);
        var oImportPIDetail= $('#tblImportPIDetails').datagrid('getSelected');
        if (oImportPIDetail == null || parseInt(oImportPIDetail.ProductID)<= 0)
        {
            alert("Please Select Item From List");
            return;
        }
        $('#btnAddDetail').hide();
        $('#btnUpdateDetail').show();
        $("#txtProduct").val(oImportPIDetail.ProductName);
        $("#txtProduct").addClass('fontColorOfPickItem');
        $('#divImportPI').data('ImportPIDetail',oImportPIDetail);
        var oProduct = {
                        ProductID:oImportPIDetail.ProductID,
                        ProductCode:oImportPIDetail.ProductCode,
                        ProductName:oImportPIDetail.ProductName,
                        UnitTypeInInt:oImportPIDetail.ProductUnitTypeInInt
        };
        $('#divImportPI').data('Product',oProduct);
        LoadUnits(oImportPIDetail.ProductUnitTypeInInt);
        $('#txtQty').val(oImportPIDetail.Qty);
        $('#txtUnitPrice').val(oImportPIDetail.UnitPrice);
        $('#txtFreightRate').val(oImportPIDetail.FreightRate);
        $('#cboUnit').focus();
    }
    function UpdateDetail()
    {
        var nFreightRate=icsRemoveComma($('#txtFreightRate').val());
       //debugger;
        if(!ValidateInputDetail())return;
        var oPriviousItem =  $('#divImportPI').data('ImportPIDetail');
        var nSelectedIndex = $('#tblImportPIDetails').datagrid('getRowIndex', oPriviousItem);
        var oImportPIDetails =  $('#tblImportPIDetails').datagrid('getRows');

        var oImportPIDetail =
           {
               ImportPIDetailID:oPriviousItem.ImportPIDetailID,
               ImportPIID:$('#divImportPI').data('ImportPI').ImportPIID,
               ProductID:$('#divImportPI').data('Product').ProductID,
               ProductCode:$('#divImportPI').data('Product').ProductCode,
               ProductName:$('#divImportPI').data('Product').ProductName,
               Note:oPriviousItem.Note,
               UnitPrice :icsRemoveComma($('#txtUnitPrice').val()),
               FreightRate :parseFloat(nFreightRate),
               Qty:icsRemoveComma($('#txtQty').val()),
               ProductUnitTypeInInt:$('#divImportPI').data('Product').UnitTypeInInt,
               MUnitID:$('#cboUnit').val(),
               MUName:$('#cboUnit option:selected').text(),
               Amount: parseFloat(icsRemoveComma($('#txtQty').val())/parseInt($('#txtRateUnit').val()))*(parseFloat(icsRemoveComma($('#txtUnitPrice').val()))+parseFloat(nFreightRate))
           };
        $('#tblImportPIDetails').datagrid('updateRow',{index: nSelectedIndex,row: oImportPIDetail});
        ResetDetailFields();
        $('#btnAddDetail').show();
        $('#btnUpdateDetail').hide();
        SetTotal();
    }

    function LoadContractPersonals(nContractorID,bIsSuppler)
    {

        if (parseInt(nContractorID)<=0)
        {
            if(bIsSuppler)
            {
                alert(" Please Select an Vendor!");
            }else
            {
                alert(" Please Select an Agent!");
            }
            return;
        }
        var obj = window.dialogArguments;
        var tsv= (new Date().getTime())/1000;
        var listItems= "<option value='"+0+"'>" +"--Select Contact Person--" + "</option>";
        var Contractor={ContractorId:nContractorID};

        $.ajax
           ({
               type: "POST",
               dataType: "json",
               url : $('#divImportPI').data('BaseAddress')+  "/Contractor/GetContactPersonnels",
               data:  JSON.stringify(Contractor),
               contentType: "application/json; charset=utf-8",
               success: function (data)
               {
                   var  oContactPersonnels = jQuery.parseJSON(data);
                       if(oContactPersonnels.length>0)
                       {
                           for (i = 0; i < oContactPersonnels.length; i++)
                           {
                               listItems += "<option value='" + oContactPersonnels[i].ContactPersonnelID+"'>" + oContactPersonnels[i].Name+"</option>";
                           }
                           if(bIsSuppler)
                           {
                               $("#cboSCPerson").html(listItems);
                               $('#cboSCPerson').val($('#divImportPI').data('ImportPI').ContactPersonID);
                           }else
                           {
                               $("#cboAgentContactPerson").html(listItems);
                               $('#cboAgentContactPerson').val($('#divImportPI').data('ImportPI').AgentContactPersonID);
                           }
                       }
                       else
                       {
                           if(bIsSuppler)
                           {
                               $("#cboSCPerson").html(listItems);
                           }else{
                               $("#cboAgentContactPerson").html(listItems);
                           }
                       }

               },
               error: function (xhr, status, error)
               {
                   alert(error);
               }

           });

    }
    function ResetBankAdvice()
    {
        document.getElementById('txtBranchName').value="";
    }

    function DeleteDetail()
    {
        var oImportPIDetail= $('#tblImportPIDetails').datagrid('getSelected');
        if (oImportPIDetail == null || parseInt(oImportPIDetail.ProductID)<= 0) {

            $('#tblImportPIDetails').datagrid('deleteRow',nSelectedIndex);
            alert("Delete sucessfully");
        }
        if (!confirm("Confirm to Delete?")) return;
        var nSelectedIndex = $('#tblImportPIDetails').datagrid('getRowIndex', oImportPIDetail);
        $('#tblImportPIDetails').datagrid('deleteRow',nSelectedIndex);
        alert("Delete sucessfully");
       //debugger;
        endEditing();
    }

    function Validation()
    {
        var nRefAmount = parseFloat(parseFloat(GetSum('AmountInBaseCurrency','tblImportPIReferences')).toFixed(2));
        var nPIAmount = parseFloat(parseFloat(GetSum('Amount','tblImportPIDetails')).toFixed(2));
        var nDiffAmount = (nRefAmount - nPIAmount);
        if(nDiffAmount<0)
        {
            nDiffAmount = (nDiffAmount * (-1));
        }
        if(nDiffAmount>0.01)
        {
            alert("Bill Amount And Product Value Should be Same!!");
            return false;
        }
        if($('#txtSLNo').val()!="" && $('#txtSLNo').val()!=null)
        {
            var FileNo = $('#txtSLNo').val().split('/');
            if(FileNo.length>2)
            {
                alert("Please Type Correct format for File No.");
                $("#txtSLNo").focus();
                return false;
            }
            if(parseInt(FileNo[0].length)!=4)
            {
                alert("Please Type Correct format for First part of File No.");
                $("#txtSLNo").focus();
                return false;
            }
            if(parseInt(FileNo[1].length)!=2)
            {
                alert("Please Type Correct format for Last part of File No.");
                $("#txtSLNo").focus();
                return false;
            }
        }

        var nTem=$('#cboLCTerm').val()
        if(parseInt(nTem)<=0)
        {
            alert("Please Select LC Terms");
            $('#tabImportPITabs').tabs('select', 1);
            $("#cboLCTerm").addClass("errorFieldBorder");
            $("#cboLCTerm").focus();
            return false;
        }
        var nTem=$('#cboPaymentInstructionType').val()
        if( parseInt(nTem)<=0)
        {
            alert("Please Select Payment Instruction");
            $('#tabImportPITabs').tabs('select', 1);
            $("#cboPaymentInstructionType").addClass("errorFieldBorder");
            $("#cboPaymentInstructionType").focus();
            return false;
        }

        var IssurDate=new Date($('#issueDate').datebox('getValue'));
        var dtReceiveDate=new Date($('#txtReceiveDate').datebox('getValue'));
        var ValidityDate=new Date($('#validityDate').datebox('getValue'));
        var AskingLCDate=new Date($('#txtAskingLCDate').datebox('getValue'));
        var AskingDeliveryDate=new Date($('#txtAskingDeliveryDate').datebox('getValue'));

        if(document.getElementById('txtImportPI').value=="")
        {
            alert("Please enter P/I No.");
            $('#tabImportPITabs').tabs('select', 0);
            $("#txtImportPI").focus();
            return false;
        }

        if(IssurDate>ValidityDate)
        {
            alert("Validity date must be greater than issue date.");
            return false;
        }
        if(IssurDate>dtReceiveDate)
        {
            alert("Receive date must be greater than issue date.");
            return false;
        }
        if(parseInt($('#divImportPI').data('ImportPI').SupplierID)<=0 )
        {
            alert("Please select a supplier.");
            return false;
        }

        if($('#cboCurrency').val()==0)
        {
            alert("Please select currency.");
            $("#cboCurrency").focus();
            return false;
        }
        if($('#cboConcernPerson').val()<=0)
        {
            alert("Please select Concern Person.");
            $("#cboConcernPerson").focus();
            return false;
        }

        if(parseInt($('#cboRefType').val())==0)
        {
            alert("Please select Ref. Type.");
            $("#cboRefType").focus();
            return false;
        }

        var getRows=$('#tblImportPIDetails').datagrid('getRows');
        if(getRows.length==0)
        {
            alert(" Please enter al least one detail.");
            return false;
        }

        else if(getRows.length>1)
        {
            for(var i=0; i<getRows.length;i++)
            {
                if(getRows[i].Qty==0 && getRows[i].UnitPrice!=0)
                {
                    alert(" In row number "+ Number(i+1) +" 'Quantity' must be greater than zero. ");
                    return false;
                }
                else if(getRows[i].UnitPrice==0 && getRows[i].Qty!=0)
                {
                    alert(" In row number "+ Number(i+1) +" 'Unit price' must be greater than zero. ");
                    return false;
                }
                else if(getRows[i].Qty==0 && getRows[i].UnitPrice==0)
                {
                    alert(" In row number "+ Number(i+1) +" 'Quantity' and 'Unit price' must be greater than zero. ");
                    return false;
                }
            }
        }

        if($('#tblImportPIReferences').datagrid('getRows').length<=0)
        {
            alert("Please Add Bill Reference.");
            return false;
        }
        var oReferences = $('#tblImportPIReferences').datagrid('getRows');

        for(var i = 0;i<oReferences.length;i++)
        {
            if(parseFloat(oReferences[i].YetToReferenceAmount.toFixed(4))< parseFloat(parseFloat(oReferences[i].Amount).toFixed(4)))
            {
                alert("Amount Should be Less than or equal Yet To Adjust. for Bill No: "+oReferences[i].BillNo);
                return false;
            }
            if(parseFloat(oReferences[i].ConvertionRate)<= 0)
            {
                alert("ConvertionRate Should be Greater than for Bill No: "+oReferences[i].BillNo);
                return false;
            }
            if(parseFloat(oReferences[i].AmountInBaseCurrency)<= 0)
            {
                alert("Convertion Amount Should be Greater than 0 for Bill No: "+oReferences[i].BillNo);
                return false;
            }
        }
       
        return true;

    }

    function RefreshObject() {
       //debugger;

        var LiborRateInInt= parseInt($('input[name="LiborRate"]:checked').val());
        var TransShipmentInInt=parseInt( $('input[name="TransShipment"]:checked').val());
        var PartShipmentInInt= parseInt($('input[name="PartShipment"]:checked').val());

        var oImportPI=
                      {
                          ImportPIID               :  $('#divImportPI').data('ImportPI').ImportPIID,
                          ImportPINo               :  $('#txtImportPI').val(),
                          SLNo                     :  $('#txtSLNo').val(),
                          SupplierID               :  $('#divImportPI').data('ImportPI').SupplierID,
                          ContactPersonID          :  $('#cboSCPerson').val(),
                          AgentID                  :  $('#divImportPI').data('ImportPI').AgentID,
                          AgentContactPersonID     :  $('#cboAgentContactPerson').val(),
                          ConcernPersonID          :  $('#cboConcernPerson').val(),
                          IssueDate                :  new Date($('#issueDate').datebox('getValue')),
                          ReceiveDate              :  new Date($('#txtReceiveDate').datebox('getValue')),
                          AskingLCDate             :  new Date($('#txtAskingLCDate').datebox('getValue')),
                          ValidityDate             :  new Date($('#validityDate').datebox('getValue')),
                          AskingDeliveryDate       :  new Date($('#txtAskingDeliveryDate').datebox('getValue')),
                          TotalValue               :  $('#divImportPI').data('ImportPI').TotalValue,
                          CurrencyID               :  $('#cboCurrency').val(),
                          MUnitID                  : $('#divImportPI').data('ImportPI').MUnitID,
                          Note                     :  $('#txtNote').val(),
                          BankBranchID_Advise      :  $('#divImportPI').data('ImportPI').BankBranchID_Advise,
                          LCTermID                 :  $('#cboLCTerm').val(),
                          Status                   :  $('#divImportPI').data('ImportPI').Status,
                          ContainerNo              :  $('#txtContainerNo').val(),
                          ImportPITypeInt          : parseInt($('#cboImportPIType').val()),
                          ProductType              :  parseInt($('#cboImportProduct').val()),
                          IsTransShipmentAllow     :  TransShipmentInInt==1?true:false,
                          IsPartShipmentAllow      :  PartShipmentInInt==1?true:false,
                          OverDueRate              : icsRemoveComma($('#txtOverDueRate').val()),
                          IsLIBORrate              :  LiborRateInInt==1?true:false,
                          ApprovedByUserID          :  $('#divImportPI').data('ImportPI').ApprovedByUserID,
                          DeliveryClause           :  $('#txtDeliveryClause').val(),
                          PaymentClause            :  $('#txtPaymentClause').val(),
                          ShipmentBy               :  $('#cboShipmentBy').val(),
                          BUID                     :sessionStorage.getItem('BUID'),
                          RateUnit                 :$('#txtRateUnit').val(),
                          ConvertionRate           :$('#txtConvertionRate').val(),
                          RefTypeInInt: parseInt($('#cboRefType').val()),
                          PIEntryTypeInInt : sessionStorage.getItem('PIEntryType'),
                          PaymentInstructionTypeInt : $('#cboPaymentInstructionType').val(),
                          ShipmentTermInt : $('#cboShipmentTermFDD').val(),
                          ImportPIDetails  : $('#tblImportPIDetails').datagrid('getRows'),
                          ImportPIReferenceList:$('#tblImportPIReferences').datagrid('getRows')
                      }
        return oImportPI;
    }

    function Save() {
       //debugger;
        endEditing();
        endEditingReference();
        if(!Validation())
        {
            return;
        }
       var oImportPI=RefreshObject();
        if( oImportPI==null)
        {
            alert(" Something wrong, Please correct it. !!");
            return;
        }

        $.ajax({
            type: "POST",
            dataType: "json",
            url: $('#divImportPI').data('BaseAddress') + "/ImportPI/Save",
            traditional: true,
            data: JSON.stringify(oImportPI),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oImportPI = jQuery.parseJSON(data);
                if (oImportPI.ErrorMessage=="")
                {
                    debugger;
                    alert("Data Saved successfully");
                    var oImportPIs =sessionStorage.getItem("ImportPIs");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if(oImportPIs!=null)
                    {
                        oImportPIs = jQuery.parseJSON(oImportPIs);
                    }
                    else
                    {
                        oImportPIs=[];
                    }
                    if(nIndex!=-1)
                    {
                        oImportPIs[nIndex]=oImportPI;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oImportPIs.length);
                        oImportPIs.push(oImportPI);
                    }
                    sessionStorage.setItem("ImportPIs", JSON.stringify(oImportPIs));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else
                {
                    alert(oImportPI.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    function Approve()
    {
       //debugger;
        var oImportPI=$('#divImportPI').data('ImportPI');
        if(oImportPI==null)
        {
            alert(" Something wrong, Please correct it. !!");
            return;
        }
        if (!confirm("Confirm to Approve?")) return;
        if (parseInt(oImportPI.ImportPIID)> 0)
        {
            $.ajax({
                type: "POST",
                dataType: "json",
                url: $('#divImportPI').data('BaseAddress') + "/ImportPI/ApproveImportPI",
                traditional: true,
                data: JSON.stringify(oImportPI),
                contentType: "application/json; charset=utf-8",
                success: function(data) {

                    var oImportPI = jQuery.parseJSON(data);
                    if (oImportPI.ErrorMessage == "") {
                        alert("Successfully Approved ");
                        var oImportPIs =sessionStorage.getItem("ImportPIs");
                        var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                        if(oImportPIs!=null)
                        {
                            oImportPIs = jQuery.parseJSON(oImportPIs);
                        }
                        else
                        {
                            oImportPIs=[];
                        }
                        if(nIndex!=-1)
                        {
                            oImportPIs[nIndex]=oImportPI;
                        }
                        else
                        {
                            sessionStorage.setItem("SelectedRowIndex", oImportPIs.length);
                            oImportPIs.push(oImportPIs);
                        }
                        sessionStorage.setItem("ImportPIs", JSON.stringify(oImportPIs));
                        window.location.href = sessionStorage.getItem("BackLink");
                    } else {
                        alert(oImportPI.ErrorMessage);
                    }
                },
                error: function(xhr, status, error) {
                    alert(error);
                }
            });
        }
    }
    function ReviseReq()
    {
       //debugger;
        var oImportPI=$('#divImportPI').data('ImportPI');
        if(oImportPI==null)
        {
            alert(" Something wrong, Please correct it. !!");
            return;
        }
        if (!confirm("Confirm to Send request for revise?")) return;
        if (parseInt(oImportPI.ImportPIID)> 0)
        {
            $.ajax({
                type: "POST",
                dataType: "json",
                url: $('#divImportPI').data('BaseAddress') + "/ImportPI/RequestForReviseImportPI",
                traditional: true,
                data: JSON.stringify(oImportPI),
                contentType: "application/json; charset=utf-8",
                success: function(data) {

                    var oImportPI = jQuery.parseJSON(data);
                    if (oImportPI.ErrorMessage == "") {
                        alert("Successfully Revise request done");
                        var oImportPIs =sessionStorage.getItem("ImportPIs");
                        var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                        if(oImportPIs!=null)
                        {
                            oImportPIs = jQuery.parseJSON(oImportPIs);
                        }
                        else
                        {
                            oImportPIs=[];
                        }
                        if(nIndex!=-1)
                        {
                            oImportPIs[nIndex]=oImportPI;
                        }
                        else
                        {
                            sessionStorage.setItem("SelectedRowIndex", oImportPIs.length);
                            oImportPIs.push(oImportPIs);
                        }
                        sessionStorage.setItem("ImportPIs", JSON.stringify(oImportPIs));
                        window.location.href = sessionStorage.getItem("BackLink");
                    } else {
                        alert(oImportPI.ErrorMessage);
                    }
                },
                error: function(xhr, status, error) {
                    alert(error);
                }
            });
        }
    }

    var editIndex = undefined;
    function endEditing()
    {
        if (editIndex == undefined) { return true }
        if ($('#tblImportPIDetails').datagrid('validateRow', editIndex))
        {
            $('#tblImportPIDetails').datagrid('endEdit', editIndex);
            $('#tblImportPIDetails').datagrid('selectRow', editIndex);
            var oImportPIDetail = $('#tblImportPIDetails').datagrid('getSelected');
            var sTemp="";
            var oCurrencys = $('#divImportPI').data('Currencys', oCurrencys);
            for (var i = 0; i < oCurrencys.length; i++)
            {
                if(oCurrencys[i].CurrencyID== $('#cboCurrency').val())
                {
                    sTemp=oCurrencys[i].Symbol;
                }
            }
            $('#divImportPI').data('ImportPI').CurrencySymbol=sTemp
            if(oImportPIDetail!=null)
            {
                oImportPIDetail.Amount= parseFloat(parseFloat(oImportPIDetail.Qty)/ parseInt($('#txtRateUnit').val())) * (parseFloat(oImportPIDetail.UnitPrice).toFixed(6)+parseFloat(oImportPIDetail.FreightRate));
                $('#tblImportPIDetails').datagrid('updateRow',{index: editIndex,	row: oImportPIDetail});
            }
            SetTotal();
            editIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    function onClickRow(index) {
        if (editIndex != index) {
            if (endEditing()) {
                $('#tblImportPIDetails').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndex = index;
            }
            else {
                $('#tblImportPIDetails').datagrid('selectRow', editIndex);
            }
        }
    }
    function RefRefreshDetails()
    {
        debugger;
        endEditingReference();
        MakeFooterColumn('tblImportPIReferences');
    }
    function RefreshDetails()
    {
        endEditing();
        MakeFooterColumn('tblImportPIDetails');
    }
    function RefreshControll()
    {
       //debugger;
        var oImportPI = $('#divImportPI').data('ImportPI');
        var oCompany = $('#divImportPI').data('Company');
        $('#cboImportPIType').val(oImportPI.ImportPITypeInt);
        $('#cboImportProduct').val(oImportPI.ProductType);
        $('#txtVendorName').val(oImportPI.SupplierName);
        $('#txtAgentName').val(oImportPI.AgentName);
        var oCurrencies =  $('#divImportPI').data('Currencys');
        if(parseInt(oImportPI.SupplierID)>0)
        {
            $('#txtVendorName').addClass('fontColorOfPickItem');
            LoadContractPersonals(oImportPI.SupplierID, true);
        }
        if(parseInt(oImportPI.ContactPersonID)>0)
        {
            $("#cboSCPerson").val(oImportPI.ContactPersonID);
        }
        if(parseInt(oImportPI.AgentID)>0)
        {
            $('#txtAgentName').addClass('fontColorOfPickItem');
            LoadContractPersonals(oImportPI.AgentID, false);
        }
        if(parseInt(oImportPI.AgentContactPersonID)>0)
        {
            $("#cboAgentContactPerson").val(oImportPI.AgentContactPersonID);
        }
        document.getElementById('cboCurrency').value =oImportPI.CurrencyID;
        document.getElementById('txtNote').value=oImportPI.Note;
        $('#txtBranchName').val(oImportPI.BankName);
        if(parseInt(oImportPI.BankBranchID_Advise)>0)
        {
            $('#txtBranchName').addClass('fontColorOfPickItem');
        }
        $("#cboConcernPerson").val(oImportPI.ConcernPersonID);
        $('#txtDeliveryClause').val(oImportPI.DeliveryClause);
        $('#txtPaymentClause').val(oImportPI.PaymentClause);
        $('#cboLCTerm').val(oImportPI.LCTermID);
        $('#cboShipmentBy').val(oImportPI.ShipmentBy);
        $('#txtOverDueRate').val(oImportPI.OverDueRate);
        $('#cboPaymentInstructionType').val(oImportPI.PaymentInstructionTypeInt);
        $('#cboShipmentTermFDD').val(oImportPI.ShipmentTermInt);
        document.getElementById('txtSLNo').value=oImportPI.SLNo;
        document.getElementById('txtImportPI').value=oImportPI.ImportPINo;
        if(parseInt($('#cboCurrency').val())== parseInt(oCompany.BaseCurrencyID))
        {
            $('#txtConvertionRate').prop('disabled',true);
        }        
        $('#lblConverToSymbol,#lblConverToSymbol2,#lblConverToSymbol3,#lblConverToSymbol4').text(GetCurrencySymbol(parseInt($('#cboCurrency').val())));
        if(oImportPI.IsLIBORrate)
        {
            $('input:radio[name="LiborRate"][value=1]').prop('checked', true);
        }else
        {
            $('input:radio[name="LiborRate"][value=0]').prop('checked', true);
        }
        if(oImportPI.IsTransShipmentAllow)
        {
            $('input:radio[name="TransShipment"][value=1]').prop('checked', true);
        }else
        {
            $('input:radio[name="TransShipment"][value=0]').prop('checked', true);
        }
        if(oImportPI.IsPartShipmentAllow)
        {
            $('input:radio[name="PartShipment"][value=1]').prop('checked', true);
        }else
        {
            $('input:radio[name="PartShipment"][value=0]').prop('checked', true);
        }

    }
    function GetCurrencySymbol(nCurrencyID)
    {
        var oCurrencies =  $('#divImportPI').data('Currencys');
        for(var i = 0;i<oCurrencies.length;i++)
        {
            if(parseInt(oCurrencies[i].CurrencyID)== parseInt(nCurrencyID))
            {
                return oCurrencies[i].Symbol;
            }
        }
        return "";
    }

    function LoadImportPIDetails(oImportPIDetails)
    {
        var data=oImportPIDetails;
        data={"total":""+data.length+"","rows":data};
        $('#tblImportPIDetails').datagrid('loadData',data);
    }
    function LoadPIReferences(oImportPIReferences)
    {
        var data=oImportPIReferences;
        data={"total":""+data.length+"","rows":data};
        $('#tblImportPIReferences').datagrid('loadData',data);
    }

    function SetTotal()
    {
       //debugger;
        if(parseInt($('#txtRateUnit').val())>0)
        {
            var oDetails = $('#tblImportPIDetails').datagrid('getRows');
            for(var i = 0;i<oDetails.length;i++)
            {
                oDetails[i].Amount = parseFloat(parseFloat(oDetails[i].Qty)/ parseInt($('#txtRateUnit').val())) *(parseFloat(oDetails[i].UnitPrice)+parseFloat(oDetails[i].FreightRate));
            }
            DynamicRefreshList(oDetails, "tblImportPIDetails");
        }else{
            alert("Price Unit Should be Greater than 0");
            $('#txtRateUnit').val(1);
        }

        var oImportPIDetails = $('#tblImportPIDetails').datagrid('getRows');
        var nTotalQty=0;
        var nAmount=0;
        var nFValue=0;
        var sMunit="";
        if(oImportPIDetails.length>0)
        {
            for(var i =0;i<oImportPIDetails.length;i++)
            {
                nTotalQty += parseFloat(oImportPIDetails[i].Qty);
                nAmount += parseFloat(oImportPIDetails[i].Amount);
                nFValue+=parseFloat(oImportPIDetails[i].Qty*oImportPIDetails[i].FreightRate);
                sMunit=oImportPIDetails[i].MUName;
            }
        }
        if(oImportPIDetails.length>0)
        {
            //document.getElementById('lblTotalQty').innerHTML =formatPrice(nTotalQty) +" " +sMunit;
            var TotalQty=formatPrice(nTotalQty);
            var TotalValue=formatPrice(nAmount,6);
            //document.getElementById('lblTotalValue').innerHTML = $('#divImportPI').data('ImportPI').CurrencySymbol+" "+ formatPrice(nAmount,6);
            MakeFooterColumn('tblImportPIDetails');
            MakeFooterColumn('tblImportPIReferences');
        }
        $('#divImportPI').data('ImportPI').TotalValue = nAmount;
        //MakeFooterColumn('tblImportPIDetails');
    }

    function MakeFooterColumn(sTable)
    {
        debugger;
        var FooterField=[];
        var obj=new Object();
        var FieldNames=$('#'+sTable).data();
        if(sTable=='tblImportPIDetails')
        {
            obj['MUName']="Gross Total: ";
            obj['Qty']= GetSum('Qty','tblImportPIDetails');
            obj['Amount']=GetSum('Amount','tblImportPIDetails');
        }

        //ReferenceAmount,YetToReferenceAmount,Amount
        if(sTable=='tblImportPIReferences')
        {
            obj['ReferenceNo']="Gross Total: ";
            obj['ReferenceAmountInString']= '';
            obj['YetToReferenceAmountInString']='';
            obj['Amount']='';
            obj['ConvertionRate']='';
            obj['AmountInBaseCurrency']=GetSum('AmountInBaseCurrency','tblImportPIReferences').toFixed(4);
        }
        FooterField.push(obj);
        $('#'+sTable).datagrid('reloadFooter',FooterField);
    }
    function GetSum(sFieldName,sTable)
    {
        debugger;
        var data=$('#'+sTable).datagrid('getRows').select(sFieldName);
        var sum = 0;
        for (i = 0; i < data.length; i++)
        {
           sum+=parseFloat(data[i]);
        }
        return sum;
    }
    $('#txtConvertionRate').change(function(){
        //endEditingReference();
        ConvertionValueSet();

    });

    function ConvertionValueSet()
    {
        var oList =  $('#tblImportPIReferences').datagrid('getRows');
        for(var i =0;i<oList.length;i++)
        {
            if(parseInt($('#cboCurrency').val())==parseInt(oList[i].CurrencyID))
            {
                oList[i].ConvertionRate = 1;
                oList[i].AmountInBaseCurrency= parseFloat(oList[i].Amount);
            }else{
                oList[i].ConvertionRate = parseFloat($('#txtConvertionRate').val());
                oList[i].AmountInBaseCurrency= parseFloat(parseFloat(oList[i].Amount)/parseFloat(oList[i].ConvertionRate)).toFixed(2);
            }
        }
        LoadPIReferences(oList);
        MakeFooterColumn('tblImportPIReferences');
    }

    $('.changeCurrency').change(function(){
       //debugger;
        cboCurrencyChange();
    });

    function cboCurrencyChange()
    {
        if($('#cboCurrency').val()>0)
        {
            ConvertionValueSet();
            endEditingReference();
            endEditing();
            var oCompany = $('#divImportPI').data('Company');
            if(parseInt($('#cboCurrency').val())== parseInt(oCompany.BaseCurrencyID))
            {
                $('#txtConvertionRate').val(1);
                $('#txtConvertionRate').prop('disabled',true);
            }else{
                $('#txtConvertionRate').val(0);
                $('#txtConvertionRate').prop('disabled',false);
            }
            var oCurrencies =  $('#divImportPI').data('Currencys');
            $('#lblConverToSymbol,#lblConverToSymbol2,#lblConverToSymbol3,#lblConverToSymbol4').text( GetCurrencySymbol(parseInt($('#cboCurrency').val())));
        }
    }

    //Contact person
    $('#btnNewContactPerson').click(function(e){
       //debugger;
        if(parseInt($('#divImportPI').data('ImportPI').SupplierID)<=0)
        {
            alert("Please Pick Supplier.");
            return;
        }
        ContactPersonEntry($('#divImportPI').data('ImportPI').SupplierID);
    });
    $('#btnAgentNewContactPerson').click(function(e){
       //debugger;
        if(parseInt($('#divImportPI').data('ImportPI').AgentID)<=0)
        {
            alert("Please Pick Agent.");
            return;
        }
        ContactPersonEntry($('#divImportPI').data('ImportPI').AgentID);
    });

    var editIndexReference = undefined;
    function endEditingReference()
    {
        if (editIndexReference == undefined) { return true }
        if ($('#tblImportPIReferences').datagrid('validateRow', editIndexReference))
        {
            $('#tblImportPIReferences').datagrid('endEdit', editIndexReference);
            $('#tblImportPIReferences').datagrid('selectRow', editIndexReference);
            var oImportPIReference = $('#tblImportPIReferences').datagrid('getSelected');
            var sTemp="";
            if(oImportPIReference!=null)
            {
                if(parseInt($('#cboCurrency').val())==parseInt(oImportPIReference.CurrencyID))
                {
                    oImportPIReference.ConvertionRate = 1;
                    oImportPIReference.AmountInBaseCurrency= parseFloat(oImportPIReference.Amount);
                }else{
                    oImportPIReference.ConvertionRate = parseFloat($('#txtConvertionRate').val());
                    oImportPIReference.AmountInBaseCurrency= parseFloat(parseFloat(oImportPIReference.Amount)/parseFloat(oImportPIReference.ConvertionRate)).toFixed(2);
                }
                $('#tblImportPIReferences').datagrid('updateRow',{index: editIndexReference,row: oImportPIReference});
            }
            SetTotal();
            editIndexReference = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    function onClickRowReference(index) {
        if (editIndexReference != index) {
            if (endEditingReference()) {
                $('#tblImportPIReferences').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndexReference = index;
            }
            else {
                $('#tblImportPIReferences').datagrid('selectRow', editIndexReference);
            }
        }
    }

    function ContactPersonEntry(nContactorID)
    {
        sessionStorage.setItem("ContractorBackTo", "");
        sessionStorage.setItem("SelectedRowIndex", 0);
        sessionStorage.setItem("ContractorHeader", "Add ContactPersonnel");
        window.open(_sBaseAddress+  "/Contractor/ViewContactPersonnel?id="+nContactorID+"&buid="+sessionStorage.getItem("BUID"),"_blank");
    }
    $('#btnReload').click(function(e){
        LoadContractPersonals($('#divImportPI').data('ImportPI').SupplierID,true);
    });
    $('#btnReloadAgentCPerson').click(function(e){
        LoadContractPersonals($('#divImportPI').data('ImportPI').AgentID, false);
    });

    function Close()
    {
        window.location.href = sessionStorage.getItem("BackLink");
    }

    $('#issueDate').datebox({
        onSelect: function(date){

            $("#validityDate").datebox("setValue", icsdateformat(new Date(date.getFullYear(), date.getMonth(), date.getDate()+7)));
            $("#txtReceiveDate").datebox("setValue", icsdateformat(new Date(date.getFullYear(), date.getMonth(), date.getDate())));

        }
    });

    $('#cboRefType').change(function(){
        //debugger;
        cboRefTypeChange();
    });
    function cboRefTypeChange()
    {
        if($('#cboRefType').val()>0)
        {
            var stype= $('#cboRefType  option:selected').text();
            $('label.lblBill').text(stype);
            $('label.lblBill').text(stype);
            $("div.divInfo .panel-title").text(stype+" Info");
            $("div.divDetails .panel-title").text(stype+" Details");
        }
    }
</script>
