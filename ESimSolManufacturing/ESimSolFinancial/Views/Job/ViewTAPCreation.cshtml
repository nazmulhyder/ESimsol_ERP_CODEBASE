<html>
@{
    ViewBag.Title = "Time Action Plan";
}
<body>
    @model ESimSol.BusinessObjects.Job

    <div id="winTAPTamplate" class="easyui-window winClass" title="Template  Search" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width:760px;float: left;">
            <table border="0" cellpadding="0" cellspacing="0" style="font-size:12px">
                <tr style="height:270px">
                    <td style="width:500px">
                        <table border="0" cellpadding="0" cellspacing="0" style="font-size:12px;margin-left:3px;">
                            <tr style="height:260px">
                                <td style="width:400px; vertical-align:top;height:450px;">

                                    <table id="tblTAPTemplate" title=" Template Info " class="easyui-datagrid" style="width:370px;height:450px;font-size:12px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" , autorowheight="false">
                                        <thead>
                                            <tr>
                                                <th field="TemplateNo" width="110">Template No</th>
                                                <th field="TemplateName" width="215">Template Name</th>
                                            </tr>
                                        </thead>
                                    </table>
                                </td>

                                <td style="width:323px; height:453px;vertical-align:top">

                                    <table id="tblTAPTemplateDetail" title="Template Details" class="easyui-datagrid" style="width:370px;height:450px;font-size:12px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" , autorowheight="false">
                                        <thead>
                                            <tr>
                                                <th field="OrderStepName" width="180">Step Name</th>
                                                <th field="BeforeShipment" width="145"><label id="lblTemplateCalculationType">Before Shipment(Days)</label></th>
                                            </tr>
                                        </thead>
                                    </table>
                                </td>

                            </tr>
                        </table>
                    </td>
                </tr>
                <tr style="height:50px; width:750px;">
                    <td style="width:650px; text-align:right">
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="CloseTemplatePicker()">Close</a>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div class="menuMainCollectionTable">
       <div title="Time Action Plan" style="height:90%">
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td style="width:45%">
                            <fieldset style=" width:99%;">
                                <legend style="font-weight: bold;">Job Info: </legend>
                                <table border="0" cellspacing="0" cellpadding="1" style="font-size:12px; width:100%; font-weight: bold">
                                    <tr>
                                        <td style="width:30%; text-align: right">Job No:</td>
                                        <td style="width:70%; text-align:left;">@Html.TextBoxFor(model => model.JobNo, new { style = "width:100%;", id = "txtJobNo", disabled = "disabled" }) </td>
                                    </tr>
   
                                    <tr>
                                        <td style="width:30%; text-align: right">Style No:</td>
                                        <td style="width:70%; text-align:left;">@Html.TextBoxFor(model => model.StyleNo, new { style = "width: 100%;", id = "txtStyleNo", disabled = "disabled" }) </td>
                                    </tr>
                                    <tr>

                                        <td style="width:30%; text-align: right">Issue Date:</td>
                                        <td style="width:70%; text-align:left;">@Html.TextBoxFor(model => model.IssueDateInString, new { style = "width: 100%;", id = "txtIssueDateInString", disabled = "disabled" }) </td>
                                    </tr>
                                    <tr>
                                        <td style="width:30%; text-align: right">Buyer:</td>
                                        <td style="width:70%; text-align:left;">@Html.TextBoxFor(model => model.BuyerName, new { style = "width: 100%;", id = "txtBuyerName", disabled = "disabled" }) </td>
                                    </tr>
                                    <tr>
                                        <td style="width:30%; text-align: right">Merchandiser :</td>
                                        <td style="width:70%; text-align:left;">@Html.TextBoxFor(model => model.MerchandiserName, new { style = "width: 100%;", id = "txtMerchandiserName", disabled = "disabled" }) </td>
                                    </tr>
                                    <tr>
                                        <td style="width:30%; text-align: right">Session Name :</td>
                                        <td style="width:70%; text-align:left;">@Html.TextBoxFor(model => model.SessionName, new { style = "width: 100%;", id = "txtSessionName", disabled = "disabled" }) </td>
                                    </tr>
                                </table>
                            </fieldset>
                        </td>
                        <td style="width:55%">
                            <table id="tblJobDetails" title="Job Detail List" class="easyui-datagrid" style="width:98%;height:200px"  fitcolumns="false" rownumbers="true" singleselect="true" autorowheight="false">
                                <thead>
                                    <tr>
                                        <th field="OrderRecapNo" width="130">Recap No</th>
                                        <th field="ProductName" width="180">Garments Name</th>
                                        <th field="ShipmentDateInString" width="100">Shipment Date</th>
                                        <th field="TotalQuantity" formatter="formatPrice" align="right" width="80">Qty</th>
                                    </tr>
                                </thead>
                            </table>
                        </td>
                    </tr>
                </table>
                <table id="tblTAPDetail" class="easyui-treegrid" style="width:100%;height:300px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" data-options="idField:'id',treeField:'text', rownumbers:'true', toolbar:'#TAPDetailstoolbar'">
                    <thead>
                        <tr>
                            <th field="text" width="300">Step Name</th>
                            <th field="SequenceInString" width="100">Sequence</th>
                            <th field="ApprovalPlanDateInString" align="center" width="170">Approve Plan Date</th>
                            <th width="150" data-options="field:'Remarks',align:'center',editor:{type:'text',options:{precision:0}}">Remarks</th>
                        </tr>
                    </thead>
                </table>
                <div id="TAPDetailstoolbar" style="text-align:left; font-weight:normal">
                    <label class="asterixStyle">*</label><a href="javascript:void(0)" id="btnAddOrderStep" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddOrderStep()">Add Order Step</a>
                    <a href="javascript:void(0)" id="btnAddTemplate" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="PickTimeActionPlanTemplate()">Time Action Plan Template</a>
                    <a href="javascript:void(0)" id="btnRemoveDetail" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="RemoveStep()">Remove</a>
                    <a href="javascript:void(0)" id="btnRemoveAll" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="RemoveAll()">Remove ALL</a>
                    <input id="txtPlanDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width: 135px;" />
                    <a href="javascript:void(0)" id="btnUpdate" class="easyui-linkbutton" iconcls="icon-edit" plain="true" onclick="Update()">Update</a>
                </div>
       </div>
        <fieldset style="height:55px; width:99.5%;">
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="1" cellpadding="1" style="font-size: 11px; font-weight: bold; vertical-align:middle; width:100%">
                <tr>
                    <td style="width:15%; text-align:center">
                        <label id="lblTemplateName" style="color:navy;font-size:11px;"></label>&nbsp;<br />
                    </td>
                    <td style="width:57%; text-align:center">
                        <label id="lblInfoFirstPart" style="color:blue; font-size:11px;"></label><br />
                        <label id="lblInfoSecondPart" style="color:blue; font-size:11px;"></label>
                    </td>
                    <td style="width:28%; text-align:right;">
                        @*<a id="btnNotApproved" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-undo" plain="true" onclick="NotApprove()">Not Approve</a>*@
                        <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true" onclick="Approve()">Approve</a>
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save(false,false)">Save</a>
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>

<script type="text/javascript">
    var _oJob=null;
    var _sBaseAddress="";
    var _oColorSizeRatios = [];
    var _oDevelopmentRecapDetails = [];
    var _oJobDetails = [];
    var _oTAPDetails = [];
    var _oTempOrderSteps= [];
    var _sJobHeader = "";
    var _oAuthorizationRolesMapping = [];
    var _lBackLink = "";
    $(document).ready(function () {
        debugger;
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        _oJob =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oJobDetails = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.JobDetails));
        sessionStorage.setItem("PercentWiseDays",0);
        _sJobHeader = sessionStorage.getItem("JobHeader");
        _lBackLink = sessionStorage.getItem("BackLink");
        DynamicRefreshList(_oJobDetails,"tblJobDetails");
        RefreshControlLayout();
        RefreshControl();
        RefreshDetails(_oJob.TTAPDetail.children);
        $('#tblTAPDetail').treegrid('collapseAll',0);
        $('#txtPlanDate').datebox('setValue',icsdateformat(new Date()));
        $('#tblTAPDetail').treegrid({onClickRow:function(row){onClickRow(row);}});
        $('#tblTAPDetail').treegrid({onSelect: function(rowData){ RowSelect(rowData );}});
        
    });

    


    function RefreshControl()
    {
        debugger;
        document.getElementById('btnApprove').style.display = 'none';      
        if(_sJobHeader=="View TAP")
        {
            $('#btnUpdate,#btnAddOrderStep,#btnAddTemplate,#btnRemoveDetail,#btnSave,#btnRemoveAll,#txtPlanDate').hide();
        }
        if(_sJobHeader=="TAP Approve")
        {

            document.getElementById('btnSave').style.display = 'none';
            document.getElementById('btnApprove').style.display = '';
            //document.getElementById('btnNotApproved').style.display = '';
        }
      
    }
    function RefreshDetails(oTTAPDetail)
    {
        data=oTTAPDetail;
        data={"total":""+data.length+"","rows":data};
        $('#tblTAPDetail').treegrid('loadData',data);
    }
    function RowSelect(rowData)
    {
        // debugger;
        $('#txtPlanDate').datebox('setValue',rowData.ApprovalPlanDateInString);
    }
    function Update()
    {
        debugger;
        var oTAPDetail = $('#tblTAPDetail').treegrid('getSelected');
        if(oTAPDetail== null)
        {
            alert("Please Select Detail");
            return;
        }
        oTAPDetail.ApprovalPlanDate = $('#txtPlanDate').datebox('getValue');
        oTAPDetail.ApprovalPlanDateInString = icsdateformat( new Date($('#txtPlanDate').datebox('getValue')));
        $('#tblTAPDetail').treegrid('update',{
            id: oTAPDetail.id,
            row:oTAPDetail
        });
        return;

    }

    function AddOrderStep()
    {
        var oOrderStep = {};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oOrderStep,
            ControllerName: "OrderStep",
            ActionName: "GetOrderSteps",
            IsWinClose: false
        };
        $.icsProgressBar(true);
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                $.icsProgressBar(false);
                if (response.objs[0].OrderStepID > 0) {
                    _oTempOrderSteps = [];
                    _oTempOrderSteps = response.objs;
                    var oNewOrderSteps = [];
                    for(var i =0;i<_oTempOrderSteps.length;i++)
                    {
                        if(parseInt(_oTempOrderSteps[i].ParentID)==1)
                        {
                            oNewOrderSteps.push(_oTempOrderSteps[i]);
                        }
                    }
                    debugger;
                    var tblColums = []; var oColumn = { field: "OrderStepName", title: "Order Step Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Note", title: "Note", width: 100, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winOrderSteps',
                        winclass: 'clsOrderStep',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblOrderSteps',
                        tablecolumns: tblColums,
                        datalist: oNewOrderSteps,
                        multiplereturn: true,
                        searchingbyfieldName: 'OrderStepName',
                        windowTittle: 'Oder Step Picker'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else
            {
                alert("Data Not Found.");
                return;
            }
        });

    }
    function IsExist(nOrderStepID)
    {
        var oTAPDetails = $('#tblTAPDetail').treegrid('getData');
        if(oTAPDetails.length>0)
        {
            for(var i =0;i<oTAPDetails.length;i++)
            {
                if(parseInt(oTAPDetails[i].OrderStepID)== parseInt(nOrderStepID))
                {
                    return true;
                }
                var oTempChildrens =oTAPDetails[i].children;
                for(var j = 0; j<oTempChildrens.length;j++)
                {
                    if(parseInt(oTempChildrens[j].OrderStepID)== parseInt(nOrderStepID))
                    {
                        return true;
                    }
                }
            }
        }

        return false;
    }
    function RefreshSequence()
    {
        RefreshDetails(_oTAP.TTAPDetail.children);
    }
    function RemoveStep()
    {
        debugger;
        var oTAPDetail= $('#tblTAPDetail').treegrid('getSelected');
        if(oTAPDetail==null)
        {
            alert("Invalid Field!!! please select a valid Field!");
            return false;
        }
        if (!confirm("Confirm to Delete?")) return ;
        endEditing();
        $('#tblTAPDetail').treegrid('remove',oTAPDetail.id);
        alert("Delete sucessfully");
    }
    function RemoveAll()
    {
        if(_oJob==null || parseInt(_oJob.JobID)<=0)
        {
            alert("Invalid Field!!! please select a valid Field!");
            return false;
        }
        if (!confirm("Confirm to Remove All Data From List?")) return ;
        $.icsProgressBar(true);
        if (parseInt(_oJob.JobID)> 0)
        {
            $.ajax
            ({
                type: "GET",
                dataType: "json",
                url : _sBaseAddress+ "/TAP/DeleteJobWise",
                data: { id:_oJob.JobID},
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //debugger;
                    $.icsProgressBar(false);
                    feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Data delete successfully")
                    {
                        alert("Delete sucessfully");
                        //$('#txtPlanNo').val('');
                        RefreshDetails({});
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });
        }
    }
    var editid = undefined;
    function endEditing(){
        if (editid == undefined){return true}
        if ($('#tblTAPDetail').treegrid('validateRow', editid)){
            $('#tblTAPDetail').treegrid('endEdit', editid);
            $('#tblTAPDetail').treegrid('select',editid);
            var oTAPDetail=$('#tblTAPDetail').treegrid('getSelected');
            oTAPDetail.ApprovalPlanDate = new Date(oTAPDetail.ApprovalPlanDateInString);
            oTAPDetail.ApprovalPlanDateInString =  icsdateformat(oTAPDetail.ApprovalPlanDate);
            $('#tblTAPDetail').treegrid('update',{id: editid,	row: oTAPDetail});
            editid = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRow(row){

        if (editid != row.id){
            if (endEditing())
            {
                $('#tblTAPDetail').treegrid('select', row.id).treegrid('beginEdit', row.id);
                editid = row.id;
            }
            else
            {
                $('#tblTAPDetail').treegrid('select', editid);
            }
        }
    }
    function ValidateInput()
    {
        if(_oJob.JobID <=0)
        {
            alert("Sorry, There is no JOB.");
            return false;
        }
        var oOrderRecaps = $('#tblJobDetails').datagrid('getRows');
        if(oOrderRecaps.length<=0)
        {
            alert("Sorry, There is no Job Details.");
            return;
        }
        var oTAPDetails =$('#tblTAPDetail').treegrid('getData');
        if(oTAPDetails.length<=0 && _oTAPDetails.length<=0)
        {
            alert("Please add at least One Detail");
            return false;
        }
        return true;
    }
    function RefreshObject()
    {
        var oTAP= {
            TAPID :0,
            OrderRecapID :0,
            JobID:_oJob.JobID,
            IsDevelopmentRecap:false,
            TampleteName:_oJob.TampleteName,
            Remarks :$("#txtRemarks").val(),
            BUID:sessionStorage.getItem('BUID'),
            TAPDetails :MakeRefreshDetails()
        };
        return oTAP;
    }
    function MakeRefreshDetails()
    {
        debugger;
        var oTAPDetails = $('#tblTAPDetail').treegrid('getData');
        var oTempTAPDetails= [];
        if(oTAPDetails.length>0)
        {
            for(var i =0;i<oTAPDetails.length;i++)
            {
                // var dtmep = new Date(oTAPDetails[i].ApprovalPlanDateInString);
                var oTAPDetail= {
                    TAPDetailID :0,
                    TAPID:0,
                    OrderStepID :oTAPDetails[i].id,
                    Sequence :oTAPDetails[i].Sequence,
                    ApprovalPlanDate :new Date(oTAPDetails[i].ApprovalPlanDateInString),
                    Remarks :oTAPDetails[i].Remarks
                };
                oTempTAPDetails.push(oTAPDetail);
                var oTempChildrens =oTAPDetails[i].children;
                for(var j = 0; j<oTempChildrens.length;j++)
                {
                    var oTAPDetail= {
                        TAPDetailID :0,
                        TAPID:0,
                        OrderStepID :oTempChildrens[j].id,
                        Sequence :oTempChildrens[j].Sequence,
                        ApprovalPlanDate :new Date(oTempChildrens[j].ApprovalPlanDateInString),
                        Remarks :oTempChildrens[j].Remarks
                    };
                    oTempTAPDetails.push(oTAPDetail);
                }
            }
        }

        if(_oTAPDetails.length>0)//Data exist in _oTAPDetails when pick Template or Order STep
        {
            for(var i =0;i<_oTAPDetails.length;i++)
            {
                var oTAPDetail= {
                    TAPDetailID :_oTAPDetails[i].TAPDetailID,
                    TAPID:0,
                    OrderStepID :_oTAPDetails[i].OrderStepID,
                    Sequence :_oTAPDetails[i].Sequence,
                    ApprovalPlanDate :new Date(_oTAPDetails[i].ApprovalPlanDateInString),
                    Remarks :_oTAPDetails[i].Remarks
                };
                oTempTAPDetails.push(oTAPDetail);
            }
        }
        _oTAPDetails = [];//Reset
        return oTempTAPDetails;
    }
    function Save(bIsInitialSave, bIsForRemove)
    {
        debugger;
        if(!bIsForRemove)
        {
            endEditing();
        }
        if(!ValidateInput()) return;        
        var oTAP=RefreshObject();
        $.icsProgressBar(true);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/TAP/JobWiseTAPSave",
            traditional: true,
            data:  JSON.stringify(oTAP),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                $.icsProgressBar(false);
                var oJob = jQuery.parseJSON(data);
                if (oJob.ErrorMessage==null || oJob.ErrorMessage=="")
                {
                    if(!bIsInitialSave)
                    {
                        alert("Data Saved sucessfully");
                        var oJobs = sessionStorage.getItem("JobList");
                        var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                        if (oJobs != null) {
                            oJobs = jQuery.parseJSON(oJobs);
                        }
                        else {
                            oJobs = [];
                        }
                        if (nIndex != -1) {
                            oJobs[nIndex] = oJob;
                        }
                        else {
                            sessionStorage.setItem("SelectedRowIndex", oJobs.length);
                            oJobs.push(oJob);
                        }
                        sessionStorage.setItem("JobList", JSON.stringify(oJobs));
                        window.location.href = _lBackLink;

                    }else{

                        window.location.href = _sBaseAddress+"/Job/ViewTAPCreation?id="+oJob.JobID;
                    }
                }
                else {
                    alert(oJob.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }
    function Approve()
    {
        if(_oJob==null || _oJob.IsTAPExist==false)
        {
            alert("Sorry, there is No TAP!");
            return;
        }
        if (!confirm("Confirm to Approve?")) return ;
        var oTAP = {JobID:_oJob.JobID,ActionTypeExtra:"Approve", Remarks:'Aproved By Job System'};
        $.icsProgressBar(true);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/TAP/ChangeStatus",
            traditional: true,
            data:  JSON.stringify(oTAP),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                $.icsProgressBar(false);
                var oJob= jQuery.parseJSON(data);
                if ((oJob.ErrorMessage=="" || oJob.ErrorMessage == null) && (oJob.IsTAPApproved)!=0)
                {
                    alert("Approved Successfully!!");
                    var oJobs = sessionStorage.getItem("JobList");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oJobs != null) {
                        oJobs = jQuery.parseJSON(oJobs);
                    }
                    else {
                        oJobs = [];
                    }
                    if (nIndex != -1) {
                        oJobs[nIndex] = oJob;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oJobs.length);
                        oJobs.push(oJob);
                    }
                    sessionStorage.setItem("JobList", JSON.stringify(oJobs));
                    window.location.href = _lBackLink;
                }else
                {
                    alert(oJob.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });

    }
    function NotApprove()
    {
        if(_oJob==null || _oJob.IsTAPExist==false)
        {
            alert("Sorry, there is No TAP!");
            return;
        }
        if (!confirm("Realy Do You Want Not Approve?")) return ;
        var oTAP = {TAPID:_oTAP.TAPID,ActionTypeExtra:"UndoRequest", Remarks:$("#txtRemarks").val()};
        $.icsProgressBar(true);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/TAP/ChangeStatus",
            traditional: true,
            data:  JSON.stringify(oTAP),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                $.icsProgressBar(false);
                var oTAP= jQuery.parseJSON(data);
                if ((oTAP.ErrorMessage=="" || oTAP.ErrorMessage == null) && parseInt(oTAP.TAPStatus)==0)
                {
                    alert("Successfully Send to Entry User!!");
                    var oTAPs = sessionStorage.getItem("TAPs");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oTAPs != null) {
                        oTAPs = jQuery.parseJSON(oTAPs);
                    }
                    else {
                        oTAPs = [];
                    }
                    if (nIndex != -1) {
                        oTAPs[nIndex] = oTAP;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oTAPs.length);
                        oTAPs.push(oTAP);
                    }
                    sessionStorage.setItem("TAPs", JSON.stringify(oTAPs));
                    window.location.href = _lBackLink;
                }else
                {
                    alert(oTAP.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }

    function IntializePickerbutton(oPickerobj) {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            debugger;
            //for Single Select
            PickerEvents(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                PickerEvents(oPickerobj);
            }
        });
    }
    function PickerEvents(oPickerobj) {
        var oreturnobj = null, oreturnobjs = [];
        if(oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#' + oPickerobj.tableid).treegrid('getChecked');
        }else{
            oreturnobj = $('#' + oPickerobj.tableid).treegrid('getSelected');
        }

        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if(oPickerobj.winclass=='clsOrderStep')
        {
            var oOrderRecaps = $('#tblJobDetails').datagrid('getRows');
            if(oOrderRecaps.length<=0)
            {
                alert("Sorry, There is no Job Details.");
                return;
            }
            if(oreturnobjs!=null)
            {
                _oTAPDetails = [];
                var nCurrentSequence = GetSequence();
                for(var i=0;i<oreturnobjs.length;i++)
                {
                    if(!IsExist(oreturnobjs[i].OrderStepID))//Insert Parent
                    {
                        nCurrentSequence++;
                        var dTempDate = new Date(oOrderRecaps[0].ShipmentDateInString);
                        dTempDate.setDate(dTempDate.getDate() - 1);
                        var oTAPDetail ={
                            TAPDetailID:0,
                            TAPID:0,
                            OrderStepID :oreturnobjs[i].OrderStepID,
                            OrderStepName :oreturnobjs[i].OrderStepName,
                            Sequence :nCurrentSequence,
                            ApprovalPlanDate:dTempDate,
                            ApprovalPlanDateInString:icsdateformat(dTempDate),
                            Remarks :oreturnobjs[i].Remarks
                        };
                        _oTAPDetails.push(oTAPDetail);
                    }
                    MakeTAPDetails(oreturnobjs[i].OrderStepID);//insert child
                }
                Save(true,false);//Intial data save
            }
        }
    }
    function GetSequence()
    {
        debugger;
        var oTAPDetails = $('#tblTAPDetail').treegrid('getRoots');
        return oTAPDetails.length;
    }
    function MakeTAPDetails(nOrderStepID)
    {
        debugger;
        var oOrderRecaps = $('#tblJobDetails').datagrid('getRows');
        for(var j = 0; j<_oTempOrderSteps.length;j++)
        {
            if(parseInt(_oTempOrderSteps[j].ParentID) == parseInt(nOrderStepID))
            {
                if(!IsExist(_oTempOrderSteps[j].OrderStepID))
                {
                    var dTempDate = new Date(oOrderRecaps[0].ShipmentDateInString);
                    dTempDate.setDate(dTempDate.getDate() - 1);
                    var oTAPDetail ={
                        TAPDetailID:0,
                        TAPID:0,
                        OrderStepID :_oTempOrderSteps[j].OrderStepID,
                        OrderStepName :_oTempOrderSteps[j].OrderStepName,
                        Sequence :0,
                        ApprovalPlanDate:dTempDate,
                        ApprovalPlanDateInString:icsdateformat(dTempDate),
                        Remarks :_oTempOrderSteps[j].Remarks
                    };
                    _oTAPDetails.push(oTAPDetail);
                }
            }
        }
    }
    //Template Region

    function PickTimeActionPlanTemplate()
    {

        data =[];
        data={"total":""+data.length+"","rows":data};
        $('#tblTAPTemplate').datagrid('loadData',data);
        RefreshTAPTemplateDetails([]);
        if(_oJob.JobID <=0)
        {
            alert("Sorry, There is no JOB.");
            return false;
        }
        var oJobDetails = $('#tblJobDetails').datagrid('getRows');
        if(oJobDetails.length<=0)
        {
            alert("Sorry, There is no Job Details.");
            return;
        }
       
        var oTAPDetails = $('#tblTAPDetail').treegrid('getData');
        if(oTAPDetails.length>0)
        {
            alert("Please Press Remove All button to  Delete All Privoius Data.");
            return;
        }
        var oTAPTemplate = {TampleteTypeInInt:oJobDetails[0].TSTypeInt};
        $.icsProgressBar(true);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/TAPTemplate/GetTAPTemplates",
            traditional: true,
            data:  JSON.stringify(oTAPTemplate),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                $.icsProgressBar(false);
                var oTAPTemplate = jQuery.parseJSON(data);
                if (oTAPTemplate.ErrorMessage=="" || oTAPTemplate.ErrorMessage==null)
                {
                    $('#winTAPTamplate').data('TAPTemplateDetails',oTAPTemplate.TAPTemplateDetails);
                    data =oTAPTemplate.TAPTemplates;
                    data={"total":""+data.length+"","rows":data};
                    $('#tblTAPTemplate').datagrid('loadData',data);
                    $('#tblTAPTemplate').datagrid({onSelect: function(rowIndex, rowData){ RowSelect(rowData);}});
                    $("#winTAPTamplate").icsWindow('open', "Template picker");
                }
                else
                {
                    alert(oTAPTemplate.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function RowSelect(oTAPTemplate)
    {
        debugger;

        if(parseInt(oTAPTemplate.CalculationType)==1)
        {
            $('#lblTemplateCalculationType').html("Before Shipment(%)");
        }else{
            $('#lblTemplateCalculationType').html("Before Shipment(Days)");
        }
        var oTAPTemplateDetails = [];
        var oTempTAPTemplateDetails= $('#winTAPTamplate').data('TAPTemplateDetails');
        for(var i = 0;i<oTempTAPTemplateDetails.length;i++)
        {
            if(parseInt(oTempTAPTemplateDetails[i].TAPTemplateID) == parseInt(oTAPTemplate.TAPTemplateID) && parseInt(oTempTAPTemplateDetails[i].OrderStepParentID)== 1)
            {
                oTAPTemplateDetails.push(oTempTAPTemplateDetails[i]);
            }
        }
        oTAPTemplateDetails.sort(compare);
        RefreshTAPTemplateDetails(oTAPTemplateDetails);
    }

    function compare(a,b)
    {
        if (a.Sequence < b.Sequence)
            return -1;
        if (a.Sequence > b.Sequence)
            return 1;
        return 0;

    }
    function RefreshTAPTemplateDetails(oTAPTemplateDetails)
    {
        data=oTAPTemplateDetails;
        data={"total":""+data.length+"","rows":data};
        $('#tblTAPTemplateDetail').datagrid('loadData',data);
    }

    function OkButtonClick()
    {
        debugger;
        var oTAPTemplateDetails=[];
        var oTAPTemplate = $('#tblTAPTemplate').datagrid('getSelected');
        if(oTAPTemplate==null || oTAPTemplate.TAPTemplateID<=0)
        {
            alert("Sorry, Please Select TAP Template");
            return;
        }
        var oTempTAPTemplateDetails= $('#winTAPTamplate').data('TAPTemplateDetails');
        for(var i =0;i<oTempTAPTemplateDetails.length;i++)
        {
            if(parseInt(oTempTAPTemplateDetails[i].TAPTemplateID) == parseInt(oTAPTemplate.TAPTemplateID))
            {
                oTAPTemplateDetails.push(oTempTAPTemplateDetails[i]);
            }
        }
        var oOrderRecaps = $('#tblJobDetails').datagrid('getRows');
        debugger;
        var oTAPTemplate = {TAPTemplateDetails:oTAPTemplateDetails};
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/TAPTemplate/GetSequenceManagedTAPTemplateDetails",
            traditional: true,
            data:  JSON.stringify(oTAPTemplate),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                var oTAPTemplateDetails= jQuery.parseJSON(data);
                if (oTAPTemplateDetails.length>0)
                {
                    $("#winTAPTamplate").icsWindow('close');
                    if(oTAPTemplateDetails.length >0)
                    {
                        _oTAPDetails = [];
                        _oJob.TampleteName = oTAPTemplateDetails[0].TemplateName;
                        $('#lblTemplateName').html("Template : "+_oJob.TampleteName);

                        for(var i = 0; i< oTAPTemplateDetails.length; i++)
                        {
                            if(!IsExist(oTAPTemplateDetails[i].OrderStepID))
                            {
                                debugger;
                                var dTempDate = new Date();
                                var dShipmentDate = new Date(oOrderRecaps[0].ShipmentDateInString);
                                if(parseInt(oTAPTemplateDetails[i].CalculationType)==0)//for Day wise
                                {
                                    dShipmentDate.setDate(dShipmentDate.getDate() - parseInt(parseInt(oTAPTemplateDetails[i].BeforeShipment)));
                                    dTempDate = dShipmentDate;
                                }else{
                                    /* Code written by Md. Mahabub Alam*/
                                    if(parseInt(oTAPTemplateDetails[i].OrderStepParentID)== 1)
                                    {
                                        var oneDay = 24 * 60 * 60 * 1000;// hours*minutes*seconds*milliseconds
                                        var nDateDiff = parseInt(Math.abs(dShipmentDate.getTime() - new Date(oOrderRecaps[0].OrderDateInString).getTime())/(oneDay));//calculate days between two dates
                                        var nPercentWiseDays = parseInt(parseInt(nDateDiff) * parseInt(oTAPTemplateDetails[i].BeforeShipment)/100);//here beforeshipment field use for Percent values depends on calculation Type; keep privous dys
                                        sessionStorage.setItem("PercentWiseDays",nPercentWiseDays);//set parent step Percent wise days
                                        var dDynamicParentDate = new Date(sessionStorage.getItem("DynamicParentDate"));//get privious parent step date
                                        sessionStorage.setItem("DynamicChildDate",dDynamicParentDate);//keep privious parent step date in child step date
                                        dDynamicParentDate.setDate(dDynamicParentDate.getDate()+nPercentWiseDays);//calculate new  parent step date
                                        sessionStorage.setItem("DynamicParentDate",dDynamicParentDate);//keep new parent step date
                                        dTempDate = dDynamicParentDate;//set actual date
                                    }else{
                                        var nPercentWiseDays = sessionStorage.getItem("PercentWiseDays");//Get percent wise days of  parent step
                                        var nChildPercentWiseDays = parseInt( parseInt(nPercentWiseDays) * parseInt(oTAPTemplateDetails[i].BeforeShipment)/100);
                                        var dDynamicChildDate = new Date(sessionStorage.getItem("DynamicChildDate"));//get privious child step date
                                        dDynamicChildDate.setDate(dDynamicChildDate.getDate()+nChildPercentWiseDays);//calculate new child step date
                                        sessionStorage.setItem("DynamicChildDate",dDynamicChildDate);//keep new Child step Date
                                        dTempDate = dDynamicChildDate;//set actual date
                                    }
                                }
                                var oTAPDetail ={
                                    TAPDetailID:0,
                                    TAPID:0,
                                    OrderStepID :oTAPTemplateDetails[i].OrderStepID,
                                    OrderStepName :oTAPTemplateDetails[i].OrderStepName,
                                    Sequence :0,
                                    ApprovalPlanDate:dTempDate,
                                    ApprovalPlanDateInString:icsdateformat(dTempDate),
                                    Remarks :oTAPTemplateDetails[i].Remarks
                                };
                                _oTAPDetails.push(oTAPDetail);
                            }
                        }
                        // debugger;
                        Save(true,false);
                    }

                }else{
                    alert("Data not found");
                    return;
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });

    }

    function CloseTemplatePicker()
    {
        $("#winTAPTamplate").icsWindow('close');
    }

    function Close()
    {
        window.location.href = _lBackLink;
    }


    $(document).keydown(function(e) {
        //debugger;
        if(e.which == 27)//escape=27
        {
            //debugger;
            window.location.href = _lBackLink;
        }
    });

    function RefreshControlLayout()
    {
        $('#btnRemoveDetail').hide();
        $('#btnRemoveAll').hide();
        if(HavePermission('Delete','TAPDetail')){$('#btnRemoveDetail').show(); $('#btnRemoveAll').show();}
    }

    function HavePermission(sOperationType, sDbObject)
    {
        var nSessionID =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.currentUserID]));
        if(nSessionID == -9) //check SuperUser
        {
            return true;
        }else
        {

            for(var i =0;i<_oAuthorizationRolesMapping.length;i++)
            {
                if(_oAuthorizationRolesMapping[i].OperationTypeInString == sOperationType && _oAuthorizationRolesMapping[i].DBObjectName == sDbObject)
                    return  true;
            }
            return false;
        }
    }

</script>
