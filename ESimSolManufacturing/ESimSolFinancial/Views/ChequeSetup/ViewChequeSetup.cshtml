
<html>
<head>
    <link href="@Url.Content("~/Content/CSS/jquery-ui-1.11.2.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/icon.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/easyui.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/Pikerstyle.css")" rel="stylesheet" type="text/css" />

    <script src="@Url.Content("~/Scripts/jquery-2.1.4.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.ics.customize.js")" type="text/javascript"></script>
    
    <script src="@Url.Content("~/Scripts/jquery-ui-1.11.2.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/json2.js")" type="text/javascript"></script>
</head>
<body>

    @model ESimSol.BusinessObjects.ChequeSetup
    <div id="divChequeSetup" title="Add ChequeSetup" style="font-family:Tahoma; height:100%; width:100%">

    @using (Html.BeginForm("Save", "ChequeSetup", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div style="width:100%; height:88%; text-align:center">
            <fieldset style="height:97%">
                <legend  id="ChequeSetupHeader"style="font-weight:bold;text-align:left;"> Cheque Design : </legend>
                <div id="divBase" class="resize-container" style="width:1026px;height: 356px; border:double; position:relative; background-image:url(@Url.Action("GetDBChequeImage", "ChequeSetup", new { id = @Model.ChequeSetupID }))">
                    <div id="divPaymentMethod" class="resize-drag" style="left:385px; top: 22px; z-index:9; background-color:rgba(134, 117, 38, 0.40);color: white;width: 120px; height:120px; box-sizing: border-box; position:absolute">
                        Payment Method
                        <br />@Html.TextBoxFor(model => model.paymentMethodFS, new { style = "width: 30px; text-align:right", id = "txtPaymentMethod", onkeypress = "return txtNumber_KeyPress(event)" })
                    </div>

                    <div id="divDate" class="resize-drag" style="left:621px; top: 19px; z-index:10; background-color:rgba(134, 117, 38, 0.40);color: white;width: 189px; height:97px; box-sizing: border-box; position:absolute">
                        Date
                        <br />@Html.TextBoxFor(model => model.DateFS, new { style = "width: 30px; text-align:right", id = "txtDate", onkeypress = "return txtNumber_KeyPress(event)" })
                        <label> @Html.TextBoxFor(model => model.DateSpace, new { style = "width: 30px; text-align:right", id = "txtDateSpace", onkeypress = "return txtNumber_KeyPress(event)" }) Spc</label>
                        <label><input type="checkbox" id="chkIsSplit" />Is Split</label>
                        <br /><input type="text" style="width: 180px; text-align:left" id="txtDateFormat" />                        
                    </div>
                    <div id="divPayTo" class="resize-drag" style="left:256px; top: 148px; z-index:1; background-color:rgba(134, 117, 38, 0.40);color: white;width: 548px; height:30px; box-sizing: border-box; position:absolute">
                        Pay To
                        <br />@Html.TextBoxFor(model => model.PayToFS, new { style = "width: 30px; text-align:right", id = "txtPayTo", onkeypress = "return txtNumber_KeyPress(event)" })
                    </div>
                    <div id="divAmountWord" class="resize-drag" style="left:288px; top: 199px; z-index:3; background-color:rgba(134, 117, 38, 0.40);color: white;width: 321px; height:68px; box-sizing: border-box; position:absolute">
                        Amount Word
                        <br />@Html.TextBoxFor(model => model.AmountWordFS, new { style = "width: 30px; text-align:right", id = "txtAmountWord", onkeypress = "return txtNumber_KeyPress(event)" })
                    </div>
                    <div id="divAmount" class="resize-drag" style="left:662px; top: 184px; z-index:2; background-color:rgba(134, 117, 38, 0.40);color: white;width: 177px; height:37px; box-sizing: border-box; position:absolute">
                        Amount
                        <br />@Html.TextBoxFor(model => model.AmountFS, new { style = "width: 30px; text-align:right", id = "txtAmount", onkeypress = "return txtNumber_KeyPress(event)" })
                    </div>

                    <div id="divTBookNo" class="resize-drag" style="left:79px; top: 262px; z-index:4; background-color:rgba(134, 117, 38, 0.40);color: white;width: 113px; height:22px; box-sizing: border-box; position:absolute">
                        Tag Book No
                        <br />@Html.TextBoxFor(model => model.TBookNoFS, new { style = "width: 30px; text-align:right", id = "txtTBookNo", onkeypress = "return txtNumber_KeyPress(event)" })
                    </div>
                    <div id="divTPaymentType" class="resize-drag" style="left:75px; top: 37px; z-index:7; background-color:rgba(134, 117, 38, 0.40);color: white;width: 113px; height:30px; box-sizing: border-box; position:absolute">
                        Tag Payment Type
                        <br />@Html.TextBoxFor(model => model.TPaymentTypeFS, new { style = "width: 30px; text-align:right", id = "txtTPaymentType", onkeypress = "return txtNumber_KeyPress(event)" })
                    </div>
                    <div id="divTDate" class="resize-drag" style="left:75px; top: 86px; z-index:8; background-color:rgba(134, 117, 38, 0.40);color: white;width: 113px; height:30px; box-sizing: border-box; position:absolute">
                        Tag Date
                        <br />@Html.TextBoxFor(model => model.TDateFS, new { style = "width: 30px; text-align:right", id = "txtTDate", onkeypress = "return txtNumber_KeyPress(event)" })
                    </div>
                    <div id="divTPayTo" class="resize-drag" style="left:75px; top: 94px; z-index:5; background-color:rgba(134, 117, 38, 0.40);color: white;width: 175px; height:94px; box-sizing: border-box; position:absolute">
                        Tag Pay To
                        <br />@Html.TextBoxFor(model => model.TPayToFS, new { style = "width: 30px; text-align:right", id = "txtTPayTo", onkeypress = "return txtNumber_KeyPress(event)" })
                    </div>
                    <div id="divTAmount" class="resize-drag" style="left:113px; top: 68px; z-index:6; background-color:rgba(134, 117, 38, 0.40);color: white;width: 113px; height:22px; box-sizing: border-box; position:absolute">
                        Tag Amount
                        <br />@Html.TextBoxFor(model => model.TAmountFS, new { style = "width: 30px; text-align:right", id = "txtTAmount", onkeypress = "return txtNumber_KeyPress(event)" })<br />
                    </div>
                </div>

                @Html.HiddenFor(model => model.ChequeSetupID)
                @Html.HiddenFor(model => model.Length, new { id = "txtLength" })
                @Html.HiddenFor(model => model.Width, new { id = "txtWidth" })

                @Html.HiddenFor(model => model.PaymentMethodX, new { id = "txtPaymentMethodX" })
                @Html.HiddenFor(model => model.paymentMethodY, new { id = "txtpaymentMethodY" })
                @Html.HiddenFor(model => model.paymentMethodL, new { id = "txtpaymentMethodL" })
                @Html.HiddenFor(model => model.paymentMethodW, new { id = "txtpaymentMethodW" })
                @Html.HiddenFor(model => model.paymentMethodFS, new { id = "txtpaymentMethodFS" })

                @Html.HiddenFor(model => model.DateX, new { id = "txtDateX" })
                @Html.HiddenFor(model => model.DateY, new { id = "txtDateY" })
                @Html.HiddenFor(model => model.DateL, new { id = "txtDateL" })
                @Html.HiddenFor(model => model.DateW, new { id = "txtDateW" })
                @Html.HiddenFor(model => model.DateFS, new { id = "txtDateFS" })

                @Html.HiddenFor(model => model.DateFormat, new { id = "txtModelDateFormat" })

                @Html.HiddenFor(model => model.PayToX, new { id = "txtPayToX" })
                @Html.HiddenFor(model => model.PayToY, new { id = "txtPayToY" })
                @Html.HiddenFor(model => model.PayToL, new { id = "txtPayToL" })
                @Html.HiddenFor(model => model.PayToW, new { id = "txtPayToW" })
                @Html.HiddenFor(model => model.PayToFS, new { id = "txtPayToFS" })

                @Html.HiddenFor(model => model.AmountWordX, new { id = "txtAmountWordX" })
                @Html.HiddenFor(model => model.AmountWordY, new { id = "txtAmountWordY" })
                @Html.HiddenFor(model => model.AmountWordL, new { id = "txtAmountWordL" })
                @Html.HiddenFor(model => model.AmountWordW, new { id = "txtAmountWordW" })
                @Html.HiddenFor(model => model.AmountWordFS, new { id = "txtAmountWordFS" })

                @Html.HiddenFor(model => model.AmountX, new { id = "txtAmountX" })
                @Html.HiddenFor(model => model.AmountY, new { id = "txtAmountY" })
                @Html.HiddenFor(model => model.AmountL, new { id = "txtAmountL" })
                @Html.HiddenFor(model => model.AmountW, new { id = "txtAmountW" })
                @Html.HiddenFor(model => model.AmountFS, new { id = "txtAmountFS" })

                @Html.HiddenFor(model => model.TBookNoX, new { id = "txtTBookNoX" })
                @Html.HiddenFor(model => model.TBookNoY, new { id = "txtTBookNoY" })
                @Html.HiddenFor(model => model.TBookNoL, new { id = "txtTBookNoL" })
                @Html.HiddenFor(model => model.TBookNoW, new { id = "txtTBookNoW" })
                @Html.HiddenFor(model => model.TBookNoFS, new { id = "txtTBookNoFS" })

                @Html.HiddenFor(model => model.TPaymentTypeX, new { id = "txtTPaymentTypeX" })
                @Html.HiddenFor(model => model.TPaymentTypeY, new { id = "txtTPaymentTypeY" })
                @Html.HiddenFor(model => model.TPaymentTypeL, new { id = "txtTPaymentTypeL" })
                @Html.HiddenFor(model => model.TPaymentTypeW, new { id = "txtTPaymentTypeW" })
                @Html.HiddenFor(model => model.TPaymentTypeFS, new { id = "txtTPaymentTypeFS" })

                @Html.HiddenFor(model => model.TDateX, new { id = "txtTDateX" })
                @Html.HiddenFor(model => model.TDateY, new { id = "txtTDateY" })
                @Html.HiddenFor(model => model.TDateL, new { id = "txtTDateL" })
                @Html.HiddenFor(model => model.TDateW, new { id = "txtTDateW" })
                @Html.HiddenFor(model => model.TDateFS, new { id = "txtTDateFS" })

                @Html.HiddenFor(model => model.TPayToX, new { id = "txtTPayToX" })
                @Html.HiddenFor(model => model.TPayToY, new { id = "txtTPayToY" })
                @Html.HiddenFor(model => model.TPayToL, new { id = "txtTPayToL" })
                @Html.HiddenFor(model => model.TPayToW, new { id = "txtTPayToW" })
                @Html.HiddenFor(model => model.TPayToFS, new { id = "txtTPayToFS" })

                @Html.HiddenFor(model => model.TAmountX, new { id = "txtTAmountX" })
                @Html.HiddenFor(model => model.TAmountY, new { id = "txtTAmountY" })
                @Html.HiddenFor(model => model.TAmountL, new { id = "txtTAmountL" })
                @Html.HiddenFor(model => model.TAmountW, new { id = "txtTAmountW" })
                @Html.HiddenFor(model => model.TAmountFS, new { id = "txtTAmountFS" })

                @Html.HiddenFor(model => model.IsSplit, new { id = "txtIsSplit" })
            </fieldset>
        </div>


    <div style="width:100%; height:10%">
        <fieldset>
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                <tr>
                    <td style="width:20%; text-align:left"><input type="file" name="file" id="btnBrowse" onchange="readURL(this)" /></td>
                    <td style="width:40%; text-align:left;">
                        @Html.TextBoxFor(model => model.ChequeSetupName, new { style = "width: 150px; text-align:left", id = "txtChequeSetupName" })
                    </td>
                    <td style="width:20%; text-align:center;">
                        <label id="lblPosition"></label>
                    </td>
                    <td style="width:10%; text-align:right;">
                        <input type="submit" id="btnSave" style="font-weight:bold;" value="Save" onclick="return Save()" />
                    </td>
                    <td style="width:10%; text-align:right;">
                        <input type="button" id="btnClose" style="font-weight:bold;" value="Close" onclick="Close()" />
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
    }
    </div>
</body>
</html>

<script type="text/javascript">
    var _oChequeSetup;
    var _sBaseAddress="";
    var _nMenuid=null;
    var _sChequeSetupHeader=null;
    
    var _nMIN_SIZE = 20;
    var _URL = window.URL || window.webkitURL;
    $(document).ready(function () {
        debugger;
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _nMenuid = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.MenuID]));
        _sChequeSetupHeader=sessionStorage.getItem("ChequeSetupHeader");
        $('#ChequeSetupHeader').html(_sChequeSetupHeader);
        _oChequeSetup =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));

        if(_oChequeSetup.IsSubmitted){Close();}

        RefreshControl();

        $('.resize-drag')
           .draggable({
               containment: $('#divBase')
           })
           .resizable({
               handles: "all",
               containment: $('#divBase')
           });

        RefreshLayout();


    });

    $( "#divPaymentMethod,#divDate,#divPayTo,#divAmountWord,#divAmount,#divTBookNo,#divTPaymentType,#divTDate,#divTPayTo,#divTAmount" ).draggable({        
        drag: function() {
            var oPosition = $(this).position();
            $('#lblPosition').text('');
            if(oPosition===null || oPosition==='undefined')
            {
                $('#lblPosition').text('');
            }
            else
            {
                $('#lblPosition').text('Top : '+ oPosition.top + ', Left : '+ oPosition.left);
            }
        }
    });


    function txtNumber_KeyPress(evt)
    {
        debugger;
        var bHandled=false,sVal="",nCount=0;
        switch (evt.key)
        {
            case '.':
                var i=0;
                while (i < $('#'+evt.target.id).val().length)
                {
                    sVal = $('#'+evt.target.id).val().substring(i, i+1);
                    if (sVal == ".") { nCount = nCount + 1; }
                    i = i + 1;
                }
                bHandled = !(nCount != 0);
                break;
            default:
                if (!isNaN(parseFloat(evt.keyCode))||evt.keyCode==45||evt.keyCode==46||evt.keyCode==8||evt.keyCode==9||evt.keyCode>=35&&evt.keyCode<=40||evt.keyCode>=112&&evt.keyCode<=123)
                { bHandled = true; }

                break;
        }
        return bHandled;
    }

    function readURL(input) {
        debugger;

        var file, img,reader = new FileReader();


        if ((file = input.files[0])) {
            img = new Image();
            img.onload = function() {
                debugger;
                //alert(this.width + " " + this.height);
                $('#divBase').width(this.width).height(this.height);
            };
            img.onerror = function() {
                alert( "not a valid file: " + file.type);
            };
            img.src = _URL.createObjectURL(file);

            reader.onload = function (e) {
                debugger;
                $('#divBase')
                .css("background-image","url('"+e.target.result+"')")
            };

            reader.readAsDataURL(input.files[0]);

            RefreshControl();
        }

    }



    function RefreshControl()
    {
        if(_oChequeSetup!=undefined)
        {
            var nX, nY = 0;
            if (_oChequeSetup.ChequeSetupID > 0)
            {
                //this.Text = _oChequeSetup.ChequeSetupName;
                $('#divBase').width(_oChequeSetup.Length);
                $('#divBase').height(_oChequeSetup.Width);


                $('#txtChequeSetupName').val(_oChequeSetup.ChequeSetupName);


                nX = 0; nY = 0;
                nX = (_oChequeSetup.PaymentMethodX + _oChequeSetup.paymentMethodL > $('#divBase').width()) ?parseFloat($('#divBase').width() - (5 + _oChequeSetup.paymentMethodL)) :parseFloat(_oChequeSetup.PaymentMethodX);
                nY = (_oChequeSetup.paymentMethodY + _oChequeSetup.paymentMethodW > $('#divBase').height()) ?parseFloat($('#divBase').height() - (5 + _oChequeSetup.paymentMethodW)) :parseFloat(_oChequeSetup.paymentMethodY);
                $('#divPaymentMethod').css('left',nX+'px');
                $('#divPaymentMethod').css('top',nY+'px');
                $('#divPaymentMethod').width(parseFloat(_oChequeSetup.paymentMethodL));
                $('#divPaymentMethod').height(parseFloat(_oChequeSetup.paymentMethodW));


                nX = 0; nY = 0;
                nX = (_oChequeSetup.DateX + _oChequeSetup.DateL > $('#divBase').width()) ?parseFloat($('#divBase').width() - (5 + _oChequeSetup.DateL)) :parseFloat(_oChequeSetup.DateX);
                nY = (_oChequeSetup.DateY + _oChequeSetup.DateW > $('#divBase').height()) ?parseFloat($('#divBase').height() - (5 + _oChequeSetup.DateW)) :parseFloat(_oChequeSetup.DateY);
                $('#divDate').css('left',nX+'px');
                $('#divDate').css('top',nY+'px');
                $('#divDate').width(parseFloat(_oChequeSetup.DateL));
                $('#divDate').height(parseFloat(_oChequeSetup.DateW));


                if (_oChequeSetup.ChequeSetupID > 0 && _oChequeSetup.DateFormat.length > 10)
                {
                    document.getElementById('txtDateFormat').value=(_oChequeSetup.DateFormat.split(',')[0]==null)?"": _oChequeSetup.DateFormat.split(',')[0];
                    document.getElementById('chkIsSplit').checked=(_oChequeSetup.DateFormat.split(',')[1]==null)?false: (_oChequeSetup.DateFormat.split(',')[1]=='0')?false:true;
                    //$('#txtDFormatL').val((_oChequeSetup.DateFormat.split(',')[2]==null)?0: parseFloat(_oChequeSetup.DateFormat.split(',')[2]));
                    //$('#txtDFormatW').val((_oChequeSetup.DateFormat.split(',')[3]==null)?0: parseFloat(_oChequeSetup.DateFormat.split(',')[3]));
                    //$('#txtDFormatDistace').val((_oChequeSetup.DateFormat.split(',')[4]==null)?0: parseFloat(_oChequeSetup.DateFormat.split(',')[4]));
                }

                nX = 0; nY = 0;
                nX = (_oChequeSetup.PayToX + _oChequeSetup.PayToL > $('#divBase').width()) ?parseFloat($('#divBase').width() - (5 + _oChequeSetup.PayToL)) :parseFloat(_oChequeSetup.PayToX);
                nY = (_oChequeSetup.PayToY + _oChequeSetup.PayToW > $('#divBase').height()) ?parseFloat($('#divBase').height() - (5 + _oChequeSetup.PayToW)) :parseFloat(_oChequeSetup.PayToY);
                $('#divPayTo').css('left',nX+'px');
                $('#divPayTo').css('top',nY+'px');
                $('#divPayTo').width(parseFloat(_oChequeSetup.PayToL));
                $('#divPayTo').height(parseFloat(_oChequeSetup.PayToW));



                nX = 0; nY = 0;
                nX = (_oChequeSetup.AmountWordX + _oChequeSetup.AmountWordL > $('#divBase').width()) ?parseFloat($('#divBase').width() - (5 + _oChequeSetup.AmountWordL)) :parseFloat(_oChequeSetup.AmountWordX);
                nY = (_oChequeSetup.AmountWordY + _oChequeSetup.AmountWordW > $('#divBase').height()) ?parseFloat($('#divBase').height() - (5 + _oChequeSetup.AmountWordW)) :parseFloat(_oChequeSetup.AmountWordY);
                $('#divAmountWord').css('left',nX+'px');
                $('#divAmountWord').css('top',nY+'px');
                $('#divAmountWord').width(parseFloat(_oChequeSetup.AmountWordL));
                $('#divAmountWord').height(parseFloat(_oChequeSetup.AmountWordW));



                nX = 0; nY = 0;
                nX = (_oChequeSetup.AmountX + _oChequeSetup.AmountL > $('#divBase').width()) ?parseFloat($('#divBase').width() - (5 + _oChequeSetup.AmountL)) :parseFloat(_oChequeSetup.AmountX);
                nY = (_oChequeSetup.AmountY + _oChequeSetup.AmountW > $('#divBase').height()) ?parseFloat($('#divBase').height() - (5 + _oChequeSetup.AmountW)) :parseFloat(_oChequeSetup.AmountY);
                $('#divAmount').css('left',nX+'px');
                $('#divAmount').css('top',nY+'px');
                $('#divAmount').width(parseFloat(_oChequeSetup.AmountL));
                $('#divAmount').height(parseFloat(_oChequeSetup.AmountW));



                nX = 0; nY = 0;
                nX = (_oChequeSetup.TBookNoX + _oChequeSetup.TBookNoL > $('#divBase').width()) ?parseFloat($('#divBase').width() - (5 + _oChequeSetup.TBookNoL)) :parseFloat(_oChequeSetup.TBookNoX);
                nY = (_oChequeSetup.TBookNoY + _oChequeSetup.TBookNoW > $('#divBase').height()) ?parseFloat($('#divBase').height() - (5 + _oChequeSetup.TBookNoW)) :parseFloat(_oChequeSetup.TBookNoY);
                $('#divTBookNo').css('left',nX+'px');
                $('#divTBookNo').css('top',nY+'px');
                $('#divTBookNo').width(parseFloat(_oChequeSetup.TBookNoL));
                $('#divTBookNo').height(parseFloat(_oChequeSetup.TBookNoW));



                nX = 0; nY = 0;
                nX = (_oChequeSetup.TPaymentTypeX + _oChequeSetup.TPaymentTypeL > $('#divBase').width()) ?parseFloat($('#divBase').width() - (5 + _oChequeSetup.TPaymentTypeL)) :parseFloat(_oChequeSetup.TPaymentTypeX);
                nY = (_oChequeSetup.TPaymentTypeY + _oChequeSetup.TPaymentTypeW > $('#divBase').height()) ?parseFloat($('#divBase').height() - (5 + _oChequeSetup.TPaymentTypeW)) :parseFloat(_oChequeSetup.TPaymentTypeY);
                $('#divTPaymentType').css('left',nX+'px');
                $('#divTPaymentType').css('top',nY+'px');
                $('#divTPaymentType').width(parseFloat(_oChequeSetup.TPaymentTypeL));
                $('#divTPaymentType').height(parseFloat(_oChequeSetup.TPaymentTypeW));



                nX = 0; nY = 0;
                nX = (_oChequeSetup.TDateX + _oChequeSetup.TDateL > $('#divBase').width()) ?parseFloat($('#divBase').width() - (5 + _oChequeSetup.TDateL)) :parseFloat(_oChequeSetup.TDateX);
                nY = (_oChequeSetup.TDateY + _oChequeSetup.TDateW > $('#divBase').height()) ?parseFloat($('#divBase').height() - (5 + _oChequeSetup.TDateW)) :parseFloat(_oChequeSetup.TDateY);
                $('#divTDate').css('left',nX+'px');
                $('#divTDate').css('top',nY+'px');
                $('#divTDate').width(parseFloat(_oChequeSetup.TDateL));
                $('#divTDate').height(parseFloat(_oChequeSetup.TDateW));



                nX = 0; nY = 0;
                nX = (_oChequeSetup.TPayToX + _oChequeSetup.TPayToL > $('#divBase').width()) ?parseFloat($('#divBase').width() - (5 + _oChequeSetup.TPayToL)) :parseFloat(_oChequeSetup.TPayToX);
                nY = (_oChequeSetup.TPayToY + _oChequeSetup.TPayToW > $('#divBase').height()) ?parseFloat($('#divBase').height() - (5 + _oChequeSetup.TPayToW)) :parseFloat(_oChequeSetup.TPayToY);
                $('#divTPayTo').css('left',nX+'px');
                $('#divTPayTo').css('top',nY+'px');
                $('#divTPayTo').width(parseFloat(_oChequeSetup.TPayToL));
                $('#divTPayTo').height(parseFloat(_oChequeSetup.TPayToW));



                nX = 0; nY = 0;
                nX = (_oChequeSetup.TAmountX + _oChequeSetup.TAmountL > $('#divBase').width()) ?parseFloat($('#divBase').width() - (5 + _oChequeSetup.TAmountL)) :parseFloat(_oChequeSetup.TAmountX);
                nY = (_oChequeSetup.TAmountY + _oChequeSetup.TAmountW > $('#divBase').height()) ?parseFloat($('#divBase').height() - (5 + _oChequeSetup.TAmountW)) :parseFloat(_oChequeSetup.TAmountY);
                $('#divTAmount').css('left',nX+'px');
                $('#divTAmount').css('top',nY+'px');
                $('#divTAmount').width(parseFloat(_oChequeSetup.TAmountL));
                $('#divTAmount').height(parseFloat(_oChequeSetup.TAmountW));


            }

            if(_oChequeSetup!=undefined)
            {
                if(_oChequeSetup.ErrorMessage!=null&&_oChequeSetup.ErrorMessage!="")
                {
                    alert(_oChequeSetup.ErrorMessage);
                }
            }
        }
    }

    function RefreshLayout()
    {
        debugger;
        if(_sChequeSetupHeader == 'View ChequeSetup')
        {
            //document.getElementById('divBase').disabled = true;
            //$("#divBase").children().prop('disabled',true);
            $('.resize-drag').draggable("disable").resizable("disable");

            var divBaseChildren=$("#divBase").children();
            for(var i=0;i<divBaseChildren.length;i++)
            {
                divBaseChildren[i].disabled=true;
                var SecondLevelChildren=$('#'+divBaseChildren[i].id).children();
                for(var j=0;j<SecondLevelChildren.length;j++)
                {
                    SecondLevelChildren[j].disabled=true;
                }
            }



            document.getElementById('btnBrowse').disabled = true;
            document.getElementById('txtChequeSetupName').disabled = true;


            document.getElementById('btnSave').style.display = 'none';
        }
    }

    function ValidateInput()
    {
        var txtChequeSetupName = $("#txtChequeSetupName").val();
        if(txtChequeSetupName==null || txtChequeSetupName=="")
        {
            alert("Please enter ChequeSetup Name!");
            $('#txtChequeSetupName').focus();
            return false;
        }

        var L=parseFloat($('#divBase').width());
        var W=parseFloat($('#divBase').height());
        if(L==0||W==0||L<W)
        {
            alert("Please Check Leaf size!");

            return false;
        }

        var txtPaymentMethodX = parseFloat($('#divPaymentMethod').css('left'));
        if(txtPaymentMethodX==null || txtPaymentMethodX==""||txtPaymentMethodX>=L-0.5)
        {
            alert("Invalid Payment Method field!");

            return false;
        }

        var txtpaymentMethodY = parseFloat($('#divPaymentMethod').css('top'));
        if(txtpaymentMethodY==null || txtpaymentMethodY==""||txtpaymentMethodY>=W-0.5)
        {
            alert("Invalid Payment Method field!");

            return false;
        }

        var txtDateX = parseFloat($('#divDate').css('left'));
        if(txtDateX==null || txtDateX==""||txtDateX>=L-0.5)
        {
            alert("Invalid Date Field!");

            return false;
        }

        var txtDateY = parseFloat($('#divDate').css('top'));
        if(txtDateY==null || txtDateY==""||txtDateY>=W-0.5)
        {
            alert("Invalid Date Field!");

            return false;
        }

        var txtPayToX = parseFloat($('#divPayTo').css('left'));
        if(txtPayToX==null || txtPayToX==""||txtPayToX>=L-0.5)
        {
            alert("Invalid Pay to field!");

            return false;
        }

        var txtPayToY = parseFloat($('#divPayTo').css('top'));
        if(txtPayToY==null || txtPayToY==""||txtPayToY>=W-0.5)
        {
            alert("Invalid Pay to field!");

            return false;
        }

        var txtAmountWordX = parseFloat($('#divAmountWord').css('left'));
        if(txtAmountWordX==null || txtAmountWordX==""||txtAmountWordX>=L-0.5)
        {
            alert("Invalid Amount Word field!");

            return false;
        }

        var txtAmountWordY = parseFloat($('#divAmountWord').css('top'));
        if(txtAmountWordY==null || txtAmountWordY==""||txtAmountWordY>=W-0.5)
        {
            alert("Invalid Amount Word field!");

            return false;
        }

        var txtAmountX = parseFloat($('#divAmount').css('left'));
        if(txtAmountX==null || txtAmountX==""||txtAmountX>=L-0.5)
        {
            alert("Invalid Amount field!");

            return false;
        }

        var txtAmountY = parseFloat($('#divAmount').css('top'));
        if(txtAmountY==null || txtAmountY==""||txtAmountY>=W-0.5)
        {
            alert("Invalid Amount field!");

            return false;
        }

        return true;
    }


    function RefreshObject()
    {
        debugger;

        $('#txtLength').val($('#divBase').width());
        $('#txtWidth').val($('#divBase').height());

        $('#txtPaymentMethodX').val(parseFloat($('#divPaymentMethod').css('left')));
        $('#txtpaymentMethodY').val(parseFloat($('#divPaymentMethod').css('top')));
        $('#txtpaymentMethodL').val($('#divPaymentMethod').width());
        $('#txtpaymentMethodW').val($('#divPaymentMethod').height());

        $('#txtDateX').val(parseFloat($('#divDate').css('left')));
        $('#txtDateY').val(parseFloat($('#divDate').css('top')));
        $('#txtDateL').val($('#divDate').width());
        $('#txtDateW').val($('#divDate').height());

        $('#txtModelDateFormat').val($('#txtDateFormat').val()+ (document.getElementById('chkIsSplit').checked ? ", 1" : ", 0") + ", 0.00, 0.00, 0.00");

        $('#txtPayToX').val(parseFloat($('#divPayTo').css('left')));
        $('#txtPayToY').val(parseFloat($('#divPayTo').css('top')));
        $('#txtPayToL').val($('#divPayTo').width());
        $('#txtPayToW').val($('#divPayTo').height());

        $('#txtAmountWordX').val(parseFloat($('#divAmountWord').css('left')));
        $('#txtAmountWordY').val(parseFloat($('#divAmountWord').css('top')));
        $('#txtAmountWordL').val($('#divAmountWord').width());
        $('#txtAmountWordW').val($('#divAmountWord').height());

        $('#txtAmountX').val(parseFloat($('#divAmount').css('left')));
        $('#txtAmountY').val(parseFloat($('#divAmount').css('top')));
        $('#txtAmountL').val($('#divAmount').width());
        $('#txtAmountW').val($('#divAmount').height());

        $('#txtTBookNoX').val(parseFloat($('#divTBookNo').css('left')));
        $('#txtTBookNoY').val(parseFloat($('#divTBookNo').css('top')));
        $('#txtTBookNoL').val($('#divTBookNo').width());
        $('#txtTBookNoW').val($('#divTBookNo').height());

        $('#txtTPaymentTypeX').val(parseFloat($('#divTPaymentType').css('left')));
        $('#txtTPaymentTypeY').val(parseFloat($('#divTPaymentType').css('top')));
        $('#txtTPaymentTypeL').val($('#divTPaymentType').width());
        $('#txtTPaymentTypeW').val($('#divTPaymentType').height());

        $('#txtTDateX').val(parseFloat($('#divTDate').css('left')));
        $('#txtTDateY').val(parseFloat($('#divTDate').css('top')));
        $('#txtTDateL').val($('#divTDate').width());
        $('#txtTDateW').val($('#divTDate').height());

        $('#txtTPayToX').val(parseFloat($('#divTPayTo').css('left')));
        $('#txtTPayToY').val(parseFloat($('#divTPayTo').css('top')));
        $('#txtTPayToL').val($('#divTPayTo').width());
        $('#txtTPayToW').val($('#divTPayTo').height());

        $('#txtTAmountX').val(parseFloat($('#divTAmount').css('left')));
        $('#txtTAmountY').val(parseFloat($('#divTAmount').css('top')));
        $('#txtTAmountL').val($('#divTAmount').width());
        $('#txtTAmountW').val($('#divTAmount').height());

        $('#txtIsSplit').val(document.getElementById('chkIsSplit').checked ?true:false);
    }

    function Save()
    {
        debugger;
        if(!ValidateInput()) return false;
        RefreshObject();

        return true;
    }

    
    $(document).keydown(function(e) {
        if(e.which == 27)//escape=27
        {
            var oChequeSetups =sessionStorage.getItem("ChequeSetups");
            var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
            if(oChequeSetups!=null)
            {
                oChequeSetups = jQuery.parseJSON(oChequeSetups);
            }
            else
            {
                oChequeSetups=[];
            }
            if(nIndex===-1)
            {
                sessionStorage.setItem("SelectedRowIndex", oChequeSetups.length);
            }
            
            window.location.href = _sBaseAddress+ "/ChequeSetup/ViewChequeSetups?menuid="+_nMenuid;
        }
    });
    function Close()
    {
        var oChequeSetups =sessionStorage.getItem("ChequeSetups");
        var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
        if(oChequeSetups!=null)
        {
            oChequeSetups = jQuery.parseJSON(oChequeSetups);
        }
        else
        {
            oChequeSetups=[];
        }
        if(nIndex===-1)
        {
            sessionStorage.setItem("SelectedRowIndex", oChequeSetups.length);
        }
        window.location.href = _sBaseAddress+ "/ChequeSetup/ViewChequeSetups?menuid="+_nMenuid;
    }
</script>