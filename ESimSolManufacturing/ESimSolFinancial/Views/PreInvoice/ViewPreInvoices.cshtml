<html>
@{
    ViewBag.Title = " Pre Invoice";
}
<body>
    @model IEnumerable<ESimSol.BusinessObjects.PreInvoice>
<div class="" ng-app="PreInvoiceApp">
    <div ng-controller="PreInvoiceController" title="Sales Invocie">
        <div style="margin-bottom:2px; display:block" class="form-inline ui-grid-top-panel regionInvoice">
            <input type="text" class="form-control" ng-model="RefNo" ng-keyup="searchByRefNo($event)" style="height:22px" placeholder="Type Invoice No & Press Enter">
            <button type="button" ng-show="btnView" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="AdvanceSearch()"><span class="glyphicon glyphicon-search" aria-hidden="true"> Advance Search</span></button>
            <button type="button" ng-show="btnAdd" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Add()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Add</span></button>
            <button type="button" ng-show="btnEdit" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Edit()"><span class="glyphicon glyphicon-edit" aria-hidden="true"> Edit</span></button>
            <button type="button" ng-show="btnView" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="View()"><span class="glyphicon glyphicon-th" aria-hidden="true"> View</span></button>
            <button type="button" ng-show="btnDelete" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Delete()"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Delete</span></button>
            <button type="button" ng-show="btnApprove" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Approve()"><span class="glyphicon glyphicon-save-file" aria-hidden="true"> Approve</span></button>
            @*<button type="button" ng-show="btnPriview" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="CreateChallan()"><span class="glyphicon glyphicon-download" aria-hidden="true"> Create Challan</span></button>*@
            @*<button type="button" ng-show="btnPriview" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Comments()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Comments</span></button>*@
            <button type="button" ng-show="btnPriview" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="PrintPreview()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Preview</span></button>
            @*<button type="button" ng-show="btnPriview" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="PrintChallan()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Challan</span></button>*@
            <button type="button" ng-show="btnPriview" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="HandoverCheckList()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Handover Check List</span></button>
            <button type="button" ng-show="btnWarranty" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="PrintWarrantyPreview()"><span class="glyphicon glyphicon-print" aria-hidden="true">Warranty</span></button>
            <button type="button" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="ServiceSchedule()"><span class="glyphicon glyphicon-equalizer">Service Schedule</span></button>
        </div>
        <div ui-grid="gridOptions" ui-grid-selection ui-grid-pinning style=" width: 99%; height: 485px;"></div>
    </div>

    <script type="text/ng-template" id="HandoverCheckList.html">
        <div class="modal-header">
            <h4 class="modal-title" id="modal-title">Print Handover Check List :</h4>
        </div>
        <div class="modal-body form-horizontal regionExportUP ms-custom-control" id="modal-body">
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-5 text-right" style="margin-top:-5px">
                        <label class="control-label">Handover Date:</label>
                    </div>
                    <div class="col-md-6 text-left">
                        <div class="input-group date date-container">
                            <input type="text" class="form-control" ng-model="PreInvoice.HandoverDateST"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                        </div>
                        @*<input type="text" class="form-control" ng-model="PreInvoice.HandoverDate" >*@
                    </div>
                </div>
                <div class="col-md-12 ">
                    <div class="col-md-5 text-right" style="margin-top:-5px">
                        <label class="control-label">Vehicle Mileage:</label>
                    </div>
                    <div class="col-md-6 text-left">
                        <input type="number" class="form-control number-int" id="VehicleMileage" ng-model="PreInvoice.VehicleMileage">
                    </div>
                </div>
                <div class="col-md-12 ">
                    <div class="col-md-5 text-right" style="margin-top:-5px">
                        <label class="control-label">Wheel Condition:</label>
                    </div>
                    <div class="col-md-6 text-left">
                        <input type="text" class="form-control" ng-model="PreInvoice.WheelCondition" >
                    </div>
                </div>
                <div class="col-md-12 ">
                    <div class="col-md-5 text-right" style="margin-top:-5px">
                        <label class="control-label">Body Work Condition:</label>
                    </div>
                    <div class="col-md-6 text-left">
                        <input type="text" class="form-control" ng-model="PreInvoice.BodyWorkCondition" >
                    </div>
                </div>
                <div class="col-md-12 ">
                    <div class="col-md-5 text-right" style="margin-top:-5px">
                        <label class="control-label">Interior Condition:</label>
                    </div>
                    <div class="col-md-6 text-left">
                        <input type="text" class="form-control" ng-model="PreInvoice.InteriorCondition">
                    </div>
                </div>
                <div class="col-md-12 ">
                    <div class="col-md-5 text-right" style="margin-top:-5px">
                        <label class="control-label">Dealer Person:</label>
                    </div>
                    <div class="col-md-6 text-left">
                        <input type="text" class="form-control" ng-model="PreInvoice.DealerPerson" >
                    </div>
                </div>
                <div class="col-md-12 ">
                    <div class="col-md-5 text-right" style="margin-top:-5px">
                        <label class="control-label">Owner:</label>
                    </div>
                    <div class="col-md-6 text-left">
                        <input type="text" class="form-control" ng-model="PreInvoice.Owner" >
                    </div>
                </div>
                <div class="col-md-12 ">
                    <div class="col-md-5 text-right" style="margin-top:-5px">
                        <label class="control-label">Owner NID:</label>
                    </div>
                    <div class="col-md-6 text-left">
                        <input type="text" class="form-control" ng-model="PreInvoice.OwnerNID" >
                    </div>
                </div>
                <div class="col-md-12 ">
                    <div class="col-md-5 text-right" style="margin-top:-5px">
                        <label class="control-label">Note:</label>
                    </div>
                    <div class="col-md-6 text-left">
                        <input type="text" class="form-control" ng-model="PreInvoice.Note" >
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn-primary btn-sm" aria-label="Left Align" ng-click="UpdatePreInvoice()" ng-hide="hide"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Print</button>
            <button type="button" class="btn-danger btn-sm" aria-label="Left Align" ng-click="cancel()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel</button>
        </div>
    </script>

    <script type="text/ng-template" id="PreInvoicePreview.html">
        <div class="modal-header">
            <h4 class="modal-title" id="modal-title">Print Proforma Invoice :</h4>
        </div>
        <div class="modal-body form-horizontal regionExportUP ms-custom-control" id="modal-body">
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right" style="margin-top:-5px">
                        <label class="control-label">First Term:</label>
                    </div>
                    <div class="col-md-9 text-left">
                        <input type="text" class="form-control" ng-model="FirstTerm">
                    </div>
                </div>
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right" style="margin-top:-5px">
                        <label class="control-label">Second Term:</label>
                    </div>
                    <div class="col-md-9 text-left">
                        <input type="text" class="form-control" ng-model="SecondTerm">
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn-primary btn-sm" aria-label="Left Align" ng-click="PrintPreInvoice()" ng-hide="hide"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Print</button>
            <button type="button" class="btn-danger btn-sm" aria-label="Left Align" ng-click="cancelPrintPreInvoice()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel</button>
        </div>
    </script>

</div>
<style type="text/css">
    .regionInvoice .form-control {
        height: 60px;
        width: 15%;
        padding: 0px 6px;
        font-size: 12px;
       overflow:auto;
    }
</style>

 <script type="text/javascript">
    var oPreInvoiceList =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
    var nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
     var oCompareOperators =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
     
     var CInvoiceapp= angular.module('PreInvoiceApp', ['ngAnimate', 'ui.bootstrap', 'ui.grid','ui.grid.selection', 'ui.grid.cellNav','ms.service','ui.grid.pinning','ms.service']);
    CInvoiceapp.controller('PreInvoiceController',  function ($scope, $http, $timeout, $uibModal, $log,uiGridConstants, msModal,advanceSearch,userSession) {
        oPreInvoiceList= (userSession.getData('PreInvoiceList').length>0)? userSession.getData('PreInvoiceList'):oPreInvoiceList;
        $scope.BUID=nBUID;
        debugger;
        $scope.gridOptions = {
            enableRowSelection: true,
            enableSelectAll: true,
            multiSelect: false,
            enableFullRowSelection: true,
            columnDefs: [
                 {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false,pinnedLeft:true},
                { field: 'InvoiceNo', name:'Invoice No', width:'10%' ,pinnedLeft:true },
                { field: 'SQNo', name:'File No', width:'10%' },
                { field: 'KommNo', name:'Komm No', width:'10%' },
                { field: 'InvoiceStatusST', name:'Status', width:'10%' },
                { field: 'CustomerName', name:'Customer', width:'12%' },
                { field: 'ReceivedByName', name:'Received By', width:'12%' },
                { field: 'ReceivedOn', name:'Received On', width:'12%' },
                { field: 'InvoiceDateST', name:'Issue Date', width:'12%' },
                { field: 'ModelNo', name:'Model No', width:'10%' },
                { field: 'ChassisNo', name:'Chassis No', width:'12%' },
                { field: 'EngineNo', name:'Engine No', width:'12%' },
                { field: 'InteriorColorName', name:'Interior Color', width:'15%' },
                { field: 'ExteriorColorName', name:'Exterior Color', width:'15%' },
                { field: 'Remarks', name: 'Comments', width: '10%' }
            ],
            data: oPreInvoiceList,
            onRegisterApi : function(gridApi)
            {
                debugger;
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.core.refresh();
                debugger;
                if(oPreInvoiceList.length>0 && userSession.getRowIndex()>=0)
                {
                    $scope.gridApi.grid.modifyRows(oPreInvoiceList);
                    $scope.gridApi.selection.selectRow(oPreInvoiceList[userSession.getRowIndex()]);
                    $scope.RowSelect(oPreInvoiceList[userSession.getRowIndex()]);
                }
                $scope.gridApi.selection.on.rowSelectionChanged($scope, function (row) {
                    $scope.RowSelect(row.entity ); });
                userSession.clear();
            }
        };

        $scope.RowSelect =  function (entity){
      
            $scope.btnAdd = $scope.btnEdit = $scope.btnDetails = $scope.btnDelete =  $scope.btnPrintList= $scope.btnPriview = $scope.btnApprove =false;
            debugger;

            if(entity.InvoiceStatusInt==2){ //ApproveOnly
                $scope.btnApprove=false;
                $scope.btnEdit=false;
                $scope.btnDelete=false;
                $scope.btnDeliver=false;
                $scope.btnReceive=true;
                $scope.btnCancel=false;
                $scope.CheckControll();
            }
            else if(entity.InvoiceStatusInt==3)//Received
            {
                $scope.btnApprove=false;
                $scope.btnEdit=false;
                $scope.btnDelete=false;
                $scope.btnReceive=false;
                $scope.btnDeliver=true;
                $scope.btnCancel=false;
                $scope.CheckControll();
            }
            else if(entity.InvoiceStatusInt==4)//Delivered
            {
                $scope.btnApprove=false;
                $scope.btnEdit=false;
                $scope.btnDelete=false;
                $scope.btnReceive=false;
                $scope.btnDeliver=false;
                $scope.btnCancel=false;
                $scope.CheckControll();
            }
            else
            {
                $scope.btnReceive=false;
                $scope.btnDeliver=false;
                $scope.btnApprove=true;
                $scope.btnEdit=true;
                $scope.btnCancel=true;
                $scope.btnDelete=true;
                $scope.CheckControll();
            }
        }

        $scope.searchByRefNo = function(e)
        {
            debugger;
            //if (event.which == 13) {
                var RefNo = $scope.RefNo;
                var oPreInvoices = oPreInvoiceList;
                var sTempName="";
                var oSearchedList = [];
                var oCurrentList = $scope.gridOptions.data;
                if (e.which == 8)
                {
                    oCurrentList = oPreInvoices;
                }
                for(i=0;i<oCurrentList.length;++i)
                {
                    sTempName=oCurrentList[i].InvoiceNo;
                    n=sTempName.toUpperCase().indexOf(RefNo.toUpperCase())      //??????
                    if(n!=-1)
                    {
                        oSearchedList.push(oCurrentList[i]);
                    }
                }
                $scope.gridOptions= {data:oSearchedList};
            //}
        }
        
        $scope.AdvanceSearch=function()
        { 
            debugger;
            var oColumns = [];
            var oColumn = { field: 'ModelNo', name: 'ModelNo',width: '30%'  };oColumns.push(oColumn);
            oColumn = { field: 'CategoryName', name: 'CategoryName',width: '40%', enableSorting: false  };oColumns.push(oColumn);
            
            var paramObj_Model={
                obj:{ModelNo: '@@VehicleModelID'},
                objName:'ModelNo',
                url:_sBaseAddress+'/VehicleModel/GetVehicleModels',
                title:'Model List',
                multiSelect:true,
                columns:oColumns
            }

            oColumns = [];
            var oColumn = { field: 'Name', name: 'Applicant Name',width: '70%', enableSorting: false  };oColumns.push(oColumn);
            oColumn = { field: 'Address', name: 'Address',width: '30%', enableSorting: false  };oColumns.push(oColumn);

            var paramObj_Contractor={
                obj:{Params: '2' + '~' +'@@ContractorID'+'~'+sessionStorage.getItem('BUID')},
                objName:'Params',
                url:_sBaseAddress+'/Contractor/ContractorSearchByNameType',
                title:'Contractor List',
                multiSelect:true,
                columns:oColumns
            }

            var oElementList = [
                                { DisplayName: "File No",           BOField: "SQNo",          InputType: 'text' },
                                { DisplayName: "Issue Date",    BOField: "IssueDate",   InputType: 'date' },
                                //{ DisplayName: "Service Date",    BOField: "ServiceDate",   InputType: 'date' },
                                { DisplayName: "Model No",          BOField: "VehicleModelID",  InputType: 'picker', PickerObject:paramObj_Model },
                                { DisplayName: "Customer ",         BOField: "ContractorID",    InputType: 'picker', PickerObject:paramObj_Contractor },
                                //{ DisplayName: ["Yet To Forward (HO)","Yet To Forward (Buyer)"],  BOField: ["YetToHO","YetToBuyer"],   InputType: 'bool'},
                                //{ DisplayName: "SomeType",    BOField: "SomeType",       InputType: 'select', OptionList:[{id:2,Value:"KisuNai"}]},
                                { DisplayName: "Komm No",           BOField: "KommNo",          InputType: 'text' }
            ];
            var modalObj={
                size:'md',
                title:"Advance Search",
                url:_sBaseAddress+'/Home/AdvanceSearch',
                CompareOperators:oCompareOperators,
                HtmlElements:oElementList,
                isAdvanceSearch:true, // if TRUE: 'urlAdvanceSearch' should be define
                urlAdvanceSearch:_sBaseAddress + '/PreInvoice/AdvSearch'
            }

            var modalInstance=advanceSearch.Instance(modalObj);
            modalInstance.result.then(function (result) 
            {
                console.log(result);
                $scope.gridOptions.data=result;
            }, function () 
            {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };

        $scope.HandoverCheckList = function () {
            debugger;
            var oPreInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oPreInvoice==null || oPreInvoice.PreInvoiceID<=0)
            {
                alert("Please Select an item from list");
                return;
            }

            var modalInstance = $uibModal.open({
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'md',
                templateUrl: 'HandoverCheckList.html',
                controller: 'HandoverCheckListCtrl',
                controllerAs: 'HandoverCheckListController',
                resolve: {
                    obj: function () {
                        return { value:oPreInvoice, Operation: 'Print'  };
                    }
                }
            });

            modalInstance.result.then(function (result) {
                debugger;
                if(result.PreInvoiceID>0)
                {
                    debugger;
                    var index=sessionStorage.getItem('SelectedRowIndex');
                    $scope.IsMeter=result.IsMeter;
                    $scope.IsYard=result.IsYard;
                    console.log(result);
                }
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };

        
        $scope.Add  = function ()
        {
            debugger;
            sessionStorage.setItem("PreInvoiceList", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", -1);
            sessionStorage.setItem("PreInvoiceHeader", "Add Sales Invocie");
            sessionStorage.setItem("BackLink", window.location.href);
            sessionStorage.setItem("BUID",$scope.BUID);
            window.location.href =sessionStorage.getItem('BaseAddress')+"/PreInvoice/ViewPreInvoice?id=0&buid="+sessionStorage.getItem('BUID');
        }
        $scope.Edit =  function ()
        {
            debugger;

            var oPreInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oPreInvoice==null || oPreInvoice.PreInvoiceID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            if(oPreInvoice.InvoiceStatusInt>1)
            {
                alert("Please Select Initialized Invoice!");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.PreInvoiceID == oPreInvoice.PreInvoiceID)
                {
                    sessionStorage.setItem("PreInvoiceList", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("PreInvoiceHeader", "Edit Sales Invocie");
                    sessionStorage.setItem("BackLink", window.location.href);
                    sessionStorage.setItem("BUID",$scope.BUID);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/PreInvoice/ViewPreInvoice?id="+oPreInvoice.PreInvoiceID+"&buid="+sessionStorage.getItem('BUID');
                }
            }, $scope.gridOptions.data);
        }
        $scope.ServiceSchedule =  function ()
        {
            debugger;

            var oPreInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oPreInvoice==null || oPreInvoice.PreInvoiceID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.PreInvoiceID == oPreInvoice.PreInvoiceID)
                {
                    sessionStorage.setItem("PreInvoiceList", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("PreInvoiceHeader", "Edit Sales Invocie");
                    sessionStorage.setItem("BackLink", window.location.href);
                    sessionStorage.setItem("BUID",$scope.BUID);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/ServiceSchedule/ViewServiceSchedules?nPIID="+oPreInvoice.PreInvoiceID+"&buid="+sessionStorage.getItem('BUID');
                }
            }, $scope.gridOptions.data);
        }
        $scope.View =  function ()
        {
            //debugger;
            var oPreInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oPreInvoice==null || oPreInvoice.PreInvoiceID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.PreInvoiceID == oPreInvoice.PreInvoiceID)
                {
                    sessionStorage.setItem("PreInvoiceList", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("PreInvoiceHeader", "View Sales Invocie");
                    sessionStorage.setItem("BackLink", window.location.href);
                    sessionStorage.setItem("BUID",$scope.BUID);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/PreInvoice/ViewPreInvoice?id="+oPreInvoice.PreInvoiceID+"&buid="+sessionStorage.getItem('BUID');
                }
            }, $scope.gridOptions.data);
        }

        $scope.Approve = function()
        {
            var oPreInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oPreInvoice==null || oPreInvoice.PreInvoiceID<=0)
            {
                alert("Please Select An Invoice!");
                return;
            }
            if(oPreInvoice.ProductID<=0)
            {
                alert("No Product Is Found For This Invoice. Please Pick A Product And Try Again!");
                return;
            }
            if(oPreInvoice.InvoiceStatusInt>1)
            {
                alert("Please Select Initialized Invoice!");
                return;
            }
            //$scope.Modal( oPreInvoice, 'Approve');
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.PreInvoiceID == oPreInvoice.PreInvoiceID)
                {
                    sessionStorage.setItem("PreInvoices", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("Operation", "Approve");
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/PreInvoice/ViewPreInvoice_Update?id="+oPreInvoice.PreInvoiceID;
                }
            }, $scope.gridOptions.data);
        }
     
        $scope.CreateChallan = function ()
        {
            var oPreInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oPreInvoice==null || oPreInvoice.PreInvoiceID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            if(oPreInvoice.InvoiceStatusInt<=1)
            {
                alert("Your Selectd Invoice is Not Approved!");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.PreInvoiceID == oPreInvoice.PreInvoiceID)
                {
                    sessionStorage.setItem("PreInvoiceList", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("PreInvoiceChallan", JSON.stringify(oPreInvoice));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("PreInvoiceHeader", "Edit Sales Invocie");
                    sessionStorage.setItem("BackLink", window.location.href);
                    sessionStorage.setItem("BUID",$scope.BUID);
                   // window.location.href =sessionStorage.getItem('BaseAddress')+"/PreInvoice/ViewPreInvoice?id="+oPreInvoice.PreInvoiceID+"&buid="+sessionStorage.getItem('BUID');
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/VehicleChallan/ViewVehicleChallan?nId="+0+"&buid="+nBUID;
                }
            }, $scope.gridOptions.data);
        };

        $scope.Comments =  function ()
        {
            //debugger;
            var oPreInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oPreInvoice==null || oPreInvoice.PreInvoiceID<=0)
            {
                alert("Please Select an item from list");
                return;
            } 

            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.PreInvoiceID == oPreInvoice.PreInvoiceID)
                {
                    sessionStorage.setItem("PreInvoices", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/CommentsHistory/ViewCommentsHistory?nModuleID=148&nModuleObjID="+oPreInvoice.PreInvoiceID+"&sTitle=SQ. No:"+oPreInvoice.SQNo+"|| Invoice No:"+oPreInvoice.InvoiceNo;
                }
            }, $scope.gridOptions.data);
            
        }

        $scope.PrintWarrantyPreview= function ()
        {
            debugger;
            var oPreInvoice = $scope.gridApi.selection.getSelectedRows()[0];

            if(oPreInvoice.PreInvoiceID<=0)
            {
                alert("Please Select A Valid Item !!"); return;
            }
            
            window.open(sessionStorage.getItem('BaseAddress') + '/PreInvoice/PreviewPreInvoiceWarranty?id='+oPreInvoice.PreInvoiceID);
        };

        $scope.PrintPreview = function ()
        {
            debugger;
            //var oPreInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            //if(oPreInvoice==null || oPreInvoice.PreInvoiceID<=0)
            //{
            //    alert("Please select a item from list!");
            //    return;
            //}
            //window.open(sessionStorage.getItem('BaseAddress') + '/PreInvoice/PreviewPreInvoice?id='+oPreInvoice.PreInvoiceID);

            var oPreInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oPreInvoice==null || oPreInvoice.PreInvoiceID<=0)
            {
                alert("Please select a item from list!");
                return;
            }

            var modalInstance = $uibModal.open({
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'md',
                templateUrl: 'PreInvoicePreview.html',
                controller: 'PreInvoicePreviewCtrl',
                controllerAs: 'PreInvoicePreviewCtrl',
                resolve: {
                    obj: function () {
                        return { value:oPreInvoice, Operation: 'Print'  };
                    }
                }
            });

            modalInstance.result.then(function (result) {
                debugger;
                if(result.PreInvoiceID>0)
                {
                    debugger;
                    var index=sessionStorage.getItem('SelectedRowIndex');
                    //$scope.IsMeter=result.IsMeter;
                    //$scope.IsYard=result.IsYard;
                    //console.log(result);
                    //$scope.FirstTerm = 'Purchase order at the time of booking and order confirmation.';
                    //$scope.SecondTerm = 'Remaining balance payment shall be made before registration.';
                }
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });

        };

       
        $scope.PrintChallan = function ()
        {
            debugger;
            var oPreInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oPreInvoice==null || oPreInvoice.PreInvoiceID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(sessionStorage.getItem('BaseAddress') + '/PreInvoice/PreInvoiceChallan?id='+oPreInvoice.PreInvoiceID);
        };

        
        $scope.Delete= function ()
        {
            debugger;
            var oPreInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oPreInvoice==null || oPreInvoice.PreInvoiceID<=0)
            {
                alert("Please Select an item from list");
                return;
            }

            if (!confirm("Confirm to Delete?")) return ;
            $http.post(sessionStorage.getItem('BaseAddress')+'/PreInvoice/Delete', JSON.stringify(oPreInvoice)).then(
                            function (response) {
                                debugger;
                                if (jQuery.parseJSON(response.data) == 'Deleted') {
                                    angular.forEach($scope.gridOptions.data, function (value, index)
                                    {
                                        if (value.PreInvoiceID == oPreInvoice.PreInvoiceID)
                                        {
                                            alert("Successfully Deleted.");
                                            $scope.gridOptions.data.splice(index, 1);
                                        }
                                    }, $scope.gridOptions.data);
                                }
                                else {
                                    alert(jQuery.parseJSON(response.data));
                                }
                            },
                            function (response) { alert(jQuery.parseJSON(response.data)); }
                        );

        };
        $scope.close = function()
        {
            window.location.href =sessionStorage.getItem("BackLink");
        }

        //button hide
        $scope.btnAdd = $scope.btnEdit = $scope.btnDetails = $scope.btnCopy = $scope.btnDelete =  $scope.btnPriview =$scope.btnApprove =$scope.btnWarranty = false;
        //button show
        if(PermissionChecker('Add','PreInvoice',oAuthorizationRolesMapping)){$scope.btnAdd = true; }
        if(PermissionChecker('Edit','PreInvoice',oAuthorizationRolesMapping)){$scope.btnEdit = true;}
        if(PermissionChecker('View','PreInvoice',oAuthorizationRolesMapping)){$scope.btnView = true;}
        if(PermissionChecker('Copy','PreInvoice',oAuthorizationRolesMapping)){$scope.btnCopy = true;}
        if(PermissionChecker('Delete','PreInvoice',oAuthorizationRolesMapping)){$scope.btnDelete = true;}
        if(PermissionChecker('Preview','PreInvoice',oAuthorizationRolesMapping)){$scope.btnPriview = true;}
        if(PermissionChecker('Approved','PreInvoice',oAuthorizationRolesMapping)){$scope.btnApprove = true;}
        if(PermissionChecker('Preview','PreInvoice',oAuthorizationRolesMapping)){$scope.btnWarranty = true;}
        
        $scope.CheckControll=function ()
        {
            debugger;
            if($scope.btnAdd == true  && !PermissionChecker('Add','PreInvoice',oAuthorizationRolesMapping))
            {$scope.btnAdd = false; } 
            if($scope.btnEdit == true && !PermissionChecker('Edit','PreInvoice',oAuthorizationRolesMapping))
            {$scope.btnEdit = false;$scope.btnUpdate = true;}  
            if($scope.btnView == true && !PermissionChecker('View','PreInvoice',oAuthorizationRolesMapping))
            {$scope.btnView = false;}  
            if($scope.btnApprove == true && !PermissionChecker('Approved','PreInvoice',oAuthorizationRolesMapping))
            {$scope.btnApprove = false;}  
            if($scope.btnDelete == true && !PermissionChecker('Delete','PreInvoice',oAuthorizationRolesMapping))
            {$scope.btnDelete = false;}  
            if($scope.btnIssue == true && !PermissionChecker('Issued','PreInvoice',oAuthorizationRolesMapping))
            {$scope.btnIssue = false;} 
            if($scope.btnReceive == true && !PermissionChecker('Received','PreInvoice',oAuthorizationRolesMapping))
            {$scope.btnReceive = false;}  
            if($scope.btnDelivered == true && !PermissionChecker('Received','PreInvoice',oAuthorizationRolesMapping))
            {$scope.btnReceive = false;}  
            if($scope.btnUndoApprove == true && !PermissionChecker('UndoRequest','PreInvoice',oAuthorizationRolesMapping))
            {$scope.btnUndoApprove = false;}  
            if($scope.btnCancel == true && !PermissionChecker('Cancel','PreInvoice',oAuthorizationRolesMapping))
            {$scope.btnCancel = false;} 

            if(PermissionChecker('Add','PreInvoice',oAuthorizationRolesMapping)){$scope.btnAdd = true; }
            if(PermissionChecker('Preview','PreInvoice',oAuthorizationRolesMapping)){$scope.btnPriview = true;}
            if(PermissionChecker('Print','PreInvoice',oAuthorizationRolesMapping)){$scope.btnPrintList = true;}
            if(PermissionChecker('Preview','PreInvoice',oAuthorizationRolesMapping)){$scope.btnWarranty = true;}
        }
        
    });

    CInvoiceapp.controller('HandoverCheckListCtrl', function ($scope, $http, $uibModalInstance, uiGridConstants, msModal, obj) 
    {
        $(document).on('mousemove', '.modal-body', function () {
            $('.date-container').datepicker({
                format: "dd M yyyy",
                calendarWeeks: true,
                autoclose: true,
                todayHighlight: true
            });
            $(".number-int").icsNumberField({ min: 0,precision: 0 });
            $(".number-precision").icsNumberField({ min: 0,precision: 2 });
        });
        debugger;
        $scope.Operation=obj.Operation;
        $scope.PreInvoice = obj.value;
        if(obj.value!=undefined)
        {
            $scope.PreInvoice.HandoverDateST = obj.value.HandoverDateST; //new Date(obj.value.HandoverDateST);//;
            $scope.PreInvoice.VehicleMileage = obj.value.VehicleMileage;
            $scope.PreInvoice.WheelCondition = (obj.value.WheelCondition == null || obj.value.WheelCondition == '') ? "New":obj.value.WheelCondition;
            $scope.PreInvoice.BodyWorkCondition = (obj.value.BodyWorkCondition == null || obj.value.BodyWorkCondition == '') ? "New":obj.value.BodyWorkCondition;
            $scope.PreInvoice.InteriorCondition = (obj.value.InteriorCondition == null || obj.value.InteriorCondition == '') ? "New":obj.value.InteriorCondition;
            $scope.PreInvoice.DealerPerson = (obj.value.DealerPerson == null || obj.value.DealerPerson == '') ? obj.value.MarketingAccountName:obj.value.DealerPerson;
            $scope.PreInvoice.Owner = (obj.value.Owner == null || obj.value.Owner == '') ? obj.value.CustomerName:obj.value.Owner;
            $scope.PreInvoice.OwnerNID = obj.value.OwnerNID;
            $scope.PreInvoice.Note = obj.value.Note;
        }

        $scope.UpdatePreInvoice= function ()
        {
            if($scope.PreInvoice.PreInvoiceID<=0)
            {
                alert("Please Select A Valid Item !!"); return;
            }
            
            if($scope.PreInvoice.HandoverDateST == '' || $scope.PreInvoice.HandoverDateST == null)
            {
                alert("Please Select A Valid Date !!"); return;
            }
            //$scope.PrintPreInvoice();
            debugger;
            window.open(sessionStorage.getItem('BaseAddress') + '/PreInvoice/PrintHandoverCheckList?id='+$scope.PreInvoice.PreInvoiceID+'&dHandoverDate='+$scope.PreInvoice.HandoverDateST+'&nVehicleMileage='+$scope.PreInvoice.VehicleMileage+'&sWheelCondition='+$scope.PreInvoice.WheelCondition+'&sBodyWorkCondition='+$scope.PreInvoice.BodyWorkCondition+'&sInteriorCondition='+$scope.PreInvoice.InteriorCondition+'&sDealerPerson='+$scope.PreInvoice.DealerPerson+'&sOwner='+$scope.PreInvoice.Owner+'&sOwnerNID='+$scope.PreInvoice.OwnerNID+'&sNote='+$scope.PreInvoice.Note);
        };

        //$scope.PrintPreInvoice= function ()
        //{
        //    if($scope.PreInvoice.PreInvoiceID<=0)
        //    {
        //        alert("Please Select A Valid Item !!"); return;
        //    }
        //    window.open(sessionStorage.getItem('BaseAddress') + '/PreInvoice/PreviewPreInvoice?id='+oPreInvoice.PreInvoiceID);

            
        //};

        //$scope.PreInvoice = function ()
        //{
        //    window.open(sessionStorage.getItem('BaseAddress') + '/PreInvoice/PrintHandoverCheckList?id='+$scope.PreInvoice.PreInvoiceID);
        //};

        $scope.cancel= function () {
            $uibModalInstance.close($scope.PreInvoice);
        };
    });

    CInvoiceapp.controller('PreInvoicePreviewCtrl', function ($scope, $http, $uibModalInstance, uiGridConstants, msModal, obj) 
    {
        debugger;
        $scope.Operation=obj.Operation;
        $scope.PreInvoice = obj.value; 
        $scope.FirstTerm = "Purchase order at the time of booking and order confirmation.";
        $scope.SecondTerm = "Remaining balance payment shall be made before registration.";
        //if(obj.value!=undefined)
        //{
           
        //}

        $scope.PrintPreInvoice= function ()
        {
            debugger;
            if($scope.PreInvoice.PreInvoiceID<=0)
            {
                alert("Please Select A Valid Item !!"); return;
            }
            if($scope.FirstTerm == null || $scope.FirstTerm == ''){
                alert("Please enter First term!!");
                return;
            }
            if($scope.SecondTerm == null || $scope.SecondTerm == ''){
                alert("Please enter SecondTerm term!!");
                return;
            }
            window.open(sessionStorage.getItem('BaseAddress') + '/PreInvoice/PreviewPreInvoice?id='+$scope.PreInvoice.PreInvoiceID+'&sFirstTerm='+$scope.FirstTerm+'&sSecondTerm='+$scope.SecondTerm);
        };

        

        //$scope.PreInvoice = function ()
        //{
        //    window.open(sessionStorage.getItem('BaseAddress') + '/PreInvoice/PrintHandoverCheckList?id='+$scope.PreInvoice.PreInvoiceID);
        //};

        $scope.cancelPrintPreInvoice= function () {
            $uibModalInstance.close();
        };
    });

</script>
