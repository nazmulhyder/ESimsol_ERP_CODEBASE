@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "FN Treatment Sub Process";    
}
@model IEnumerable <ESimSol.BusinessObjects.FNTreatmentSubProcess>
    <div ng-app="mainApp">
        <div ng-controller="mainController">
            <div>
                <fieldset>
                    <label style="margin:0 auto">Treatment Process: {{FNTreatmentProcess.FNProcess}}</label>
                </fieldset>
            </div>
            <div class="col-md-12">
                <div class="form-inline" style="padding:2px">
                    <div class="input-group">
                        <input ng-model="SubProcessName" class="form-control" placeholder="Type Sub Process Name" required />
                    </div>
                    <button type="button" class="btn btn-sm btn-success" aria-label="Left Align" ng-click="AddSubProcess()"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>Add</button>
                    <button type="button" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="Delete($entity)"> <span class="glyphicon glyphicon-minus" aria-hidden="true"></span> Delete</button>
                </div>
                <div ui-grid="gridOptions1" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="grid-angular ui-grid-selectable"></div>
            </div>
            <fieldset>
                <legend>Action</legend>
                <button type="button" style="float:right" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="Close()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Close</button>
            </fieldset>
        </div>
    </div>

    <style type="text/css">
        .form-control {
            height: 26px;
            padding: 0px 6px;
            font-size: 12px;
        }

        .ui-grid-top-panel .btn-sm, .input-group-addon {
            padding: 3px 3px;
        }

        .grid-angular {
            height: 430px;
            width: 100%;
        }

        .custom-pagination {
            margin-top: -15px;
            margin-bottom: -15px;
        }

        .spacing {
            padding-bottom: 5px;
        }
    </style>

    <script type="text/javascript">
    var _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oFNTreatmentProcessList =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oFNTreatmentProcess =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FNTreatmentProcess));

    debugger;
    var  mainAppModule = angular.module('mainApp', ['ngAnimate', 'ui.bootstrap', 'ui.grid','ui.grid.selection', 'ui.grid.cellNav','ui.grid.resizeColumns','ms.service','ui.grid.edit']);
    mainAppModule.controller('mainController', function ($scope, $http, $uibModal,$interval,$timeout,  $log, uiGridConstants, msModal, userSession) {

        $scope.FNTreatmentSubProcessList = oFNTreatmentProcessList;
        $scope.FNTreatmentProcess=oFNTreatmentProcess;

        $scope.gridOptions1 ={
            enableFullRowSelection: true,
            multiSelect: false,
            enableCellEdit:false,
            enableColumnResizing: true,
            noUnselect : true,
            enableRowSelection: true,
            enableRowHeaderSelection: false,
            showColumnFooter: false,
            columnDefs: [
                { field: 'SubProcessName', name: 'Sub Process Name', width: '40%',  cellClass: 'text-left',enableCellEdit:false   },
                { field: 'FNProcess', name: 'Process', width: '25%',  cellClass: 'text-left',enableCellEdit:false   },
                { field: 'Code', name: 'Code', width: '20%',  cellClass: 'text-left',enableCellEdit:false   },
                //{name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},              
                //{ field: 'TestMethod', name: 'TestMethod', width: '15%',  cellClass: 'text-left',enableCellEdit:true   },
                //{ field: 'SubName', name: 'Requirements', width: '15%',  cellClass: 'text-left',enableCellEdit:true   },
                //{ field: 'LastUpdateByName', name: 'Last Updated By', width: '12%',  cellClass: 'text-left',enableCellEdit:false   },
            ],
            data:oFNTreatmentProcessList,
            onRegisterApi:function(gridApi)
            {
                $scope.gridApi = gridApi;
                ////----------------On CLick Save------------------------//
                //gridApi.edit.on.afterCellEdit($scope,
                //    function (rowEntity, colDef, newValue, oldValue)
                //    {
                //        $scope.SaveSetupList();
                //        return rowEntity;
                //    });
                ////---------------- End On CLick Save------------------------//
            }
        };
        $scope.AddSubProcess = function ()
        {
            //var data=$scope.gridApi.selection.getSelectedRows()[0];
            //var nIndex = $scope.gridOptions1.data.indexOf(data);
            var data = {
                FNTreatmentSubProcessID : 0,
                FNTPID : $scope.FNTreatmentProcess.FNTPID,
                SubProcessName : $scope.SubProcessName
            }
            debugger;
            $http.post(sessionStorage.getItem('BaseAddress')+'/FNTreatmentProcess/SaveSubProcess',data).then(
                  function (response)
                  {
                      debugger;
                      var oFNSubProcess = JSON.parse(response.data)
                      if (oFNSubProcess.ErrorMessage=="" || oFNSubProcess.ErrorMessage==null)
                      {
                          msModal.Message({headerTitle : '', bodyText:'Save Successfully!!', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                          //$scope.gridOptions1.data[nIndex]=oFNQCResultSetup;
                          $scope.SubProcessName="";
                          $scope.gridOptions1.data.push(oFNSubProcess);
                      }
                      else
                      {
                          alert(oFNSubProcess.ErrorMessage);
                      }
                  },
                      function (response) { alert(jQuery.parseJSON(response.data).Message);}
              );
        }
        $scope.Delete = function () {
            debugger;
            var oFNSubProcess=$scope.gridApi.selection.getSelectedRows()[0];
            if(oFNSubProcess==null || oFNSubProcess.FNTreatmentSubProcessID<=0)
            {
                msModal.Message({headerTitle : '', bodyText:'No item found to delete.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            var SelectedRowIndex=$scope.gridOptions1.data.indexOf(oFNSubProcess);
            if (!confirm("Confirm to Delete?")) return ;
            $http.post(_sBaseAddress+ '/FNTreatmentProcess/DeleteSubProcess',JSON.stringify(oFNSubProcess)).then(
                            function (response) {
                                var sMessage= jQuery.parseJSON(response.data).toLowerCase();
                                debugger;
                                if(sMessage=='deleted')
                                {
                                    alert("Successfully Deleted.");
                                    $scope.gridOptions1.data.splice(SelectedRowIndex,1);
                                }
                                else{
                                    alert(sMessage);
                                    //msModal.Message({headerTitle : '', bodyText:result[0].ErrorMessage, sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                                }
                            },
                            function (response) {alert(jQuery.parseJSON(response.data));}
                        );

        };
        $scope.Close = function(e)
        {
            window.close();
        }

    });

    </script>











