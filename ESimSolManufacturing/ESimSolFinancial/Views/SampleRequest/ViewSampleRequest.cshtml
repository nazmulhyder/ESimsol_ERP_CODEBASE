<html>
<head>
    @{
        ViewBag.Title = "Sample Request";
    }
</head>
<body>
    @model ESimSol.BusinessObjects.SampleRequest
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div class="menuMainCollectionTable">
        <div id="MainDiv" class="easyui-panel" title="Sample Request" style="font-family:Tahoma;height:90%">
            <fieldset>
                <legend>Sample Request Info</legend>
                <table style="width:100%;">
                    <tr>
                        <td class="align-right" style="width:10%">Request No</td>
                        <td style="width:20%">
                            @Html.TextBoxFor(model => model.RequestNo, new { style = "width: 97%;", id = "txtRequestNo", disabled = "true" })
                        </td>
                        <td class="align-right" style="width:10%">Request Date</td>
                        <td style="width:20%">
                            <input type="text" style="width:200px;" id="txtRequestDate" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                        <td class="align-right" style="width:15%">Type</td>
                        <td style="width:25%">
                            <select id="cboType" style="width:99%;height:22px;"></select>
                        </td>
                    </tr>

                    <tr>
                        <td class="align-right" style="width:10%">Party:</td>
                        <td style="width:50%" colspan="3">
                            @Html.TextBoxFor(model => model.ContractorName, new { onkeydown = "PartyKeyDown(event);", style = "width:80%;", id = "txtParty", @placeholder = "" })
                            <input type="button" id="btnParty" onclick="PickParty()" style="width:18%;float:right;" value="Pick" />
                        </td>
                        @*<td class="align-right" style="width:10%">Store</td>
                        <td style="width:20%">
                            <select id="cboStore" style="width:100%"></select>
                        </td>*@
                        <td class="align-right" style="width:15%">Contact Person</td>
                        <td width="25%">
                            @Html.TextBoxFor(model => model.ContactPersonName, new { onkeydown = "ContactPersonKeyDown(event);", style = "width: 80%;", id = "txtContactPerson", @placeholder = "", @class = "cls-txt" })
                            <input type="button" id="btnParty" onclick="PickContactPerson()" style="width:18%;float:right;" value="Pick" />
                        </td>
                    </tr>
                    <tr>
                        <td class="align-right" style="width:10%">Request By:</td>
                        <td style="width:20%">
                            @Html.TextBoxFor(model => model.RequestByName, new { onkeydown = "RequestByKeyDown(event);", style = "width:80%;", id = "txtRequestBy", @placeholder = "" })
                            <input type="button" id="btnRequestBy" onclick="PickRequestBy()" style="width:18%;float:right;" value="Pick" />
                        </td>
                        <td class="align-right" style="width:10%">Request To:</td>
                        <td style="width:20%">
                            @Html.TextBoxFor(model => model.RequestToName, new { onkeydown = "RequestToKeyDown(event);", style = "width:80%;", id = "txtRequestTo", @placeholder = "" })
                            <input type="button" id="btnRequestTo" onclick="PickRequestTo()" style="width:18%;float:right;" value="Pick" />
                        </td>
                        <td class="align-right" style="width:15%">Remarks:</td>
                        <td width="25%">
                            @Html.TextBoxFor(model => model.Remarks, new { style = "width: 100%;", id = "txtRemarks", @placeholder = "", @class = "cls-txt" })

                        </td>
                    </tr>

                </table>
            </fieldset>
            <table id="tblSampleRequestDetail" title="Sample Request Details" class="easyui-datagrid" style="height:367px; width:100%;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar">
                <thead>
                    <tr>
                        <th field="ProductName" width="20%" align="left">Product Name</th>
                        <th field="ProductCode" width="15%" align="left">Product Code</th>
                        <th field="ColorName" width="15%" align="left">Color</th>
                        <th field="MUnitName" width="15%" align="left">M. Unit</th>
                        <th field="Quantity" width="15%" align="right">Quantity</th>
                        <th field="Remarks" width="20%" align="left">Remarks</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbar">
                Product : <input type="text" id="txtProduct" style="width:130px;" onkeydown="ProductKeyDown(event)" />
                <input type="button" id="btnProduct" style="width:45px;" onclick="PickProduct()" value="Pick" />
                Color : <input type="text" id="txtColor" style="width:130px;" onkeydown="ColorKeyDown(event)" />
                <input type="button" id="btnColor" style="width:45px;" onclick="PickColor()" value="Pick" />
                Unit : <select id="cboUnit" style="width:100px;height:22px;"></select>
                Qty : <input type="number" id="txtQty" style="width:70px;" />
                Remarks:<input type="text" id="txtRemarksDetails" />
                <a id="btnAddDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                <a id="btnRemoveDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                <a id="btnRefreshDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>

            </div>
        </div>
        <fieldset style="height:10%">
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                <tr>
                    <td style="width:60%; text-align:right"></td>
                    <td style="width:40%;text-align:right;">
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" onclick="Close()" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>
<style type="text/css">
    td, th {
        padding: 2px;
    }
</style>
<script type="text/javascript">
    var _sBaseAddress = "";
    var _oSampleRequest = [];
    var TypeList = [];
    var Units = [];
    var _oSampleRequestDetails = [];
    $(document).ready(function () {
        debugger;
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oSampleRequest =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        TypeList = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.EnumType));
        Units = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Units));
        if(sessionStorage.getItem('Action')=='View')
        {
            $('#tblSampleRequestDetail').data("GridEditable",false);
            $('#btnSave, #toolbar').hide();
        }
        debugger;
        if(parseInt(_oSampleRequest.SampleRequestID)>0)
        {
            $('#txtPINo, #txtContractorName').addClass('fontColorOfPickItem');
            _oSampleRequestDetails = _oSampleRequest.SampleRequestDetails;
            RefreshList(_oSampleRequestDetails);
        }

        LoadType();
       
        //LoadUnits();

        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();

        $('#txtRequestDate').datebox('setValue',_oSampleRequest.RequestDateInString);
        $("#MainDiv").data("ContractorID",0);
        $("#MainDiv").data("ContactPersonnel",0);
        $("#MainDiv").data("RequestByUserID",0);
        $("#MainDiv").data("RequestToUserID",0);
        $("#MainDiv").data("ProductID",0);
        $("#MainDiv").data("ColorID",0);
    });

    function LoadType(){
        $("#cboType").icsLoadCombo({
            List:TypeList,
            OptionValue: "id",
            DisplayText: "Value",

        });
        $('#cboType').val(_oSampleRequest.RequestType);
    }
    function LoadUnits(){
        $("#cboUnit").icsLoadCombo({
            List:Units,
            OptionValue: "MeasurementUnitID",
            DisplayText: "UnitName",

        });
        //$('#cboType').val(_oSampleRequest.RequestType);
    }

    function PartyKeyDown(event) {
        //return;
        if (event.which == 13) {
            var oTxtName=$("#txtParty").val();
            if (oTxtName != null) {
                PickParty(oTxtName);
            }
        }
        if (event.which == 8) {
            txtParty.style.color="Black";
            _oSampleRequest.ContractorID = 0;
        }

    }

    function PickParty(oTxtName)
    {
        if($("#txtParty").val()==null|| $("#txtParty").val()=="")
        {
            alert("Enter a Party Name");
            return;
        }
        var oStyleSearch = {
            Params: '2,3' + '~' + $.trim($("#txtParty").val()+"~"+0)
        };//
        console.log(oStyleSearch);
        debugger;
        var obj = {
            BaseAddress:_sBaseAddress,
            Object: (oStyleSearch) ,
            ControllerName: "Contractor", //TechnicalSheet
            ActionName: "ContractorSearchByNameType",//ViewStyleSearch
            IsWinClose: false
        };
        var tblColums = []; var oColumn = []; var oColumn = { field: "ContractorID", title: "Code", width: 50, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Name", title: "Name", width: 280, align: "left" }; tblColums.push(oColumn);
        DynamicPiker('Contactor',obj,tblColums,false,'Name','ContractorID',500); //pickerName(unique),obj,table,multiReturn,SearchingField, pkID
    }

    function SetParty(oSelectedStyle) {
        debugger;
        console.log(document.getElementById("txtParty").innerHTML);
        document.getElementById("txtParty").value = oSelectedStyle.Name;
        txtParty.style.color="Blue";
        //var text = "";
        //var len = oSelectedStyle.length;
        //for (var i = 0; i < len; i++) {

        //    text += oSelectedStyle[i].ModuleName;
        //}
        //document.getElementById("txtModuleName").innerHTML = text;
        $("#MainDiv").data("ContractorID",oSelectedStyle.ContractorID);

        document.getElementById("txtContactPerson").value = "";
        $("#MainDiv").data("ContactPersonnel",0);
        _oSampleRequest.ContractorID = oSelectedStyle.ContractorID;
        _oSampleRequest.ContactPersonID = 0;
    }


    function ContactPersonKeyDown(event) {
        //return;
        if (event.which == 13) {
            var oTxtName=$("#txtContactPerson").val();
            if (oTxtName != null) {
                PickContactPerson(oTxtName);
            }
        }
        if (event.which == 8) {
            txtContactPerson.style.color="Black";
            _oSampleRequest.ContactPersonID = 0;
        }
    }

    function PickContactPerson(oTxtName)
    {
        var oStyleSearch = {
            ContractorID: $("#MainDiv").data("ContractorID"),
            Name: $("#txtContactPerson").val()
        };//
        console.log(oStyleSearch);
        debugger;
        var obj = {
            BaseAddress:_sBaseAddress,
            Object: (oStyleSearch) ,
            ControllerName: "ContractorPersonal", //TechnicalSheet
            ActionName: "GetByContractorPerson",//ViewStyleSearch
            IsWinClose: false
        };
        var tblColums = []; var oColumn = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
        //oColumn = { field: "Name", title: "Name", width: 280, align: "left" }; tblColums.push(oColumn);
        DynamicPiker('ContactPerson',obj,tblColums,false,'Name','ContactPersonnelID',400); //pickerName(unique),obj,table,multiReturn,SearchingField, pkID
    }

    function SetContactPerson(oSelectedStyle) {
        debugger;
        console.log(document.getElementById("txtContactPerson").innerHTML);
        document.getElementById("txtContactPerson").value = oSelectedStyle.Name;
        $("#MainDiv").data("ContactPersonnel",oSelectedStyle.ContactPersonnelID);
        _oSampleRequest.ContactPersonID = oSelectedStyle.ContactPersonnelID;
        txtContactPerson.style.color="Blue";
    }


    function RequestByKeyDown(event) {
        //return;
        if (event.which == 13) {
            var oTxtName=$("#txtRequestBy").val();
            if (oTxtName != null) {
                PickRequestBy(oTxtName);
            }
        }
        if (event.which == 8) {
            txtRequestBy.style.color="Black";
            _oSampleRequest.RequestBy = 0;
        }
    }

    function PickRequestBy(oTxtName)
    {
        var oStyleSearch = {
            UserName:$("#txtRequestBy").val(),
            EmployeeID: '9' //EmployeeType
        };
        
        console.log(oStyleSearch);
        debugger;
        var obj = {
            BaseAddress:_sBaseAddress,
            Object: (oStyleSearch) ,
            ControllerName: "User", //TechnicalSheet
            ActionName: "GetByEmployeeType",//ViewStyleSearch
            IsWinClose: false
        };
        var tblColums = []; var oColumn = []; var oColumn = { field: "UserName", title: "User Name", width: 200, align: "left" }; tblColums.push(oColumn);
        //oColumn = { field: "Name", title: "Name", width: 280, align: "left" }; tblColums.push(oColumn);
        DynamicPiker('User',obj,tblColums,false,'UserName','UserID',400); //pickerName(unique),obj,table,multiReturn,SearchingField, pkID
    }

    function SetRequestBy(oSelectedStyle) {
        debugger;
        console.log(document.getElementById("txtRequestBy").innerHTML);
        document.getElementById("txtRequestBy").value = oSelectedStyle.UserName;
        //var text = "";
        //var len = oSelectedStyle.length;
        //for (var i = 0; i < len; i++) {

        //    text += oSelectedStyle[i].ModuleName;
        //}
        //document.getElementById("txtModuleName").innerHTML = text;
        $("#MainDiv").data("RequestByUserID",oSelectedStyle.UserID);
        _oSampleRequest.RequestBy = oSelectedStyle.UserID;
        txtRequestBy.style.color="Blue";
    }


    function RequestToKeyDown(event) {
        //return;
        if (event.which == 13) {
            var oTxtName=$("#txtRequestTo").val();
            if (oTxtName != null) {
                PickRequestTo(oTxtName);
            }
        }
        if (event.which == 8) {
            txtRequestTo.style.color="Black";
            _oSampleRequest.RequestTo = 0;
        }
    }

    function PickRequestTo(oTxtName)
    {
        var oStyleSearch = {
            UserName:$("#txtRequestTo").val(),
            EmployeeID: '2'  //EmployeeType
        };
        
        console.log(oStyleSearch);
        debugger;
        var obj = {
            BaseAddress:_sBaseAddress,
            Object: (oStyleSearch) ,
            ControllerName: "User", //TechnicalSheet
            ActionName: "GetByEmployeeType",//ViewStyleSearch
            IsWinClose: false
        };
        var tblColums = []; var oColumn = []; var oColumn = { field: "UserName", title: "User Name", width: 200, align: "left" }; tblColums.push(oColumn);
        //oColumn = { field: "Name", title: "Name", width: 280, align: "left" }; tblColums.push(oColumn);
        DynamicPiker('RequestedUser',obj,tblColums,false,'UserName','UserID',400); //pickerName(unique),obj,table,multiReturn,SearchingField, pkID
    }

    function SetRequestTo(oSelectedStyle) {
        debugger;
        console.log(document.getElementById("txtRequestTo").innerHTML);
        document.getElementById("txtRequestTo").value = oSelectedStyle.UserName;
        //var text = "";
        //var len = oSelectedStyle.length;
        //for (var i = 0; i < len; i++) {

        //    text += oSelectedStyle[i].ModuleName;
        //}
        //document.getElementById("txtModuleName").innerHTML = text;
        $("#MainDiv").data("RequestToUserID",oSelectedStyle.UserID);
        _oSampleRequest.RequestTo = oSelectedStyle.UserID;
        txtRequestTo.style.color="Blue";
    }


    function ProductKeyDown(event) {
        //return;
        if (event.which == 13) {
            var oTxtName=$("#txtProduct").val();
            if (oTxtName != null) {
                PickProduct(oTxtName);
            }
        }
        if (event.which == 8) {
            txtProduct.style.color="Black";
        }
    }

    function PickProduct(oTxtName)
    {
        debugger;
        var oStyleSearch = {
            BUID:_oSampleRequest.BUID,
            ProductName: $("#txtProduct").val()
        };
        
        console.log(oStyleSearch);
        debugger;
        var obj = {
            BaseAddress:_sBaseAddress,
            Object: (oStyleSearch) ,
            ControllerName: "Product", //TechnicalSheet
            ActionName: "SearchByProductBUWise",//ViewStyleSearch
            IsWinClose: false
        };
        var tblColums = []; var oColumn = []; var oColumn = { field: "ProductName", title: "Product Name", width: 150, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "ProductCode", title: "Code", width: 150, align: "left" }; tblColums.push(oColumn);
        DynamicPiker('Product',obj,tblColums,false,'ProductName','ProductID',500); //pickerName(unique),obj,table,multiReturn,SearchingField, pkID
    }

    function SetProduct(oSelectedStyle) {
        debugger;
        console.log(document.getElementById("txtProduct").innerHTML);
        document.getElementById("txtProduct").value = oSelectedStyle.ProductName;
        //var text = "";
        //var len = oSelectedStyle.length;
        //for (var i = 0; i < len; i++) {

        //    text += oSelectedStyle[i].ModuleName;
        //}
        //document.getElementById("txtModuleName").innerHTML = text;
        $("#MainDiv").data("ProductID",oSelectedStyle.ProductID);
        $("#MainDiv").data("ProductCode",oSelectedStyle.ProductCode);
        txtProduct.style.color="Blue";
        LoadUnit(oSelectedStyle);
       
    }
    function LoadUnit(Product)
    {
        debugger;
        $('#cboUnit').empty();
        var listItems= "<option value='"+0+"'>" +"--Select Unit--" + "</option>";
        if (Product!=null)
        {

            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+"/MeasurementUnit/GetsMUnits",
                data: JSON.stringify(Product),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //debugger;
                    oMeasurementUnits = jQuery.parseJSON(data);
                    if (oMeasurementUnits.length>0)
                    {

                        for (var i = 0; i < oMeasurementUnits.length; i++) {
                            listItems += "<option value='" + oMeasurementUnits[i].MeasurementUnitID+"'>" + oMeasurementUnits[i].Symbol+"</option>";
                        }
                        $("#cboUnit").html(listItems);
                        $("#cboUnit").val(_nUnitID);
                        
                    }
                    else
                    {

                        $("#cboUnit").html(listItems);
                        
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });

        }
        $("#cboUnit").html(listItems);
        
    }

    function ColorKeyDown(event) {
        //return;
        if (event.which == 13) {
            var oTxtName=$("#txtColor").val();
            if (oTxtName != null) {
                PickColor(oTxtName);
            }
        }
        if (event.which == 8) {
            txtColor.style.color="Black";
        }
    }

    function PickColor(oTxtName)
    {
        var oStyleSearch = {
            ColorName:$("#txtColor").val()
            
        };
        
        console.log(oStyleSearch);
        debugger;
        var obj = {
            BaseAddress:_sBaseAddress,
            Object: (oStyleSearch) ,
            ControllerName: "ColorCategory", //TechnicalSheet
            ActionName: "getColorByColorName",//ViewStyleSearch
            IsWinClose: false
        };
        var tblColums = []; var oColumn = []; var oColumn = { field: "ColorName", title: "Color Name", width: 200, align: "left" }; tblColums.push(oColumn);
        //oColumn = { field: "Name", title: "Name", width: 280, align: "left" }; tblColums.push(oColumn);
        DynamicPiker('Color',obj,tblColums,false,'ColorName','ColorCategoryID',400); //pickerName(unique),obj,table,multiReturn,SearchingField, pkID
    }

    function SetColor(oSelectedStyle) {
        debugger;
        console.log(document.getElementById("txtColor").innerHTML);
        document.getElementById("txtColor").value = oSelectedStyle.ColorName;
        $("#MainDiv").data("ColorID",oSelectedStyle.ColorCategoryID);
        txtColor.style.color="Blue";
    }


    function SetPickerValueAssign(oPickerobj)
    {
        debugger;
        var oResult;
        if (oPickerobj.multiplereturn)
        {
            oResult = $('#'+oPickerobj.tableid).datagrid('getChecked');
        }
        else
        {
            oResult = $('#'+oPickerobj.tableid).datagrid('getSelected');
        }


        if (oPickerobj.winid == 'winContactor')
        {
            SetParty(oResult);
        }
        else if (oPickerobj.winid == 'winUser')
        {
            SetRequestBy(oResult);
        }
        else if (oPickerobj.winid == 'winRequestedUser')
        {
            SetRequestTo(oResult);
        }
        else if (oPickerobj.winid == 'winProduct')
        {
            SetProduct(oResult);
        }
        else if (oPickerobj.winid == 'winColor')
        {
            SetColor(oResult);
        }
        else if (oPickerobj.winid == 'winContactPerson')
        {
            SetContactPerson(oResult);
        }

        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
    }

    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 90){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    ////
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }
    /////
    function DynamicPiker(pickerName,obj,pTblColums,pMultiReturn,pSearchField,pID,nWidth)
    {
        debugger;
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        setInterval(updateProgress,250);

        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0][pID] > 0) {
                    debugger;
                    var tblColums = pTblColums;
                    var oPickerParam = {
                        winid: 'win'+pickerName,
                        winclass: 'cls'+pickerName,
                        winwidth: nWidth,
                        winheight: 460,
                        tableid: 'tbl'+pickerName+'s',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: pMultiReturn,
                        searchingbyfieldName: pSearchField,
                        windowTittle: pickerName+' List',
                        colsable:true
                    };
                    $.icsPicker(oPickerParam);
                    $("#progressbar").progressbar({ value: 0 });//hide
                    $("#progressbarParent").hide();
                    IntializePickerbutton(oPickerParam);
                }
                else { 
                    alert(response.objs[0].ErrorMessage);
                    $("#progressbar").progressbar({ value: 0 });//hide
                    $("#progressbarParent").hide();
                }
            }
            else{
                alert("Data Not Found.");
                $("#progressbar").progressbar({ value: 0 });//hide
                $("#progressbarParent").hide();
                return;
            }
        });
    }
    ////
    function IntializePickerbutton(oPickerobj) {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            debugger;
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);
            }
        });
    }


    function RefreshList(oSampleRequestDetails)
    {
        debugger;
        var data=oSampleRequestDetails;
        data={"total":""+data.length+"","rows":data};
        $('#tblSampleRequestDetail').datagrid('loadData',data);
    }


    function Validation(){

        if(parseInt(sessionStorage.getItem("BUID"))<=0)
        {
            alert('No business unit found.');
            return false;
        }

        if($("#txtRequestDate").datebox('getValue') == '' || $("#txtRequestDate").datebox('getValue') == null){
            alert('Please Enter Request date!!');
            $("#txtRequestDate").focus();
            return false;
        }

        if(parseInt($("#cboType").val())<=0)
        {
            $('#cboType').focus();
            alert("Please Select Type.");
            return false;
        }
        if(_oSampleRequest.ContractorID<=0)
        {
            $('#txtParty').focus();
            alert("Please Enter Party!!");
            return false;
        }
        if(_oSampleRequest.ContactPersonID<=0)
        {
            $('#txtContactPerson').focus();
            alert("Please Enter Contact Person!!");
            return false;
        }
        if(_oSampleRequest.RequestBy<=0)
        {
            $('#txtRequestBy').focus();
            alert("Please Enter Request By Person!!");
            return false;
        }
        if(_oSampleRequest.RequestTo<=0)
        {
            $('#txtRequestTo').focus();
            alert("Please Enter Request To Person!!");
            return false;
        }

        var oRows=$('#tblSampleRequestDetail').datagrid('getRows');
        if(oRows.length<=0){
            alert("Atleast onen Sample request detail required!!");
            return false;
        }

        return true;
    }

    function RefreshObject()
    {
        var oSampleRequest={
            SampleRequestID : _oSampleRequest.SampleRequestID,
            BUID : parseInt(sessionStorage.getItem("BUID")),
            RequestDate:$('#txtRequestDate').datebox('getValue'),
            RequestType:$("#cboType").val(),
            ContractorID : _oSampleRequest.ContractorID,
            ContactPersonID : _oSampleRequest.ContactPersonID,
            RequestBy : _oSampleRequest.RequestBy,
            RequestTo:_oSampleRequest.RequestTo,
            Remarks : $.trim($('#txtRemarks').val()),
            SampleRequestDetails: $('#tblSampleRequestDetail').datagrid('getRows')
        };

        return oSampleRequest;
    }

    $("#btnSave").click(function (){
        debugger;
        if(!Validation()) return false;
        var oSampleRequest=RefreshObject();
        //return;
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/SampleRequest/Save",
            traditional: true,
            data:  JSON.stringify(oSampleRequest),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                oSampleRequest = jQuery.parseJSON(data);
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (oSampleRequest.ErrorMessage==null || oSampleRequest.ErrorMessage=="") {
                    alert("Data Saved successfully");
                    var oSampleRequests = sessionStorage.getItem("SampleRequests");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oSampleRequests != null) {
                        oSampleRequests = jQuery.parseJSON(oSampleRequests);
                    }
                    else
                    {
                        oSampleRequests = [];
                    }
                    if (nIndex != -1)
                    {
                        oSampleRequests[nIndex] = oSampleRequest;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oSampleRequests.length);
                        oSampleRequests.push(oSampleRequest);
                    }
                    sessionStorage.setItem("SampleRequests", JSON.stringify(oSampleRequests));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oSampleRequest.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });

    $("#btnAddDetail").click(function ()
    {
        var oDCDetail={
            SampleRequestDetailID: _oSampleRequestDetails.SampleRequestDetailID,
            ProductID: $("#MainDiv").data("ProductID"),
            ProductName:$('#txtProduct').val(),
            ProductCode:$("#MainDiv").data("ProductCode"),
            ColorCategoryID: $("#MainDiv").data("ColorID"),
            ColorName:$('#txtColor').val(),
            MUnitID:parseInt($("#cboUnit").val()),
            MUnitName: $("#cboUnit option:selected").text(),
            Quantity: parseInt($('#txtQty').val()),
            Remarks:$("#txtRemarksDetails").val()
        };
        if(oDCDetail==null || oDCDetail.ProductID<=0)
        {
            alert("Please select a Product!!");
            return;
        }
        $('#tblSampleRequestDetail').datagrid('appendRow',oDCDetail);

        $("#MainDiv").data("ProductID",0);
        $('#txtProduct').val('');
        $("#MainDiv").data("ColorID",0);
        $('#txtColor').val('');
        $("#cboUnit").val('');
        $('#txtQty').val('');
    });

    $("#btnRemoveDetail").click(function ()
    {
        var oDCDetail=$('#tblSampleRequestDetail').datagrid('getSelected');
        if(oDCDetail==null || oDCDetail.ProductID<=0)
        {
            alert("Please select a valid item from list.");
            return;
        }
        var nIndex= $('#tblSampleRequestDetail').datagrid('getRowIndex',oDCDetail);
        $('#tblSampleRequestDetail').datagrid('deleteRow',nIndex);
    });

    $("#btnRefreshDetail").click(function ()
    {
        debugger;
        var oSampleRequest = [];
        var oSampleRequestDetail = {
            SampleRequestID: _oSampleRequest.SampleRequestID
        }
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/SampleRequest/GetsDetailsByID",
            traditional: true,
            data:  JSON.stringify(oSampleRequestDetail),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                oSampleRequest = jQuery.parseJSON(data);
                if (oSampleRequest.ErrorMessage==null || oSampleRequest.ErrorMessage=="") {
                    RefreshList(oSampleRequest.SampleRequestDetails);
                }
                else {
                    alert(oSampleRequestDetail.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });

    $('#btnClose').click(function(e){
        window.location.href = sessionStorage.getItem("BackLink");
    })

</script>