@{
    ViewBag.Title = "FN Batch";
}
@model ESimSol.BusinessObjects.FNBatch

<div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
    <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
        <label style="font-size:18px;">Please wait</label>
        <div id="progressbar" style="width:100%;height:37px;"></div>
    </div>
</div>

<div class="menuMainCollectionTable" style="width:100%">
    <div class="easyui-panel" title="Fabric Batch" style="font-family:Tahoma;text-align:center; width:100%">
        <fieldset>
            <legend>Batch Info</legend>
            <table border="0" cellpadding="1" cellspacing="1" style="margin:0 auto">
                <tr>
                    <td style="width:13%; text-align:right;">Dispo No :</td>
                    <td style="width:20%;text-align:left;">
                        <input type="text" id="txtFNExONo" readonly="readonly" style="font-weight:bold;width:100%" />
                    </td>
                    <td style="width:13%; text-align:right;"></td>
                    <td style="width:20%;text-align:left;">
                    </td>
                    <td style="width:13%; text-align:right;"></td>
                    <td style="width:20%;text-align:left;">
                    </td>
                </tr>
                <tr>
                    <td style="width:13%; text-align:right;">Dispo Qty:</td>
                    <td style="width:20%;text-align:left;">
                        @Html.TextBoxFor(model => model.ExeQty, new { style = "width:35%;  text-align:right", id = "txtExecutionOrderQtyYard", disabled = "disabled", @class = "reset-fnexe" })
                        (Y)
                        <input type="text" id="txtExecutionOrderQtyInMeter" style="width:35%;  text-align:right" class="reset-fnexe" disabled />
                        (M)
                    </td>
                    <td style="width:13%; text-align:right;">Customer :</td>
                    <td style="width:20%;text-align:left;">
                        @Html.TextBoxFor(model => model.BuyerName, new { style = "width:100%;", id = "txtBuyerName", disabled = "disabled", @class = "reset-fnexe" })
                    </td>
                    <td style="width:13%; text-align:right;">Finish Width :</td>
                    <td style="width:20%;text-align:left;">
                        @Html.TextBoxFor(model => model.FinishWidth, new { style = "width:100%;", id = "txtFinishWidth", disabled = "disabled", @class = "reset-fnexe" })
                    </td>
                </tr>
                <tr>
                    <td style="width:13%; text-align:right;">Constraction :</td>
                    <td style="width:20%;text-align:left;">
                        @Html.TextBoxFor(model => model.Construction, new { style = "width:100%;", id = "txtConstruction", disabled = "disabled", @class = "reset-fnexe" })
                    </td>
                    <td style="width:13%; text-align:right;">Fabric Weave:</td>
                    <td style="width:20%;text-align:left;">
                        @Html.TextBoxFor(model => model.FabricWeaveName, new { style = "width:100%;", id = "txtFabricWeaveName", placeholder = "", disabled = "disabled", @class = "reset-fnexe" })
                    </td>
                    <td style="width:13%; text-align:right;">Finish Type :</td>
                    <td style="width:20%;text-align:left;">
                        @Html.TextBoxFor(model => model.FinishTypeName, new { style = "width:100%;", id = "txtFinishTypeName", disabled = "disabled", @class = "reset-fnexe" })
                    </td>
                </tr>
                <tr>
                    <td style="width:13%; text-align:right;">Count:</td>
                    <td style="width:53%;text-align:left;" colspan=3"">
                        @Html.TextBoxFor(model => model.CountName, new { style = "width:100%;", id = "txtCountName", disabled = "disabled", @class = "reset-fnexe" })
                    </td>
                           
                </tr>
            </table>
        </fieldset>
        </div>
    <fieldset>
        <legend class="text-center"> 
            <label id="txtBalance" style="font-size:14px; font-weight:bold;">Balance:</label>&nbsp;
            <label class="text-success" id="lblBalance" style="font-size:14px; font-weight:bold;"></label>
            </legend>
        <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px;width:95%; font-weight:bold">
            <tr>
                <td style="width:10%; text-align:right;">Batch Qty :</td>
                <td style="width:20%;text-align:left;">
                    @Html.TextBoxFor(model => model.Qty, new { style = "width:35%;", id = "txtQtyYard", @class = "number reset-text" })
                    (Y)
                    <input type="text" id="txtQtyMeter" style="width:35%;" class="number reset-text" />
                    (M)
                </td>
                <td style="width:10%; text-align:right;">Issue Date :</td>
                <td style="width:20%;text-align:left;">
                    <input id="dtIssue" style="width:100%" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                </td>
                <td style="width:10%; text-align:right;">Delivery Date :</td>
                <td style="width:20%;text-align:left;">
                    <input id="dtDelivery" style="width:100%" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                </td>
                <td style="width:10%; float:right">
                    <a id="btnSave" href="javascript:void(0)" style="float: right" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Save</a>
                </td>
            </tr>
        </table>
    </fieldset>
        <div style="height:275px; width:100%">
            <table id="tblFNBatch" class="easyui-datagrid" fit="true" fitcolumn="true" rownumbers="true" pagination="false" singleselect="true" showfooter="true" autorowheight="false" toolbar="#toolbarFNBatch">
                <thead>
                    <tr>
                        <th field="BatchNo" width="10%">BatchNo</th>
                        <th field="FNExONo" width="10%"> Order</th>
                        <th field="BuyerName" width="15%">Customer</th>
                        <th field="FNBatchStatusStr" width="10%">Batch Status</th>
                        <th field="IssueDateStr" width="10%">Issue Date</th>
                        <th field="ExpectedDeliveryDateStr" width="10%">Delivery Date</th>
                        @*<th field="ExeQty" width="10%" align="right" formatter="formatPrice">Order Qty(Y)</th>*@
                        <th field="Qty" width="10%" align="right" formatter="formatPrice">Batch Qty(Y)</th>
                        <th field="QtyInMtr" width="10%" align="right" formatter="formatPrice">Batch Qty(M)</th>
                        <th field="OutQty" width="10%" align="right" formatter="formatPrice">Out Qty(Y)</th>
                        <th field="OutQtyInMtr" width="10%" align="right" formatter="formatPrice">Out Qty(M)</th>
                        <th field="CountName" width="15%" align="left">Count</th>
                        <th field="Construction" width="10%">EPI*PPI</th>
                        <th field="FinishTypeName" width="10%">Finish Type</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbarFNBatch">
                <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton initial-state" iconcls="icon-remove" plain="true">Delete</a>
                <a id="btnPlannedDate" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="PlannedDate()">Add Planned Date</a>
                <a id="btnFabricOut" href="javascript:void(0)" class="easyui-linkbutton initial-state" iconcls="icon-ok" plain="true">Fabric Issue</a>
                <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true" onclick="Print()">Route Card Print</a>
                <a id="btnTransfer" href="javascript:void(0)" class="easyui-linkbutton initial-state" iconcls="icon-add" plain="true">Transfer</a>
            </div>
        </div>
    <fieldset>
        <legend style="font-weight:bold">Actions</legend>
        <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; width:95%; font-weight:bold">
            <tr>
                <td style="width:90%; float:right">
                    <a href="javascript:void(0)" style="float: right" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Back</a>
                </td>
            </tr>
        </table>
    </fieldset>
</div>

<div id="winFabricOut" class=" easyui-window winclass" title="Fabric Out" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <div>
        <fieldset>
            <table border="0" cellspacing="2" cellpadding="2" style="width:600px; font-size: 11px; font-weight: bold; padding-left:20px">
                <tr>
                    <td style="width: 15%; text-align: left">Store</td>
                    <td style="width: 35%; text-align: left">
                        <select id="cboStore" class="cbo-styler"></select>
                    </td>
                    <td style="width: 15%; text-align: left">FN Batch No</td>
                    <td style="width: 35%; text-align: left">
                        <input id="txtBatchNo" class="txt-styler" type="text" disabled />
                    </td>
                </tr>
                <tr>
                    <td style="width: 15%; text-align: left">Issue Date</td>
                    <td style="width: 35%; text-align: left">
                        <input id="dtIssue" type="date" class="easyui-datebox" style="width:90%;" data-options="formatter:icsdateformat,parser:icsdateparser" />
                    </td>
                    <td style="width: 15%; text-align: left">Exp. Delivery</td>
                    <td style="width: 35%; text-align: left">
                        <input id="dtExpDelivery" type="date" class="easyui-datebox" style="width:90%;" data-options="formatter:icsdateformat,parser:icsdateparser" />
                    </td>

                </tr>
                <tr>
                    <td style="width: 15%; text-align: left">Count</td>
                    <td style="width: 35%; text-align: left">
                        <input id="txtCount" class="txt-styler" type="text" disabled />
                    </td>
                    <td style="width: 15%; text-align: left">EPI*PPI</td>
                    <td style="width: 35%; text-align: left">
                        <input id="txtConstruction" class="txt-styler" type="text" disabled />
                    </td>
                </tr>
                <tr>
                    <td style="width: 15%; text-align: left">Batch Qty (Y)</td>
                    <td style="width: 35%; text-align: left">
                        <input id="txtIssueQty" style="width:36%" class="txt-styler" type="text" disabled />
                        <span>(M)</span>
                        <input id="txtIssueQtyMtr" style="width:36%" class="txt-styler" type="text" disabled />
                    </td>
                    <td style="width: 15%; text-align: left">Yet To Out (Y)</td>
                    <td style="width: 35%; text-align: left">
                        <input id="txtYetToOutQty" style="width:36%" class="txt-styler" type="text" disabled />
                        <span>(M)</span>
                        <input id="txtYetToOutQtyMtr" style="width:36%" class="txt-styler" type="text" disabled />
                    </td>

                </tr>
            </table>
            <table id="tblFNBatchRawMaterail" title="Lot Info" class="easyui-datagrid" style="width:800px;height:200px"
                   data-options="singleSelect: true, fitColumns:false, rownumbers:true,pagination:false,autoRowHeight:false,toolbar: '#toolbar',onClickRow: onClickRow ">
                <thead>
                    <tr>
                        <th field="LotNo" width="10%" align="left">Lot No</th>
                        <th field="TotalRcvQty" width="10%" align="right" formatter="formatPrice">Rcv. Qty(Y)</th>
                        <th field="QtyTrIn" width="10%" align="right" formatter="formatPrice">Qty Tr.(In)</th>
                        <th field="QtyTrOut" width="10%" align="right" formatter="formatPrice">Qty Tr.(Out)</th>
                        <th field="QtyReturn" width="10%" align="right" formatter="formatPrice">Qty Tr.(Return)</th>
                        <th field="QtyCon" width="10%" align="right" formatter="formatPrice">Qty Tr.(Con)</th>    
                        <th field="Balance" width="10%" align="right" formatter="formatPrice">Balance(Y)</th>
                        <th width="10%" data-options="field:'Qty',align:'right',editor:{type:'numberbox',options:{precision:2}}" formatter="formatPrice" align="right">Qty</th>
                        <th field="MeasurementUnitName" width="10%" align="left">M.Unit</th>
                    </tr>
                </thead>
            </table>
            <table style="width:100%">
                <tr>
                    <td style="width:42%; text-align:right;">Total</td>
                    <td style="width:14%; text-align:right;"><label id="lblTotalBalance"></label></td>
                    <td style="width:14%; text-align:right;"><label id="lblTotalOutQty"></label></td>
                    <td style="width:20%"></td>
                </tr>
            </table>

        </fieldset>

        <div style="width:100%;">
            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                    <tr>
                        <td style="width:80%; text-align:left">
                            <span>
                                @*<label id="lblRemarks"></label>*@
                            </span>
                        </td>
                        <td style="width: 10%">
                            <a id="btnSaveFabricOut" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Ok</a>
                        </td>
                        <td style="width: 10%">
                            <a id="btnCloseFabricOut" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>
</div>

<div id="winPlannedDate" class=" easyui-window winclass" title="Add Plan Date" style="width:600px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <div>
        <table id="tblPlannedDate" title="Process List" class="easyui-datagrid" style="width:100%;height:500px"
               data-options="onClickCell : onClickCellPD, idField:'id',treeField:'code',singleSelect: true, fitColumns:false, rownumbers:true,pagination:false,autoRowHeight:false,toolbar: '#toolbarPDate',onClickRow: onClickRow ">
            <thead>
                <tr>
                    <th field="Code" width="20%" align="left">Code</th>
                    <th field="FNProcess" width="20%" align="left">Operation</th>
                    <th field="FNTreatmentSt" width="20%" align="left">Treatment</th>
                    <th field="SequenceNo" width="11%" align="center">Sequence</th>
                    <th field="PlannedDateSt" width="25%" align="center" editor="{type:'datebox', options:{formatter:icsdateformat,parser:icsdateparser} }">Planned Date</th>
                </tr>
            </thead>
        </table>
        <div id="toolbarPDate">
            <a id="btnUp_Process" href="javascript:void(0)" class="easyui-linkbutton initial-state" iconcls="icon-up" plain="true" onclick="SetSequence(1)"> Process Up</a>
            <a id="btnDown_Process" href="javascript:void(0)" class="easyui-linkbutton initial-state" iconcls="icon-down" plain="true" onclick="SetSequence(2)"> Process Down</a>
            
        </div>
        <div style="width:100%;">
            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                    <tr>
                        <td style="width:80%; text-align:left">
                            <span>
                                Remarks:<input type="text" id="txtNote" style="margin-left:10px; width:200px;" placeholder="Type Remarks Here"/>
                            </span>
                        </td>
                        <td style="width: 10%">
                            <a id="btnSavePlanedDate" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        </td>
                        <td style="width: 10%">
                            <a id="btnClosePlannedDate" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>
</div>

<div id="winTransfer" class="easyui-window winstyle" title="Transfer" style="width:380px; height:350px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <div style="font-family:Tahoma">
        <table border="0" cellpadding="0" cellspacing="0">
            <tr>
                <td style="width:380px">
                    <table border="0" cellpadding="2" cellspacing="2" style="font-size:12px">
                        <tr style="">
                            <td style="width:380px;">
                                <fieldset style="height:240px;">
                                    <legend style="font-weight:bold; font-size:12px"> Transfer : </legend>
                                    <table border="0" cellpadding="2" cellspacing="2" style=" width:320px; font-size:12px">

                                        <tr style=" width:320px;vertical-align:top;">
                                            <td style="width:40%;">
                                                <table style="width:100%;">
                                                    <tr style="width:100%;">
                                                        <td style="width:50%;">
                                                            <select id="cboTransferType" style="width:100%;height:22px;">
                                                                <option value="0">Partial</option>
                                                                <option value="1">Full</option>
                                                            </select>
                                                        </td>
                                                        <td style="width:50%;">
                                                            <input type="text" id="txtPartialTransferQty" style="width:100%" />
                                                        </td>
                                                    </tr>
                                                </table>
                                                
                                            </td>
                                            <td style=" width:60%;">
                                                <input type="text" id="txtDispo" style="width:100%;" placeholder="Type Batch & Press Enter" onkeydown="DispoKeyDown(event)" />
                                            </td>
                                        </tr>

                                        <tr style=" width:320px;vertical-align:top;">
                                            <td style="width:40%;">
                                                Source Batch : 
                                            </td>
                                            <td style=" width:60%;">
                                                <input type="text" id="txtSourceBatch" style="width:100%;" disabled />
                                            </td>
                                        </tr>
                                        <tr style=" width:320px;vertical-align:top;">
                                            <td style="width:40%;">
                                                Transfer By : 
                                            </td>
                                            <td style=" width:60%;">
                                                <input type="text" id="txtTransferBy" style="width:100%;" disabled />
                                            </td>
                                        </tr>
                                        <tr style=" width:320px;vertical-align:top;">
                                            <td style="width:40%;">
                                                Transfer Time :
                                            </td>
                                            <td style=" width:60%;">
                                                <input type="text" id="txtTransferTime" style="width:100%;" disabled />
                                            </td>
                                        </tr>

                                    </table>
                                </fieldset>
                            </td>
                        </tr>
                        <tr style="height:35px">
                            <td style="width:380px">
                                <fieldset>
                                    <legend style="font-weight:bold; font-size:12px"> Action : </legend>
                                    <table border="0" cellpadding="0" cellspacing="0" style=" width:320px; font-size:12px">
                                        <tr style="height:30px; vertical-align:bottom">
                                            <td style="">
                                            </td>
                                            <td style="text-align:right;">
                                                <a id="btnOkForTransfer" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Transfer</a>
                                                <a id="btnCloseForTransfer" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                            </td>
                                        </tr>
                                    </table>
                                </fieldset>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
    </div>
</div>

<script type="text/javascript">
    var _sBaseAddress="";
    var _oFNBatchs=[];
    var BackLink = "";
    var _oFNBatch = [];
    var _nMenuid = 0;
    var FabricSCReport = [];
    $(document).ready(function () {
        debugger;
        _nMenuid = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.MenuID]));
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        var oFNBatchs =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FNBatchs));
        _oFNBatch =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        FabricSCReport = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FabricSCReport));
        var oWUs =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.WUs));

        $("#cboStore").icsLoadCombo({
            List: oWUs,
            OptionValue: "WorkingUnitID",
            DisplayText: "WorkingUnitName",
            InitialValue:"Default"
        });

        $("#cboStore").data("WorkingUnitID", ((oWUs.length>0)? oWUs[0].WorkingUnitID: 0))

        debugger;
        _oFNBatchs=oFNBatchs;
        $("#txtFNExONo").val(FabricSCReport.ExeNo);
        RefreshList(oFNBatchs);
        if(sessionStorage.getItem("Operation") == 'View'){
            $('.reset-fnexe, .reset-text ').prop('disabled',true);
            $('#dtIssue').datebox({disabled:true});
            $('#btnSearchOrderNo,#btnSave').hide();
            $('#txtFNExONo').css({'width':'30%'})
        }
        $('.number').icsCurrencyBox();
        $('#dtIssue').datebox('setValue',_oFNBatch.IssueDateStr);
        $('#dtDelivery').datebox('setValue',_oFNBatch.IssueDateStr);
        $('#txtFNExONo').data('FNExOID',_oFNBatch.FNExOID);
        $('#txtGLM').data('GLM',_oFNBatch.GLM);
        $("#txtExecutionOrderQtyInMeter").val(formatPrice(GetMeter(_oFNBatch.ExeQty,2)));
        $('#txtQtyMeter').val(formatPrice(GetMeter(_oFNBatch.Qty,2)));
        RefreshControl(FabricSCReport);
//      MakeFooterColumn('tblFNBatch', ['QtyInMtr','OutQtyInMtr']);
        MakeFooterColumn('tblFNBatch', ['Qty','QtyInMtr','OutQty','OutQtyInMtr']);        
        SetBalanceLabel();

        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();
        ////$("#winPlannedDate").data("SelectedFNBatchID", null);
        $('#txtDispo').data("FNBatchID", 0);
    });
    function MakeFooterColumn(sTable, FieldNames)
    {
        var FooterField=[];
        var obj=new Object();

        obj['BuyerName']="Gross Total: ";
        for(var j=0; j<FieldNames.length;j++)
        {
            obj[FieldNames[j]]=GetSum(FieldNames[j],sTable);
        }
        FooterField.push(obj);
        $('#'+sTable).datagrid('reloadFooter',FooterField);
    }
    function GetSum(sFieldName,sTable)
    {
        debugger;
        var data=$('#'+sTable).datagrid('getRows').select(sFieldName);
        var sum = 0;

        for (i = 0; i < data.length; i++)
        {
            sum+=parseFloat(data[i]);
        }
        return sum;
    }
    //$("#txtQtyYard").keyup(function (e) {
    //    if(event.which==13)
    //    {
    //        Save();
    //    }
    //});
    //$("#txtQtyMeter").keyup(function (e) {
    //    if(event.which==13)
    //    {
    //        Save();
    //    }
    //});
    function Print()
    {
        var oFNBatch = $('#tblFNBatch').datagrid('getSelected');
        if (oFNBatch ==null || oFNBatch.FNBatchID <=0 )
        {
            alert("Please select an item from list.");
            return ;
        }
        window.open(_sBaseAddress+"/FNExecutionOrder/PrintProcessPDF?id="+FabricSCReport.FabricSalesContractID+"&FNBatchID="+oFNBatch.FNBatchID);
    }
    
    function SetBalanceLabel()
    {
        var sum = 0.00;
        var sum_Yard = 0.00;

        var oFNBatchs =  $('#tblFNBatch').datagrid('getRows');

        for(var i = 0; oFNBatchs.length>i;i++)
        {
            sum = sum + oFNBatchs[i].QtyInMtr;
            sum_Yard = parseFloat(sum_Yard)+parseFloat(oFNBatchs[i].Qty);
        }
        var balance = parseFloat(icsRemoveComma($('#txtExecutionOrderQtyYard').val(),2));
        var balance_Yard = parseFloat(balance) - sum_Yard;
        balance = parseFloat(balance * 0.9144).toFixed(2) - sum;
        
        $('#txtQtyYard').val(balance_Yard);
        $('#txtQtyMeter').val(balance);
        $('#lblBalance').html(balance_Yard.toFixed(2)+"(Y) " +balance.toFixed(2)+" (M)");
        //$('#lblBalance').html(balance.toFixed(2)+" (M)");
    }
    function RefreshList(oFNBatchs)
    {
        debugger;
        $('#tblFNBatch').empty();
        data = oFNBatchs;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblFNBatch').datagrid('loadData', data);

        if(parseInt(sessionStorage.getItem("SelectedRowIndexBatch"))>0 && sessionStorage.getItem("OperationSave")=="OperationSave")
        {
            $('#tblFNBatch').datagrid('selectRow',parseInt(sessionStorage.getItem("SelectedRowIndexBatch")));
        }
    }
    $("#txtQtyYard").keyup(function (e) {
        var nVal = icsRemoveComma($(this).val());
        $('#txtQtyMeter').val(GetMeter(nVal,2));
        if (nVal == "" || nVal == null) {
            $(this).val(0);
        }
    });
    $("#txtQtyMeter").keyup(function (e) {
        var nVal = icsRemoveComma($(this).val());
        $('#txtQtyYard').val(GetYard(nVal,2));
        if (nVal == "" || nVal == null) {
            $(this).val(0);
        }
    });
    function ResetFNExe(){
        $('.reset-fnexe').val("");
        $('#txtGLM').val($('#txtGLM').data('GLM'));
        $('#txtFNExONo').data('FNExOID',0);
        $('#txtQtyYard').data('YetToOutQty',0);
        $('#txtQtyYard,#txtQtyMeter').val('');
        DynamicRefreshList([],'tblFNBatch');
        DynamicRefreshList([],'tblFNBatchRecive');
    }
    $("#btnSearchOrderNo").click(function () {
        GetFNExeNo();
    });
    $('#txtFNExONo').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            GetFNExeNo();
        }
        else if(code==27 || code==08){
            ResetFNExe();
        }
    });
    function RefreshControl(FabricSCReport)
    {
        $('#txtQtyYard').val(formatPrice(FabricSCReport.Qty-FabricSCReport.Qty_PRO));
        $('#txtQtyMeter').val(formatPrice(GetMeter(FabricSCReport.Qty-FabricSCReport.Qty_PRO)));
        $('#txtQtyYard').data('YetToOutQty',FabricSCReport.Qty-FabricSCReport.Qty_PRO);
        $("#txtFNExONo").data('FNExOID',FabricSCReport.FabricSalesContractDetailID);
        $("#txtFNExONo").val(FabricSCReport.ExeNo);
        $("#txtFNExONo").addClass("fontColorOfPickItem");
        $("#txtExecutionOrderQtyYard").val(formatPrice(FabricSCReport.Qty));
        $("#txtExecutionOrderQtyInMeter").val(formatPrice(GetMeter(FabricSCReport.Qty,2)));
        $("#txtCountName").val(FabricSCReport.ProductName);
        $('#txtBuyerName').val(FabricSCReport.BuyerName);
        $('#txtConstruction').val(FabricSCReport.Construction);
        $('#txtFinishWidth').val(FabricSCReport.FinishWidth);
        $('#txtFinishTypeName').val(FabricSCReport.FinishTypeName);
        $('#txtFabricWeaveName').val(FabricSCReport.FabricWeaveName);
    }

    function GetFNExeNo(){
        if ($.trim($("#txtFNExONo").val()).length == 0) {
            alert("Type Dispo no to search.");
            $("#txtFNExONo").focus();
            return false;
        }
        var oFNEO = {
            ExeNo: $.trim($("#txtFNExONo").val())
        }
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oFNEO,
            ControllerName: "FNBatch",
            ActionName: "GetsByFNExONo",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].FabricSalesContractDetailID > 0) {
                    var oreturnobj=response.objs[0];
                    $('#txtQtyYard').val(formatPrice(oreturnobj.Qty-oreturnobj.Qty_PRO));
                    $('#txtQtyMeter').val(formatPrice(GetMeter(oreturnobj.Qty-oreturnobj.Qty_PRO)));
                    $('#txtQtyYard').data('YetToOutQty',oreturnobj.Qty-oreturnobj.Qty_PRO);
                    $("#txtFNExONo").data('FNExOID',oreturnobj.FabricSalesContractDetailID);
                    $("#txtFNExONo").val(oreturnobj.ExeNo);
                    $("#txtFNExONo").addClass("fontColorOfPickItem");
                    $("#txtExecutionOrderQtyYard").val(formatPrice(oreturnobj.Qty));
                    $("#txtExecutionOrderQtyInMeter").val(formatPrice(GetMeter(oreturnobj.Qty,2)));
                    $("#txtCountName").val(oreturnobj.ProductName);
                    $('#txtBuyerName').val(oreturnobj.BuyerName);
                    $('#txtConstruction').val(oreturnobj.Construction);
                    $('#txtFinishWidth').val(oreturnobj.FinishWidth);
                    $('#txtFinishTypeName').val(oreturnobj.FinishTypeName);
                    $('#txtFabricWeaveName').val(oreturnobj.FabricWeaveName);
                    SetBalanceLabel();

                    /*---------- Get Existing FN Btch ----------------*/
                    var oFNBatch = {
                        FNExOID: oreturnobj.FabricSalesContractDetailID
                    }
                    var obj = {
                        BaseAddress: _sBaseAddress,
                        Object: oFNBatch,
                        ControllerName: "FNBatch",
                        ActionName: "GetRelatedInfoByFNBatch",
                        IsWinClose: false
                    };
                    $.icsDataGet(obj, function (response) {
                        if (response.status && response.obj!=null) {
                            RelatedInfo(response.obj.FNBatchs, response.obj.FNEOFRs, false);
                        }
                    });
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found");
            }
        });
    }
    function RelatedInfo(oFNBatchs, oFNEOFRs, bIsEdit){
        var nBatchQty=0, nReceiveQtyYard=0, nReceiveQtyMtr=0;
        debugger;
        for(var i=0;i<oFNBatchs.length;i++){
            nBatchQty+=parseFloat(oFNBatchs[i].Qty);
        }
        for(var i=0;i<oFNEOFRs.length;i++){
            nReceiveQtyYard+=parseFloat(oFNEOFRs[i].Qty);
            nReceiveQtyMtr+=parseFloat(oFNEOFRs[i].QtyInMeter);
        }
        $('#lblTotalBatchQty').text(formatPrice(nBatchQty));
        $('#lblTotalReciveQtyYard').text(formatPrice(nReceiveQtyYard));
        $('#lblTotalReciveQtyMtr').text(formatPrice(nReceiveQtyMtr));

        var nYetToOutQty= parseFloat(nReceiveQtyYard) - parseFloat(nBatchQty);

        $('#txtQtyYard').data('YetToOutQty',nYetToOutQty.toFixed(2));
        if(!bIsEdit){
            $('#txtQtyYard').val(formatPrice(nYetToOutQty));
            $('#txtQtyMeter').val(formatPrice(GetMeter(nYetToOutQty,2)));
        }
        DynamicRefreshList(oFNBatchs,'tblFNBatch');
        DynamicRefreshList(oFNEOFRs,'tblFNBatchRecive');
    }
    function ValidateInput()
    {
        if(parseInt($('#txtFNExONo').data('FNExOID'))<=0)
        {
            alert("Dispo No order required.!");
            $('#txtFNExONo').focus();
            return false;
        }
        if(parseFloat(icsRemoveComma($('#txtQtyYard').val()))<=0)
        {
            alert("Issue qty required!");
            $('#txtQtyYard').focus();
            return false;
        }
        return true;
    }
    function RefreshObject()
    {
        debugger;
        var oFNBatch= {
            FNBatchID : 0,
            FNExOID : parseInt($("#txtFNExONo").data('FNExOID')),
            Qty: icsRemoveComma($('#txtQtyYard').val()),
            Note: $('#txtNote').val(),
            FNBatchStatus : _oFNBatch.FNBatchStatus,
            GLM : 0,// icsRemoveComma($('#txtGLM').val()),
            FNPPID :_oFNBatch.FNPPID ,
            IssueDate : $('#dtIssue').datebox('getValue'),
            ExpectedDeliveryDate:$('#dtDelivery').datebox('getValue')// $('#dtDelivery').datebox('getValue'),
            
        };
        debugger;
        return oFNBatch;
    }
    function Save()
    {
        debugger;
        if(!ValidateInput()) return;
        var oFNBatch=RefreshObject();
        var nBatchQty = $('#txtQtyMeter').val();
        var nBalance = parseInt($('#lblBalance').text());
        //if(parseInt(nBalance + 10 )<=0)
        //{
        //    alert("You Cannot Add More Quantity Than Balance ");
        //    return;
        //}
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/FNBatch/Save",
            traditional: true,
            data:  JSON.stringify(oFNBatch),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oResult = jQuery.parseJSON(data);
                if (oResult.ErrorMessage=="") {
                    tempFNBatchID = oResult.FNBatchID;
                    alert("Data Saved sucessfully");
                    sessionStorage.setItem("SelectedRowIndexBatch", _oFNBatchs.length);
                    sessionStorage.setItem("OperationSave", "OperationSave");
                    $('#tblFNBatch').datagrid('appendRow',oResult);
                    //location.reload();
                    //RefreshControl(FabricSCReport);
                    SetBalanceLabel();
                    MakeFooterColumn('tblFNBatch', ['Qty','QtyInMtr','OutQty','OutQtyInMtr']);
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndexBatch"));
                    $('#tblFNBatch').datagrid('selectRow',nIndex);
                }
                else {
                    alert(oResult.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });

    }
    $('#btnDelete').click(function(e){
        var oFNBatch = $('#tblFNBatch').datagrid('getSelected');
        if (oFNBatch ==null || oFNBatch.FNBatchID <=0 ) { alert("Please select an item from list."); return ; }
        if (parseFloat(oFNBatch.OutQty)>0 ) { alert("Unable to delete. Already fabric out."); return ; }
        if (!confirm("Confirm to delete?")) return;
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oFNBatch,
            ControllerName: "FNBatch",
            ActionName: "Delete",
            TableId: "tblFNBatch",
            IsWinClose: false
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url: obj.BaseAddress + "/" + obj.ControllerName + "/" + obj.ActionName,
            traditional: true,
            data: JSON.stringify(obj.Object),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var sMessage = jQuery.parseJSON(data);
                if (sMessage != null) {
                    if (sMessage.toLowerCase() == "deleted") 
                    {
                        alert("Delete successfully.");
                        if ($.trim(obj.TableId).length) 
                        {
                            var oSelectedObject = $("#" + obj.TableId).datagrid("getSelected");
                            var nRowIndexBank = $("#" + obj.TableId).datagrid("getRowIndex", oSelectedObject);
                            $("#" + obj.TableId).datagrid("deleteRow", nRowIndexBank);
                        }
                        SetBalanceLabel();
                        MakeFooterColumn('tblFNBatch', ['Qty','QtyInMtr','OutQty','OutQtyInMtr']);
                    }
                    else {
                        alert(sMessage);
                    }
                }
                else { alert("Operation Unsuccessful."); }
                 
                if (defaultSettings.IsWinClose) { IcsWindowClose(oActiveWindows); };
                if (callback != null) { return callback({ status: true, Message: sMessage.toLowerCase() }); }
            },
            error: function (xhr, status, error) {
                alert(error);
                if (callback != null) { return callback({ status: false, Message: "" }); }
            }
        });
        //location.reload();
    });
    function Close()
    {
        debugger;
        //var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
        //sessionStorage.setItem("SelectedRowIndex",nIndex);
        //var FabricSalesContractID = parseInt(sessionStorage.getItem("FabricSalesContractID"));
        //$.ajax({
        //    type: "GET",
        //    dataType: "json",
        //    url : _sBaseAddress+"/FNBatch/GetFabricSaleReport",
        //    traditional: true,
        //    data: { nId: FabricSalesContractID},
        //    contentType: "application/json; charset=utf-8",
        //    success: function (data) {
        //        debugger;
        //        var oResult = jQuery.parseJSON(data);
        //        if(oResult.FabricSalesContractID>0)
        //        {
        //            sessionStorage.setItem("FabricSCReport",oResult);
        //        }


        //    },
        //    error: function (xhr, status, error) {
        //        alert(error);
        //    }

        //});
        //window.location.href = sessionStorage.getItem('BaseAddress')+ "/FNBatch/ViewFNBatchs_FSC?menuid="+_nMenuid;
        window.location.href = sessionStorage.getItem("BackLink");
    }
    $(document).keydown(function (e) { if (e.keyCode == 27) { $('div').icsWindow('close'); } });

    $("#btnFabricOut").click(function () {

        debugger;
        editIndex = undefined;
        $('#cboStore').val($("#cboStore").data("WorkingUnitID"));
        $('#lblRemarks').html('');
        $('#txtBatchNo').data('FNBatchID',0);
        DynamicRefreshList([],'tblFNBatchRawMaterail');
        var oFNBatch = $('#tblFNBatch').datagrid('getSelected');
        if (oFNBatch ==null || oFNBatch.FNBatchID <=0 ) { alert("Please select an item from list."); return ; }

        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oFNBatch,
            ControllerName: "FNBatch",
            ActionName: "Get",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj != null) {

                if(response.obj.FNBatchID>0)
                {
                    debugger;
                    $('#txtBatchNo').data('FNBatchID',response.obj.FNBatchID);
                    $('#txtBatchNo').val(response.obj.BatchNo);
                    $('#dtIssue,#dtExpDelivery').datebox({'disabled':true})
                    $('#dtIssue').datebox('setValue',response.obj.IssueDateStr);
                    $('#dtExpDelivery').datebox('setValue',response.obj.ExpectedDeliveryDateStr);
                    $('#txtCount').val(response.obj.CountName);
                    $('#txtConstruction').val(response.obj.Construction);
                    $('#txtIssueQty').val(formatPrice(response.obj.Qty));
                    $('#txtIssueQtyMtr').val(formatPrice(GetMeter(response.obj.Qty,2)));
                    $('#txtYetToOutQty').val(formatPrice(response.obj.YetToOutQty));
                    $('#txtYetToOutQtyMtr').val(formatPrice(GetMeter(response.obj.YetToOutQty,2)));

                    if($('#cboStore').val()>0)
                        GetFNBatchRawMaterial(true);

                    $("#winFabricOut").icsWindow('open', "Fabric Out");
                }
                else
                {
                    alert("No FN batch found.");
                }
            }
        });
    });
    $('#cboStore').change(function(e) {
        GetFNBatchRawMaterial(false);
    });
    function GetFNBatchRawMaterial(bIsInitailOpen){
        if($('#cboStore').val()>0){
            if($('#txtBatchNo').data('FNBatchID')<=0){
                alert("FN batch required");
                return false;
            }
            DynamicRefreshList([],'tblFNBatchRawMaterail');
            SummaryCalculation([]);
            $('#lblRemarks').html('');
            var oFNBatch = {
                FNBatchID:$('#txtBatchNo').data('FNBatchID'),
                Params:$('#cboStore').val()
            }

            var obj =
            {
                BaseAddress: _sBaseAddress,
                Object: oFNBatch,
                ControllerName: "FNBatch",
                ActionName: "GetsLotByFNBatch",
                IsWinClose: false
            };

            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs != null && response.objs.length>0 && response.objs[0].LotID>0) {
                    var nQty=icsRemoveComma($('#txtYetToOutQty').val());
                    for(var i=0; i<response.objs.length;i++)
                    {
                        if(parseFloat(response.objs[i].Balance)>=nQty && nQty>0){
                            response.objs[i].Qty = nQty;
                            nQty-=nQty;
                        }
                        else if (parseFloat(response.objs[i].Balance)<nQty && nQty>0){
                            response.objs[i].Qty = parseFloat(response.objs[i].Balance);
                            nQty-=parseFloat(response.objs[i].Balance);
                        }
                    }

                    DynamicRefreshList(response.objs,'tblFNBatchRawMaterail');
                    SummaryCalculation(response.objs);
                }
                else{
                    if(!bIsInitailOpen)
                        alert("No lot found.");
                }
            });
        }
        else{
            DynamicRefreshList([],'tblFNBatchRawMaterail');
        }
    }
    $('#btnSaveFabricOut').click(function(e){
        debugger;
        if($('#cboStore').val()<=0){
            alert("Please select a store.");
            $('#cboStore').focus();
            return false;
        }

        if(!endEditing())
            return false;

        debugger;
        //var oRow =$('#tblFNBatchRawMaterail').datagrid('getSelected');
        var oRows = $('#tblFNBatchRawMaterail').datagrid('getRows');
        var oFNBRMs=[];
        var nQty=0;
        for(var i=0;i<oRows.length;i++){
            if(oRows[i].Qty>0){
                nQty+=parseFloat(oRows[i].Qty);
                oFNBRMs.push(oRows[i]);
            }
        }

        //nQty= parseFloat(nQty.toFixed(2));
        //if(nQty<=0){
        //    alert("Enter lot qty to fabric out.");
        //    return false;
        //}

        //if(nQty>parseFloat(icsRemoveComma($('#txtYetToOutQty').val()))){
        //    alert("Maximum fabric out qty will be "+ $('#txtYetToOutQty').val());
        //    return false;
        //}


        var oFNBatchRawMaterial = {
            FNBatchID:0,
            FNBatchRawMaterials : oFNBRMs
        };

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oFNBatchRawMaterial,
            ObjectId:"FNBatchID",
            ControllerName: "FNBatch",
            ActionName: "FabricOut",
            TableId:"",
            IsWinClose: false,
            Message: ""
        };

        $.icsSave(obj, function (response) {

            if (response.status && response.obj!=null) {
                if (response.obj.FNBatchRawMaterials.length > 0 && response.obj.FNBatchRawMaterials[0].FBRMID>0) {
                    alert("Fabric out successfully.");
                    $("#winFabricOut").icsWindow('close');
                    var nOutQty=0;
                    for(var i=0;i<response.obj.FNBatchRawMaterials.length;i++){
                        nOutQty=nOutQty+parseFloat(response.obj.FNBatchRawMaterials[i].Qty);
                    }
                    var oFNBatch=$('#tblFNBatch').datagrid('getSelected');
                    var nIndex=$('#tblFNBatch').datagrid('getRowIndex',oFNBatch);
                    oFNBatch.OutQty= parseFloat(oFNBatch.OutQty)+ parseFloat(nOutQty);
                    oFNBatch.OutQtyInMtr=GetMeter(parseFloat(oFNBatch.OutQty),2);

                    $("#tblFNBatch").datagrid("updateRow", { index: nIndex, row: oFNBatch });
                }
            }
            else{
                alert("Unable to fabric out.");
            }
        });
    });
    $("#btnCloseFabricOut").click(function () {
        $("#winFabricOut").icsWindow('close');
    });
    var editIndex = undefined;
    function endEditing() {
        debugger;
        if (editIndex == undefined) { return true }
        if ($('#tblFNBatchRawMaterail').datagrid('validateRow', editIndex)) {
            $('#tblFNBatchRawMaterail').datagrid('endEdit', editIndex);
            $('#tblFNBatchRawMaterail').datagrid('selectRow', editIndex);
            var oFNBRM = $('#tblFNBatchRawMaterail').datagrid('getSelected');
            if(oFNBRM.Balance<oFNBRM.Qty)
            {
                alert("Maximum allowed qty "+ formatPrice(oFNBRM.Balance));
                $('#tblFNBatchRawMaterail').datagrid('selectRow', editIndex).datagrid('beginEdit', editIndex);
                return false;
            }
            SummaryCalculation($('#tblFNBatchRawMaterail').datagrid('getRows'));
            editIndex = undefined;
            return true;
        } else {
            return false;
        }
    }
    function onClickRow(index) {

        if (editIndex != index) {
            if (endEditing()) {
                $('#tblFNBatchRawMaterail').datagrid('selectRow', index)
                        .datagrid('beginEdit', index);
                editIndex = index;
            } else {
                $('#tblFNBatchRawMaterail').datagrid('selectRow', editIndex);
            }
        }
    }
    function SummaryCalculation(oFNBRMs){
        var nTotalBalance=0, nOutQty=0;
        for(var i=0; i<oFNBRMs.length;i++){
            nTotalBalance+= parseFloat(oFNBRMs[i].Balance);
            nOutQty+= parseFloat(oFNBRMs[i].Qty);

        }
        $('#lblTotalBalance').text(formatPrice(nTotalBalance));
        $('#lblTotalOutQty').text(formatPrice(nOutQty));

        var nQty=icsRemoveComma($('#txtYetToOutQty').val());

        if(parseFloat(nTotalBalance)< parseFloat(nQty)){
            $('#lblRemarks').html('<span style="color:red">Insufficient Lot Balance, partially out can be possible.<span>');
        }
        else if(nQty>0){
            $('#lblRemarks').html('<span style="color:Green">Fully out can be possible.<span>');
        }
        else{
            $('#lblRemarks').html('<span style="color:Red">No remaining qty found.<span>');
        }
    }

    //---------------------------Planned Date--------------------------//
    var nIndex=undefined;
    function onClickCellPD(index) 
    {
        debugger;
        nIndex=index;
        if (endEditing_PD('tblPlannedDate')) 
        {
            debugger;
            $('#tblPlannedDate').datagrid('selectRow', parseInt(index));
            $('#tblPlannedDate').datagrid('beginEdit', parseInt(index));
            var oMLC=$('#tblPlannedDate').datagrid('getSelected');
            editIndexID = index;
        }
        else 
        {
            $('#tblPlannedDate').datagrid('selectRow', editIndexID);
        }
    }
    function endEditing_PD(tblId) {
        debugger;
        tblId="tblPlannedDate";
        if (editIndex == undefined) {
            return true;
        }
        if ($('#'+tblId).datagrid('validateRow', editIndex)) 
        {
            $('#'+tblId).datagrid('endEdit', editIndex);
            $('#'+tblId).datagrid('selectRow', editIndex);
            
            var oFNBatch=$('#'+tblId).datagrid('getSelected');
            oFNBatch.PlannedDate= new Date(oFNBatch.PlannedDateSt);
            $('#'+tblId).datagrid("updateRow", { index: editIndex, row: oFNBatch });
            
            if(editIndex==nIndex)
                editIndex = undefined;
            else 
            {
                editIndex = nIndex;
                $('#'+tblId).datagrid('selectRow', editIndex).datagrid('beginEdit', editIndex);
            }
            return true;
        }
        else { return false; }
    }
    var editIndexID=undefined;
    $('#btnClosePlannedDate').click(function(){
        $('#winPlannedDate').icsWindow('close');
    })
    function PlannedDate()
    {
        debugger;
        var oFNBatch = $('#tblFNBatch').datagrid('getSelected');
        if (oFNBatch ==null || oFNBatch.FNBatchID <=0 )
        {
            alert("Please select an item from list.");
            return ;
        }
        var oFNBatchCard = {
            FNBatchID : oFNBatch.FNBatchID,
            //FNBatchCardID : FabricSCReport.FabricSalesContractID
        }
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oFNBatchCard,
            ControllerName: "FNExecutionOrder",
            ActionName: "GetBatchProcess",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            console.log(response);
            if (response.status && response.obj != null) {
                if(response.obj.length>0)
                {
                    $('#winPlannedDate').icsWindow('open');
                    DynamicRefreshList(response.obj,'tblPlannedDate');
                    $('#txtNote').val(oFNBatch.Note);
                    //$("#winPlannedDate").data("SelectedFNBatchID", null);
                }
                else
                {
                    alert("No Data found.");
                }
                console.log(response);
            }
        });
    }
    function SaveNote()
    {
        debugger;
        var objFNBatch = $('#tblFNBatch').datagrid('getSelected');
        var nIndex=$('#tblFNBatch').datagrid('getRowIndex',oFNBatch);
        var oFNBatch = {
            FNBatchID : objFNBatch.FNBatchID,
            Note : $('#txtNote').val()
        }
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/FNBatch/SaveNote",
            traditional: true,
            data:  JSON.stringify(oFNBatch),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oResult = jQuery.parseJSON(data);
                if (oResult.ErrorMessage=="") {
                    objFNBatch.Note = $('#txtNote').val();
                    $("#tblFNBatch").datagrid("updateRow", { index: nIndex, row: objFNBatch });
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }
    $('#btnSavePlanedDate').click(function(){
        debugger;
        SaveNote();
        endEditing_PD();

        var oLists=$('#tblPlannedDate').datagrid('getRows');

        var nSequenceNo_pro = 0;
        for(var i=0; i<oLists.length;i++)
        {
            if(oLists[i].PlannedDateSt!="")
            {
                oLists[i].PlannedDate = icsdateformat(new Date(oLists[i].PlannedDateSt));
            }
            if(oLists[i].IsProduction == true)
            {
                oLists[i].SequenceNo_Pro = ++nSequenceNo_pro;
            }
        }
        debugger;
        //var data = {
        //    oFNBatchCards: oLists,
        //    FNBatchID: $("#winPlannedDate").data("SelectedFNBatchID")
        //}

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLists,
            ControllerName: "FNExecutionOrder",
            ActionName: "SavePlannedDate",//SaveFNBatchCards
            IsWinClose: false
        };
        $.icsSave(obj, function (response) {

            if (response.status && response.obj!=null) {
                debugger;
                if (response.ErrorMessage=="" || response.ErrorMessage==null) {
                    $('#winPlannedDate').icsWindow('close');
                    
                }
                else{
                    alert("Unable to Save");
                }
            }
        });
    });

    function SetSequence(n)
    { 
        debugger;
        var oFNBatchCard = $('#tblPlannedDate').datagrid('getSelected');
        if (oFNBatchCard ==null || oFNBatchCard.FNBatchID <=0 )
        {
            alert("Please select an item from list.");return ;
        }
       
        var nNextIndex = -1;
        var nRowIndex = $("#tblPlannedDate").datagrid("getRowIndex", oFNBatchCard);
        var oFNBatchCards = $('#tblPlannedDate').datagrid('getRows');

        var oFNBatchCard_Next = {}
        
        if(n==1)
            nNextIndex = nRowIndex-1;
        else 
            nNextIndex = nRowIndex+1;
        oFNBatchCard_Next = oFNBatchCards[nNextIndex];

        if (oFNBatchCard_Next ==null || oFNBatchCard_Next.FNBatchID <=0 ) return ;
      
        var nSequenceNo =  oFNBatchCard.SequenceNo
        oFNBatchCard.SequenceNo = oFNBatchCard_Next.SequenceNo;
        oFNBatchCard_Next.SequenceNo = nSequenceNo;

        oFNBatchCards[nNextIndex] = oFNBatchCard;
        oFNBatchCards[nRowIndex] = oFNBatchCard_Next;
        DynamicRefreshList(oFNBatchCards,'tblPlannedDate');

        $("#tblPlannedDate").datagrid("selectRow", nNextIndex);
    }

    //transfer
    $("#btnTransfer").click(function(){
        var oFNBatch = $('#tblFNBatch').datagrid('getSelected');
        if (oFNBatch ==null || oFNBatch.FNBatchID <=0 )
        {
            alert("Please select an item from list.");
            return ;
        }

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/FNExecutionOrder/GetFNBatchTransferHistory",
            traditional: true,
            data:  JSON.stringify(oFNBatch),
            contentType: "application/json; charset=utf-8",
            success: function (data)
            {
                debugger;
                oFNBatch = jQuery.parseJSON(data);
                if (oFNBatch.ErrorMessage=="" || oFNBatch.ErrorMessage==null){
                    if(oFNBatch.FNBatchTransferHistoryID > 0){     
                        $('#txtSourceBatch').val(oFNBatch.SourceBatchNo);
                        $('#txtTransferBy').val(oFNBatch.UserName);
                        $('#txtTransferTime').val(oFNBatch.TransferTimeSt);
                    }
                }else{
                    alert(oFNBatch.ErrorMessage);
                }
                
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
        $('#txtPartialTransferQty').val(0);
        $('#txtDispo').val("");
        $('#cboTransferType').val(1);
        $("#winTransfer").icsWindow('open', "Fabric Batch Transfer");
    });

    $('#btnCloseForTransfer').click(function(e) {
        $("#winTransfer").icsWindow('close');
    });

    $('#btnOkForTransfer').click(function(e) {
        if($('#cboTransferType').val() != 1 && parseFloat($('#txtPartialTransferQty').val()) <= 0){
            alert("Please enter Qty for Partial Transfer!!");
            $('#txtPartialTransferQty').focus();
            return;
        }
        if(parseInt($('#txtDispo').data("FNBatchID")) <= 0){
            alert("Please select batch!!");
            $('#txtDispo').focus();
            return;
        }
        var sMsg = ($('#cboTransferType').val() == 1) ? "Full" : "Partial";
        if (!confirm("Confirm to "+sMsg+" Transfer?")) return;
        var oFNBatch = $('#tblFNBatch').datagrid('getSelected');
        var data={
            FNBatchID: oFNBatch.FNBatchID,
            FNPPID: $('#txtDispo').data("FNBatchID"),//oResult.FNBatchID,
            IsFullTransfer: ($('#cboTransferType').val() == 1) ? true : false,
            OutQty: parseFloat($('#txtPartialTransferQty').val())
        }
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/FNExecutionOrder/TransferFNBatchCard",
            traditional: true,
            data:  JSON.stringify(data),
            contentType: "application/json; charset=utf-8",
            success: function (data)
            {
                debugger;
                var oFNBatch = jQuery.parseJSON(data);
                if (oFNBatch.ErrorMessage=="" || oFNBatch.ErrorMessage==null){
                    if(oFNBatch.FNBatchID > 0){     
                        alert("Transfer Successfully!!");
                        $("#winTransfer").icsWindow('close');
                    }
                    else {
                        alert("Invalid Data");
                    }
                }else{
                    alert(oFNBatch.ErrorMessage);
                }
                
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });

    });

    //start Dispo picker
    function DispoKeyDown(event) {
        //return;
        if (event.which == 13) {
            var oTxtName=$("#txtDispo").val();
            if (oTxtName != "") {
                PickDispo(oTxtName);
            }else{
                alert("Type Batch No and Press Enter!!");
                return;
            }
        }
        if (event.which == 8) //backspace=8
        {
            txtDispo.style.color = "black";
            txtDispo.style.fontWeight = "normal";
            $('#txtDispo').data("FNBatchID", 0);
        }
    }
    function PickDispo(oTxtName)
    {
        var oStyleSearch = { BatchNo: (typeof(oTxtName) != 'undefined'?oTxtName:"") };
        debugger;
        var obj = {
            BaseAddress:_sBaseAddress,
            Object: (oStyleSearch) ,
            ControllerName: "FNExecutionOrder", 
            ActionName: "GetFNBatches",
            IsWinClose: false
        };
        var tblColums = []; var oColumn = { field: "BatchNo", title: "Batch No", width: 200, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Qty", title: "Qty", width: 120, align: "right" }; tblColums.push(oColumn);
        DynamicPiker('Batch',obj,tblColums,false,'BatchNo','FNBatchID'); //pickerName(unique),obj,table,multiReturn,SearchingField, pkID
    }

    function SetPickerValueAssign(oPickerobj)
    {
        debugger;
        var oResult;
        if (oPickerobj.multiplereturn)
        {
            oResult = $('#'+oPickerobj.tableid).datagrid('getChecked');
        }
        else
        {
            oResult = $('#'+oPickerobj.tableid).datagrid('getSelected');
        }

        if (oPickerobj.winid == 'winBatch')
        {
            debugger;
            if(oResult.FNBatchID > 0){
                $('#txtDispo').val(oResult.BatchNo);
                $('#txtDispo').data("FNBatchID", oResult.FNBatchID);
                $('#txtPartialTransferQty').val(oResult.Qty);
            }
            else{
                alert("Invalid Batch!!");
            }
        }
        

        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
    }
    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 90){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }
    function DynamicPiker(pickerName,obj,pTblColums,pMultiReturn,pSearchField,pID)
    {
        debugger;
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        setInterval(updateProgress,250);

        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0][pID] > 0) {
                    debugger;
                    var tblColums = pTblColums;
                    var oPickerParam = {
                        winid: 'win'+pickerName,
                        winclass: 'cls'+pickerName,
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tbl'+pickerName+'s',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: pMultiReturn,
                        searchingbyfieldName: pSearchField,
                        windowTittle: pickerName+' List',
                        colsable:true
                    };
                    $.icsPicker(oPickerParam);
                    $("#progressbar").progressbar({ value: 0 });//hide
                    $("#progressbarParent").hide();
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("Data Not Found.");
                $("#progressbar").progressbar({ value: 0 });//hide
                $("#progressbarParent").hide();
                return;
            }
        });
    }
    function IntializePickerbutton(oPickerobj) {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            debugger;
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);
            }
            else if (e.which == 27)//enter=13
            {
                $("#" + oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();
            }
        });
    }


</script>





