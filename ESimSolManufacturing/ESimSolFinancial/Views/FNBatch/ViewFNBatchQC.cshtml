@{
    ViewBag.Title = "Batch QC";
}

<html>
<body>
    @model ESimSol.BusinessObjects.FNBatchQC
    <div class="menuMainCollectionTable">
        <div id="divPanel" class="easyui-panel" title="QC Declaration" style="font-family:Tahoma;text-align:center; width:100%;height:100%;">
            <div id="divFNBatchQC">
                <fieldset>
                    <legend>Fabric Batch Info </legend>
                    <div style="margin:0 auto;width:90%;">
                        <table border="0" cellpadding="2" cellspacing="1">
                            <tr>
                                <td style="width:15%; text-align:right;">Batch No:</td>
                                <td style="width:35%;text-align:left;"> 
                                    @Html.TextBoxFor(model => model.FNBatchNo, new { style = "width:220px;", id = "txtBatchNo", @class="reset-text"})
                                    <a id="btnSearchBatchNo" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true"></a>
                                </td>
                                <td style="width:15%; text-align:right;">Dispo No :</td>
                                <td style="width:35%;text-align:left;">
                                    @Html.TextBoxFor(model => model.FNExONo, new { style = "width:220px;", id = "txtFNExONo", @class = "reset-text" })
                                    <a id="btnSearchFNExeNo" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true"></a>
                                </td>
                            </tr> 
                            <tr>
                                <td style="width:15%; text-align:right;">Buyer :</td>
                                <td style="width:35%;text-align:left;">
                                    @Html.TextBoxFor(model => model.BuyerName, new { style = "width:250px;", id = "txtBuyer", @class = "reset-text", disabled = "disabled" })
                                </td>
                                <td style="width:10%; text-align:right;">Finish Type :</td>
                                <td style="width:35%;text-align:left;">
                                    @Html.TextBoxFor(model => model.FinishTypeName, new { style = "width:250px;", id = "txtFinishTypeName", @class = "reset-text", disabled = "disabled" })
                                </td>
                            </tr>
                            <tr>
                                <td style="width:10%; text-align:right;">Count Name :</td>
                                <td style="width:35%;text-align:left;">
                                    @Html.TextBoxFor(model => model.CountName, new { style = "width:250px;", id = "txtCountName", @class = "reset-text", disabled = "disabled" })
                                </td>
                                <td style="width:10%; text-align:right;">Construction :</td>
                                <td style="width:35%;text-align:left;">
                                    @Html.TextBoxFor(model => model.Construction, new { style = "width:250px;", id = "txtConstruction", @class = "reset-text", disabled = "disabled" })
                                </td>
                            </tr>
                            <tr>
                                <td style="width:15%; text-align:right;">Actual Width:</td>
                                <td style="width:35%;text-align:left;">
                                    @Html.TextBoxFor(model => model.ActualWidth, new { style = "width:250px;", id = "txtActualWidth", @class = "number reset-text" })
                                </td>
                                <td style="width:10%; text-align:right;">Start Date:</td>
                                <td style="width:35%;text-align:left;">
                                    <input id="dtStart" style="width:108px" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                    <span style="padding-left:5px;">End</span>
                                    <input id="dtEnd" style="width:108px" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                </td>
                            </tr>
                            <tr>
                                <td style="width:15%; text-align:right;">Batch Qty :</td>
                                <td style="width:35%;text-align:left;">
                                    @Html.TextBoxFor(model => model.BatchQty, new { style = "width:90px;", id = "txtBatchQty", @class = "number reset-text", disabled = "disabled" })
                                    <label style="padding-right:10px;">(Y)</label>
                                    @Html.TextBoxFor(model => model.BatchQtyInMtr, new { style = "width:90px;", id = "txtBatchQtyInMtr", @class = "number reset-text", disabled = "disabled" })
                                    <label>(M)</label>
                                </td>
                                <td style="width:15%; text-align:right;">Out Qty :</td>
                                <td style="width:35%;text-align:left;">
                                    @Html.TextBoxFor(model => model.OutQty, new { style = "width:90px;", id = "txtOutQty", @class = "number reset-text", disabled = "disabled" })
                                    <label style="padding-right:10px;">(Y)</label>
                                    @Html.TextBoxFor(model => model.OutQtyInMtr, new { style = "width:90px;", id = "txtOutQtyInMtr", @class = "number reset-text", disabled = "disabled" })
                                    <label>(M)</label>
                                 </td>
                            </tr>
                            <tr> 
                                <td style="width:15%; text-align:right;">QC Qty :</td>
                                <td style="width:35%;text-align:left;">
                                    @Html.TextBoxFor(model => model.Qty, new { style = "width:90px;", id = "txtQty", @class = "number reset-text", disabled = "disabled" })
                                    <label style="padding-right:10px;">(Y)</label>
                                    @Html.TextBoxFor(model => model.QtyInMtr, new { style = "width:90px;", id = "txtQtyInMtr", @class = "number reset-text", disabled = "disabled" })
                                    <label>(M)</label>
                                </td>
                                <td style="width:10%; text-align:right;">QC Incharge :</td>
                                <td style="width:35%;text-align:left;">
                                    <select id="cboQCIncharge" style="width:255px" class="reset-cbo"></select>
                                </td>
                            </tr>

                        </table>
                    </div>
                </fieldset>
            </div>
            <div style="height:51%;width:65%;float:left;margin-right:2px;">
                <table id="tblFNBatchQCDetail" title="QC Detail" class="easyui-datagrid" style="height:94%;width:100%" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarQCDetail" data-options="onClickRow: onClickRow">
                    @*<thead>
                        <tr>
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th data-options="field:'LotNo', width:'15%',align:'left',editor:{type:'text'}">Roll No</th>
                            <th field="GradeStr" width="10%">Grade</th>
                            <th field="ShadeStr" width="10%">Shade</th>
                            <th data-options="field:'Qty', width:'13%', align:'right',editor:{type:'numberbox',options:{precision:2}}">Length(Y)</th>
                            <th field="QtyInMtr" width="13%" align="right">Length(M)</th>
                            <th field="Lock" width="12%" align="center">Delivered</th>
                            <th field="LockDateStr" width="16%">Delivery Date</th>
                        </tr>
                    </thead>*@
                </table>
                <div id="toolbarQCDetail">
                    Grade : <select id="cboGrade" style="width:80px;"></select>&nbsp;
                    Shade : <select id="cboShade" style="width:80px;"></select>&nbsp;
                    Roll No :<input type="text" id="txtRollNo" style="width:60px;" placeholder="Roll No" />&nbsp;
                    Length: <input type="text" id="txtLengthY" style="width:50px;" class="number" placeholder="Yard" />(Y)
                    <span style="padding-right:10px"></span>
                    <input type="text" id="txtLengthM" style="width:50px;" class="number" placeholder="Meter" />(M)
                    <br />
                    <a id="btnAddQCDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                    <a id="btnEditQCDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true"><label id="lblUpdateEdit">Edit</label></a>
                    <a id="btnDeleteQCDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                    <a id="btnLock" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-disburse" plain="true">Send to Del. Store</a>
                    <a id="btnSticker" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Sticker</a>
                    <a id="btnStickerA4" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Sticker A4</a>
                    <a id="btnPacking" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Packing</a>
                    <a id="btnPackingNew" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Packing2</a>
                </div>
                <div style="width:100%;text-align:left;font-weight:bold;">
                    <div style="float:left; text-align:right; width:35%">Total</div>
                    <div style="float:left; text-align:right;width:20%"><label id="lblTotalQty"></label></div>
                </div>
            </div>
            <div style="height:51%;width:34%;float:right;">
                <table id="tblFNBatchQCFault" title="FB QC Fault Detail" class="easyui-datagrid" style="height:94%;width:100%" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarFBQCFault">
                    <thead>
                        <tr>
                            <th field="FaultName" width="45%">Name</th>
                            <th field="FaultPoint" width="15%" align="right">Point</th>
                            <th field="NoOfFault" width="18%" align="right">Value</th>
                            <th field="FaultTotal" width="15%" align="right">Total</th>
                        </tr>
                    </thead>
                </table>
                <div id="toolbarFBQCFault">
                    Fault : <select id="cboFault" style="width:80px;"></select>&nbsp;
                    Point : <select id="cboNoOfFault" style="width:60px;">
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                    </select>&nbsp;
                    Value : <input type="text" id="txtNoOfFault" class="number" style="width:60px;" placeholder="No of Fault" /><br />
                    <a id="btnAddFBQCFault" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                    <a id="btnRemoveFBQCFault" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                </div>
                <table border="0" cellpadding="0" cellspacing="0">
                    <tr style="font-weight:bold;">
                        <td style="width:200px;">Point: <label id="lblTPoint">0.00</label></td>
                        <td style="width:20px;"></td>
                        <td style="width:200px;">Total Fault  : <label id="lblTNoOfFault">0.00</label></td>
                        <td style="width:20px;"></td>
                        <td style="width:200px;">Total : <label id="lblTotalValue">0.00</label></td>
                    </tr>
                </table>
            </div>
            <fieldset>
                <legend style="font-weight:bold;" >Actions</legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold; width:100%;">
                    <tr>
                        <td style="width:100%; text-align:right">
                            <a id="btnQCDone" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">QC Done</a>
                            <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                            <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>

        <div id="winPreview" class="easyui-window" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="font-family:Tahoma">
                <fieldset style="margin-top:3px">
                    <div align="left" style="padding:10px 10px 10px 60px">
                        <table id="tblUser" border="0" style="font-size:12px;">
                            <tr>
                                <td style="text-align:right; width:15%"><label>Print :</label></td>
                                <td style="width:85%">
                                    <select id="cboPreview" style="width:100%;">
                                        <option value="">-- All --</option>
                                        <option value="1">Deilvired (Yes)</option>
                                        <option value="2">Deilvired (No)</option>
                                    </select>
                                </td>
                            </tr>
                            <tr>
                                <td style="text-align:right; width:15%"><label>Date :</label></td>
                                <td style="width:85%">
                                    <select id="cboDate" style="width:100%;"></select>
                                </td>
                            </tr>
                        </table>
                    </div>
                </fieldset>
                <fieldset style="margin-bottom:3px">
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; width:400px">
                        <tr>
                            <td style="width:200px; text-align:right"></td>
                            <td style="width:100px; text-align:right">
                                Is Meter?  <input type="checkbox" id="chkIsMeter" value="value" />
                            </td>
                            <td style="width:50px">
                                <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Confirm()">Done</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnCloseForPreview" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>
    </div>

    <div id="winFabricQCLockDateWindow" style="width:300px;" class="easyui-window" title="" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div id="divwinFabricBatch" tabindex="-1">
            <fieldset>
                <table style="width:100%;">
                    <tr>
                        <td>
                            <label>Production Date</label>
                        </td>
                        <td>
                            <input id="dtProDate" type="text" style="width: 120px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label>Delivery Date</label>
                        </td>
                        <td>
                            <input id="dtDeliveryDate" type="text" style="width: 120px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                </table>
            </fieldset>
            <fieldset>
                <legend>Actions</legend>
                <div style="float:right;">
                    <a id="btnOKTransfer" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true"> OK </a>
                    <a id="btnCloseWindowLockDate" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                </div>
            </fieldset>
        </div>
    </div>

</body>
</html>

<style type="text/css">
    #lblUpdateEdit{
        font-weight:100;
        margin-top:2px;
    }
</style>

<script type="text/javascript">

    var _sBaseAddress="";
   
    $(document).ready(function () {
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        var oFNBatchQC =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oFNBatchQCDetails = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.FNBatchQCDetails));
        var oFNBatchQCFaults = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.FNBatchQCFaults));
        var oEmployees = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Employees));
        var oGrades = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Grades));
        var oFaults = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Faults));
        var oEnumFNShades = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EnumFNShades));
      
        //$('#divPanel').prop('title', 'Photo by Kelly Clark');
        $('#tblFNBatchQCDetail').datagrid({
            columns:[[
                {field:'Selected',checkbox:true},
                {field:'LotNo',title:'Lot No', width:'15%',align:'left',editor:{type:'text'}},
                {field:'Grade',title:'Grade',width:'10%',
                     formatter:function(value,row){
                         return row.GradeStr || value;
                     },
                     editor:{
                         type:'combobox',
                          options:{
                            valueField:'id',
                            textField:'Value',
                            data:oGrades,
                            required:true
                        }
                     }
                },
                {field:'ShadeID',title:'Shade',width:'10%',
                    formatter:function(value,row){
                        return row.ShadeStr || value;
                    },
                    editor:{
                        type:'combobox',
                        options:{
                            valueField:'Value',
                            textField:'Text',
                            data:oEnumFNShades,
                            required:true
                        }
                    }
                },
                {field:'Qty',title:'Length(Y)', width:'13%',align:'right',editor:{type:'numberbox',options:{precision:2}}},
                {field:'QtyInMtr',title:'Length(M)', width:'10%',align:'right'},
                {field:'Lock',title:'Delivered', width:'12%',align:'left'},
                {field:'LockDateStr',title:'Delivery Date', width:'16%',align:'left'},

            ]],

        });
        $('#tblFNBatchQCDetail').datagrid({ selectOnCheck: false, checkOnSelect: false });
        $('#divFNBatchQC').data('FNBatchQC',oFNBatchQC);
        $('#txtBatchNo').data('FNBatchID',oFNBatchQC.FNBatchID);
        $('#divFNBatchQC').data('FNBatchQCFaults',oFNBatchQCFaults);
        DynamicRefreshList(oFNBatchQCDetails,'tblFNBatchQCDetail');
        //DynamicRefreshList(oFNBatchQCFaults,'tblFNBatchQCFault');
        SetTotal();
        SetTotalFNBatchQCFaults();

        $('#tblFNBatchQCDetail').data('GridEdit',true);
        if(sessionStorage.getItem("Operation")=="View"){
            ViewControl();
        }
        else{
            Permission();
        }
        $('.number').icsCurrencyBox();

        $("#dtStart").datebox("setValue", oFNBatchQC.StartTimeStr);
        $("#dtEnd").datebox("setValue", oFNBatchQC.EndTimeStr);

        $("#cboQCIncharge").icsLoadCombo({List: oEmployees,OptionValue: "EmployeeID",DisplayText: "Name", InitialValue:'--Select--'});
        $("#cboGrade").icsLoadCombo({List: oGrades,OptionValue: "id", DisplayText: "Value", InitialValue:'--Select--'});
        $("#cboShade").icsLoadCombo({List: oEnumFNShades,OptionValue: "Value", DisplayText: "Text", InitialValue:'--Select--'});

        $("#cboFault").icsLoadCombo({List: oFaults,OptionValue: "FPFID", DisplayText: "Name", InitialValue:'--Select--'});
        $("#cboQCIncharge").val(oFNBatchQC.QCInchargeID);


    });

    $(document).keydown(function (e) { if (e.keyCode == 27) { $('div').icsWindow('close'); } });


    function ResetControl(){
        $("#dtStart").datebox("setValue", icsdateformat(new Date()));
        $("#dtEnd").datebox("setValue", icsdateformat(new Date()));
        $("#cboQCIncharge,#cboGrade,#cboQCIncharge").val(0);
        $('#divFNBatchQC').data('FNBatchQC',{FNBatchQC:0, Qty:0});
        $('#txtBatchNo').data('FNBatchID',0);
        $('#txtBuyer,#txtFinishTypeName,#txtCountName,#txtConstruction,#txtQty').val("");
        $('.number').val("0.00")
        DynamicRefreshList([],'tblFNBatchQCDetail');
        DynamicRefreshList([],'tblFNBatchQCFault');
    }


    $("#txtLengthY").keyup(function (e) {
        var nVal = parseFloat(icsRemoveComma($(this).val()));
        $('#txtLengthM').val(GetMeter(nVal,2));
        if (nVal == "" || nVal == null) {
            $(this).val("");
        }
    });

    $("#txtLengthM").keyup(function (e) {
        var nVal = parseFloat(icsRemoveComma($(this).val()));
        $('#txtLengthY').val(GetYard(nVal,2));
        if (nVal == "" || nVal == null) {
            $(this).val("");
        }
    });


    function Permission(){
        if($('#divFNBatchQC').data('FNBatchQC').FNBatchStatus==10 || $('#divFNBatchQC').data('FNBatchQC').FNBatchStatus>11){
            $('#btnQCDone').hide();
            ViewControl();
        }
        else if($('#tblFNBatchQCDetail').datagrid('getRows').length>0 ){
            $('#btnQCDone').show();
        }
        else{
            $('#btnQCDone').hide();
            if(parseInt($('#divFNBatchQC').data('FNBatchQC').FNBatchQCID)>0){
                ViewControl();
            }
        }
    }

    function ViewControl(){
        $('#txtBatchNo,#txtFNExONo').css({'width':'250px'});
        $('.reset-text').prop('disabled',true);
        $('.reset-cbo').prop('disabled',true);
        $(".easyui-datebox").datebox({'disabled':true});
        $('#btnSearchBatchNo, #btnSearchFNExeNo, #toolbarQCDetail, #toolbarFBQCFault, #btnSave,#btnQCDone').hide();
        $('#tblFNBatchQCDetail').data('GridEdit',false);
    }
    /*----------------- Search By Batch & FN Exe No -----------------*/

    $("#btnSearchBatchNo").click(function(){
        GetsFNBatch($.trim($("#txtBatchNo").val()), true);
    });

    $("#btnSearchFNExeNo").click(function(){
        GetsFNBatch($.trim($("#txtFNExONo").val()), false);
    });

    $("#txtBatchNo").keydown(function(e){
        if(e.keyCode === 13)
        {
            if($.trim($("#txtBatchNo").val())=='')
            {
                alert("FN Batch No required to search.");
                return false;
            }
            GetsFNBatch($.trim($("#txtBatchNo").val()), true);
        }
        else if (e.keyCode == 8 || e.keyCode==27)
        {
            //$('#txtBatchNo').val();
            ResetControl();
        }
    });

    $("#txtFNExONo").keydown(function(e){
        if(e.keyCode === 13)
        {
            if($.trim($("#txtFNExONo").val())=='')
            {
                alert("Dispo no required to search.");
                return false;
            }
            GetsFNBatch($.trim($("#txtFNExONo").val()), false);
        }
        else if (e.keyCode == 8 || e.keyCode==27)
        {
            ResetControl();
        }
    })

    function GetsFNBatch(sValue, bIsFNBatchSearch)
    {
        debugger;
        var oFNBatch={
            BatchNo : (bIsFNBatchSearch)? sValue:"",
            FNExONo : (!bIsFNBatchSearch)? sValue:"",
        };

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oFNBatch,
            ControllerName: "FNBatch",
            ActionName: "GetsFNBatchOut",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].FNBatchID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "BatchNo", title: "FNBatch No", width: "20%", align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "FNExONo", title: "Dispo No", width: "20%", align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Qty", title: "Batch Qty", width: "20%", align: "right", formatter:formatPrice }; tblColums.push(oColumn);
                    oColumn = { field: "OutQty", title: "Out Qty", width: "20%", align: "right", formatter:formatPrice }; tblColums.push(oColumn);
                    oColumn = { field: "MUnit", title: "Unit", width: "10%", align: "center" }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winFNBatch',
                        winclass: 'clsFNBatch',
                        winwidth: 450,
                        winheight: 460,
                        tableid: 'tblFNBatchs',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'BatchNo',
                        windowTittle: 'FN Batch List',
                        placeholder : "Search By Batch No"
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);

                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }
            }
            else
            {
                alert("Sorry, No FN Batch Found For Out.");
            }
        });
    }

    function IntializePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            ButtonEvents(oPickerobj);
        });
        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                ButtonEvents(oPickerobj);
            }
        });
    }

    function ButtonEvents(oPickerobj)
    {
        var oreturnobj = "";var oreturnobjs = [];
        if(oPickerobj.multiplereturn){
            oreturnobjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
        }else{
            oreturnobj = $('#'+oPickerobj.tableid).datagrid('getSelected');
        }

        if(oPickerobj.winid == 'winFNBatch')
        {

            if (oreturnobj != null && oreturnobj.FNBatchID> 0)
            {
                $('#txtBatchNo').data('FNBatchID',oreturnobj.FNBatchID);
                $('#txtBatchNo').val(oreturnobj.BatchNo);
                $('#txtFNExONo').val(oreturnobj.FNExONo);
                $('#txtBuyer').val(oreturnobj.BuyerName);
                $('#txtFinishTypeName').val(oreturnobj.FinishTypeName);
                $('#txtCountName').val(oreturnobj.CountName);
                $('#txtConstruction').val(oreturnobj.Construction);
                $('#txtBatchQty').val(formatPrice(oreturnobj.Qty.toFixed(2)));
                $('#txtBatchQtyInMtr').val(formatPrice(GetMeter(oreturnobj.Qty,2)));
                $('#txtOutQty').val(formatPrice(oreturnobj.OutQty.toFixed(2)));
                $('#txtOutQtyInMtr').val(formatPrice(GetMeter(oreturnobj.OutQty,2)));
                $("#" + oPickerobj.winid).icsWindow("close");
            }
            else{
                alert("Please select a batch.");
                return false;
            }
        }

    }

    /*----------------- FN Batch QC -----------------*/

    function ValidationFNBatchQC(){

        if(parseInt($('#txtBatchNo').data('FNBatchID')) <=0){
            alert("FN bacth required.");
            $("#txtBatchNo").focus();
            return false;
        }else{
            $("#txtBatchNo").removeClass("errorFieldBorder");
        }

        if(new Date($('#dtStart').datebox('getValue'))>new Date($('#dtEnd').datebox('getValue')))
        {
            alert("End date must be later than start date.");
            return false;
        }

        //if (parseInt($("#cboQCIncharge").val()) == 0) {
        //    alert("Select incharge.");
        //    $("#cboQCIncharge").focus();
        //    $("#cboQCIncharge").addClass("errorFieldBorder");
        //    return false;
        //} else {
        //    $("#cboQCIncharge").removeClass("errorFieldBorder");
        //}

        return true;
    }

    function RefreshObject()
    {
        var oFNBatchQC= {
            FNBatchQCID : $('#divFNBatchQC').data('FNBatchQC').FNBatchQCID,
            FNBatchID : parseInt($('#txtBatchNo').data('FNBatchID')),
            Qty:icsRemoveComma($('#txtQty').val()),
            StartTime : $('#dtStart').datebox('getValue'),
            EndTime : $('#dtEnd').datebox('getValue'),
            QCInchargeID: $('#cboQCIncharge').val(),
            ActualWidth : parseFloat($('#txtActualWidth').val())
        };
        return oFNBatchQC;
    }

    $("#btnSave").click(function(e){

        debugger;
        if(!ValidationFNBatchQC())
            return false;

        var oFNBatchQC=RefreshObject();

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oFNBatchQC,
            ObjectId: oFNBatchQC.FNBatchQCID,
            ControllerName: "FNBatch",
            ActionName: "FNBatchQCSave",
            TableId: "",
            IsWinClose: false,
            Message: (oFNBatchQC.FNBatchQCID>0)?"Update Successfully." : "Save Successfully."
        };
        $.icsSave(obj, function (response) {
            if (response.status && response.obj != null) {
                if (response.obj.FNBatchQCID > 0) {
                    $('#divFNBatchQC').data('FNBatchQC',response.obj);
                    SetFNBatchQC();
                }
            }
            else{
                alert("Unable to save");
            }
        });

    });

    /*----------------- QC Detail Save & Delete -----------------*/

    function ValidationFNBatchQCDetail(){

        if (parseInt($("#cboGrade").val()) == 0) {
            alert("Select grade.");
            $("#cboGrade").focus();
            $("#cboGrade").addClass("errorFieldBorder");
            return false;
        } else {
            $("#cboGrade").removeClass("errorFieldBorder");
        }

        if($.trim($("#txtRollNo").val()) == "")
        {
            alert("Roll no required.");
            $("#txtRollNo").focus();
            return false;
        }

        //if (parseFloat(icsRemoveComma($("#txtLengthY").val()))<= 0) {
        //    alert("Length should be greater than 0");
        //    $("#txtLengthY").focus();
        //    $("#txtLengthY").addClass("errorFieldBorder");
        //    return false;
        //} else {
        //    $("#txtLengthY").removeClass("errorFieldBorder");
        //}

        //var nQty=0;
        //var oQCDetails =$("#tblFNBatchQCDetail").datagrid("getRows");
        //if(oQCDetails.length>0)
        //{
        //    for(var i=0;i<oQCDetails.length;i++)
        //    {
        //        nQty= parseFloat(nQty)+ parseFloat(oQCDetails[i].Qty);
        //    }
        //}

        //var nOutQty=parseFloat(icsRemoveComma($("#txtOutQty").val()));

        //if((parseFloat(nQty) + parseFloat(icsRemoveComma($("#txtLengthY").val()))) >nOutQty){
        //    alert("Max. allowed qty "+ formatPrice(parseFloat(nOutQty)-parseFloat(nQty)));
        //    $("#txtLengthY").focus();
        //    $("#txtLengthY").addClass("errorFieldBorder");
        //    return false;
        //}
        //else{
        //    $("#txtLengthY").removeClass("errorFieldBorder");
        //}

        //var oQCDetails =$("#tblFNBatchQCDetail").datagrid("getRows");
        //if(oQCDetails.length>0)
        //{
        //    for(var i=0;i<oQCDetails.length;i++)
        //    {
        //        if(parseInt(oQCDetails[i].Grade) == parseInt($("#cboGrade").val()))
        //        {
        //            alert("Already this grade is exists in row no :"+ (i+1));
        //            return false;
        //            break;
        //        }
        //    }

        //}

        return true;
    }

    function RefreshObjectFNBatchQCDetail(){
        var oFNBatchQCDetail={
            FNBatchQCDetailID : 0,
            FNBatchQCID : $('#divFNBatchQC').data('FNBatchQC').FNBatchQCID,
            Grade : $('#cboGrade').val(),
            LotNo : $('#txtRollNo').val(),
            Qty : icsRemoveComma($("#txtLengthY").val()),
            ShadeID:$('#cboShade').val(),
            FNBatchQC: RefreshObject()
        }
        return oFNBatchQCDetail;
    }


    function AddQCDetail(){
        debugger;
        if(!ValidationFNBatchQC())
            return false;
        if(!ValidationFNBatchQCDetail())
            return false;

        var oFNBatchQCDetail=RefreshObjectFNBatchQCDetail();


        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oFNBatchQCDetail,
            ObjectId: oFNBatchQCDetail.FNBatchQCDetailID,
            ControllerName: "FNBatch",
            ActionName: "FNBatchQCDetailSave",
            TableId: "",
            IsWinClose: false,
            Message: ""
        };
        $.icsSave(obj, function (response) {
            if (response.status && response.obj != null) {
                if (response.obj.FNBatchQCDetailID > 0) 
                {
                    if(response.obj.FNBatchQC.FNBatchQCID>0){
                        $('#divFNBatchQC').data('FNBatchQC',response.obj.FNBatchQC);
                        SetFNBatchQC();
                    }
                    else
                        response.obj.FNBatchQC=null;

                    if(response.obj.FNBatchQCDetailIDs.length>0 && response.obj.FNBatchQCDetailIDs[0].ErrorMessage!='')
                    {
                        alert(response.obj.FNBatchQCDetailIDs[0].ErrorMessage); return;
                    }

                    $('#tblFNBatchQCDetail').datagrid('appendRow',response.obj);
                    $('#txtRollNo').focus();
                    SetTotal();
                    Permission();
                }
            }
            else{
                alert("Unable to save");
            }
        });

    }

    $('#txtLengthY').keydown(function(e){

        if(e.keyCode==13){
            AddQCDetail();
        }
    })



    $("#btnAddQCDetail").click(function(e){
        AddQCDetail();
    });

    $("#btnEditQCDetail").click(function(e){
        endEditing();
    });

    $('#btnDeleteQCDetail').click(function(e){
        var oFNBatchQCDetail = $('#tblFNBatchQCDetail').datagrid('getSelected');
        if (oFNBatchQCDetail ==null || oFNBatchQCDetail.FNBatchQCDetailID <=0 ) { alert("Please select an item from list."); return ; }
        if (!confirm("Confirm to delete?")) return;
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oFNBatchQCDetail,
            ControllerName: "FNBatch",
            ActionName: "FNBatchQCDetailDelete",
            TableId: "tblFNBatchQCDetail",
            IsWinClose: false
        };
        $.icsDelete(obj, function (response) {
            SetTotal();
            Permission();
        });

    });

    function SetTotal()
    {
        var oFNBatchQCDetails = $('#tblFNBatchQCDetail').datagrid('getRows');
        var nTotalLengthY = 0;
        var nLength = oFNBatchQCDetails.length;
        for(var i = 0;i<nLength;i++)
        {
            nTotalLengthY = parseFloat(nTotalLengthY)+ parseFloat(oFNBatchQCDetails[i].Qty);
        }
        $('#lblTotalQty').html(nTotalLengthY.toFixed(2));
        $('#txtQty').val(formatPrice(parseFloat(nTotalLengthY.toFixed(2))));
        if($('#divFNBatchQC').data('FNBatchQC').FNBatchQCID>0){
            $('#divFNBatchQC').data('FNBatchQC').Qty=parseFloat(nTotalLengthY.toFixed(2));
            SetFNBatchQC();
        }
    }

    /*----------------- Grid Edit -----------------*/

    var editIndex = undefined;

    function onClickRow(index) {
        if($('#tblFNBatchQCDetail').data('GridEdit')){
            debugger;
            var oRow=$('#tblFNBatchQCDetail').datagrid('getSelected');
            if (endEditing()&& !oRow.IsLock) {
                debugger;
                $('#lblUpdateEdit').text('Update');
                $('#tblFNBatchQCDetail').datagrid('selectRow', index).datagrid('beginEdit', index);
                var oFNBQCD=$('#tblFNBatchQCDetail').datagrid('getSelected');
                $('#tblFNBatchQCDetail').data('LotNo',oFNBQCD.LotNo);
                $('#tblFNBatchQCDetail').data('Qty',oFNBQCD.Qty);
                $('#tblFNBatchQCDetail').data('Grade',oFNBQCD.Grade);
                $('#tblFNBatchQCDetail').data('ShadeID',oFNBQCD.ShadeID);
                editIndex = index;
            }
            else {
                $('#tblFNBatchQCDetail').datagrid('selectRow', editIndex);
            }
        }

    }

    function endEditing() {

        if (editIndex == undefined) {
            return true;
        }
        if ($('#tblFNBatchQCDetail').datagrid('validateRow', editIndex)) {

            $('#tblFNBatchQCDetail').datagrid('endEdit', editIndex);
            $('#tblFNBatchQCDetail').datagrid('selectRow', editIndex);
            var oFNBatchQCDetail = $('#tblFNBatchQCDetail').datagrid('getSelected');
            debugger;
            var sLotNo=$('#tblFNBatchQCDetail').data('LotNo');
            var nQty=$('#tblFNBatchQCDetail').data('Qty');
            var nGrade=$('#tblFNBatchQCDetail').data('Grade');
            var nShadeID=$('#tblFNBatchQCDetail').data('ShadeID');
            if(sLotNo != oFNBatchQCDetail.LotNo ||  parseFloat(nQty) != parseFloat(oFNBatchQCDetail.Qty) || parseInt(nGrade)!=parseInt(oFNBatchQCDetail.Grade) || parseInt(nShadeID)!=parseInt(oFNBatchQCDetail.ShadeID))
            {
                var nIndex=editIndex;
                var obj = {
                    BaseAddress: _sBaseAddress,
                    Object: oFNBatchQCDetail,
                    ObjectId: oFNBatchQCDetail.FNBatchQCDetailID,
                    ControllerName: "FNBatch",
                    ActionName: "FNBatchQCDetailSave",
                    TableId: "",
                    IsWinClose: false,
                    Message: ""
                };
                $.icsSave(obj, function (response) {
                    if (response.status && response.obj != null) {
                        if(response.obj.FNBatchQCDetailID>0)
                        {
                            $("#tblFNBatchQCDetail").datagrid("updateRow", { index: nIndex, row: response.obj });
                            SetTotal();
                        }
                        else{
                            $('#tblFNBatchQCDetail').datagrid('selectRow', nIndex).datagrid('beginEdit', nIndex);
                            $('#tblFNBatchQCDetail').datagrid('endEdit', editIndex);
                            return false;
                        }
                    }
                });
            }
            editIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }


    /*-----------------  FN Batch QC Fault -----------------*/


    function ValidationFNBatchQCFault(){

        if($("#cboFault").val() == 0)
        {
            alert("Select Fault.");
            $("#cboFault").focus();
            return false;
        }else{
            $("#cboFault").removeClass("errorFieldBorder");
        }

        if($("#cboNoOfFault").val() == 0)
        {
            alert("Select Point.");
            $("#cboNoOfFault").focus();
            return false;
        }else{
            $("#cboNoOfFault").removeClass("errorFieldBorder");
        }

        if($.trim($("#txtNoOfFault").val()) == "" || parseInt($("#txtNoOfFault").val()) <= 0)
        {
            alert("Give Value.");
            $("#txtNoOfFault").focus();
            return false;
        }else{
            $("#txtNoOfFault").removeClass("errorFieldBorder");
        }
        return true;
    }

    function RefreshObjectFNBatchQCFault(){

        var oFNBatchQCDetail = $("#tblFNBatchQCDetail").datagrid("getSelected");

        var oFNBatchQCFault={
            FNBQCFaultID : 0,
            FNBatchQCDetailID : oFNBatchQCDetail.FNBatchQCDetailID,
            FPFID : $("#cboFault").val(),
            FaultPoint : $("#cboNoOfFault").val(),
            NoOfFault : parseInt($("#txtNoOfFault").val())
        };
        return oFNBatchQCFault
    }

    $("#btnAddFBQCFault").click(function(){
        var oFNBatchQCDetail = $("#tblFNBatchQCDetail").datagrid("getSelected");
        if(oFNBatchQCDetail == null || oFNBatchQCDetail.FNBatchQCDetailID <= 0)
        {
            alert("Select FN batch QC detail.");
            return false;
        }
        if(!ValidationFNBatchQCFault())
            return false;
        var oFNBatchQCFault=RefreshObjectFNBatchQCFault();
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oFNBatchQCFault,
            ObjectId: oFNBatchQCFault.FNBQCFaultID,
            ControllerName: "FNBatch",
            ActionName: "SaveFNBatchQCFault",
            TableId: "tblFNBatchQCFault",
            IsWinClose: false,
            Message:""
        };
        $.icsSave(obj, function (response) {
            if (response.status && response.obj != null) {
                if(response.obj.FNBQCFaultID>0)
                {
                    var oFNBatchQCFaults= $('#divFNBatchQC').data('FNBatchQCFaults');
                    oFNBatchQCFaults.push(response.obj);
                    $('#divFNBatchQC').data('FNBatchQCFaults',oFNBatchQCFaults);
                    Refresh_FNBatchQCFaults(oFNBatchQCDetail.FNBatchQCDetailID);
                }
                else
                {
                    alert(response.obj.ErrorMessage);
                }
            }
        });
    });

    $("#btnRemoveFBQCFault").click(function(){
        debugger;
        var oFNBatchQCFault = $("#tblFNBatchQCFault").datagrid("getSelected");
        if(oFNBatchQCFault == null || oFNBatchQCFault.FNBQCFaultID <= 0)
        {
            alert("Please Select an item from list.");
            return false;
        }
        var oFNBatchQCFaults= $('#divFNBatchQC').data('FNBatchQCFaults');
        oFNBatchQCFaults.pop(oFNBatchQCFault);
        if (!confirm("Confirm to Delete?")) return false;
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oFNBatchQCFault,
            ControllerName: "FNBatch",
            ActionName: "DeleteFNBatchQCFault",
            TableId: "tblFNBatchQCFault",
            IsWinClose: false
        };
        $.icsDelete(obj, function (response) {
            $('#divFNBatchQC').data('FNBatchQCFaults',oFNBatchQCFaults);

            SetTotalFNBatchQCFaults();
        });
    });

    function SetTotalFNBatchQCFaults()
    {
        $("#txtNoOfFault").val(0);
        var nTNoOfFault=0;
        var nFaultPoint=0;
        var nFaultTotal=0;
        var oFBQCFaults = $("#tblFNBatchQCFault").datagrid("getRows");
        var nLength = oFBQCFaults.length;
        if(nLength>0)
        {
            for(var i=0;i<nLength;i++)
            {
                nFaultPoint = parseFloat(nFaultPoint) + parseFloat(oFBQCFaults[i].FaultPoint);
                nTNoOfFault = parseFloat(nTNoOfFault) + parseFloat(oFBQCFaults[i].NoOfFault);
                nFaultTotal = parseFloat(nFaultTotal) + parseFloat(oFBQCFaults[i].FaultTotal);
            }
        }
        $("#lblTPoint").text(formatPrice(nFaultPoint,2));
        $("#lblTNoOfFault").text(formatPrice(nTNoOfFault,2));
        $("#lblTotalValue").text(formatPrice(nFaultTotal,2));
    }

    /*-------FN Batch Lock-----------*/

    //$("#btnLock").click(function(){
    //    debugger;
    //    var oFNBatchQCDetails=$("#tblFNBatchQCDetail").datagrid("getChecked");

    //    if (oFNBatchQCDetails.length==0) {
    //        alert("Select at least one item.");
    //        return false;
    //    }
    //    var bHasUnlockItem=false;
    //    var sFNBatchQCDetailIDs="";
    //    for(var i=0;i<oFNBatchQCDetails.length;i++)
    //    {
    //        if(!oFNBatchQCDetails[i].IsLock)
    //            sFNBatchQCDetailIDs = oFNBatchQCDetails[i].FNBatchQCDetailID + "," + sFNBatchQCDetailIDs;
    //        else
    //            bHasUnlockItem=true;
    //    }

    //    if(bHasUnlockItem)
    //    {
    //        alert("Your selected item(s) already delivered.");
    //        return false;
    //    }

    //    sFNBatchQCDetailIDs = sFNBatchQCDetailIDs.substring(0, sFNBatchQCDetailIDs.length - 1);


    //    if (!confirm("Confirm send to delivery store?")) return false;

    //    var oFNBatchQCDetail={ FNBatchQCDetailIDs : sFNBatchQCDetailIDs };

    //    var obj =
    //    {
    //        BaseAddress: _sBaseAddress,
    //        Object: oFNBatchQCDetail,
    //        ObjectId: oFNBatchQCDetail.FNBatchQCDetailID,
    //        ControllerName: "FNBatch",
    //        ActionName: "LockFNBatchQCDetail",
    //        TableId: "",
    //        IsWinClose: false,
    //        Message: ""
    //    };
    //    $.icsSave(obj, function (response) {
    //        if (response.status && response.obj != null) {
    //            if ($.trim(response.obj.ErrorMessage) == "")
    //            {
    //                alert("Successfully Sent.");
    //                DynamicRefreshList(response.obj.FNBatchQCDetails,"tblFNBatchQCDetail");
    //            }
    //        }
    //    });
    //});

    $("#btnLock").click(function(){
        var oFNBatchQCDetails=$("#tblFNBatchQCDetail").datagrid("getChecked");
        if (oFNBatchQCDetails.length==0) {
            alert("Please check minimum one item!");
            return false;
        }
        $("#dtProDate").datebox({ disabled:  false  });
        $("#dtProDate").datebox("setValue", icsdateformat(new Date()));

        $("#dtDeliveryDate").datebox({ disabled:  false  });
        $("#dtDeliveryDate").datebox("setValue", icsdateformat(new Date()));
        $("#winFabricQCLockDateWindow").icsWindow("open");
    });

    $('#btnOKTransfer').click(function(e){
        var oFNBatchQCDetails=$("#tblFNBatchQCDetail").datagrid("getChecked");
        if (oFNBatchQCDetails.length==0) {
            alert("Select at least one item.");
            return false;
        }
        var bHasUnlockItem=false;
        var sFNBatchQCDetailIDs="";
        for(var i=0;i<oFNBatchQCDetails.length;i++)
        {
            if(!oFNBatchQCDetails[i].IsLock)
                sFNBatchQCDetailIDs = oFNBatchQCDetails[i].FNBatchQCDetailID + "," + sFNBatchQCDetailIDs;
            else
                bHasUnlockItem=true;
        }
        if(bHasUnlockItem)
        {
            alert("Your selected item(s) already delivered.");
            return false;
        }
        sFNBatchQCDetailIDs = sFNBatchQCDetailIDs.substring(0, sFNBatchQCDetailIDs.length - 1);
        if (!confirm("Confirm send to delivery store?")) return false;
        var oFNBatchQCDetail={ 
            FNBatchQCDetailIDs : sFNBatchQCDetailIDs,
            //FBQCID : oFBQCDs[0].FBQCID,
            ProDate :  $("#dtProDate").datebox("getValue"),
            DeliveryDate: $("#dtDeliveryDate").datebox("getValue")
        };
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oFNBatchQCDetail,
            ObjectId: oFNBatchQCDetail.FNBatchQCDetailID,
            ControllerName: "FNBatch",
            ActionName: "LockFNBatchQCDetail",
            TableId: "",
            IsWinClose: false,
            Message: ""
        };
        $.icsSave(obj, function (response) {
            if (response.status && response.obj != null) {
                if ($.trim(response.obj.ErrorMessage) == "")
                {
                    alert("Successfully Sent.");
                    DynamicRefreshList(response.obj.FNBatchQCDetails,"tblFNBatchQCDetail");
                    $("#winFabricQCLockDateWindow").icsWindow("close");
                }
            }
        });


    });

    $('#btnCloseWindowLockDate').click(function(e){
        $("#winFabricQCLockDateWindow").icsWindow("close");
    });

    /*-------FN Batch QC Done-----------*/


    $("#btnQCDone").click(function(){

        debugger;
        var oFNBatchQCDetails=$("#tblFNBatchQCDetail").datagrid("getRows");

        if (oFNBatchQCDetails.length==0) {
            alert("No QC detail item found.");
            return false;
        }
        var bHasUnlockItem=false;
        for(var i=0;i<oFNBatchQCDetails.length;i++)
        {
            if(!oFNBatchQCDetails[i].IsLock){
                bHasUnlockItem=true;
                break;
            }
        }

        if(bHasUnlockItem)
        {
            alert("All QC items yet not delivered.");
            return false;
        }

        if (!confirm("Confirm to QC Done. No way to roll back.")) return false;

        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: $('#divFNBatchQC').data('FNBatchQC'),
            ObjectId: $('#divFNBatchQC').data('FNBatchQC').FNBatchID,
            ControllerName: "FNBatch",
            ActionName: "FNBatchQCDone",
            TableId: "",
            IsWinClose: false,
            Message: ""
        };
        $.icsSave(obj, function (response) {
            if (response.status && response.obj != null) {
                if (response.obj.FNBatchID>0)
                {
                    alert("QC Done Successfully.");
                    $('#divFNBatchQC').data('FNBatchQC',response.obj);
                    SetFNBatchQC();
                    Permission();
                }
            }
        });
    });

    /*-------FN Sticker-----------*/

    $("#btnSticker").click(function(){
        debugger;
        var oFNBatchQCDetail=$("#tblFNBatchQCDetail").datagrid("getSelected");

        if (oFNBatchQCDetail==null || oFNBatchQCDetail.FNBatchQCDetailID<=0) {
            alert("Select a valid item from list.");
            return false;
        }

        var nts = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress + '/FNBatch/PrintFNInspectionSticker?nId=' + oFNBatchQCDetail.FNBatchQCDetailID + "&nts=" + nts, "_blank");

    });

    $("#btnStickerA4").click(function(){
        debugger;
        var oFNBatchQCDetails=$("#tblFNBatchQCDetail").datagrid("getChecked");

        if (oFNBatchQCDetails==null || oFNBatchQCDetails.length<=0) {
            alert("No checked item found to print.");
            return false;
        }

        var Ids="";
        for(var i=0;i<oFNBatchQCDetails.length;i++){
            Ids+=oFNBatchQCDetails[i].FNBatchQCDetailID+",";
        }

        Ids=Ids.substring(0,Ids.length-1);


        var nts = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress + '/FNBatch/PrintFNInspectionStickerA4?sId=' + Ids + "&nts=" + nts, "_blank");

    });

    /*-------FN Sticker-----------*/
    $('#btnCloseForPreview').click(function(e) {
        $("#winPreview").icsWindow('close');
    });
    $("#btnPacking").click(function()
    {
        var oCheckeds = $("#tblFNBatchQCDetail").datagrid("getChecked");

        if(oCheckeds.length>0){ PrintPaking(oCheckeds);return; }

        var oDates =[];
        var oFNBatchQCDetails = $("#tblFNBatchQCDetail").datagrid("getRows");
        
        debugger;
        for(var i=0; i < oFNBatchQCDetails.length; i++)
        {
            if(oFNBatchQCDetails[i].LockDateStr.length>0)
            {
                var isExists = false;
                for(var j=0; j < oDates.length; j++)
                    if(oDates[j].Value == oFNBatchQCDetails[i].LockDateStr) { isExists = true; break; }
                if(!isExists) oDates.push( {id: i+1, Value:oFNBatchQCDetails[i].LockDateStr} );
            }
        }
        $("#cboDate").data('Print',1);
        $("#cboDate").data('DateList',oDates);
        $("#cboDate").icsLoadCombo({List:oDates ,OptionValue: "id",DisplayText: "Value", InitialValue:'--All--'});
        $("#winPreview").icsWindow('open','Preview Options');
    });
    
    function PrintPaking(oFNBatchQCDetails){
        var sFNQCDID="";
       
        for(var i=oFNBatchQCDetails.length - 1; i >= 0; i--)
        {
            sFNQCDID += oFNBatchQCDetails[i].FNBatchQCDetailID +',';
        }
        sFNQCDID = sFNQCDID.substring(0, sFNQCDID.length - 1);
        
        var nts = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress + '/FNBatch/PrintFNPackingTransfer?sFNQCDID='+ sFNQCDID+"&nFNBatchID=" + $('#divFNBatchQC').data('FNBatchQC').FNBatchQCID+" &buid="+ parseInt(sessionStorage.getItem("buid"))+"&IsMeter="+sessionStorage.getItem("chkIsMeter")   +" &nts=" + nts, "_blank");
        //window.open(_sBaseAddress + '/FNBatch/PrintFNPackingTransferNew?sFNQCDID='+ sFNQCDID +"&nFNBatchID=" + $('#divFNBatchQC').data('FNBatchQC').FNBatchQCID+" &buid="+ parseInt(sessionStorage.getItem("BUID")) +" &nts=" + nts, "_blank");
    
    }

    $("#btnPackingNew").click(function()
    {
        var oCheckeds = $("#tblFNBatchQCDetail").datagrid("getChecked");
        if(oCheckeds.length>0){ PrintQC_InspectionReport(oCheckeds);return; }

        var oDates =[];
        var oFNBatchQCDetails = $("#tblFNBatchQCDetail").datagrid("getRows");
        
        debugger;
        for(var i=0; i < oFNBatchQCDetails.length; i++)
        {
            if(oFNBatchQCDetails[i].LockDateStr.length>0)
            {
                var isExists = false;
                for(var j=0; j < oDates.length; j++)
                    if(oDates[j].Value == oFNBatchQCDetails[i].LockDateStr) { isExists = true; break; }
                if(!isExists) oDates.push( {id: i+1, Value:oFNBatchQCDetails[i].LockDateStr} );
            }
        }
        $("#cboDate").data('Print',2);
        $("#cboDate").data('DateList',oDates);
        $("#cboDate").icsLoadCombo({List:oDates ,OptionValue: "id",DisplayText: "Value", InitialValue:'--All--'});
        $("#winPreview").icsWindow('open','Preview Options');
        //debugger;
    });
    $("#btnPrint").click(function()
    {
        sessionStorage.setItem("chkIsMeter", $("#chkIsMeter").is(":checked"));
        var oResults = [];
        var nPreviewType = parseInt($('#cboPreview').val());
        var nDate = $('#cboDate').val();
        var sDate = $('#cboDate').find('option:selected').text();
        var oDateList = $("#cboDate").data('DateList');

        var oFNBatchQCDetails = $("#tblFNBatchQCDetail").datagrid("getRows");
        debugger;
        for(var i=0; i < oFNBatchQCDetails.length; i++)
        {
            if(nPreviewType>0)
            {
                if(nDate<=0)
                {
                    if(nPreviewType== 1 && oFNBatchQCDetails[i].Lock == 'Yes') oResults.push(oFNBatchQCDetails[i]);  
                    else if(nPreviewType== 2 && oFNBatchQCDetails[i].Lock == 'No') oResults.push(oFNBatchQCDetails[i]);  
                }
                else 
                {
                    if(oFNBatchQCDetails[i].LockDateStr == sDate)
                    {
                        if(nPreviewType== 1 && oFNBatchQCDetails[i].Lock == 'Yes') oResults.push(oFNBatchQCDetails[i]);
                        else if(nPreviewType== 2 && oFNBatchQCDetails[i].Lock == 'No')  oResults.push(oFNBatchQCDetails[i]);
                    }
                }
            }
            else if(nDate>0)
            {
                if(oFNBatchQCDetails[i].LockDateStr == sDate) { oResults.push(oFNBatchQCDetails[i]); }
            }
            else
            {
                oResults.push(oFNBatchQCDetails[i]);
            }
        }
        if(oResults.length>0)
        {
            if( $("#cboDate").data('Print')==1)
                PrintPaking(oResults) 
            else if( $("#cboDate").data('Print')==2)
                PrintQC_InspectionReport(oResults) 
        } 
        else alert('No Data Found To Preview!');
    });
    function PrintQC_InspectionReport(oFNBatchQCDetails){
        var sFNQCDID="";
       
        for(var i=oFNBatchQCDetails.length - 1; i >= 0; i--)
        {
            sFNQCDID += oFNBatchQCDetails[i].FNBatchQCDetailID +',';
        }
        sFNQCDID = sFNQCDID.substring(0, sFNQCDID.length - 1);
        
        var nts = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress + '/FNBatch/PrintFNPackingTransferNew?sFNQCDID='+ sFNQCDID +"&nFNBatchID=" + $('#divFNBatchQC').data('FNBatchQC').FNBatchQCID+" &buid="+ parseInt(sessionStorage.getItem("buid")) +"&IsMeter="+sessionStorage.getItem("chkIsMeter")  +" &nts=" + nts, "_blank");
    
    }
    /*------------Close-----------------*/

    /*-------FN Sticker-----------*/

    //$("#btnPacking").click(function(){

    //    var oFNBatchQCDetails = $("#tblFNBatchQCDetail").datagrid("getChecked");
    //    var sFNQCDID="";
    //    if(oFNBatchQCDetails.length <= 0)
    //    {
    //        //  alert("Please select item(s) from list.");
    //        if (!confirm("Confirm to Print all Roll?")) return;
    //    }
    //    else
    //    {
    //        for(var i=oFNBatchQCDetails.length - 1; i >= 0; i--)
    //        {
    //            sFNQCDID += oFNBatchQCDetails[i].FNBatchQCDetailID +',';
    //        }
    //        sFNQCDID = sFNQCDID.substring(0, sFNQCDID.length - 1);
    //    }
    //    var nts = ((new Date()).getTime()) / 1000;
    //    window.open(_sBaseAddress + '/FNBatch/PrintFNPackingTransfer?sFNQCDID='+ sFNQCDID+"&nFNBatchID=" + $('#divFNBatchQC').data('FNBatchQC').FNBatchQCID+" &buid="+ parseInt(sessionStorage.getItem("buid")) +" &nts=" + nts, "_blank");
    //});
    //$("#btnPackingNew").click(function(){

    //    var oFNBatchQCDetails = $("#tblFNBatchQCDetail").datagrid("getChecked");
    //    var sFNQCDID="";
    //    if(oFNBatchQCDetails.length <= 0)
    //    {
    //        //  alert("Please select item(s) from list.");
    //        if (!confirm("Confirm to Print all Roll?")) return;
    //    }
    //    else
    //    {
    //        for(var i=oFNBatchQCDetails.length - 1; i >= 0; i--)
    //        {
    //            sFNQCDID += oFNBatchQCDetails[i].FNBatchQCDetailID +',';
    //        }
    //        sFNQCDID = sFNQCDID.substring(0, sFNQCDID.length - 1);
    //    }
    //    var nts = ((new Date()).getTime()) / 1000;
    //    window.open(_sBaseAddress + '/FNBatch/PrintFNPackingTransferNew?sFNQCDID='+ sFNQCDID +"&nFNBatchID=" + $('#divFNBatchQC').data('FNBatchQC').FNBatchQCID+" &buid="+ parseInt(sessionStorage.getItem("buid")) +" &nts=" + nts, "_blank");
    //});


    /*------------Close-----------------*/

    function SetFNBatchQC(){
        debugger;
        var oFNBatchQCs = sessionStorage.getItem("FNBatchQCs");
        var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
        if (oFNBatchQCs != null) {
            oFNBatchQCs = jQuery.parseJSON(oFNBatchQCs);
        }
        else {
            oFNBatchQCs = [];
        }
        if (nIndex != -1) {
            oFNBatchQCs[nIndex] = $('#divFNBatchQC').data('FNBatchQC');
        }
        else {
            sessionStorage.setItem("SelectedRowIndex", oFNBatchQCs.length);
            oFNBatchQCs.push($('#divFNBatchQC').data('FNBatchQC'));
        }
        sessionStorage.setItem("FNBatchQCs", JSON.stringify(oFNBatchQCs));
        //window.location.href = sessionStorage.getItem("BackLink");
    }

    $("#btnClose").click(function(){
        window.location.href = sessionStorage.getItem("BackLink");
    });

    $('#tblFNBatchQCDetail').datagrid({ onSelect: function (rowIndex, rowData) { OperationPerforms_QCFaults(rowIndex, rowData); } });
    function OperationPerforms_QCFaults(rowIndex, rowData){
        debugger;
        if(rowData!=null && rowData.FNBatchQCDetailID>0)
        {
            Refresh_FNBatchQCFaults(rowData.FNBatchQCDetailID);
        }
    }
    function Refresh_FNBatchQCFaults(nFNBatchQCDetailID)
    {
        var oFNBatchQCFaults= $('#divFNBatchQC').data('FNBatchQCFaults');
        //var nTotalPerTage=0;
        //ResetGridCellEdit();
        var oFNBatchQCFaults_Detail=[];
        if(nFNBatchQCDetailID>0)
        {
            nTotalPerTage=0;
            for(var i=0; i<oFNBatchQCFaults.length;i++)
            {
                if(oFNBatchQCFaults[i].FNBatchQCDetailID==nFNBatchQCDetailID)
                {
                    //_oRecipeDyes[i].PerTage=(_oRecipeDyes[i].Qty*100)/rowData.Qty;
                    //nTotalPerTage=nTotalPerTage+_oRecipeDyes[i].PerTage;
                    oFNBatchQCFaults_Detail.push(oFNBatchQCFaults[i]);
                }
            }
        }
        DynamicRefreshList(oFNBatchQCFaults_Detail,'tblFNBatchQCFault');
        SetTotalFNBatchQCFaults();
    }

</script>