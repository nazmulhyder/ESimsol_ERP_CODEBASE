@{
    ViewBag.Title = "FabricDeliveryChallan";
}

@model IEnumerable <ESimSol.BusinessObjects.FabricDeliveryChallan>
                       <script src="~/Views/FabricDeliveryChallan/AdvanceSearch.js"></script>
<div ng-app="FabricDeliveryChallanModule">
    <div ng-controller="FabricDeliveryChallanController">
        <div class="ui-grid-top-panel regionSCLC">
            <div class="form-inline">
                @*<label class="control-label">Exe No :</label>*@
                <input type="text" class="form-control" style="width:110px" ng-model="ChallanNo" ng-keydown="searchByChallanNo($event)" placeholder="Type Challan No & Press Enter">
                <input type="text" style="width:100px" class="form-control" ng-model="DONo" ng-keydown="searchByDO($event)" placeholder="Type Dispo No & Press Enter">
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="AdvanceSearch()"><span class="glyphicon glyphicon-search" aria-hidden="true">Search</span></button>
                @*<input type="text" ng-model="subjectInfo.SubjectName" class="form-control" style="width:200px" placeholder="Search Invoice" />*@
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="add()" ng-hide="btnAdd"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>New</button>
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="edit()" ng-hide="btnEdit"> <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>Edit</button>
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="delete()" ng-hide="btnDelete"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>Delete</button>
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="view()"> <span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span>View</button>
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="approve()" ng-hide="btnApprove"> <span class="glyphicon glyphicon-ok" aria-hidden="true"></span>Approve</button>
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="undoApprove()" ng-hide="btnUndoApprove"> <span class="glyphicon glyphicon-hand-left" style="color:black;font-weight:bold" aria-hidden="true"></span> Undo Approve</button>
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="Disburse()" ng-hide="btnDisburse"> <span class="glyphicon glyphicon-import" aria-hidden="true"></span>Disburse</button>
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="PrintPreview()"><span class="glyphicon glyphicon-print" aria-hidden="true">Preview</span></button>
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="PrintPackingList()"><span class="glyphicon glyphicon-print" aria-hidden="true">PackingList</span></button>
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="PrintGatePass()"><span class="glyphicon glyphicon-print" aria-hidden="true">Gate-Pass</span></button>
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="OpenUpdateModal()"><span class="glyphicon glyphicon-save-file" aria-hidden="true"> Format</span></button>
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="PrintPreviewBill()" ng-hide="btnPreviewBill"><span class="glyphicon glyphicon-print" aria-hidden="true">Preview Bill</span></button>
                @*<button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="PrintPreviewNew()"><span class="glyphicon glyphicon-print" aria-hidden="true">Preview New</span></button>*@
            </div>
        </div>
        @*<div style="width:100%" ui-grid="gridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="grid-angular ui-grid-selectable"></div>*@
        <div style="width:99%" ui-grid="gridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="grid"></div>
        @*<div class="custom-pagination">
            <ul uib-pagination boundary-links="true" total-items="totalItems" ng-model="currentPage" items-per-page="itemPerPage" max-size="maxSize" ng-change="pageChanged()" class="pagination-sm" previous-text="&lsaquo;" next-text="&rsaquo;" first-text="&laquo;" last-text="&raquo;"></ul>
        </div>*@
    </div>

    <script type="text/ng-template" id="FDOFormat.html">
        <div class="modal-header">
            <h4 class="modal-title" id="modal-title">Print Format :</h4>
        </div>
        <div class="modal-body form-horizontal regionExportUP ms-custom-control" id="modal-body">
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right" style="margin-top:-5px">
                        <label class="control-label">Qty Format:</label>
                    </div>
                    <div class="col-md-2 text-left">
                        <input type="checkbox" ng-change="change(1)" ng-model="FDOFormat.IsMeter"> <span> Meter</span>
                    </div>
                    <div class="col-md-2 text-right">
                        <input type="checkbox" ng-change="change(2)" ng-model="FDOFormat.IsYard"> <span> Yard</span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right" style="margin-top:-5px"><label class="control-label">Print Format:</label></div>
                    <div class="col-md-4 text-left">
                        <input type="checkbox" ng-change="changeFormat(1)" ng-model="FDOFormat.PrintFormat_Normal"> <span> Normal Format</span>
                    </div>
                    <div class="col-md-3 text-left">
                        <input type="checkbox" ng-change="changeFormat(2)" ng-model="FDOFormat.PrintFormat_Pad"> <span> Pad Format</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn-primary btn-sm" aria-label="Left Align" ng-click="UpdateStatus()" ng-hide="hide"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> Ok</button>
            <button type="button" class="btn-danger btn-sm" aria-label="Left Align" ng-click="cancel()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel</button>
        </div>
    </script>
</div>

<style type="text/css">

      .form-control{
        height:26px;
        padding:0px 6px;
        font-size:12px;
    }
    .grid {
        height: 500px;
        width: 99%;
    }

    .custom-pagination {
        margin-top: -15px;
        margin-bottom: -15px;
    }

    .spacing {
        padding-bottom: 1px;
    }
</style>

<script type="text/javascript">

    var pager =[];
    var _nBUID=0;
    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
    var oFabricDeliveryChallans =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    _nBUID =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
    var oCompareOperators = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
    var oFDOSetups = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FDOSetups));

    debugger;

    var  FabricDeliveryChallanModule = angular.module('FabricDeliveryChallanModule', ['ngAnimate', 'ui.bootstrap', 'ui.grid','ui.grid.selection', 'ui.grid.resizeColumns','ms.service','FabricDeliveryChallan.service']);

    FabricDeliveryChallanModule.controller('FabricDeliveryChallanController', function ($scope, $http, $uibModal, $log, uiGridConstants, msModal, userSession,advsearchFdcService) {
        debugger;
        oFabricDeliveryChallans= (userSession.getData('FabricDeliveryChallans').length>0)? userSession.getData('FabricDeliveryChallans'):oFabricDeliveryChallans;
        $scope.CompareOperators= oCompareOperators;
        $scope.IsMeter= false;
        $scope.IsYard= true;
        $scope.PrintFormat= -1;
        $scope.btnPreviewBill=true
        $scope.gridOptions ={

            enableRowHeaderSelection: false,
            enableRowSelection: true,
            enableFullRowSelection: true,
            multiSelect: false,
            enableColumnResizing: true,
            noUnselect : true,
            showColumnFooter: true,
            enableGridMenu: true,

            columnDefs: [
                {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
                { field: 'ChallanNo', name: 'ChallanN No', width:'10%', enableCellEdit: false },
                { field: 'FabricDONo', name: 'DO No', width:'10%', enableCellEdit: false },
                { field: 'IssueDateSt', name: ' Date', width: '10%', enableCellEdit: false },
                { field: 'Qty', name: ' Qty(Y)', width: '10%', cellFilter: 'number:2', cellClass: 'text-right' , aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
                { field: 'DeliveryToName', name: 'Delivery To', width: '10%' },
                { field: 'DriverName', name: 'Driver Name', width: '15%' },
                { field: 'PreparedByName', name: 'Prepared By', width: '15%' },
                { field: 'ApproveByName', name: 'Approve By', width: '10%' },
                { field: 'DisburseByName', name: 'Delivered By', width: '10%' }
                //{ field: 'IsGRNSt', name: 'Receive By', width: '15%' }
            ],
            data:oFabricDeliveryChallans,
            onRegisterApi:function(gridApi) {

                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.core.refresh();
                debugger;
                if(oFabricDeliveryChallans.length>0 && userSession.getRowIndex()>=0)
                {
                    $scope.gridApi.grid.modifyRows(oFabricDeliveryChallans);
                    $scope.gridApi.selection.selectRow(oFabricDeliveryChallans[userSession.getRowIndex()]);
                    $scope.RowSelect(oFabricDeliveryChallans[userSession.getRowIndex()]);
                }
                $scope.gridApi.selection.on.rowSelectionChanged($scope, function (row) {
                    $scope.RowSelect(row.entity ); });
                userSession.clear();
            }
        };

        debugger
        $scope.btnAdd = $scope.btnEdit =  $scope.btnDelete = $scope.btnApprove= $scope.btnDisburse   = $scope.btnUndoApprove  = true ;
        //button show
        if(PermissionChecker('Add','FabricDeliveryChallan',oAuthorizationRolesMapping)){$scope.btnAdd = false; }
        if(PermissionChecker('Edit','FabricDeliveryChallan',oAuthorizationRolesMapping)){$scope.btnEdit = false;}
        if(PermissionChecker('Delete','FabricDeliveryChallan',oAuthorizationRolesMapping)){$scope.btnDelete = false;}
        if(PermissionChecker('Approved','FabricDeliveryChallan',oAuthorizationRolesMapping)){$scope.btnApprove = false;}
        if(PermissionChecker('UnApproved','FabricDeliveryChallan',oAuthorizationRolesMapping)){$scope.btnUndoApprove = false;}
        if(PermissionChecker('Disburse','FabricDeliveryChallan',oAuthorizationRolesMapping)){$scope.btnDisburse = false;}
        

        function CheckControll()
        {
            debugger;
            if($scope.btnAdd == false  && !PermissionChecker('Add','FabricDeliveryChallan',oAuthorizationRolesMapping))
            {$scope.btnAdd = true; }
            if($scope.btnEdit == false && !PermissionChecker('Edit','FabricDeliveryChallan',oAuthorizationRolesMapping))
            {$scope.btnEdit = true;}

            if($scope.btnDelete == false && !PermissionChecker('Delete','FabricDeliveryChallan',oAuthorizationRolesMapping))
            {$scope.btnDelete = true;}

            if($scope.btnApprove == false && !PermissionChecker('Approved','FabricDeliveryChallan',oAuthorizationRolesMapping))
            {$scope.btnApprove = true;}

            if($scope.btnDisburse == false && !PermissionChecker('Disburse','FabricDeliveryChallan',oAuthorizationRolesMapping))
            {$scope.btnDisburse = true;}

            if(PermissionChecker('UnApproved','FabricDeliveryChallan',oAuthorizationRolesMapping)){$scope.btnUndoApprove = false;}
          
        }

        $scope.RowSelect =  function (entity)
        {
            debugger;
            if(entity.FDOType==8)//Local Bill
            {
                $scope.btnPreviewBill=false;
            }
            else
            {
                $scope.btnPreviewBill=true;
            }

            if(entity.ApproveBy!=0 && entity.DisburseBy==0){
                $scope.btnApprove=true;
                $scope.btnUndoApprove =false;
                $scope.btnDisburse=false;
                $scope.btnEdit=true;
                $scope.btnDelete=true;
                
                CheckControll();
            }
            else if(entity.ApproveBy!=0 && entity.DisburseBy!=0)
            {
                $scope.btnApprove=true;
                $scope.btnUndoApprove =true;
                $scope.btnDisburse=true;
                $scope.btnEdit=true;
                $scope.btnDelete=true;
                CheckControll();
            }
           
            else 
            {
                $scope.btnApprove=false;
                $scope.btnUndoApprove =true;
                $scope.btnDisburse=true;
                $scope.btnEdit=false;
                $scope.btnDelete=false;
                CheckControll();
            }
        }

        $scope.add = function () {
            sessionStorage.setItem("Operation", "New");
            sessionStorage.setItem("SelectedRowIndex", -1);
            sessionStorage.setItem("FabricDeliveryChallanHeader", "Add FabricDeliveryChallan");
            sessionStorage.setItem("FabricDeliveryChallans", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("BackLink", window.location.href);
            var tsv=((new Date()).getTime())/1000;
            window.location.href = _sBaseAddress+ "/FabricDeliveryChallan/ViewFabricDeliveryChallan?id=0&buid="+_nBUID+"&ts="+tsv;
        };

        $scope.edit = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();

            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            angular.forEach($scope.gridOptions.data,function(value,index){
                if(value.FDCID==data[0].FDCID){

                    sessionStorage.setItem("Operation", "Edit");
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("FabricDeliveryChallanHeader", "Edit FabricDeliveryChallan");
                    sessionStorage.setItem("FabricDeliveryChallans", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("BackLink", window.location.href);
                    var tsv=((new Date()).getTime())/1000;
                    window.location.href = _sBaseAddress+ "/FabricDeliveryChallan/ViewFabricDeliveryChallan?id="+value.FDCID+"&buid="+_nBUID+"&ts="+tsv;
                }
            },$scope.gridOptions.data);
        };

        $scope.delete = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();

            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'No item found to delete.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            if(data[0].ApproveBy!=0){
                //msModal.Message({headerTitle : '', bodyText:'Already Approve .', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                //return false;
                alert("Already  Approve");
                //msModal.Message({headerTitle : '', bodyText:'Already approved.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            if(data[0].DisburseBy!=0){
                //msModal.Message({headerTitle : '', bodyText:'Already Disburse.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                //return false;
                alert("Already  Disburse");
                //msModal.Message({headerTitle : '', bodyText:'Already approved.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            if (!confirm("Confirm to Delete?")) return false;
            $http.post(_sBaseAddress+ '/FabricDeliveryChallan/Delete',JSON.stringify(data[0])).then(
                            function (response) {
                                if(jQuery.parseJSON(response.data)=='Deleted'){
                                    angular.forEach($scope.gridOptions.data,function(value,index){
                                        if(value.FDCID==data[0].FDCID){
                                            $scope.gridOptions.data.splice(index,1);
                                        }
                                    },$scope.gridOptions.data);
                                    alert("Delete Successfully.");
                                }
                                else{
                                    alert(jQuery.parseJSON(response.data));
                                }
                            },
                            function (response) {alert(jQuery.parseJSON(response.data));}
                        );

        };

        $scope.view = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            angular.forEach($scope.gridOptions.data,function(value,index){
                if(value.FDCID==data[0].FDCID){
                    sessionStorage.setItem("Operation", "View");
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("FabricDeliveryChallanHeader", "View FabricDeliveryChallan");
                    sessionStorage.setItem("FabricDeliveryChallans", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("BackLink", window.location.href);
                    var tsv=((new Date()).getTime())/1000;
                    window.location.href = _sBaseAddress+ "/FabricDeliveryChallan/ViewFabricDeliveryChallan?id="+value.FDCID+"&buid="+_nBUID+"&ts="+tsv;
                }
            },$scope.gridOptions.data);
        };
        $scope.approve = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();

            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            angular.forEach($scope.gridOptions.data,function(value,index){
                if(value.FDCID==data[0].FDCID){

                    sessionStorage.setItem("Operation", "Approve");
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("FabricDeliveryChallanHeader", "View FabricDeliveryChallan");
                    sessionStorage.setItem("FabricDeliveryChallans", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("BackLink", window.location.href);
                    var tsv=((new Date()).getTime())/1000;
                    window.location.href = _sBaseAddress+ "/FabricDeliveryChallan/ViewFabricDeliveryChallan?id="+value.FDCID+"&buid="+_nBUID+"&ts="+tsv;
                }
            },$scope.gridOptions.data);
        };

        //$scope.UndoApprove = function ()
        //{
        //    debugger;
        //    var data=$scope.gridApi.selection.getSelectedRows();
        //    if(data==null || data.length<=0){
        //        msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
        //        return false;
        //    }
        //    angular.forEach($scope.gridOptions.data,function(value,index){
        //        if(value.FDOID==data[0].FDOID){
        //            sessionStorage.setItem("Operation", "UndoApprove");
        //            sessionStorage.setItem("SelectedRowIndex", index);
        //            sessionStorage.setItem("FabricDeliveryChallanHeader", "View FabricDeliveryChallan");
        //            sessionStorage.setItem("FabricDeliveryChallans", JSON.stringify($scope.gridOptions.data));
        //            sessionStorage.setItem("BackLink", window.location.href);
        //            var tsv=((new Date()).getTime())/1000;
        //            window.location.href = _sBaseAddress+ "/FabricDeliveryChallan/ViewFabricDeliveryChallan?id="+value.FDCID+"&buid="+_nBUID+"&ts="+tsv;
        //        }
        //    },$scope.gridOptions.data);
        //};

        $scope.undoApprove = function ()
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            var nIndex= $scope.gridOptions.data.indexOf(data[0]);
            if (!confirm("Confirm to Unapprove?")) return ;

            angular.forEach($scope.gridOptions.data,function(value,index){
                if(value.FDCID==data[0].FDCID){
                    $http.post(_sBaseAddress+'/FabricDeliveryChallan/UndoApproveFDC', JSON.stringify(data[0])).then(
                         function (response) {
                             var result=jQuery.parseJSON(response.data);
                             if(result.FDCID>0)
                             {
                                 debugger;
                                 $scope.gridOptions.data[index]=result;
                                 $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                                 $scope.gridApi.selection.selectRow(result);
                             }
                             else{
                                 alert(result.ErrorMessage);
                             }
                         },
                         function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                   );
                }
            },$scope.gridOptions.data);
        };


        $scope.Disburse = function () {

            var data=$scope.gridApi.selection.getSelectedRows();
            if(data==null || data.length<=0)
            {
                //msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                alert("Select a valid item");
                return false;
            }
            else if(data[0].ApproveBy===0){
                alert("Yet not Approve");
                //msModal.Message({headerTitle : '', bodyText:'Already approved.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            else if(data[0].DisburseBy!=0){
                alert("Already Disburse");
                //msModal.Message({headerTitle : '', bodyText:'Already Received.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            if (!confirm("Confirm to Disburse?")) return ;
            // msModal.Message({headerTitle : '', bodyText:'Are you sure to approve?.', sucessText : ' Ok', cancelText : ' Cancel', feedbackType:true, autoClose : false}).result.then(function(result)
            //{
            debugger;
            //if(result)
            //{
            angular.forEach($scope.gridOptions.data,function(value,index){
                if(value.FDCID==data[0].FDCID){
                    $http.post(_sBaseAddress+'/FabricDeliveryChallan/FDCDisburse', JSON.stringify(data[0])).then(
                         function (response) {
                             var result=jQuery.parseJSON(response.data);
                             if(result.FDCID>0)
                             {
                                 debugger;
                                 $scope.gridOptions.data[index]=result;
                                 $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                                 $scope.gridApi.selection.selectRow(result);
                             }
                             else{
                                 alert(result.ErrorMessage);
                             }
                         },
                         function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                   );
                }
            },$scope.gridOptions.data);
            //}
            //});
        };

        $scope.searchByChallanNo = function (e) {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var sChallanNo = $.trim($scope.ChallanNo);
                if (sChallanNo=!"")
                {
                    var oFabricDeliveryChallan = {
                        ChallanNo:$.trim($scope.ChallanNo),
                        FabricDONo:"",
                        IsSample: false
                    };

                    debugger;
                    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                    $http.post(_sBaseAddress+'/FabricDeliveryChallan/SearchByNo',$.param(oFabricDeliveryChallan), config).then(
                                function (response)
                                {
                                    var oResults = jQuery.parseJSON(response.data);
                                    if(oResults.length>0)
                                    {
                                        $scope.gridOptions.data = jQuery.parseJSON(response.data);
                                    }else{
                                        alert("Data Not found.");
                                    }

                                },
                                    function (response) { alert(jQuery.parseJSON(response.data).Message); }
                            );


                }
            }
            //else if (code == 8) //backspace=8
            //{
            //    $scope.ChallanNo='';
            //}
        };
        $scope.searchByDO = function (e) {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var sChallanNo = $.trim($scope.DONo);
                if (sChallanNo=!"")
                {
                    var oFabricDeliveryChallan = {
                        ChallanNo:"",
                        Params:$.trim($scope.DONo),
                        IsSample: false
                    };

                    debugger;
                    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                    $http.post(_sBaseAddress+'/FabricDeliveryChallan/SearchByNo',$.param(oFabricDeliveryChallan), config).then(
                                function (response)
                                {
                                    var oResults = jQuery.parseJSON(response.data);
                                    if(oResults.length>0)
                                    {
                                        $scope.gridOptions.data = jQuery.parseJSON(response.data);
                                    }else{
                                        alert("Data Not found.");
                                    }

                                },
                                    function (response) { alert(jQuery.parseJSON(response.data).Message); }
                            );


                }
            }
            //else if (code == 8) //backspace=8
            //{
            //    $scope.DONo='';
            //}
        };
        $scope.PrintPreview = function ()
        {
            var data = $scope.gridApi.selection.getSelectedRows();
            var oFabricDeliveryChallan = data[0];
            if(oFabricDeliveryChallan==null || oFabricDeliveryChallan.FDCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(_sBaseAddress + '/FabricDeliveryChallan/PrintFDC?id='+oFabricDeliveryChallan.FDCID+'&nBUID='+_nBUID+"&bIsMeter="+$scope.IsMeter+"&nFormat="+$scope.PrintFormat);
        };
        $scope.PrintPackingList = function ()
        {
            var data = $scope.gridApi.selection.getSelectedRows();
            var oFabricDeliveryChallan = data[0];
            if(oFabricDeliveryChallan==null || oFabricDeliveryChallan.FDCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(_sBaseAddress + '/FabricDeliveryChallan/PrintPackingList?id='+oFabricDeliveryChallan.FDCID+'&nBUID='+_nBUID+"&bIsMeter="+$scope.IsMeter);
        };

        $scope.PrintPreviewNew = function ()
        {
            var data = $scope.gridApi.selection.getSelectedRows();
            var oFabricDeliveryChallan = data[0];
            if(oFabricDeliveryChallan==null || oFabricDeliveryChallan.FDCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(_sBaseAddress + '/FabricDeliveryChallan/PrintFDCNew?id='+oFabricDeliveryChallan.FDCID+'&nBUID='+_nBUID+"&bIsMeter="+$scope.IsMeter+"&nFormat="+$scope.PrintFormat);
        };
        $scope.PrintGatePass = function ()
        {
            var data = $scope.gridApi.selection.getSelectedRows();
            var oFabricDeliveryChallan = data[0];
            if(oFabricDeliveryChallan==null || oFabricDeliveryChallan.FDCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(_sBaseAddress + '/FabricDeliveryChallan/PrintFDC_GatePass?id='+oFabricDeliveryChallan.FDCID+'&nBUID='+_nBUID+"&bIsMeter="+$scope.IsMeter+"&nFormat="+$scope.PrintFormat);
        };

        $scope.PrintPreviewBill = function ()
        {
            var data = $scope.gridApi.selection.getSelectedRows();
            var oFabricDeliveryChallan = data[0];
            if(oFabricDeliveryChallan==null || oFabricDeliveryChallan.FDCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(_sBaseAddress + '/FabricDeliveryChallan/PrintPreviewBill?id='+oFabricDeliveryChallan.FDCID+'&nBUID='+_nBUID+"&bIsMeter="+$scope.IsMeter+"&nFormat="+$scope.PrintFormat);
        };

        $scope.AdvanceSearch = function ()
        {
            debugger;

            var modalObj={
                modalcontroller:'ModalAdvanceSearchCtrl',
                appcontroller:'FabricDeliveryChallanController',
                CompareOperators:$scope.CompareOperators,
                FDOSetups: oFDOSetups,
                IsSample: false
            }
            var modalInstance=advsearchFdcService.Instance(modalObj);
            modalInstance.result.then(function (result)
            {
                debugger;
                $scope.gridOptions.data = result;
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };
        $scope.OpenUpdateModal=function ()
        {
            debugger;
            //var value = $scope.gridApi.selection.getSelectedRows()[0];
            //if(value==null || value.FDOID<=0)
            //{
            //    alert("Please Select an item from list");
            //    return;
            //}
            //angular.forEach($scope.gridOptions.data, function (data, index) {
            //    if (value.FDOID == data.FDOID)
            //    {
            //        sessionStorage.setItem("SelectedRowIndex", index);
            //    }
            //}, $scope.gridOptions.data);
            $scope.Modal($scope.gridOptions.data[0], 'Edit');
        }


        $scope.OpenUpdateModal=function ()
        {
            debugger;
            $scope.Modal($scope.gridOptions.data[0], 'Edit');
        }
        $scope.Modal = function (objSQ, operation) {
            debugger;
            objSQ.IsMeter=$scope.IsMeter;
            objSQ.IsYard=$scope.IsYard;
            objSQ.PrintFormat = $scope.PrintFormat;

            var modalInstance = $uibModal.open({
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'md',
                templateUrl: 'FDOFormat.html',
                controller: 'ModalInstanceCtrl',
                controllerAs: 'FDOFormatController',
                resolve: {
                    obj: function () {
                        return { value:objSQ, Operation: operation  };
                    }
                }
            });

            modalInstance.result.then(function (result) {
                debugger;
                if(result.FDOID>0)
                {
                    debugger;
                    var index=sessionStorage.getItem('SelectedRowIndex');
                    //alert(index);
                    //alert(result.SalesStatusInString);
                    //$scope.gridOptions.data[index]=result;
                    //$scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                    //$scope.gridApi.selection.selectRow($scope.gridOptions.data[index]);
                    $scope.IsMeter=result.IsMeter;
                    $scope.IsYard=result.IsYard;
                    $scope.PrintFormat=result.PrintFormat;
                    console.log(result);
                }
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };

    });
    FabricDeliveryChallanModule.controller('ModalInstanceCtrl', function ($scope, $http, $uibModalInstance, uiGridConstants, msModal, obj) {
        $scope.Operation=obj.Operation;

        $scope.FDOFormat = obj.value;

        $scope.FDOFormat.PrintFormat_Normal =$scope.FDOFormat.PrintFormat_Pad = false;
        if($scope.FDOFormat.PrintFormat==0) $scope.FDOFormat.PrintFormat_Normal = true;
        if($scope.FDOFormat.PrintFormat==1) $scope.FDOFormat.PrintFormat_Pad = true;

        $scope.UpdateStatus= function ()
        {
            if($scope.FDOFormat.IsMeter==$scope.FDOFormat.IsYard)
            {
                alert("Sorry, Inavlid Format !!"); return;
            }
            console.log($scope.FDOFormat)
            $uibModalInstance.close($scope.FDOFormat);
        };

        $scope.change=function(nEvent)
        {
            if(nEvent==1)
            {
                if($scope.FDOFormat.IsMeter)
                    $scope.FDOFormat.IsYard=false;
                else
                    $scope.FDOFormat.IsYard=true;
            }
            else if(nEvent==2)
            {
                if($scope.FDOFormat.IsYard)
                    $scope.FDOFormat.IsMeter=false;
                else
                    $scope.FDOFormat.IsMeter=true;
            }
        }
        $scope.changeFormat=function(nEvent)
        {
            $scope.FDOFormat.PrintFormat = -1;
            if(nEvent==1)
            {
                if($scope.FDOFormat.PrintFormat_Normal)
                {
                    $scope.FDOFormat.PrintFormat = 0;
                    $scope.FDOFormat.PrintFormat_Pad=false;
                }
            }
            else if(nEvent==2)
            {
                if($scope.FDOFormat.PrintFormat_Pad)
                {
                    $scope.FDOFormat.PrintFormat = 1;
                    $scope.FDOFormat.PrintFormat_Normal=false;
                }
            }
        }
        $scope.cancel= function () {
            $uibModalInstance.close($scope.FDOFormat);
        };

    });

</script>
                       


              
