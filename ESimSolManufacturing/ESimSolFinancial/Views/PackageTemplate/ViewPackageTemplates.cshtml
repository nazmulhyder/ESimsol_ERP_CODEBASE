
@{
    ViewBag.Title = "Package Template List";
}
@model IEnumerable<ESimSol.BusinessObjects.PackageTemplate>
        
<div class="menuMainCollectionTable" ng-app="PackageTemplateApp">
    <div ng-controller="PackageTemplateController" title="Package Template(s)">
        <div style="margin-bottom:2px; display:block" class="form-inline ui-grid-top-panel regionTemplate">
            <input type="text" class="form-control" ng-model="txtSearchPropertyName" ng-keydown="searchByPropertyName($event)" placeholder="Search by Package Name">
            <button type="button" ng-show="btnAdd" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Add()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Add</span></button>
            <button type="button" ng-show="btnEdit" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Edit()"><span class="glyphicon glyphicon-edit" aria-hidden="true"> Edit</span></button>
            <button type="button" ng-show="btnView" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="View()"><span class="glyphicon glyphicon-th" aria-hidden="true"> View</span></button>
            <button type="button" ng-show="btnDelete" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Delete()"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Delete</span></button>
        </div>
        <div ui-grid="gridOptions" ui-grid-selection class="grid-angularPTemplate"></div>
    </div>
</div>         

<style type="text/css">
    .regionTemplate .form-control {
        height: 26px;
        width: 15%;
        padding: 0px 6px;
        font-size: 12px;
    }

    .grid-angularPTemplate {
        width: 100%;
        height: 500px;
    }
</style>

<script type="text/javascript">

          //debugger;
           var sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));        
           var oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));                
          var oPackageTemplates =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));

          var PTemplateapp= angular.module('PackageTemplateApp', ['ui.grid','ui.grid.selection', 'ms.service']);
          PTemplateapp.controller('PackageTemplateController',  function ($scope,$http,$log,uiGridConstants,userSession) {
              oPackageTemplates= (userSession.getData('PackageTemplates').length>0)? userSession.getData('PackageTemplates'):oPackageTemplates;
              debugger;
              $scope.gridOptions = {
                  enableRowSelection: true,
                  enableSelectAll: true,
                  multiSelect: false,
                  enableRowSelection: true,
                  columnDefs: [
                    { field: 'PackageNo', name:'Package No', width:'15%' },
                    { field: 'PackageName', name:'Package Name', width:'20%' },
                    { field: 'Note', name: 'Note', width: '20%', enableSorting: false }
                   
                  ],
                  data: oPackageTemplates,
                  onRegisterApi : function(gridApi)
                  {
                      debugger;
                      $scope.gridApi = gridApi;
                      $scope.gridApi.grid.modifyRows(oPackageTemplates);
                      $scope.gridApi.selection.selectRow(oPackageTemplates[userSession.getRowIndex()]);
                  }
              };

              $scope.Add  = function ()
              {
                  debugger;
                  sessionStorage.setItem("PackageTemplates", JSON.stringify($scope.gridOptions.data));
                  sessionStorage.setItem("SelectedRowIndex", -1);
                  sessionStorage.setItem("PackageTemplateHeader", "Add Package Template");
                  sessionStorage.setItem("BackLink", window.location.href);
                  window.location.href =sessionStorage.getItem('BaseAddress')+"/PackageTemplate/ViewPackageTemplate?id="+0;
              }
              $scope.Edit =  function ()
              {
                  debugger;
                  var oPackageTemplate = $scope.gridApi.selection.getSelectedRows()[0];
                  if(oPackageTemplate==null || parseInt(oPackageTemplate.PackageTemplateID)<=0)
                  {
                      alert("Please Select an item from list");
                      return;
                  }
                  angular.forEach($scope.gridOptions.data, function (value, index) {
                      if (value.PackageTemplateID == oPackageTemplate.PackageTemplateID)
                      {
                          sessionStorage.setItem("PackageTemplates", JSON.stringify($scope.gridOptions.data));
                          sessionStorage.setItem("SelectedRowIndex", index);
                          sessionStorage.setItem("PackageTemplateHeader", "Edit Package Template");
                          sessionStorage.setItem("BackLink", window.location.href);
                          window.location.href =sessionStorage.getItem('BaseAddress')+"/PackageTemplate/ViewPackageTemplate?id="+oPackageTemplate.PackageTemplateID;
                      }
                  }, $scope.gridOptions.data);
              }
              $scope.View =  function ()
              {
                  //debugger;
                  var oPackageTemplate = $scope.gridApi.selection.getSelectedRows()[0];
                  if(oPackageTemplate==null || parseInt(oPackageTemplate.PackageTemplateID)<=0)
                  {
                      alert("Please Select an item from list");
                      return;
                  }
                  angular.forEach($scope.gridOptions.data, function (value, index) {
                      if (value.PackageTemplateID == oPackageTemplate.PackageTemplateID)
                      {
                          sessionStorage.setItem("PackageTemplates", JSON.stringify($scope.gridOptions.data));
                          sessionStorage.setItem("SelectedRowIndex", index);
                          sessionStorage.setItem("PackageTemplateHeader", "View Package Template");
                          sessionStorage.setItem("BackLink", window.location.href);
                          window.location.href =sessionStorage.getItem('BaseAddress')+"/PackageTemplate/ViewPackageTemplate?id="+oPackageTemplate.PackageTemplateID;
                      }
                  }, $scope.gridOptions.data);
              }
              $scope.Delete= function ()
              {
                  debugger;
                  var oPackageTemplate = $scope.gridApi.selection.getSelectedRows()[0];
                  if(oPackageTemplate==null || parseInt(oPackageTemplate.PackageTemplateID)<=0)
                  {
                      alert("Please Select an item from list");
                      return;
                  }
               
                  if (!confirm("Confirm to Delete?")) return ;
                  $http.post(sessionStorage.getItem('BaseAddress')+'/PackageTemplate/Delete', JSON.stringify(oPackageTemplate)).then(
                                  function (response) {
                                      if (jQuery.parseJSON(response.data) == 'Deleted') {
                                          angular.forEach($scope.gridOptions.data, function (value, index)
                                          {
                                              if (value.PackageTemplateID == parseInt(oPackageTemplate.PackageTemplateID))
                                              {
                                                  alert("Successfully Deleted.");
                                                  $scope.gridOptions.data.splice(index, 1);
                                              }
                                          }, $scope.gridOptions.data);
                                      }
                                      else {
                                          alert(jQuery.parseJSON(response.data));
                                      }
                                  },
                                  function (response) { alert(jQuery.parseJSON(response.data)); }
                              );

              };
              
              $scope.searchByPropertyName = function (e) 
              {
                  debugger;
                  var oPackages = $scope.gridOptions.data;  
                  var bFlag=false;
                  var sTempCode = '';
                  for(i=0;i<oPackages.length;++i){
                      sTempCode=oPackages[i]['PackageName'].substring(0, $scope.txtSearchPropertyName.length);
                      if($scope.txtSearchPropertyName.toUpperCase()==sTempCode.toUpperCase())
                      {
                          bFlag=true;
                          break;
                      }
                  }
                  if(bFlag)
                  {
                      //$('#tblPackageTemplate').datagrid('selectRow', i);
                      $scope.gridApi.selection.selectRow(oPackageTemplates[i]);
                  }
              };

            
              //button hide
              $scope.btnAdd = $scope.btnEdit = $scope.btnDetails = $scope.btnDelete =  false;

              //button show
              if(PermissionChecker('Add','PackageTemplate',oAuthorizationRolesMapping)){$scope.btnAdd =  true; }
              if(PermissionChecker('Edit','PackageTemplate',oAuthorizationRolesMapping)){$scope.btnEdit = true;}
              if(PermissionChecker('View','PackageTemplate',oAuthorizationRolesMapping)){$scope.btnView = true;}
              if(PermissionChecker('Delete','PackageTemplate',oAuthorizationRolesMapping)){$scope.btnDelete = true;}
              


          });

//    $('#txtSearchPropertyName').keypress(function (e) {
////debugger;
//    var c = String.fromCharCode(e.which);
//    var txtSearchPropertyName = document.getElementById('txtSearchPropertyName').value;
//    txtSearchPropertyName = txtSearchPropertyName + c;
    
//    var bFlag=false;
//    var sTempCode="";
//    var rows = $('#tblPackageTemplate').datagrid('getRows');        
//    for(i=0;i<rows.length;++i){
//        sTempCode=rows[i]['PackageName'].substring(0, txtSearchPropertyName.length);
//        if(txtSearchPropertyName.toUpperCase()==sTempCode.toUpperCase())
//        {
//            bFlag=true;
//            break;
//        }
//    }
//    if(bFlag)
//    {
//        $('#tblPackageTemplate').datagrid('selectRow', i);
//    }
//});


</script>