<html>
<head>
    @{
        ViewBag.Title = "Delivery Challan";
    }
</head>
<body>
    @model ESimSol.BusinessObjects.DeliveryChallan
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div id="winExportTR" class="easyui-window" title="Contractor" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div id="divExportTR" tabindex=" -1">
            <table id="tblExportTRs" class=" easyui-datagrid" style="width:580px; height: 350px; margin: 0;"
                   data-options="singleSelect: true,fitColumns:false, rownumbers:true, pagination:false, autoRowHeight:false ">
                <thead>
                    <tr>                        
                        <th field="TruckNo" width="220">Vehicle No</th>
                        <th field="Carrier" width="150">Vehicle Name</th>                        
                        <th field="DriverName" width="150">Driver Name</th>
                    </tr>
                </thead>
            </table>
        </div>
        <fieldset class="actionfieldsetstyle">
            <legend>Actions : </legend>
            <a id="btnOkExportTR" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
            <a id="btnCloseExportTR" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
        </fieldset>
    </div>
    <div class="menuMainCollectionTable">

        <fieldset style="width:98%;">
            <legend>Delivery Challan</legend>
            <table style="width:100%;">
                <tr>
                    <td class="td-col-2 align-right">Challan No</td>
                    <td class="td-col-4">
                        @Html.TextBoxFor(model => model.ChallanNo, new { style = "width: 97%;", id = "txtChallanNo", disabled="true" })
                    </td>
                    <td class="td-col-3 align-right">Challan Date</td>
                    <td class="td-col-4">
                        <input id="dtChallanDate" type="text" class="easyui-datebox" style="width: 100%;" data-options="formatter:icsdateformat,parser:icsdateparser" />
                    </td>
                    <td class="td-col-3 align-right">Store</td>
                    <td class="td-col-4">
                        <select id="cboStore" class="cls-cbo"></select>
                    </td>
                </tr>
                <tr>
                    <td class="td-col-2 align-right">Delivery Order</td>
                    <td class="td-col-4">
                        @Html.TextBoxFor(model => model.DONo, new { style = "width: 60%;", id = "txtDONo", @placeholder = "Search Delivery Order", @class = "cls-txt" })
                        <input type="button" id="btnPickDO" style="width:17%" value="Pick" /><input type="button" id="btnPickPlan" style="width:18%" value="Plan" />
                    </td>
                    <td class="td-col-3 align-right">Customer Name</td>
                    <td class="td-col-4">
                        @Html.TextBoxFor(model => model.ContractorName, new { style = "width: 70%;", id = "txtContractorName", @placeholder = "Search Customer", @class = "cls-txt" })
                        <input type="button" id="btnPickContractor" style="width:24%" value="Pick" />
                    </td>
                    <td class="td-col-3 align-right">Contact Personel</td>
                    <td class="td-col-4">
                        <select id="cboContactPersonel" class="cls-cbo"></select>
                    </td>
                </tr>
                <tr>
                    <td class="td-col-2 align-right">PI No</td>
                    <td class="td-col-4">
                        @Html.TextBoxFor(model => model.RefNo, new { style = "width: 97%;", id = "txtRefNo", disabled = "true" })
                    </td>
                    <td class="td-col-3 align-right">Delivery To Name</td>
                    <td class="td-col-4">
                        @Html.TextBoxFor(model => model.DeliveryToName, new { style = "width: 97%;", id = "txtDeliveryToName", disabled = "disabled" })
                    </td>
                    <td class="td-col-3 align-right"> Delivery To Address </td>
                    <td class="td-col-4">
                        @Html.TextBoxFor(model => model.DeliveryToAddress, new { style = "width: 97%;", id = "txtDeliveryToAddress" })
                    </td>
                </tr> 
                <tr>
                    <td class="td-col-2 align-right">Challan Type</td>
                    <td class="td-col-4">
                        <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                            <tr>
                                <td style="width:30%;text-align:left;"><select id="cboChallanType" class="cls-cbo"></select></td>
                                <td style="width:30%; text-align:right; ">G.Pass No</td>
                                <td style="width:40%; text-align:left;">@Html.TextBoxFor(model => model.GatePassNo, new { style = "width: 97%;", id = "txtGatePassNo", placeholder = "Gate Pass No", disabled = "disabled" })</td>
                            </tr>
                        </table>
                        
                    </td>
                    <td class="td-col-3 align-right"> Buyer Name</td>
                    <td class="td-col-4">
                        @Html.TextBoxFor(model => model.BuyerName, new { style = "width: 70%;", id = "txtBuyerName", @placeholder = "Search Buyer", @class = "cls-txt" })
                        <input type="button" id="btnPickBuyer" style="width:24%" value="Pick" />
                    </td>
                    <td class="td-col-3 align-right"> Vehicle No </td>
                    <td class="td-col-4">
                        @Html.TextBoxFor(model => model.VehicleNo, new { style = "width: 97%;", id = "txtVehicleNo", @placeholder = "Vehicle No", @class = "cls-txt" })
                    </td>
                </tr>
                <tr>
                    <td class="td-col-2 align-right"> Vehicle Name</td>
                    <td class="td-col-4">
                        @Html.TextBoxFor(model => model.VehicleName, new { style = "width: 97%;", id = "txtVehicleName", @placeholder = "Vehicle Name", @class = "cls-txt" })
                    </td>
                    
                    <td class="td-col-3 align-right"> Received By</td>
                    <td class="td-col-4">
                        @Html.TextBoxFor(model => model.ReceivedByName, new { style = "width: 97%;", id = "txtReceivedByName", @placeholder = "Received By", @class = "cls-txt" })
                    </td>
                    <td class="td-col-3 align-right">Note</td>
                    <td class="td-col-4">
                        @Html.TextBoxFor(model => model.Note, new { style = "width: 99%;", id = "txtNote", @placeholder = "Note", @class = "cls-txt" })
                    </td>
                </tr>
            </table>
        </fieldset>

        <table id="tblDeliveryChallanDetail" title="Delivery Challan Details" class="easyui-datagrid" style="height:330px; width:100%;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar" data-options="onClickRow: onClickRow">
            <thead>
                <tr>
                    <th field="ProductCode" width="8%" align="left">Code</th>
                    <th field="ProductWithColorName" width="15%" align="left">Product</th>
                    <th field="LotNo" width="12%" align="left">Lot No</th>
                    <th field="MUnit" width="6%" align="left">Unit</th>
                    <th width="10%" align="left" field="StyleNo">Style No</th>
                    <th width="20%" align="left" field="Measurement">Measurement</th>
                    <th field="YetToDeliveryChallanQty" width="12%" align="right" formatter="formatPrice"> Yet To Delivery Qty</th>
                    <th width="10%" align="right" data-options="field:'Qty',editor:{type:'numberbox',options:{precision:2}}">Qty</th>
                    <th width="10%" align="right" data-options="field:'BagQty',editor:{type:'numberbox',options:{precision:0}}">Carton</th>
                    <th width="18%" align="left" data-options="field:'Note',editor:{type:'text'}">Note</th>
                </tr>
            </thead>
        </table>
        <div id="toolbar">
            <table border="0" cellpadding="1" cellspacing="1" width="100%">
                <tr>
                    <td style="width:22%">
                    <input id="txtDeliveryOrderDetail" style="width:75%" placeholder="Pick delivery order itmes" />
                    <a id="btnPickDODetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="true"></a>
                    </td>
                    <td style="width:22%"><span>Lot: </span>
                    <select id="cboPTUDistribution" style="width:75%"></select></td>
                    <td style="width:22%">
                        <span>Lot Qty: </span>
                        <input id="txtLotQty" style="width:75%;" disabled />
                    </td>
                    <td style="width:34%;text-align:right;">
                        <span>Yet To Challan: </span>
                        <input id="txtYetToDeliveryChallanQty" style="width:75%;" disabled />
                    </td>
                </tr>
                <tr>
                    <td style="width:22%">
                        <input id="txtFirstCartonQty" style="width:45%" placeholder="First Carton Qty" />
                        <input id="txtQtyPerCartonFirst" style="width:45%" placeholder="Qty Per Carton" />
                    </td>
                    <td style="width:22%">
                        <input id="txtSecondCartonQty" style="width:45%" placeholder="Second Carton Qty" />
                        <input id="txtQtyPerCartonSecond" style="width:45%" placeholder="Qty Per Carton" />
                    </td>
                    <td style="width:22%">
                        <input id="txtThirdCartonQty" style="width:47%" placeholder="Third Carton Qty" />
                        <input id="txtQtyPerCartonThird" style="width:46%" placeholder="Qty Per Carton" />
                    </td>
                    <td style="width:34%;text-align:right">
                        <span>Challan Qty: </span>
                        <input id="txtChallanDetailQty" style="width:31%;" />
                        <a id="btnAddDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                        <a id="btnRemoveDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                        <a id="btnRefreshDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true"></a>
                    </td>
                </tr>
            </table>
        </div>

        <fieldset style="height:8%">
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                <tr>
                    <td style="width:60%; text-align:right"></td>
                    <td style="width:40%;text-align:right;">
                        <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true">Approve</a>
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" onclick="Close()" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>
<style type="text/css">
    .td-col-4 select {
        width: 100%;
    }
</style>
<script type="text/javascript">    
    $(document).ready(function () {
        var oDeliveryChallan =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oEnumChallanTypes =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.EnumChallanTypes));
        var oStores =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Stores));
        $('#txtLotQty,#txtYetToDeliveryChallanQty,#txtFirstCartonQty,#txtQtyPerCartonFirst,#txtSecondCartonQty, #txtQtyPerCartonSecond, #txtThirdCartonQty, #txtQtyPerCartonThird').icsCurrencyBox(null,null,0);
        $('#txtChallanDetailQty').icsCurrencyBox(null,null,2);
        $('#txtChallanNo').data('DeliveryChallanID',oDeliveryChallan.DeliveryChallanID);
        $('#txtChallanNo').data('ApproveBy',oDeliveryChallan.ApproveBy);
        $('#txtDONo').data('DeliveryOrderID',oDeliveryChallan.DeliveryOrderID);
        $('#txtContractorName').data('ContractorID',oDeliveryChallan.ContractorID);
        $('#txtBuyerName').data('BuyerID',oDeliveryChallan.BuyerID);
        $('#tblDeliveryChallanDetail').data("GridEditable",false);
        if(oDeliveryChallan.ContractorID>0)
        {
            GetsContactPersonnel(oDeliveryChallan.ContractorID, oDeliveryChallan.ContactPersonnelID);
        }
        if(sessionStorage.getItem('Action')=='Add' || sessionStorage.getItem('Action')=='Edit')
        {
            $('#tblDeliveryChallanDetail').data("GridEditable",true);
            $('.cls-txt').prop('disabled',false);
            $('.cls-cbo').prop('disabled',false);
            $('#btnApprove').hide();
            $('#btnSave, #toolbar').show();
        }
        else if(sessionStorage.getItem('Action')=='Approve')
        {
            $('#tblDeliveryChallanDetail').data("GridEditable",false);
            $('.cls-txt').prop('disabled',true);
            $('.cls-cbo').prop('disabled',true);
            $('#btnSave, #toolbar').hide();
            $('#btnApprove').show();
        }
        else if(sessionStorage.getItem('Action')=='View')
        {
            $('#tblDeliveryChallanDetail').data("GridEditable",false);
            $('.cls-txt').prop('disabled',true);
            $('.cls-cbo').prop('disabled',true);
            $('#btnApprove, #btnSave, #toolbar').hide();
        }
        debugger;
        $('#dtChallanDate').datebox('setValue',icsdateformat(new Date()));
        $("#cboChallanType").icsLoadCombo({List: oEnumChallanTypes,OptionValue: "Value",DisplayText: "Text",InitialValue:""});
        $("#cboChallanType").val(oDeliveryChallan.ChallanType);
        $("#cboStore").icsLoadCombo({List: oStores,OptionValue: "WorkingUnitID",DisplayText: "WorkingUnitName",InitialValue:"Default"});
        $("#cboStore").val(oDeliveryChallan.WorkingUnitID);
        RefreshList(oDeliveryChallan.DeliveryChallanDetails );
        if(parseInt(oDeliveryChallan.DeliveryChallanID)>0)
        {
            $('#dtChallanDate').datebox('setValue', oDeliveryChallan.ChallanDateStr);
            $('#txtDONo, #txtContractorName, #txtBuyerName').addClass('fontColorOfPickItem');
        }
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();
    });

    $('#txtFirstCartonQty,#txtQtyPerCartonFirst,#txtSecondCartonQty,#txtQtyPerCartonSecond,#txtThirdCartonQty,#txtQtyPerCartonThird').change(function(){
        $('#txtChallanDetailQty').val(parseInt(icsRemoveComma($('#txtFirstCartonQty').val())) * parseInt(icsRemoveComma($('#txtQtyPerCartonFirst').val())) + parseInt(icsRemoveComma($('#txtSecondCartonQty').val())) * parseInt(icsRemoveComma($('#txtQtyPerCartonSecond').val())) + parseInt(icsRemoveComma($('#txtThirdCartonQty').val())) * parseInt(icsRemoveComma($('#txtQtyPerCartonThird').val())) );        
    });

    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }

    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }

    $('#cboPTUDistribution').change(function(){
        if(parseInt($('#cboPTUDistribution').val())!=0)
        {
            var oPTUDistribution = GetPTUDistribution(parseInt($('#cboPTUDistribution').val()));
            if(parseInt(sessionStorage.getItem("ProductNature")) === 2)
            {
                $('#txtLotQty').val( parseFloat(oPTUDistribution.Qty).toFixed(2));
            }
            else
            {
                $('#txtLotQty').val( parseFloat(oPTUDistribution.Qty).toFixed(0));
            }            
        }
        else
        {
            $('#txtLotQty').val(0);
        }
    });

    function Resetdetail()
    {
        $('#txtDeliveryOrderDetail').data('DODetail',null);
        $('#cboPTUDistribution').empty();
        $("#cboPTUDistribution").data('PTUDistributions',[]);
        $('#txtYetToDeliveryChallanQty, #txtChallanDetailQty').val(0);
        DynamicRefreshList(oDeliveryChallan.DeliveryChallanDetails,'tblDeliveryChallanDetail');
    }

    $('#cboChallanType').change(function(e){
        Resetdetail();
    });

    $('#cboStore').change(function(e){
        Resetdetail();
    });

        
    function RefreshList(oDeliveryChallanDetails)
    {
      debugger;
        var data=oDeliveryChallanDetails;
        data={"total":""+data.length+"","rows":data};
        $('#tblDeliveryChallanDetail').datagrid('loadData',data);
    }


    function Validation(){

        if(parseInt(sessionStorage.getItem("BUID"))<=0)
        {
            alert('No business unit found.');
            return false;
        }
        
        if(parseInt($('#cboStore').val())<=0){
            $('#cboStore').focus();
            $('#cboStore').addClass("errorFieldBorder");
            alert('Please select a store.');
            return false;
        }
        else{
            $('#cboStore').removeClass("errorFieldBorder");
        }

        
        if(parseInt($('#txtDONo').data('DeliveryOrderID'))<=0){
            $('#txtDONo').focus();
            $('#txtDONo').addClass("errorFieldBorder");
            alert('Delivery order required.');
            return false;
        }
        else{
            $('#txtDONo').removeClass("errorFieldBorder");
        }

        if(parseInt($('#txtContractorName').data('ContractorID'))<=0){
            $('#txtContractorName').focus();
            $('#txtContractorName').addClass("errorFieldBorder");
            alert('Buyer required.');
            return false;
        }
        else{
            $('#txtContractorName').removeClass("errorFieldBorder");
        }
        
        if(parseInt($('#txtBuyerName').data('BuyerID'))<=0){
            $('#txtBuyerName').focus();
            $('#txtBuyerName').addClass("errorFieldBorder");
            alert('Buyer required.');
            return false;
        }
        else{
            $('#txtBuyerName').removeClass("errorFieldBorder");
        }
        


        if(parseInt($('#cboContactPersonel').val())<=0){
            $('#cboContactPersonel').focus();
            $('#cboContactPersonel').addClass("errorFieldBorder");
            alert('Contact personel required.');
            return false;
        }
        else{
            $('#cboContactPersonel').removeClass("errorFieldBorder");
        }

        if(parseInt($('#cboChallanType').val())<=0){
            $('#cboChallanType').focus();
            $('#cboChallanType').addClass("errorFieldBorder");
            alert('Please select challan type.');
            return false;
        }
        else{
            $('#cboChallanType').removeClass("errorFieldBorder");
        }

        var oRows=$('#tblDeliveryChallanDetail').datagrid('getRows');

        if(oRows.length<=0){
            alert("Delivery challan detail required.");
        }

        for(var i=0; i<oRows.length;i++){
            if(parseInt(sessionStorage.getItem("ProductNature")) === 2)
            {
                if(parseFloat(oRows[i].Qty)<=0){
                    alert("Quantity required for product "+ oRows[i].LotNo);
                    onClickRow(i);
                    return false;
                }

                if(parseInt(parseFloat(oRows[i].Qty).toFixed(2)) > parseInt(parseFloat(oRows[i].YetToDeliveryChallanQty).toFixed(2)) ){
                    alert("Maximum quantity "+ formatPrice(oRows[i].YetToDeliveryChallanQty) +" allowed for "+ oRows[i].LotNo);
                    onClickRow(i)
                    return false;
                }
            }
            else
            {
                if(parseInt(oRows[i].Qty)<=0){
                    alert("Quantity required for product "+ oRows[i].LotNo);
                    onClickRow(i);
                    return false;
                }

                if(parseInt(oRows[i].Qty)>parseInt(oRows[i].YetToDeliveryChallanQty) ){
                    alert("Maximum quantity "+ formatPrice(oRows[i].YetToDeliveryChallanQty) +" allowed for "+ oRows[i].LotNo);
                    onClickRow(i)
                    return false;
                }
            }
        }
        return true;
    }

    function RefreshObject()
    {
        
        var oDeliveryChallan={
            DeliveryChallanID : parseInt($('#txtChallanNo').data('DeliveryChallanID')),
            BUID : parseInt(sessionStorage.getItem("BUID")),
            ChallanType : $('#cboChallanType').val(),
            ChallanNo : $.trim($('#txtChallanNo').val()),
            ChallanDate : $('#dtChallanDate').datebox('getValue'),
            DeliveryToAddress :$('#txtDeliveryToAddress').val(),  
            DeliveryOrderID : parseInt($('#txtDONo').data('DeliveryOrderID')),
            ContractorID : parseInt($('#txtContractorName').data('ContractorID')),
            BuyerID:parseInt($('#txtBuyerName').data('BuyerID')),
            ContactPersonnelID : $('#cboContactPersonel').val(),
            GatePassNo : $.trim($('#txtGatePassNo').val()),
            VehicleName : $.trim($('#txtVehicleName').val()),
            VehicleNo : $.trim($('#txtVehicleNo').val()),
            ReceivedByName : $.trim($('#txtReceivedByName').val()),
            Note : $.trim($('#txtNote').val()),
            WorkingUnitID : $('#cboStore').val(),
            DeliveryChallanDetails: $('#tblDeliveryChallanDetail').datagrid('getRows')
         
        };
           
        return oDeliveryChallan;
    }

    $("#btnSave").click(function (){
        debugger;
        endEditing();
        if(!Validation()) return false;
        var oDeliveryChallan=RefreshObject();
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/DeliveryChallan/Save",
            traditional: true,
            data:  JSON.stringify(oDeliveryChallan),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                oDeliveryChallan = jQuery.parseJSON(data);
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (oDeliveryChallan.ErrorMessage==null || oDeliveryChallan.ErrorMessage=="") {
                    alert("Data Saved successfully");
                    var oDeliveryChallans = sessionStorage.getItem("DeliveryChallans");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oDeliveryChallans != null) {
                        oDeliveryChallans = jQuery.parseJSON(oDeliveryChallans);
                    }
                    else
                    {
                        oDeliveryChallans = [];
                    }
                    if (nIndex != -1)
                    {
                        oDeliveryChallans[nIndex] = oDeliveryChallan;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oDeliveryChallans.length);
                        oDeliveryChallans.push(oDeliveryChallan);
                    }
                    sessionStorage.setItem("DeliveryChallans", JSON.stringify(oDeliveryChallans));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oDeliveryChallan.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });

  
    //Buyer Pick
    function GetsContactPersonnel(nContractorID, nContactPersonnelID){
        $("#cboContactPersonel").empty();

        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/ContractorPersonal/GetsByBuyer",
            traditional: true,
            data:  JSON.stringify({ContractorID:nContractorID}),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                var oContactPersonnels = jQuery.parseJSON(data);
                if (oContactPersonnels.length>0 && oContactPersonnels[0].ContactPersonnelID) 
                {
                    $("#cboContactPersonel").icsLoadCombo({
                        List: oContactPersonnels,
                        OptionValue: "ContactPersonnelID",
                        DisplayText: "Name",
                        InitialValue:"--Select One--"
                    });
                    if(nContactPersonnelID>0){
                        $("#cboContactPersonel").val(nContactPersonnelID);
                    }
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }
    function PickContractor(){
        var oContractor = { Params: "2~~"+sessionStorage.getItem("BUID") };//here 2 Is Contractor
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            debugger;
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winContractor',
                        winclass: 'clsContractor',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblContractors',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Contractor List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });
    }
    $("#btnPickContractor").click(function () {
        PickContractor();
    });
    $('#txtContractorName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if(code == 13)// Enter
        {
            PickContractor();
        }
        if (code == 8) //backspace=8
        {
            $("#txtContractorName").removeClass("fontColorOfPickItem");
            $('#txtContractorName').data('ContractorID',0);
            $('#txtDONo,#txtBuyerName').val('');
            $('#txtDONo').removeClass('fontColorOfPickItem');
            $('#txtDONo').data('DeliveryOrderID',0);
            $('#txtBuyerName').data('BuyerID',0);
            RefreshList([]);
        }
    });


    function PickBuyer(){
        var oContractor = { Params: "6~~"+sessionStorage.getItem("BUID") };//here 6 Is Mother Contractor
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            debugger;
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winBuyer',
                        winclass: 'clsBuyer',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblBuyers',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Buyer List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });
    }
    $("#btnPickBuyer").click(function () {
        PickBuyer();
    });
    $('#txtBuyerName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if(code == 13)// Enter
        {
            PickBuyer();
        }
        if (code == 8) //backspace=8
        {
            $("#txtBuyerName").removeClass("fontColorOfPickItem");
            $('#txtBuyerName').data('BuyerID',0);
        }
    });

    //Delivery Order Pick
    function GetDeliveryOrder(sDONo)
    {
        
        var oDeliveryOrder = { DONo :sDONo,BUID: sessionStorage.getItem("BUID"),ProductNatureInInt:sessionStorage.getItem("ProductNature"), ContractorID:$('#txtContractorName').data('ContractorID')};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oDeliveryOrder,
            ControllerName: "DeliveryChallan",
            ActionName: "GetsDeliveryOrderBUWise",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DeliveryOrderID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "DONo", title: "Do No", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorName", title: "Contractor", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "YetToDeliveryChallanQty", title: "Yet To Challan Qty", width: 130, align: "right", formatter:formatPrice }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winDeliveryOrderPicker',
                        winclass: 'clsDeliveryOrderPicker',
                        winwidth: 420,
                        winheight: 460,
                        tableid: 'tblDeliveryOrderPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'DONo',
                        windowTittle: 'DeliveryOrder List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    $("#btnPickDO").click(function () {
        debugger;
        GetDeliveryOrder("");
    });
    $('#txtDONo').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) //Enter
        {
            var sDONo = $.trim($('#txtDONo').val());
            if(sDONo=="")
            {
                alert("Enter DO No to Search.");
                return false;
            }
            GetDeliveryOrder($.trim($('#txtDONo').val()));
        }
        if (code == 8) //backspace=8
        {
            $('#txtDONo').removeClass('fontColorOfPickItem');
            $('#txtDONo').data('DeliveryOrderID',0);
            RefreshList([]);
        }
    });
    $("#btnPickPlan").click(function () {
        debugger;
        var oDeliveryPlan = {DeliveryPlanDate:$('#dtChallanDate').datebox('getValue'), BUID:sessionStorage.getItem("BUID"),ProductNatureInInt:sessionStorage.getItem("ProductNature"),ContractorID:$('#txtContractorName').data('ContractorID')};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oDeliveryPlan,
            ControllerName: "DeliveryPlan",
            ActionName: "GetDeilveryPlans",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DeliveryPlanID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "DONo", title: "Do No", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "CustomerName", title: "Contractor", width: 150, align: "left" }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winDeliveryPlanPicker',
                        winclass: 'clsDeliveryPlanPicker',
                        winwidth: 420,
                        winheight: 460,
                        tableid: 'tblDeliveryPlanPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'DONo',
                        windowTittle: 'DeliveryPlan List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    });
    
    //DeliveryOrder Detail
    $("#btnPickDODetail").click(function () {
        if(parseInt($('#txtDONo').data('DeliveryOrderID'))<=0){
            $('#txtDONo').focus();
            $('#txtDONo').addClass("errorFieldBorder");
            alert('Delivery order required.');
            return false;
        }
        else{
            $('#txtDONo').removeClass("errorFieldBorder");
        }

        if(parseInt($('#cboStore').val())<=0){
            $('#cboStore').focus();
            $('#cboStore').addClass("errorFieldBorder");
            alert('Please select a store.');
            return false;
        }
        else{
            $('#cboStore').removeClass("errorFieldBorder");
        }

        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: {DeliveryOrderID: $('#txtDONo').data('DeliveryOrderID')},
            ControllerName: "DeliveryChallan",
            ActionName: "GetsDeliveryOrderDetail",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DeliveryOrderDetailID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "ProductCode", title: "Product Code", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Product Name", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ColorName", title: "Color", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Measurement", title: "Measurement", width: 230, align: "left" }; tblColums.push(oColumn);                    
                    oColumn = { field: "MUnit", title: "Unit", width: 40, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "YetToDeliveryChallanQty", title: "Qty", width: 90, align: "right", formatter: formatPrice }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winDeliveryOrderDetailPicker',
                        winclass: 'clsDeliveryOrderDetailPicker',
                        winwidth: 750,
                        winheight: 460,
                        tableid: 'tblDeliveryOrderDetailPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ProductName',
                        windowTittle: 'DeliveryOrder Detail List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    });
    //Lot Load
    function GetsLot(){
        debugger;
        $('#cboPTUDistribution').empty();
        $("#cboPTUDistribution").data('PTUDistributions',[]);

        var oPTUUnit2Distribution={
            PTUUnit2ID: $('#txtDeliveryOrderDetail').data('DODetail').PTUUnit2ID,
            WorkingUnitID: $('#cboStore').val(),
            BUID: parseInt(sessionStorage.getItem("BUID"))
        }
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress') +"/Lot/GetsLotByBUWise",
            traditional: true,
            data:  JSON.stringify(oPTUUnit2Distribution),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                var oPTUUnit2Distributions = jQuery.parseJSON(data);
                if (oPTUUnit2Distributions.length>0 && oPTUUnit2Distributions[0].LotID) 
                {
                    $("#cboPTUDistribution").icsLoadCombo({List: oPTUUnit2Distributions,OptionValue: "PTUUnit2DistributionID",DisplayText: "LotNo"});
                    $('#cboPTUDistribution').data('PTUDistributions',oPTUUnit2Distributions);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }
     
    //Picker Value Initialize
    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }

    function SetPickerValueAssign(oPickerobj) {

        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

        if (oPickerobj.winid == 'winContractor')
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0) {
                $('#txtContractorName').addClass('fontColorOfPickItem');
                $('#txtContractorName').val(oreturnObj.Name);
                $('#txtContractorName').data('ContractorID',oreturnObj.ContractorID);
                $('#txtContractorName').focus();
            }
        }else  if (oPickerobj.winid == 'winBuyer')
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0) {
                $('#txtBuyerName').addClass('fontColorOfPickItem');
                $('#txtBuyerName').val(oreturnObj.Name);
                $('#txtBuyerName').data('BuyerID',oreturnObj.ContractorID);
                $('#txtBuyerName').focus();
            }
        }
        else if (oPickerobj.winid == 'winDeliveryOrderPicker' || oPickerobj.winid == 'winDeliveryPlanPicker')
        {
            if (oreturnObj != null && parseInt(oreturnObj.DeliveryOrderID) > 0)
            {
                $('#txtDONo, #txtContractorName,#txtBuyerName').addClass('fontColorOfPickItem');
                $('#txtDONo').data('DeliveryOrderID',oreturnObj.DeliveryOrderID);
                $('#txtDONo').val(oreturnObj.DONo);
                $('#txtRefNo').val(oreturnObj.RefNo);

                $('#txtContractorName').data('ContractorID',oreturnObj.ContractorID);
                if(oPickerobj.winid == 'winDeliveryPlanPicker')  {$('#txtContractorName').val(oreturnObj.CustomerName);}else{$('#txtContractorName').val(oreturnObj.ContractorName);}
                $('#txtDeliveryToName').val(oreturnObj.DeliveryToName);
                $('#txtDeliveryToAddress').val(oreturnObj.DeliveryToAddress);
                $('#txtBuyerName').data('BuyerID',oreturnObj.BuyerID);
                $('#txtBuyerName').val(oreturnObj.BuyerName);
                $('#txtDeliveryPoint').focus();
                GetsContactPersonnel(oreturnObj.ContractorID,oreturnObj.ContractorContactPerson);
            }
        }
        else if(oPickerobj.winid =='winDeliveryOrderDetailPicker')
        {
            if (oreturnObj != null && parseInt(oreturnObj.DeliveryOrderDetailID)> 0)
            {
                $('#txtDeliveryOrderDetail').data('DODetail',oreturnObj);
                $('#txtDeliveryOrderDetail').val(parseInt(oreturnObj.ColorID)>0?(oreturnObj.ProductName+'['+oreturnObj.ColorName+']'):oreturnObj.ProductName);
                $('#txtYetToDeliveryChallanQty').val(formatPrice(oreturnObj.YetToDeliveryChallanQty));
                GetsLot();
            }
        }
    }

    $("#btnAddDetail").click(function () {
        debugger;
        var oPTUDistributions=$('#cboPTUDistribution').data('PTUDistributions');
        if($('#txtDeliveryOrderDetail').data('DODetail')==null || $('#txtDeliveryOrderDetail').data('DODetail').DeliveryOrderDetailID<=0){
            $('#txtDeliveryOrderDetail').focus();
            $('#txtDeliveryOrderDetail').addClass("errorFieldBorder");
            alert('Delivery items required.');
            return false;
        }
        else
        {
            $('#txtDeliveryOrderDetail').removeClass("errorFieldBorder");
        }

        if(oPTUDistributions==null || parseInt(oPTUDistributions.length)<=0)
        {
            $('#cboPTUDistribution').focus();
            $('#cboPTUDistribution').addClass("errorFieldBorder");
            alert('No lot found for '+ $('#txtDeliveryOrderDetail').data('DODetail').ProductName);
            return false;
        }
        else{
            $('#cboPTUDistribution').removeClass("errorFieldBorder");
        }

        if(parseFloat(icsRemoveComma($('#txtChallanDetailQty').val()))<=0){
            $('#txtChallanDetailQty').focus();
            $('#txtChallanDetailQty').addClass("errorFieldBorder");
            alert('Challan quantity required for lot '+$('#cboPTUDistribution option:selected').text());
            return false;
        }
        else{
            $('#txtChallanDetailQty').removeClass("errorFieldBorder");
        }

        for(var i=0;i<oPTUDistributions.length;i++)
        {
            if(parseInt(oPTUDistributions[i].PTUUnit2DistributionID)===parseInt($('#cboPTUDistribution').val()) && ( parseFloat(icsRemoveComma($('#txtChallanDetailQty').val())) > parseFloat(oPTUDistributions[i].Qty) )){
                alert("Max." + formatPrice(parseFloat(oPTUDistributions[i].Qty)) +" "+ oPTUDistributions[i].MUName +" allowed for this lot.");
                return false;
            }
        }

        if(parseInt(parseFloat(icsRemoveComma($('#txtChallanDetailQty').val())).toFixed(2)) > parseInt(parseFloat($('#txtDeliveryOrderDetail').data('DODetail').YetToDeliveryChallanQty).toFixed(2)) ){
            $('#txtChallanDetailQty').focus();
            $('#txtChallanDetailQty').addClass("errorFieldBorder");
            alert('Max. challan quantity allowed '+ $('#txtYetToDeliveryChallanQty').val() +" "+ $('#txtDeliveryOrderDetail').data('DODetail').MUnit +" for product "+ $('#txtDeliveryOrderDetail').data('DODetail').ProductName );
            return false;
        }
        else{
            $('#txtChallanDetailQty').removeClass("errorFieldBorder");
        }
        var oRows=$('#tblDeliveryChallanDetail').datagrid('getRows');
         var hasLot=false;
            for(var j=0;j<oRows.length;j++)
            {
                if(parseInt(oRows[j].PTUUnit2DistributionID) == parseInt($('#cboPTUDistribution').val()))
                {
                    alert("This lot already exists.");
                    hasLot=true;
                    break;
                }
            }
            if(!hasLot){
                var oDOD = $('#txtDeliveryOrderDetail').data('DODetail');
                var oPTUUnit2Distribution = GetPTUDistribution($('#cboPTUDistribution').val())
                var oDeliveryChallanDetail= {
                    DeliveryChallanDetailID : 0,
                    DeliveryChallanID : parseInt($('#txtChallanNo').data('DeliveryChallanID')),
                    DODetailID : parseInt($('#txtDeliveryOrderDetail').data('DODetail').DeliveryOrderDetailID),
                    PTUUnit2DistributionID : parseInt(oPTUUnit2Distribution.PTUUnit2DistributionID),
                    LotID  : parseInt(oPTUUnit2Distribution.LotID),
                    ProductID :parseInt($('#txtDeliveryOrderDetail').data('DODetail').ProductID),
                    MUnitID :  parseInt($('#txtDeliveryOrderDetail').data('DODetail').MUnitID),
                    Qty : parseFloat(icsRemoveComma($('#txtChallanDetailQty').val())),
                    YetToDeliveryChallanQty:icsRemoveComma($('#txtYetToDeliveryChallanQty').val()),
                    BagQty : (parseInt(icsRemoveComma($('#txtFirstCartonQty').val()))+parseInt(icsRemoveComma($('#txtSecondCartonQty').val()))+parseInt(icsRemoveComma($('#txtThirdCartonQty').val()))),
                    ProductName :oDOD.ProductName,
                    ProductWithColorName:(parseInt(oDOD.ColorID)>0?oDOD.ProductName+'['+oDOD.ColorName+']':oDOD.ProductName),
                    ProductCode : $('#txtDeliveryOrderDetail').data('DODetail').ProductCode,
                    MUnit : $('#txtDeliveryOrderDetail').data('DODetail').MUnit,
                    StyleNo:$('#txtDeliveryOrderDetail').data('DODetail').StyleNo, 
                    LotNo : oPTUUnit2Distribution.LotNo,
                    Note : MakeNote()
                };
                $('#tblDeliveryChallanDetail').datagrid('appendRow',oDeliveryChallanDetail);
                $('#txtDeliveryOrderDetail').val('');
                $("#cboPTUDistribution").icsLoadCombo({List: [],OptionValue: "PTUUnit2DistributionID",DisplayText: "LotNo"});
                $("#cboPTUDistribution").data('PTUDistributions',[]);
                $('#txtLotQty,#txtChallanDetailQty,#txtYetToDeliveryChallanQty,#txtFirstCartonQty,#txtQtyPerCartonFirst,#txtSecondCartonQty,#txtQtyPerCartonSecond,#txtThirdCartonQty,#txtQtyPerCartonThird').val(0);
            }
           
    });
    function MakeNote()
    {
        var sNote = "";
        if(parseInt(icsRemoveComma($('#txtFirstCartonQty').val()))>0 && parseInt(icsRemoveComma($('#txtQtyPerCartonFirst').val()))>0)
        {
            sNote+="( "+$('#txtFirstCartonQty').val()+" X "+$('#txtQtyPerCartonFirst').val()+" )";
        }
        if(parseInt(icsRemoveComma($('#txtSecondCartonQty').val()))>0 && parseInt(icsRemoveComma($('#txtQtyPerCartonSecond').val()))>0)
        {
            if(sNote!=""){sNote+="-";}
            sNote+=" ( "+$('#txtSecondCartonQty').val()+" X "+$('#txtQtyPerCartonSecond').val()+" )";
        }
        if(parseInt(icsRemoveComma($('#txtThirdCartonQty').val()))>0 && parseInt(icsRemoveComma($('#txtQtyPerCartonThird').val()))>0)
        {
            if(sNote!=""){sNote+="-";}
            sNote+=" ( "+$('#txtThirdCartonQty').val()+" X "+$('#txtQtyPerCartonThird').val()+" )";
        }
        return sNote;
    }

    function GetPTUDistribution(nPTUDistributionID)
    {
        var oPTUUnit2Distributions=$('#cboPTUDistribution').data('PTUDistributions');
        for(var i = 0;i<oPTUUnit2Distributions.length;i++)
        {
            if(parseInt(oPTUUnit2Distributions[i].PTUUnit2DistributionID) === parseInt(nPTUDistributionID))
            {
                return oPTUUnit2Distributions[i];
            }
        }
        return null;
    }

   
    $("#btnRemoveDetail").click(function () {

        var oDCDetail=$('#tblDeliveryChallanDetail').datagrid('getSelected');
        if(oDCDetail==null || oDCDetail.ProductID<=0){
            alert("Please select a valid item from list.");
            return false;
        }
        var nIndex= $('#tblDeliveryChallanDetail').datagrid('getRowIndex',oDCDetail);
        $('#tblDeliveryChallanDetail').datagrid('deleteRow',nIndex);

    });
   
    $("#btnRefreshDetail").click(function (){
        endEditing();
    });
 
    var editIndex = undefined;
    function endEditing(){
        debugger;
        if (editIndex == undefined){return true}
        if ($('#tblDeliveryChallanDetail').datagrid('validateRow', editIndex)){
            $('#tblDeliveryChallanDetail').datagrid('endEdit', editIndex);
            $('#tblDeliveryChallanDetail').datagrid('selectRow',editIndex);
            var oDeliveryChallanDetail=$('#tblDeliveryChallanDetail').datagrid('getSelected');
            if(oDeliveryChallanDetail!=null)
            {
                $('#tblDeliveryChallanDetail').datagrid('updateRow',{index: editIndex,	row: oDeliveryChallanDetail});
            }
            editIndex = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRow(index){
        if (editIndex != index && $('#tblDeliveryChallanDetail').data("GridEditable")){
            if (endEditing())
            {
                $('#tblDeliveryChallanDetail').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndex = index;
            }
            else
            {
                $('#tblDeliveryChallanDetail').datagrid('selectRow', editIndex);
            }
        }
    }
    
    $("#btnApprove").click(function (){

        if(!Validation()) return false;
        if (!confirm("Confirm to Approve?")) return false;
        var oDeliveryChallan=RefreshObject();
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/DeliveryChallan/Approve",
            traditional: true,
            data:  JSON.stringify(oDeliveryChallan),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                oDeliveryChallan = jQuery.parseJSON(data);
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (oDeliveryChallan.DeliveryChallanID>0 && oDeliveryChallan.ApproveBy!=0)
                {
                    alert("Approved successfully");
                    var oDeliveryChallans = sessionStorage.getItem("DeliveryChallans");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oDeliveryChallans != null) {
                        oDeliveryChallans = jQuery.parseJSON(oDeliveryChallans);
                    }
                    else {
                        oDeliveryChallans = [];
                    }
                    if (nIndex != -1) {
                        oDeliveryChallans[nIndex] = oDeliveryChallan;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oDeliveryChallans.length);
                        oDeliveryChallans.push(oDeliveryChallan);
                    }
                    sessionStorage.setItem("DeliveryChallans", JSON.stringify(oDeliveryChallans));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oDeliveryChallan.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });
   
    $('#btnClose').click(function(e){
        window.location.href = sessionStorage.getItem("BackLink");
    })

    //Vehicle
    $('#txtVehicleNo').keydown(function(e){
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) //Enter
        {
            PickExportTR();
        }
    });

    $('#txtVehicleName').keydown(function(e){
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) //Enter
        {
            PickExportTR();
        }
    });

    $('#txtReceivedByName').keydown(function(e){
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) //Enter
        {
            PickExportTR();
        }
    });

    function PickExportTR() {
        var oExportTR = {
            ExportTRID: 0,
            BUID: parseInt(sessionStorage.getItem("BUID"))
        };
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oExportTR,
            ControllerName: "ExportTR",
            ActionName: "PickExportTRs",
            IsWinClose: false
        };
        DynamicRefreshList([], "tblExportTRs");
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ExportTRID > 0) {                    
                    DynamicRefreshList(response.objs, "tblExportTRs");
                    $("#winExportTR").icsWindow('open', "Export TR Search");
                    $("#divExportTR").focus();
                    $("#winExportTR input").val("");
                }
                else 
                {                    
                    DynamicRefreshList([], "tblExportTRs");
                    alert(response.objs[0].ErrorMessage);                    
                }
            }
            else {
                alert("Sorry, No data found, Try again.");                
            }
        });
    }
    $("#btnOkExportTR").click(function () {
        var oExportTR = $("#tblExportTRs").icsGetSelectedItem();
        if(oExportTR === null && parseInt(oExportTR.ExportTRID) <= 0)
        {
            alert("Please Select an Truck!");
            return;
        }
        if (oExportTR != null && oExportTR.ExportTRID > 0) {            
            $("#txtVehicleNo").val(oExportTR.TruckNo);
            $("#txtVehicleName").val(oExportTR.Carrier);
            $("#txtReceivedByName").val(oExportTR.DriverName);
        }
    });

    $("#btnCloseExportTR").click(function () {
        $("#winExportTR").icsWindow("close");
    });
    //End Vehicle
</script>