@{
    ViewBag.Title = "Delivery Challan";
}
@model ESimSol.BusinessObjects.TradingDeliveryChallan
<div id="progbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
    <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
        <label style="font-size:18px;">Please wait</label>
        <div id="progbar" style="width:100%;height:37px;"></div>
    </div>
</div>
<div class="menuMainCollectionTable">
    <div id="divTradingDeliveryChallan" class="easyui-panel" title="Delivery Challan" style="font-family:Tahoma; text-align:center; height:89%; width:100%">
        <fieldset>
            <legend style="font-weight:bold">Basic Informations : </legend>
            <table border="0" cellspacing="1" cellpadding="1" style="font-size:11px; font-weight:bold">
                <tr>
                    <td style="width:10%; text-align:right">
                        Challan No:
                    </td>
                    <td style="width:11%">
                        @Html.TextBoxFor(model => model.ChallanNo, new { style = "width: 95%;", id = "txtChallanNo", disabled = "disabled" })
                    </td>
                    <td style="width:8%; text-align:right">
                        Invoice No :
                    </td>
                    <td style="width:10%">
                        @Html.TextBoxFor(model => model.InvoiceNo, new { style = "width: 85%;", id = "txtInvoiceNo", disabled = "disabled" })
                    </td>
                    <td style="width:11%; text-align:right">
                        Challan Date :
                    </td>
                    <td style="width:15%">
                        <input id="dtChallanDate" type="text" style="width:100%;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                    </td>

                    <td style="width:10%; text-align:right;font-weight:bold">
                        Store :
                    </td>
                    <td style="width:25%;font-size:11px">
                        <select id="cboStore" style="width:98%"></select>
                        @*@Html.DropDownListFor(model => model.StoreID, Model.WorkingUnits.Select(x => new SelectListItem() { Text = x.WorkingUnitName, Value = x.WorkingUnitID.ToString() }), new { id = "cboStore", style = "width:98%;" })*@
                    </td>
                </tr>
                <tr>
                    <td style="width:10%; text-align:right; font-weight:bold">Buyer : </td>
                    <td style="width:29%; text-align:left" colspan="3">
                        @Html.TextBoxFor(model => model.BuyerName, new { style = "width: 96%;", id = "txtBuyerName", disabled = "disabled" })
                    </td>
                    <td style="width:11%; text-align:right">
                        Currency :
                    </td>
                    <td style="width:15%">
                        @Html.TextBoxFor(model => model.CurrencyName, new { style = "width: 96%;", id = "txtCurrencyName", disabled = "disabled" })
                    </td>
                    <td style="width:10%; text-align:right;font-weight:bold">
                        Remarks :
                    </td>
                    <td style="width:25%;font-size:11px">
                        @Html.TextBoxFor(model => model.Note, new { style = "width: 96%;", id = "txtNote" })
                    </td>
                </tr>
            </table>
        </fieldset>
        <div style="margin-left:2px; height:385px; margin-left:2px; width:99.80%">
            <table id="tblTradingDeliveryChallanDetail" title="Item Description" class="easyui-datagrid" style="width:100%;height:377px"
                   data-options="singleSelect: true, fitColumns:false, rownumbers:true,pagination:false,autoRowHeight:false,toolbar: '#toolbar',onClickRow: onClickRow ">
                <thead>
                    <tr>
                        <th field="ProductCode" width="85" align="left">Code</th>
                        <th field="ProductName" width="180" align="left">Product Name</th>
                        <th field="ItemDescription" width="190" align="left">Item Description</th>
                        <th field="Symbol" width="70" align="left">Unit</th>
                        <th field="LotNo" width="120" align="left">Lot No</th>
                        <th field="LotBalance" width="120" align="left" formatter="formatPrice">Lot Balance</th>
                        <th field="YetToChallanQty" width="100" align="right" formatter="formatPrice">Yet To Challan</th> 
                        <th data-options="field:'ChallanQty',width:97,align:'right',editor:{type:'numberbox',options:{precision:2}}" formatter="formatPrice" align="right">Quantity</th>
                       
                    </tr>
                </thead>
            </table>
            <div id="toolbar" style=" height:25px">
                <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
                <a id="btnReload" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Reload</a>
                <a id="btnRemove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                <a id="btnPickLot" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Pick</a>
            </div>
        </div>
    </div>
    <fieldset style="height:8%">
        <legend style="font-weight: bold">Action : </legend>
        <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
            <tr>
                <td style="width:83%; text-align:right"></td>
                <td style="width:17%;text-align:right;">
                    <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                    <a id="btnDisburse" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Disburse</a>
                    <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                </td>
            </tr>
        </table>
    </fieldset>
</div>

<script type="text/javascript">
    var _oTradingDeliveryChallan=null;
    var _nInvoiceDetails =[];
    $(document).ready(function () {
        debugger;
        _oTradingDeliveryChallan = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _nInvoiceDetails =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.InvoiceDetails));
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").hide();
        $('#dtChallanDate').datebox('setValue', _oTradingDeliveryChallan.ChallanDateST);
        $("#cboStore").icsLoadCombo({List: _oTradingDeliveryChallan.WorkingUnits, OptionValue: "WorkingUnitID", DisplayText: "WorkingUnitName", InitialValue:"--select store--"});
        $('#cboStore').val(_oTradingDeliveryChallan.StoreID);
        RefreshList(_oTradingDeliveryChallan.TradingDeliveryChallanDetails);
        RefreshLayOut();
    });

    function updateProgress() {
        var value =$('#progbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progbar').progressbar('setValue', value);
        }
    }

    function hideShow(miliseconds) {
        $("#progbarParent").hide();
    }

    function RefreshLayOut() {
        var sTradingDeliveryChallanHeader = sessionStorage.getItem("TradingDeliveryChallanHeader");
        $("#btnDisburse").hide();
        if (sTradingDeliveryChallanHeader === "View Delivery Challan") {
            $("#txtChallanNo").prop('disabled', true);
            $("#txtInvoiceNo").prop('disabled', true);
            $("#dtChallanDate").datebox({'disabled':true});
            $('#dtChallanDate').datebox('setValue', _oTradingDeliveryChallan.ChallanDateST);
            $("#cboStore").prop('disabled', true);
            $("#txtBuyerName").prop('disabled', true);
            $("#txtCurrencyName").prop('disabled', true);
            $("#txtNote").prop('disabled', true);
            $("#btnRemove").hide();
            $("#btnSave").hide();
            $("#btnDisburse").hide();
            $("#btnReload").hide();
            $("#btnPickLot").hide();
        }
        if (sTradingDeliveryChallanHeader === "Disburse Delivery Challan") {
            $("#txtChallanNo").prop('disabled', true);
            $("#txtInvoiceNo").prop('disabled', true);
            $("#dtChallanDate").datebox({'disabled':true});
            $('#dtChallanDate').datebox('setValue', _oTradingDeliveryChallan.ChallanDateST);
            $("#cboStore").prop('disabled', true);
            $("#txtBuyerName").prop('disabled', true);
            $("#txtCurrencyName").prop('disabled', true);
            $("#txtNote").prop('disabled', true);
            $("#btnRemove").hide();
            $("#btnSave").hide();
            $("#btnDisburse").show();
            $("#btnReload").hide();
            $("#btnPickLot").hide();
            
        }
        if (sTradingDeliveryChallanHeader === "Edit TradingDeliveryChallan") {
     
            $("#btnReload").hide();
            
        }
    }

    function ValidateInput() {
        if(_oTradingDeliveryChallan===null)
        {
            alert("Invalid Purchase Invoice!");
            return false;
        }
        if(parseInt(_oTradingDeliveryChallan.BUID)<=0)
        {
            alert("Invalid Business Unit!");
            return false;
        }
        var dtChallanDate = $('#dtChallanDate').datebox('getValue');
        if (dtChallanDate == null || dtChallanDate == "") {
            alert("Please enter Invocie Date!");
            $('#dtChallanDate').focus();
            return false;
        }
        if ($('#cboStore').val() === null ||  parseInt($('#cboStore').val()) <=0) {
            alert("Please select Store!");
            $('#cboStore').focus();
            return false;
        }

        if(parseInt(_oTradingDeliveryChallan.BuyerID)<=0){
            alert("Please select Buyer!");
            return false;
        }

        var oTradingDeliveryChallanDetails = $('#tblTradingDeliveryChallanDetail').datagrid('getRows');
        if (oTradingDeliveryChallanDetails == null || oTradingDeliveryChallanDetails.length <= 0) {
            alert("Please enter at least one item!");
            return false;
        }

        for (var i = 0; i < oTradingDeliveryChallanDetails.length; i++) {
            if (parseFloat(oTradingDeliveryChallanDetails[i].ChallanQty) <= 0) {
                alert("Invoice Quantity Should be greater than 0 for  : " + oTradingDeliveryChallanDetails[i].ProductName);
                return false;
            }
            if (parseFloat(oTradingDeliveryChallanDetails[i].UnitPrice) <= 0) {
                alert("Unit price Should be greater than 0 for : " + oTradingDeliveryChallanDetails[i].ProductName);
                return false;
            }
        }
        var nNetAmount =parseFloat($('#tblTradingDeliveryChallanDetail').data("NetAmount"));
        if (nNetAmount <= 0) {
            alert("Invalid Net Amount!");
            return false;
        }
        return true;
    }




    //function BuyerKeyDown(event) {
    //    //return;
    //    if (event.which == 13) {
    //        var oTxtName=$("#txtBuyer").val();
    //        if (oTxtName != null) {
    //            PickBuyer(oTxtName);
    //        }
    //    }
    //    if (event.which == 8) {
    //        txtBuyer.style.color="Black";
    //        $("#MainDiv").data("BuyerID",0);
    //    }

    //}
    
    $("#btnPickLot").click(function ()
    {
        var oTradingSaleInvoice= $('#tblTradingDeliveryChallanDetail').datagrid('getSelected');
        if(oTradingSaleInvoice==null || oTradingSaleInvoice.TradingSaleInvoiceID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if ($('#cboStore').val() === null ||  parseInt($('#cboStore').val()) <=0) {
            alert("Please select Store!");
            $('#cboStore').focus();
            return false;
        }
        var oLot = {
            BUID:sessionStorage.getItem('BUID'),
            ProductID:parseInt(oTradingSaleInvoice.ProductID),
            StoreID:parseInt($('#cboStore').val()),
            // LotNo: $.trim($scope.txtProductDamageLot)
        };


        debugger;
        var obj = {
            BaseAddress:_sBaseAddress,
            Object: (oLot) ,
            ControllerName: "Lot",
            ActionName: "GetsLot",
            IsWinClose: false
        };
        var tblColums = []; var oColumn = { field: "LotNo", title: "Lot NO", width: 300, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "MUName", title: "M.Unit", width: 80, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Balance", title: "Quantity", width: 100, align: "right" }; tblColums.push(oColumn);
        DynamicPiker('Lot',obj,tblColums,true,'LotNo','ProductID',600); //pickerName(unique),obj,table,multiReturn,SearchingField, pkID
    });



    function SetPickerValueAssign(oPickerobj)
    {
        debugger;
        var oResult;
        if (oPickerobj.multiplereturn)
        {
            oResult = $('#'+oPickerobj.tableid).datagrid('getChecked');
        }
        else
        {
            oResult = $('#'+oPickerobj.tableid).datagrid('getSelected');
        }


        if (oPickerobj.winid == 'winLot')
        {
           
            if(oResult.length==1)
            {
              
                var oTradingDeliveryChallanDetail= $('#tblTradingDeliveryChallanDetail').datagrid('getSelected');
                oTradingDeliveryChallanDetail.LotID=oResult[0].LotID;
                oTradingDeliveryChallanDetail.LotNo=oResult[0].LotNo;
                oTradingDeliveryChallanDetail.LotBalance=oResult[0].Balance;
                var SelectedRowIndex = $('#tblTradingDeliveryChallanDetail').datagrid('getRowIndex', oTradingDeliveryChallanDetail);
                $('#tblTradingDeliveryChallanDetail').datagrid('updateRow',{ index: SelectedRowIndex, row: oTradingDeliveryChallanDetail }); 
                endEditing();
            }
            else{
                var oSelectedDetail= $('#tblTradingDeliveryChallanDetail').datagrid('getSelected');
                for(var i=0;i<oResult.length;i++)
                {
                    debugger;
                    if(i==0)
                    {
                        var oTradingDeliveryChallanDetail= $('#tblTradingDeliveryChallanDetail').datagrid('getSelected');
                        oTradingDeliveryChallanDetail.LotID=oResult[0].LotID;
                        oTradingDeliveryChallanDetail.LotNo=oResult[0].LotNo;
                        oTradingDeliveryChallanDetail.LotBalance=oResult[0].Balance;
                        var SelectedRowIndex = $('#tblTradingDeliveryChallanDetail').datagrid('getRowIndex', oTradingDeliveryChallanDetail);
                        $('#tblTradingDeliveryChallanDetail').datagrid('updateRow',{ index: SelectedRowIndex, row: oTradingDeliveryChallanDetail }); 
                        
                    }else
                    {
                        var oTempItem=  {
                            Amount: oSelectedDetail.Amount,
                            ChallanQty: oSelectedDetail.ChallanQty,
                      
                            ItemDescription: oSelectedDetail.ItemDescription,
                            ProductID:oSelectedDetail.ProductID,
                            ProductCode:oSelectedDetail.ProductCode,
                            ProductName:oSelectedDetail.ProductName,
                            Symbol: oSelectedDetail.Symbol,
                            TradingDeliveryChallanDetailID: oSelectedDetail.TradingDeliveryChallanDetailID,
                            TradingDeliveryChallanID: oSelectedDetail.TradingDeliveryChallanID,
                            TradingSaleInvoiceDetailID: oSelectedDetail.TradingSaleInvoiceDetailID,
                            UnitID: oSelectedDetail.UnitID,
                            UnitName: oSelectedDetail.UnitName,
                            UnitPrice: oSelectedDetail.UnitPrice,
                            YetToChallanQty: oSelectedDetail.YetToChallanQty,
                            LotID:oResult[i].LotID,
                            LotNo:oResult[i].LotNo,
                            LotBalance:oResult[i].Balance,

                        };
                        $('#tblTradingDeliveryChallanDetail').datagrid('appendRow',oTempItem); 
                    }
                }
                endEditing();
            }
        }
        
        

        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
    }

    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 90){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }

    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }

    function DynamicPiker(pickerName,obj,pTblColums,pMultiReturn,pSearchField,pID,nWidth)
    {
        debugger;
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        setInterval(updateProgress,250);

        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0][pID] > 0) {
                    debugger;
                    var tblColums = pTblColums;
                    var oPickerParam = {
                        winid: 'win'+pickerName,
                        winclass: 'cls'+pickerName,
                        winwidth: nWidth,
                        winheight: 460,
                        tableid: 'tbl'+pickerName+'s',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: pMultiReturn,
                        searchingbyfieldName: pSearchField,
                        windowTittle: pickerName+' List',
                        colsable:true
                    };
                    $.icsPicker(oPickerParam);
                    $("#progressbar").progressbar({ value: 0 });//hide
                    $("#progressbarParent").hide();
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                    $("#progressbar").progressbar({ value: 0 });//hide
                    $("#progressbarParent").hide();
                }
            }
            else{
                alert("Data Not Found.");
                $("#progressbar").progressbar({ value: 0 });//hide
                $("#progressbarParent").hide();
                return;
            }
        });
    }

    function IntializePickerbutton(oPickerobj) {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            debugger;
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);
            }
        });
    }



    function RefreshObject() {
        var oTradingDeliveryChallan = {
            TradingDeliveryChallanID: parseInt(_oTradingDeliveryChallan.TradingDeliveryChallanID),
            BUID : parseInt(_oTradingDeliveryChallan.BUID),
            TradingSaleInvoiceID : parseInt(_oTradingDeliveryChallan.TradingSaleInvoiceID),
            ChallanNo: $.trim($('#txtChallanNo').val()),
            ChallanDate: $('#dtChallanDate').datebox('getValue'),
            BuyerID: parseInt(_oTradingDeliveryChallan.BuyerID),
            StoreID: parseInt($('#cboStore').val()),
            CurrencyID : parseInt(_oTradingDeliveryChallan.CurrencyID),
            Note: $.trim($('#txtNote').val()),
            DeliveryBy: parseInt(_oTradingDeliveryChallan.DeliveryBy),
            NetAmount : parseFloat($('#tblTradingDeliveryChallanDetail').data("NetAmount")),
            TradingDeliveryChallanDetails: $('#tblTradingDeliveryChallanDetail').datagrid('getRows')
        };
        return oTradingDeliveryChallan;
    }
    $("#btnDisburse").click(function () {
        endEditing();
        if (!ValidateInput()) return;
        var oTradingDeliveryChallan = RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url: sessionStorage.getItem("BaseAddress")+  "/TradingDeliveryChallan/Disburse",
            traditional: true,
            data: JSON.stringify(oTradingDeliveryChallan),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oTradingDeliveryChallan = jQuery.parseJSON(data);
                if (oTradingDeliveryChallan.TradingDeliveryChallanID > 0) {
                    alert("Data Saved sucessfully");
                    var oTradingDeliveryChallans = sessionStorage.getItem("TradingDeliveryChallans");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oTradingDeliveryChallans != null) {
                        oTradingDeliveryChallans = jQuery.parseJSON(oTradingDeliveryChallans);
                    }
                    else {
                        oTradingDeliveryChallans = [];
                    }
                    if (nIndex != -1) {
                        oTradingDeliveryChallans[nIndex] = oTradingDeliveryChallan;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oTradingDeliveryChallans.length);
                        oTradingDeliveryChallans.push(oTradingDeliveryChallan);
                    }
                    sessionStorage.setItem("TradingDeliveryChallans", JSON.stringify(oTradingDeliveryChallans));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oTradingDeliveryChallan.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });
    $("#btnSave").click(function () {
        endEditing();
        if (!ValidateInput()) return;
        var oTradingDeliveryChallanDetail= $('#tblTradingDeliveryChallanDetail').datagrid('getRows');
        var TotalQuantity=0;
        for(var i=0;i<oTradingDeliveryChallanDetail.length;i++){
   
            if(oTradingDeliveryChallanDetail[i].ChallanQty>oTradingDeliveryChallanDetail[i].YetToChallanQty){
                alert("Challan Quantity is greater than YetToChallan Quantity");
                return;
            }
            if(oTradingDeliveryChallanDetail[i].LotBalance<oTradingDeliveryChallanDetail[i].ChallanQty){
                alert("Lot balance is less than Challan Quantity");
                return;
            }
        }
    
        for(var i=0;i<_nInvoiceDetails.length;i++){
            debugger;
            var nInvoiceqty=_nInvoiceDetails[i].InvoiceQty;
            var TotalChallanQuantity=0;
            for(var j=0;j<oTradingDeliveryChallanDetail.length;j++)
            {
                if(_nInvoiceDetails[i].ProductID==oTradingDeliveryChallanDetail[j].ProductID)
                {
                    TotalChallanQuantity=TotalChallanQuantity+parseFloat(oTradingDeliveryChallanDetail[j].ChallanQty);
                }
            }
            if(parseFloat(TotalChallanQuantity)>parseFloat(nInvoiceqty)){
                alert("Total Challan Quantity can't be greater than Invoice Quantity");
                return;
            }
        }
        //if(TotalQuantity>YetChallanQuantity){
        //    alert("Your total Quantity can't be Larger Than YetTo Challan Quantity");
        //    return;
        //}
        var oTradingDeliveryChallan = RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url: sessionStorage.getItem("BaseAddress")+  "/TradingDeliveryChallan/Save",
            traditional: true,
            data: JSON.stringify(oTradingDeliveryChallan),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oTradingDeliveryChallan = jQuery.parseJSON(data);
                if (oTradingDeliveryChallan.TradingDeliveryChallanID > 0) 
                {
                    alert("Data Saved sucessfully");
                    if(sessionStorage.getItem("TradingDeliveryChallanHeader")=="Add Delivery Challan")
                    {
                        var oTradingSaleInvoices = sessionStorage.getItem("TradingSaleInvoices");
                        var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                        if (oTradingSaleInvoices != null) {
                            oTradingSaleInvoices = jQuery.parseJSON(oTradingSaleInvoices);
                        }
                        else {
                            oTradingSaleInvoices = [];
                        }
                        if (nIndex != -1) {
                            oTradingSaleInvoices[nIndex] = oTradingDeliveryChallan.TradingSaleInvoice;
                        }
                        else {
                            sessionStorage.setItem("SelectedRowIndex", oTradingSaleInvoices.length);
                            oTradingSaleInvoices.push(oTradingDeliveryChallan.TradingSaleInvoice);
                        }
                        sessionStorage.setItem("TradingSaleInvoices", JSON.stringify(oTradingSaleInvoices));

                    }else
                    {
                        var oTradingDeliveryChallans = sessionStorage.getItem("TradingDeliveryChallans");
                        var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                        if (oTradingDeliveryChallans != null) {
                            oTradingDeliveryChallans = jQuery.parseJSON(oTradingDeliveryChallans);
                        }
                        else {
                            oTradingDeliveryChallans = [];
                        }
                        if (nIndex != -1) {
                            oTradingDeliveryChallans[nIndex] = oTradingDeliveryChallan;
                        }
                        else {
                            sessionStorage.setItem("SelectedRowIndex", oTradingDeliveryChallans.length);
                            oTradingDeliveryChallans.push(oTradingDeliveryChallan);
                        }
                        sessionStorage.setItem("TradingDeliveryChallans", JSON.stringify(oTradingDeliveryChallans));
                    }
                   
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oTradingDeliveryChallan.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $("#btnClose").click(function () {
        window.location.href = sessionStorage.getItem("BackLink");
    });

    function RefreshSummery() {
        var nNetAmount = 0;
        var oTradingDeliveryChallanDetails = $('#tblTradingDeliveryChallanDetail').datagrid('getRows');
        for (var i = 0; i < oTradingDeliveryChallanDetails.length; i++) {
            nNetAmount = nNetAmount + parseFloat(oTradingDeliveryChallanDetails[i].Amount);
        }
        $('#tblTradingDeliveryChallanDetail').data("NetAmount", nNetAmount);
    }

    $("#btnRemove").click(function () {
        var oTradingDeliveryChallanDetail = $('#tblTradingDeliveryChallanDetail').datagrid('getSelected');
        if (oTradingDeliveryChallanDetail == null) {
            alert("Please select a item from list!");
            return;
        }
        var conf = confirm("Confirm to delete?");
        if (conf == false) return;

        endEditing();
        var SelectedRowIndex = $('#tblTradingDeliveryChallanDetail').datagrid('getRowIndex', oTradingDeliveryChallanDetail);
        $('#tblTradingDeliveryChallanDetail').datagrid('deleteRow', SelectedRowIndex);

        var oTradingDeliveryChallanDetails = $('#tblTradingDeliveryChallanDetail').datagrid('getRows');
        RefreshList(oTradingDeliveryChallanDetails);
    });

    function RefreshList(oTradingDeliveryChallanDetails) {
        data = oTradingDeliveryChallanDetails;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblTradingDeliveryChallanDetail').datagrid('loadData', data);
        RefreshSummery();
    }

    $("#btnRefresh").click(function () {
        endEditing();
        data = $('#tblTradingDeliveryChallanDetail').datagrid('getRows');
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblTradingDeliveryChallanDetail').datagrid('loadData', data);
        RefreshSummery();
    });

    $("#btnReload").click(function () {
        if(parseInt(_oTradingDeliveryChallan.TradingSaleInvoiceID)<=0)
        {
            alert("Invalid Purchase Invoice!");
            return false;
        }

        var oTradingDeliveryChallan = {
            TradingDeliveryChallanID : _oTradingDeliveryChallan.TradingDeliveryChallanID,
            TradingSaleInvoiceID : parseInt(_oTradingDeliveryChallan.TradingSaleInvoiceID)
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url: sessionStorage.getItem("BaseAddress")+  "/TradingDeliveryChallan/ReloadTradingDeliveryChallanProduct",
            traditional: true,
            data: JSON.stringify(oTradingDeliveryChallan),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oTradingDeliveryChallanDetails = jQuery.parseJSON(data);
                if (oTradingDeliveryChallanDetails !=null) {
                    if(oTradingDeliveryChallanDetails.length>0)
                    {
                        if(oTradingDeliveryChallanDetails[0].ErrorMessage==="")
                        {
                            RefreshList(oTradingDeliveryChallanDetails);
                            RefreshSummery();
                        }
                        else
                        {
                            alert(oTradingDeliveryChallanDetails[0].ErrorMessage);
                        }
                    }
                    else
                    {
                        alert('Data Not Found!\nYour Selected Invoice already TradingDeliveryChallan Complete!');
                    }
                }
                else {
                    alert('Invalid Operation!');
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });


        RefreshSummery();
    });

    function RefreshGrid() {
        endEditing();
        data = $('#tblTradingDeliveryChallanDetail').datagrid('getRows');
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblTradingDeliveryChallanDetail').datagrid('loadData', data);
        RefreshSummery();
    }

    var editIndex = undefined;
    function endEditing() {
        if (editIndex == undefined) { return true }
        if ($('#tblTradingDeliveryChallanDetail').datagrid('validateRow', editIndex)) {
            $('#tblTradingDeliveryChallanDetail').datagrid('endEdit', editIndex);
            $('#tblTradingDeliveryChallanDetail').datagrid('selectRow', editIndex);
            var oTradingDeliveryChallanDetail = $('#tblTradingDeliveryChallanDetail').datagrid('getSelected');
            oTradingDeliveryChallanDetail.Amount = parseFloat(parseFloat(oTradingDeliveryChallanDetail.ChallanQty) * parseFloat(oTradingDeliveryChallanDetail.UnitPrice));
            $('#tblTradingDeliveryChallanDetail').datagrid('updateRow', { index: editIndex, row: oTradingDeliveryChallanDetail });
            RefreshSummery();
            editIndex = undefined;
            return true;
        } else {
            return false;
        }
    }

    function onClickRow(index) {

        if (editIndex != index) {
            if (endEditing()) {
                $('#tblTradingDeliveryChallanDetail').datagrid('selectRow', index)
                        .datagrid('beginEdit', index);
                editIndex = index;
            } else {
                $('#tblTradingDeliveryChallanDetail').datagrid('selectRow', editIndex);
            }
        }
    }
</script>