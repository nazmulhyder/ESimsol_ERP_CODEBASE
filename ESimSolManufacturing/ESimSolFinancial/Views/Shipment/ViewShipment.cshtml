<html>
<head>
    @{
        ViewBag.Title = "Shipment";
    }
</head>
<body>
    @model ESimSol.BusinessObjects.Shipment
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div class="menuMainCollectionTable">
        <div id="MainDiv" class="easyui-panel" title="Shipment" style="font-family:Tahoma;height:90%">
            <fieldset>
                <legend>Shipment Info</legend>
                <table style="width:100%;">
                    <tr>
                        <td class="align-right" style="width:10%">Challan No :</td>
                        <td style="width:20%">
                            @Html.TextBoxFor(model => model.ChallanNo, new { style = "width: 100%;", id = "txtChallanNo" })
                        </td>
                        <td class="align-right" style="width:10%">Shipment Date :</td>
                        <td style="width:20%">
                            <input type="text" style="width:200px;" id="txtShipmentDate" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                        <td class="align-right" style="width:15%">Shipment Mode :</td>
                        <td style="width:25%">
                            <select id="cboShipmentMode" style="width:100%;height:22px;"></select>
                        </td>
                    </tr>

                    <tr>
                        <td class="align-right" style="width:10%">Buyer :</td>
                        <td style="width:20%" @*colspan="3"*@>
                            @Html.TextBoxFor(model => model.BuyerName, new { onkeydown = "BuyerKeyDown(event);", style = "width:80%;", id = "txtBuyer", @placeholder = "" })
                            <input type="button" id="btnBuyer" onclick="PickBuyer()" style="width:15%;float:right;" value="..." />
                        </td>
                        <td class="align-right" style="width:10%">Store</td>
                            <td style="width:20%">
                                <select id="cboStore" style="width:100%;height:22px"></select>
                            </td>
                        <td class="align-right" style="width:15%;">Truck No :</td>
                        <td width="25%">
                            @Html.TextBoxFor(model => model.TruckNo, new { style = "width: 100%;", id = "txtTruckNo" })
                        </td>
                    </tr>
                    <tr>
                        <td class="align-right" style="width:10%">Driver Name :</td>
                        <td style="width:20%">
                            @Html.TextBoxFor(model => model.DriverName, new { style = "width: 100%;", id = "txtDriverName" })
                        </td>
                        <td class="align-right" style="width:10%">Mobile No :</td>
                        <td style="width:20%">
                            @Html.TextBoxFor(model => model.DriverMobileNo, new { style = "width: 100%;", id = "txtDriverMobileNo" })
                        </td>
                        <td class="align-right" style="width:15%">Depo :</td>
                        <td width="25%">
                            @Html.TextBoxFor(model => model.Depo, new { style = "width: 100%;", id = "txtDepo", @placeholder = "", @class = "cls-txt" })
                        </td>
                    </tr>

                    <tr>
                        <td class="align-right" style="width:10%">Escord :</td>
                        <td style="width:20%">
                            @Html.TextBoxFor(model => model.Escord, new { style = "width: 100%;", id = "txtEscord" })
                        </td>
                        <td class="align-right" style="width:10%">Factory :</td>
                        <td style="width:20%">
                            @Html.TextBoxFor(model => model.FactoryName, new { style = "width: 100%;", id = "txtFactoryName" })
                        </td>
                        <td class="align-right" style="width:15%">Security Lock :</td>
                        <td width="25%">
                            @Html.TextBoxFor(model => model.SecurityLock, new { style = "width: 100%;", id = "txtSecurityLock", @placeholder = "", @class = "cls-txt" })
                        </td>
                    </tr>
                    <tr>
                        <td class="align-right" style="width:10%">Empty CTN Qty :</td>
                        <td style="width:20%">
                            @Html.TextBoxFor(model => model.EmptyCTNQty, new { style = "width: 100%;text-align:right", id = "txtEmptyCTNQty" })
                        </td>
                        <td class="align-right" style="width:10%">Gum Tape Qty :</td>
                        <td style="width:20%">
                            @Html.TextBoxFor(model => model.GumTapeQty, new { style = "width: 100%;text-align:right", id = "txtGumTapeQty" })
                        </td>
                        <td class="align-right" style="width:15%">Remarks :</td>
                        <td width="25%">
                            @Html.TextBoxFor(model => model.Remarks, new { style = "width: 100%;", id = "txtRemarks", @placeholder = "", @class = "cls-txt" })
                        </td>
                    </tr>

                </table>
            </fieldset>
            <table id="tblShipmentDetail" title="Shipment Details" class="easyui-datagrid" style="height:310px; width:100%;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar" data-options="onClickRow:onClickRow">
                <thead>
                    <tr>
                        <th field="OrderRecapNo" width="10%" align="left">Recap No</th>
                        <th field="LotNo" width="10%" align="left">Lot No</th>
                        <th field="StyleNo" width="10%" align="left">Style No</th>
                        <th field="CountryName" width="15%" align="left">Country</th>
                        <th field="TotalQuantity" width="10%" align="right">Total Qty</th>
                        <th field="Balance" width="10%" align="right">Balance</th>
                        <th field="AlreadyShipmentQty" width="10%" align="right">Already Shipment</th>
                        <th field="YetToShipmentQty" width="10%" align="right">Yet To Shipment</th>
                        <th data-options="field:'ShipmentQty',align:'right',editor:{type:'numberbox'}" width="10%">Shipment Qty</th>
                        <th data-options="field:'CTNQty',align:'right',editor:{type:'numberbox'}" width="10%" align="right">CTN Qty</th>
                        <th data-options="field:'Remarks',align:'left',editor:{type:'textbox'}" width="20%">Remarks</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbar">
                <input type="text" placeholder="Enter Recap/Style No" id="txtLot" style="width:130px;" onkeydown="LotKeyDown(event)" />
                <input type="button" id="btnOrder" style="width:30px;" onclick="PickLot()" value="..." />
                <input type="button" id="btnClearOrder" style="width:30px;" value="C" />

                <input type="text" placeholder="Enter Country" id="txtCountry" style="width:130px;" onkeydown="CountryKeyDown(event)" />
                <input type="button" id="btnCountry" style="width:30px;" onclick="PickCountry()" value="..." />
                <input type="button" id="btnClearCountry" style="width:30px;" value="C" />
                @*Unit : <select id="cboUnit" style="width:100px;height:22px;"></select>
                Qty : <input type="number" id="txtQty" style="width:70px;" />*@
                <a id="btnAddDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                <a id="btnRemoveDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                <a id="btnRefreshDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>

            </div>
        </div>
        <fieldset style="height:10%">
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                <tr>
                    <td style="width:60%; text-align:right"></td>
                    <td style="width:40%;text-align:right;">
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" onclick="Close()" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>
<style type="text/css">
    td, th {
        padding: 2px;
    }
</style>
<script type="text/javascript">
    var _sBaseAddress = "";
    var _oShipment = [];
    var _oStores = [];
    var _oShipmentModes = [];
    var _oShipmentDetails = [];
    $(document).ready(function () {
        debugger;
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oShipment =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oStores = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Stores));
        _oShipmentModes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ShipmentMode));
        if(sessionStorage.getItem('Action')=='View')
        {
            $('#tblShipmentDetail').data("GridEditable",false);
            $('#btnSave, #toolbar').hide();
        }
        debugger;
        if(parseInt(_oShipment.ShipmentID)>0)
        {
            //$('#txtPINo, #txtContractorName').addClass('fontColorOfPickItem');
            _oShipmentDetails = _oShipment.ShipmentDetails;
            RefreshList(_oShipmentDetails);
        }

        LoadShipmentMode();
        LoadStores();

        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();

        $('#txtShipmentDate').datebox('setValue',_oShipment.ShipmentDateInString);
        $("#MainDiv").data("LotID","");
        $("#MainDiv").data("CountryID","");
        RefreshAutoComplete();
    });

    function LoadShipmentMode(){
        $("#cboShipmentMode").icsLoadCombo({
            List:_oShipmentModes,
            OptionValue: "id",
            DisplayText: "Value",

        });
        $('#cboShipmentMode').val(_oShipment.ShipmentModeInt);
    }
    function LoadStores(){
        $("#cboStore").icsLoadCombo({
            List: _oStores,
            OptionValue: "WorkingUnitID",
            DisplayText: "WorkingUnitName"

        });
        $('#cboStore').val(_oShipment.StoreID);
    }

    var editIndex = undefined;
    function endEditing() {
        //debugger;
        if (editIndex == undefined) { return true }
        if ($('#tblShipmentDetail').datagrid('validateRow', editIndex)) {
            $('#tblShipmentDetail').datagrid('endEdit', editIndex);
            //RefreshSummery();

            editIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }
    function onClickRow(index) {
        debugger;
        if (editIndex != index) {
            if (endEditing()) {
                $('#tblShipmentDetail').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndex = index;
            }
            else {
                $('#tblShipmentDetail').datagrid('selectRow', editIndex);
            }
        }
    }

    //start buyer picker
    function BuyerKeyDown(event) {
        //return;
        if (event.which == 13) {
            var oTxtName=$("#txtBuyer").val();
            if (oTxtName != null) {
                PickBuyer(oTxtName);
            }
        }
        if (event.which == 8) {
            txtBuyer.style.color="Black";
            _oShipment.BuyerID = 0;
        }

    }

    function PickBuyer(oTxtName)
    {
        var oStyleSearch = {
            Params: '2' + '~' + $("#txtBuyer").val() +'~'+_oShipment.BUID
        };//
        console.log(oStyleSearch);
        debugger;
        var obj = {
            BaseAddress:_sBaseAddress,
            Object: (oStyleSearch) ,
            ControllerName: "Contractor", //TechnicalSheet
            ActionName: "ContractorSearchByNameType",//ViewStyleSearch
            IsWinClose: false
        };
        var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
        DynamicPiker('Buyer',obj,tblColums,false,'Name','ContractorID',600); //pickerName(unique),obj,table,multiReturn,SearchingField, pkID
    }

    function SetBuyer(oSelectedStyle) {
        debugger;
        document.getElementById("txtBuyer").value = oSelectedStyle.Name;
        txtBuyer.style.color="Blue";
        //var text = "";
        //var len = oSelectedStyle.length;
        //for (var i = 0; i < len; i++) {

        //    text += oSelectedStyle[i].ModuleName;
        //}
        //document.getElementById("txtModuleName").innerHTML = text;
        //$("#MainDiv").data("BuyerID",oSelectedStyle.ContractorID);
        _oShipment.BuyerID = oSelectedStyle.ContractorID;
    }
    //end buyer picker

    //start lot picker
    $("#btnClearOrder").click(function ()
    {
        $('#txtLot').val("");
        txtLot.style.color="Black";
        $("#MainDiv").data("LotID","");
    });

    function LotKeyDown(event) {
        //return;
        if (event.which == 13) {
            var oTxtName=$("#txtLot").val();
            if (oTxtName != null) {
                PickLot(oTxtName);
            }
        }
        if (event.which == 8) {
            txtLot.style.color="Black";
            $("#MainDiv").data("LotID","");
        }
    }

    function PickLot(oTxtName)
    {
        debugger;
        if(_oShipment.BuyerID <= 0){
            alert("Please select Buyer!!");
            $('#txtBuyer').focus();
            return;
        }
        if(parseInt($('#cboStore').val()) <= 0){
            alert("Please select Store!!");
            return;
        }
        var oStyleSearch = {
            BuyerID:_oShipment.BuyerID,
            StoreID: parseInt($('#cboStore').val()),
            BUID: _oShipment.BUID,
            Remarks: (typeof(oTxtName) != 'undefined'?oTxtName:"")
        };

        var obj = {
            BaseAddress:_sBaseAddress,
            Object: (oStyleSearch) ,
            ControllerName: "Shipment", //TechnicalSheet
            ActionName: "GetLot",//ViewStyleSearch
            IsWinClose: false
        };
        var tblColums = []; var oColumn = []; var oColumn = { field: "LotNo", title: "Lot No", width: 100, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "OrderRecapNo", title: "Recap No", width: 100, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "StyleNo", title: "Style No", width: 100, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "StoreName", title: "Store Name", width: 250, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Balance", title: "Stock Qty", width: 100, align: "right" }; tblColums.push(oColumn);
        
        DynamicPiker('Lot',obj,tblColums,true,'OrderRecapNo','LotID',750); //pickerName(unique),obj,table,multiReturn,SearchingField, pkID
    }

    function SetLot(oSelectedStyle) {
        debugger;
        txtLot.style.color = "green";
        txtLot.style.fontWeight = "bold";

        if(oSelectedStyle.length == 1){
            document.getElementById("txtLot").value = oSelectedStyle[0].OrderRecapNo;
        }
        else if(oSelectedStyle.length > 1){
            document.getElementById("txtLot").value = "You have selected " + oSelectedStyle.length + " Lots.";
        }
        //var ids = "";
        //var len = oSelectedStyle.length;
        //for (var i = 0; i < len; i++) {

        //    ids += oSelectedStyle[i].LotID + ",";
        //}
        //if(ids.length > 0){
        //    ids = ids.substring(0, ids.length-1);
        //}
        //alert(ids);
        $("#MainDiv").data("LotID",oSelectedStyle);
    }
    //end lot picker

    //start country picker
    $("#btnClearCountry").click(function ()
    {
        $('#txtCountry').val("");
        txtCountry.style.color="Black";
        $("#MainDiv").data("CountryID","");
    });
    function CountryKeyDown(event) {
        //return;
        if (event.which == 13) {
            var oTxtName=$("#txtCountry").val();
            if (oTxtName != null) {
                PickCountry(oTxtName);
            }
        }
        if (event.which == 8) {
            txtCountry.style.color="Black";
            $("#MainDiv").data("CountryID","");
        }
    }

    function PickCountry(oTxtName)
    {
        debugger;
        //if($("#MainDiv").data("LotID") == ""){
        //    alert("Please select Lot!!");
        //    $('#txtLot').focus();
        //    return;
        //}
        var oStyleSearch = {Name:(typeof(oTxtName) != 'undefined'?oTxtName:"")};

        var obj = {
            BaseAddress:_sBaseAddress,
            Object: (oStyleSearch) ,
            ControllerName: "Country", //TechnicalSheet
            ActionName: "GetsByName",//ViewStyleSearch
            IsWinClose: false
        };
        var tblColums = []; var oColumn = []; var oColumn = { field: "Code", title: "Country Code", width: 100, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Name", title: "Name", width: 150, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
        
        DynamicPiker('Country',obj,tblColums,true,'Name','CountryID',500); //pickerName(unique),obj,table,multiReturn,SearchingField, pkID
    }

    function SetCountry(oSelectedStyle) {
        debugger;
        txtCountry.style.color = "green";
        txtCountry.style.fontWeight = "bold";

        if(oSelectedStyle.length == 1){
            document.getElementById("txtCountry").value = oSelectedStyle[0].ShortName;
        }
        else if(oSelectedStyle.length > 1){
            document.getElementById("txtCountry").value = "You have selected " + oSelectedStyle.length + " Countrys.";
        }
        //var ids = "";
        //var len = oSelectedStyle.length;
        //for (var i = 0; i < len; i++) {
        //    ids += oSelectedStyle[i].CountryID + ",";
        //}
        //if(ids.length > 0){
        //    ids = ids.substring(0, ids.length-1);
        //}
        //alert(ids);
        $("#MainDiv").data("CountryID",oSelectedStyle);
    }
    //end country picker

    function SetPickerValueAssign(oPickerobj)
    {
        debugger;
        var oResult;
        if (oPickerobj.multiplereturn)
        {
            oResult = $('#'+oPickerobj.tableid).datagrid('getChecked');
        }
        else
        {
            oResult = $('#'+oPickerobj.tableid).datagrid('getSelected');
        }


        if (oPickerobj.winid == 'winBuyer')
        {
            SetBuyer(oResult);
        }
        else if (oPickerobj.winid == 'winLot')
        {
            SetLot(oResult);
        }
        else if (oPickerobj.winid == 'winCountry')
        {
            SetCountry(oResult);
        }

        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
    }

    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 90){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }

    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }
    
    function DynamicPiker(pickerName,obj,pTblColums,pMultiReturn,pSearchField,pID,nWidth)
    {
        debugger;
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        setInterval(updateProgress,250);

        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0][pID] > 0) {
                    debugger;
                    var tblColums = pTblColums;
                    var oPickerParam = {
                        winid: 'win'+pickerName,
                        winclass: 'cls'+pickerName,
                        winwidth: nWidth,
                        winheight: 460,
                        tableid: 'tbl'+pickerName+'s',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: pMultiReturn,
                        searchingbyfieldName: pSearchField,
                        windowTittle: pickerName+' List',
                        colsable:true
                    };
                    $.icsPicker(oPickerParam);
                    $("#progressbar").progressbar({ value: 0 });//hide
                    $("#progressbarParent").hide();
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                    $("#progressbar").progressbar({ value: 0 });//hide
                    $("#progressbarParent").hide();
                }
            }
            else{
                alert("Data Not Found.");
                $("#progressbar").progressbar({ value: 0 });//hide
                $("#progressbarParent").hide();
                return;
            }
        });
    }
    
    function IntializePickerbutton(oPickerobj) {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            debugger;
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);
            }
        });
    }

    function RefreshList(oShipmentDetails)
    {
        debugger;
        var data=oShipmentDetails;
        data={"total":""+data.length+"","rows":data};
        $('#tblShipmentDetail').datagrid('loadData',data);
    }

    function Validation(){

        //if(parseInt(sessionStorage.getItem("BUID"))<=0)
        if(parseInt(_oShipment.BUID)<=0)
        {
            alert('No business unit found.');
            return false;
        }

        if($("#txtShipmentDate").datebox('getValue') == '' || $("#txtShipmentDate").datebox('getValue') == null){
            alert('Please Enter Shipment date!!');
            $("#txtShipmentDate").focus();
            return false;
        }

        if(parseInt($("#cboShipmentMode").val())<=0)
        {
            $('#cboShipmentMode').focus();
            alert("Please Select Shipment mode.");
            return false;
        }
        if(_oShipment.BuyerID<=0)
        {
            $('#txtBuyer').focus();
            alert("Please Enter Buyer!!");
            return false;
        }
        if($("#cboStore").val()<=0)
        {
            $('#txtStore').focus();
            alert("Please Enter Store!!");
            return false;
        }
        
        if($('#txtChallanNo').val() == "" || $('#txtChallanNo').val() == null){
            $('#txtChallanNo').focus();
            alert("Please Enter Challan no!!");
            return false;
        }

        var oRows=$('#tblShipmentDetail').datagrid('getRows');
        if(oRows.length<=0){
            alert("Atleast onen Shipment detail required!!");
            return false;
        }

        for(var i=0;i<oRows.length;i++){
            if(parseInt(oRows[i].ShipmentQty) <= 0){
                alert("Please enter Shipment Qty for all Shipment Detail!!");
                return false;
            }
            if(parseInt(oRows[i].CTNQty) <= 0){
                alert("Please enter CTN Qty for all Shipment Detail!!");
                return false;
            }
            if(parseInt(oRows[i].Balance) < parseInt(oRows[i].ShipmentQty)){
                alert("Shipment Qty can't be greater than Balance!!");
                return false;
            }
        }

        return true;
    }

    function RefreshObject()
    {
        var oShipment={
            ShipmentID : _oShipment.ShipmentID,
            BUID : parseInt(_oShipment.BUID),
            ChallanNo : $('#txtChallanNo').val(),
            BuyerID : _oShipment.BuyerID,
            StoreID : $("#cboStore").val(),
            ShipmentDate:$('#txtShipmentDate').datebox('getValue'),
            ShipmentMode:$("#cboShipmentMode").val(),
            TruckNo : $('#txtTruckNo').val(),
            DriverName:$('#txtDriverName').val(),
            DriverMobileNo:$('#txtDriverMobileNo').val(),
            Depo:$('#txtDepo').val(),
            Escord:$('#txtEscord').val(),
            FactoryName:$('#txtFactoryName').val(),
            SecurityLock:$('#txtSecurityLock').val(),
            EmptyCTNQty:$('#txtEmptyCTNQty').val(),
            GumTapeQty:$('#txtGumTapeQty').val(),
            Remarks : $.trim($('#txtRemarks').val()),
            ShipmentDetails: $('#tblShipmentDetail').datagrid('getRows')
        };

        return oShipment;
    }

    $("#btnSave").click(function (){
        debugger;
        endEditing();
        if(!Validation()) return false;
        var oShipment=RefreshObject();
        //return;
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/Shipment/Save",
            traditional: true,
            data:  JSON.stringify(oShipment),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                oShipment = jQuery.parseJSON(data);
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (oShipment.ErrorMessage==null || oShipment.ErrorMessage=="") {
                    alert("Data Saved successfully");
                    var oShipments = sessionStorage.getItem("Shipments");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oShipments != null) {
                        oShipments = jQuery.parseJSON(oShipments);
                    }
                    else
                    {
                        oShipments = [];
                    }
                    if (nIndex != -1)
                    {
                        oShipments[nIndex] = oShipment;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oShipments.length);
                        oShipments.push(oShipment);
                    }
                    sessionStorage.setItem("Shipments", JSON.stringify(oShipments));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oShipment.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });

    $("#btnAddDetail").click(function ()
    {
        debugger;
        var oLots = $("#MainDiv").data("LotID");
        var oCountrys = $("#MainDiv").data("CountryID");

        if(oLots==null || oLots=="")
        {
            alert("Please select Lot!!");
            $('#txtLot').focus();
            return;
        }
        var curData = $('#tblShipmentDetail').datagrid('getRows')

        if(oCountrys==null || oCountrys==""){
            for(var i=0;i<oLots.length;i++){

                flag = 0;
                if(curData.length > 0){                    
                    for(var j=0;j<curData.length;j++){
                        if(oLots[i].LotID == curData[j].LotID){
                            flag = 1;
                            break;
                        }
                    }
                }
                if(flag == 0){
                    var nShipmentQty = 0;
                    if((parseInt(oLots[i].TotalQuantity) - parseInt(oLots[i].AlreadyShipmentQty)) > oLots[i].Balance){
                        nShipmentQty = parseInt(oLots[i].Balance);
                    }else{
                        nShipmentQty = (parseInt(oLots[i].TotalQuantity) - parseInt(oLots[i].AlreadyShipmentQty));
                    }

                    var oShipmentDetail ={
                        LotID: oLots[i].LotID,
                        OrderRecapID : oLots[i].OrderRecapID,
                        OrderRecapNo : oLots[i].OrderRecapNo,
                        StyleNo : oLots[i].StyleNo,
                        TotalQuantity : oLots[i].TotalQuantity,
                        AlreadyShipmentQty : oLots[i].AlreadyShipmentQty,
                        ShipmentQty : nShipmentQty,
                        CTNQty : 0,
                        Remarks : "",
                        YetToShipmentQty: oLots[i].YetToShipmentQty,
                        Balance: oLots[i].Balance,
                        LotNo : oLots[i].LotNo
                    }            
                    $('#tblShipmentDetail').datagrid('appendRow',oShipmentDetail);
                }
                
            }
        }
        else{
            for(var j=0;j<oCountrys.length;j++){
                for(var i=0;i<oLots.length;i++){

                    flag = 0;
                    if(curData.length > 0){
                        for(var k=0;k<curData.length;k++){
                            if((oLots[i].LotID == curData[k].LotID) && (oCountrys[j].CountryID == curData[k].CountryID)){
                                flag = 1;
                                break;
                            }
                        }
                    }

                    if(flag == 0){
                        var nShipmentQty = 0;
                        if((parseInt(oLots[i].TotalQuantity) - parseInt(oLots[i].AlreadyShipmentQty)) > oLots[i].Balance){
                            nShipmentQty = parseInt(oLots[i].Balance);
                        }else{
                            nShipmentQty = (parseInt(oLots[i].TotalQuantity) - parseInt(oLots[i].AlreadyShipmentQty));
                        }

                        var oShipmentDetail ={
                            CountryID : oCountrys[j].CountryID,
                            CountryShortName : oCountrys[j].ShortName,
                            CountryName : oCountrys[j].Name,
                            LotID: oLots[i].LotID,
                            OrderRecapID : oLots[i].OrderRecapID,
                            OrderRecapNo : oLots[i].OrderRecapNo,
                            StyleNo : oLots[i].StyleNo,
                            TotalQuantity : oLots[i].TotalQuantity,
                            AlreadyShipmentQty : oLots[i].AlreadyShipmentQty,
                            ShipmentQty : nShipmentQty,
                            CTNQty : 0,
                            Remarks : "",
                            YetToShipmentQty: oLots[i].YetToShipmentQty,
                            Balance: oLots[i].Balance,
                            LotNo : oLots[i].LotNo
                        }
                        
                        $('#tblShipmentDetail').datagrid('appendRow',oShipmentDetail);
                    }
                    
                }
            }
        }
        //$("#MainDiv").data("LotID","");
        //$("#MainDiv").data("CountryID","");
        //$("#cboUnit").val('');
    });

    $("#btnRemoveDetail").click(function ()
    {
        endEditing();
        var oDCDetail=$('#tblShipmentDetail').datagrid('getSelected');
        if(oDCDetail==null || oDCDetail.OrderID<=0)
        {
            alert("Please select a valid item from list.");
            return;
        }
        var nIndex= $('#tblShipmentDetail').datagrid('getRowIndex',oDCDetail);
        $('#tblShipmentDetail').datagrid('deleteRow',nIndex);
    });

    $("#btnRefreshDetail").click(function ()
    {
        debugger;
        endEditing();
        var oShipmentDetails = $('#tblShipmentDetail').datagrid('getRows')
        RefreshList(oShipmentDetails)
        //var oShipment = [];
        //var oShipmentDetail = {
        //    ShipmentID: _oShipment.ShipmentID
        //}
        //$.ajax({
        //    type: "POST",
        //    dataType: "json",
        //    url : _sBaseAddress+"/Shipment/GetsDetailsByID",
        //    traditional: true,
        //    data:  JSON.stringify(oShipmentDetail),
        //    contentType: "application/json; charset=utf-8",
        //    success: function (data) {
        //        //debugger;
        //        oShipment = jQuery.parseJSON(data);
        //        if (oShipment.ErrorMessage==null || oShipment.ErrorMessage=="") {
        //            RefreshList(oShipment.ShipmentDetails);
        //        }
        //        else {
        //            alert(oShipmentDetail.ErrorMessage);
        //        }
        //    },
        //    error: function (xhr, status, error) {
        //        alert(error);
        //    }

        //});
    });

    $('#btnClose').click(function(e){
        window.location.href = sessionStorage.getItem("BackLink");
    })

    function RefreshAutoComplete()
    {
        debugger;
        $('#txtTruckNo').autocomplete({
            serviceUrl: _sBaseAddress+'/Shipment/GetsTruckForAutocomplete',
            paramName: "TruckNo",
            delimiter: ",",
            minChars : 2,
            transformResult: function(response) {
                debugger;
                return {
                    suggestions: $.map($.parseJSON(response), function(item) {
                        return { value: item.TruckNo, data: item.TruckNo };
                    })
                };
            },
        });

        $('#txtDriverName').autocomplete({
            serviceUrl: _sBaseAddress+'/Shipment/GetsDriverNameForAutocomplete',
            paramName: "DriverName",
            delimiter: ",",
            minChars : 2,
            transformResult: function(response) {
                //debugger;
                return {
                    suggestions: $.map($.parseJSON(response), function(item) {
                        return { value: item.DriverName, data: item.DriverName };
                    })
                };
            },
            onSelect: function (suggestion) { 
                debugger;
                
                var oShipment = {
                    DriverName: suggestion.data
                }
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url : _sBaseAddress+"/Shipment/GetDriverMobileNo",
                    traditional: true,
                    data:  JSON.stringify(oShipment),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        //debugger;
                        //oShipment = jQuery.parseJSON(data);
                        oShipment = data;
                        
                        if (oShipment.ErrorMessage==null || oShipment.ErrorMessage=="") {
                            document.getElementById("txtDriverMobileNo").value = oShipment.DriverMobileNo;
                            //txtDriverMobileNo.style.color = "green";
                            //txtDriverMobileNo.style.fontWeight = "bold";
                            //$('#txtDriverMobileNo').focus();
                        }
                        else {
                            alert(oShipment.ErrorMessage);
                        }
                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }

                });




            },
            onSearchStart: function (query) {
                //debugger;
                document.getElementById("txtDriverMobileNo").value = "";
                txtDriverMobileNo.style.color = "black";
                txtDriverMobileNo.style.fontWeight = "normal";
                //$("#txtDriverMobileNo").removeClass("fontColorOfPickItem");
            }
        });
    }

</script>