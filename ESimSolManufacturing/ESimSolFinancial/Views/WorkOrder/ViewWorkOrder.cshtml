<html>
<head>
    @{ViewBag.Title = "Work Order";} 
</head>
<body>
    @model ESimSol.BusinessObjects.WorkOrder
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>

    <div id="winColorSequence" class="easyui-window" title="Pick Color" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <fieldset style="margin-top:3px">
                <table border="0" style="font-size:12px">
                    <tr>
                        <td style="width:310px; text-align:right">
                            <table id="tblColorBank" title="Color Bank" class="easyui-datagrid" style="width: 310px; height: 300px" fit="true" fitcolumns="false" rownumbers="true" singleselect="true" autorowheight="false" toolbar="#ColorBankToolbar">
                                <thead>
                                    <tr>
                                        <th field="ColorName" width="320" align="left">Color Name</th>
                                    </tr>
                                </thead>
                            </table>
                            <div id="ColorBankToolbar">
                                <input type="text" id="txtSearchColorSequence" style="width:310px" placeholder="search By color name" />
                            </div>
                        </td>
                        <td style="width:50px; text-align:center; vertical-align:middle">
                            <input type="button" value="Add" id="btnAddTSColor" style="width:40px" />
                        </td>
                        <td style="width:310px; text-align:right">
                            <table id="tblTechnicalSheetColor" title="Color Sequence" class="easyui-datagrid" style="width: 310px; height: 300px" fit="true" fitcolumns="false" rownumbers="true" singleselect="true" autorowheight="false" toolbar="#ColorSequenceToolbar">
                                <thead>
                                    <tr>
                                        <th field="ColorName" width="320" align="left">Color Name</th>
                                    </tr>
                                </thead>
                            </table>
                            <div id="ColorSequenceToolbar">
                                <a id="btnColorSequenceUp" style=" width:50px; text-align:left;" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-up" plain="true">Up</a>
                                <a id="btnColorSequenceDown" style=" width:60px; text-align:left;" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-down" plain="true">Down</a>
                                <a id="btnColorSequenceRemove" style=" width:80px; text-align:left;" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                            </div>
                        </td>
                    </tr>
                </table>
            </fieldset>

            <fieldset style="margin-bottom:3px">
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; width:650px">
                    <tr>
                        <td style="width:550px; text-align:left">
                            <a id="btnNewColorCategory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add New Color</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnColorSequenceOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnColorSequenceClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winNewColor" class="easyui-window" title="Add Color" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <fieldset style="margin-top:3px">
                <table border="0" style="font-size:12px">
                    <tr>
                        <td style="width:150px; text-align:right">Color Name:</td>
                        <td style="width:250px; text-align:left">
                            <input type="text" id="txtNewColorName" style="width:220px" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:150px; text-align:right">Note :</td>
                        <td style="width:250px; text-align:left">
                            <input type="text" id="txtNewColorNote" style="width:220px" />
                        </td>
                    </tr>
                </table>
            </fieldset>

            <fieldset style="margin-bottom:3px">
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; width:400px">
                    <tr>
                        <td style="width:300px; text-align:right"></td>
                        <td style="width:50px">
                            <a id="btnNewColorSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnNewColorClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winSizeSequence" class="easyui-window" title="Pick Color" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <fieldset style="margin-top:3px">
                <table border="0" style="font-size:12px">
                    <tr>
                        <td style="width:310px; text-align:right">
                            <table id="tblSizeBank" title="Color Bank" class="easyui-datagrid" style="width: 310px; height: 300px" fit="true" fitcolumns="false" rownumbers="true" singleselect="true" autorowheight="false" toolbar="#SizeBankToolbar">
                                <thead>
                                    <tr>
                                        <th field="SizeCategoryName" width="320" align="left">Size Name</th>
                                    </tr>
                                </thead>
                            </table>
                            <div id="SizeBankToolbar">
                                <input type="text" id="txtSearchSizeSequence" style="width:310px" placeholder="search By size name" />
                            </div>
                        </td>
                        <td style="width:50px; text-align:center; vertical-align:middle">
                            <input type="button" value="Add" id="btnAddTSSize" style="width:40px" />
                        </td>
                        <td style="width:310px; text-align:right">
                            <table id="tblTechnicalSheetSize" title="Size Sequence" class="easyui-datagrid" style="width: 310px; height: 300px" fit="true" fitcolumns="false" rownumbers="true" singleselect="true" autorowheight="false" toolbar="#SizeSequenceToolbar">
                                <thead>
                                    <tr>
                                        <th field="SizeCategoryName" width="320" align="left">Size Name</th>
                                    </tr>
                                </thead>
                            </table>
                            <div id="SizeSequenceToolbar">
                                <a id="btnSizeSequenceUp" style=" width:50px; text-align:left;" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-up" plain="true">Up</a>
                                <a id="btnSizeSequenceDown" style=" width:60px; text-align:left;" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-down" plain="true">Down</a>
                                <a id="btnSizeSequenceRemove" style=" width:80px; text-align:left;" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                            </div>
                        </td>
                    </tr>
                </table>
            </fieldset>

            <fieldset style="margin-bottom:3px">
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; width:650px">
                    <tr>
                        <td style="width:550px; text-align:left">
                            <a id="btnNewSizeCategory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add New Size</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnSizeSequenceOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnSizeSequenceClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winNewSize" class="easyui-window" title="Add Size" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <fieldset style="margin-top:3px">
                <table border="0" style="font-size:12px">
                    <tr>
                        <td style="width:150px; text-align:right">Size Name:</td>
                        <td style="width:250px; text-align:left">
                            <input type="text" id="txtNewSizeName" style="width:220px" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:150px; text-align:right">Note :</td>
                        <td style="width:250px; text-align:left">
                            <input type="text" id="txtNewSizeNote" style="width:220px" />
                        </td>
                    </tr>
                </table>
            </fieldset>

            <fieldset style="margin-bottom:3px">
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; width:400px">
                    <tr>
                        <td style="width:300px; text-align:right"></td>
                        <td style="width:50px">
                            <a id="btnNewSizeSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnNewSizeClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winEditDetail" class="easyui-window" title="Cahange Color Size" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div>
            <fieldset>
                <legend style="font-weight:bold">Update Info : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:125px; text-align:right">
                            Style No :
                        </td>
                        <td style="width:250px">
                            <input type="text" placeholder="Press Enter With Style No" id="txtStyleEdit" style="width:78%" /><input type="button" style="width:19%;" id="btnStylePikerEdit" value="Pick" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:125px; text-align:right">
                            Color Name :
                        </td>
                        <td style="width:250px">
                            <input type="text" placeholder="Press Enter With Color Name" id="txtColorNameEdit" style="width:78%" /><input type="button" style="width:19%;" id="btnColorPikerEdit" value="Pick" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:125px; text-align:right">
                            Size Name :
                        </td>
                        <td style="width:250px">
                            <input type="text" placeholder="Press Enter With Size Name" id="txtSizeNameEdit" style="width:78%" /><input type="button" style="width:19%;" id="btnSizePikerEdit" value="Pick" />
                        </td>
                    </tr>
                </table>
        </fieldset>
        </div>
        <fieldset style="width:95%;height:8%; vertical-align:top;">
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;">
                <tr>
                    <td style="width:7%;text-align:right;">
                        <a id="btnSaveEdit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Update</a>
                        <a id="btnCloseEdit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
     </div>

    <div id="winContactPersonnel" class="easyui-window" title="Add Contact Personeel" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div>
            <fieldset>
                <legend style="font-weight:bold"> Contact Personnel Informations : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:125px; text-align:right">
                            Name :
                        </td>

                        <td style="width:200px">
                            <input type="text" style="width: 200px;" id="txtName" />
                        </td>
                        <td style="width:50px"> </td>
                        <td style="width:125px; text-align:right">
                            Address :
                        </td>
                        <td style="width:300px">
                            <input type="text" style="width: 300px;" id="txtAddress" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:125px; text-align:right">
                            Phone :
                        </td>

                        <td style="width:200px">
                            <input type="text" style="width: 200px;" id="txtPhone" />
                        </td>
                        <td style="width:50px"> </td>
                        <td style="width:125px; text-align:right">
                            Email :
                        </td>
                        <td style="width:300px">
                            <input type="text" style="width: 300px;" id="txtEmail" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:125px; text-align:right">
                            Note :
                        </td>
                        <td colspan="4">
                            <input type="text" style="width: 690px;" id="txtNote" />
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
        <fieldset style="width:97%;height:8%; vertical-align:top;">
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;">
                <tr>
                    <td style="width:7%;text-align:right;">
                        <a id="btnAddContactPersonnel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        <a id="btnCloseContactPersonnel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>

                </tr>
            </table>
        </fieldset>
    </div>

    <div class="menuMainCollectionTable">
        <div id="divWorkOrder" class="easyui-tabs" title="Work Order" style="font-family:Tahoma; text-align:center; height:90%;">
            <div title="Work Order" style="font-family:Tahoma; text-align:center; height:90%;">
                <div style="width:100%;">
                    <fieldset>
                        <legend style="font-weight:bold">Work Order info: </legend>
                        <table style="width:100%" cellpadding="1" cellspacing="1">
                            <tr>
                                <td style="width: 10%; text-align: right">
                                    File No:
                                </td>
                                <td style="width: 25%; text-align: left">
                                    <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                        <tr>
                                            <td style="width:30%">@Html.TextBoxFor(model => model.FileNo, new { style = "width: 100%;", id = "txtFileNo", disabled = "disabled" })</td>
                                            <td style="width:30%; text-align:right;">WO Date:</td>
                                            <td style="width:40%"><input id="txtWorkOrderDate" type="text" class="easyui-datebox" style="width: 100%;" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width: 10%; text-align:right;">
                                    WO No:
                                </td>
                                <td style="width:20%; text-align:left;">
                                    @Html.TextBoxFor(model => model.WorkOrderNo, new { style = "width:97%;", id = "txtWorkOrderNo", placeholder="Type Ref No" })
                                </td>
                                <td style="width:10%; text-align: right">
                                    Exp. Date :
                                </td>
                                <td style="width: 25%; text-align: right">
                                    <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                        <tr>
                                            <td style="width:50%"><input id="txtExpectedDeliveryDate" type="text" class="easyui-datebox" style="width: 100%;" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                                            <td style="width:50%; text-align:right;">Currency:<select id="cboCurrency" style="width:50%"></select></td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 10%; text-align: right">
                                    Supplier :
                                </td>
                                <td style="width: 25%; text-align: left">
                                    <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                        <tr>
                                            <td style="width:85%;">@Html.TextBoxFor(model => model.SupplierName, new { style = "width: 100%;", id = "txtSupplierName", placeholder = "Press Enter With Supplier Name" })</td>
                                            <td style="width:15%; text-align:right;"><input type="button" style="width:100%" value="Pick" id="btnPickSupplier" /></td>
                                        </tr>
                                    </table>

                                </td>
                                <td style="width: 10%; text-align: right">
                                    Contact Person:
                                </td>
                                <td style="width: 20%; text-align: left">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%;padding:0px;">
                                        <tr>
                                            <td style="width:88%;"><select id="cboContactPerson" style="width:100%"></select></td>
                                            <td style="width:12%; text-align:right;"><input type="button" style="width:100%; text-align:right;" value="New" id="btnAddContactPerson" /></td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width:10%; text-align: right">
                                    Merchandiser:
                                </td>
                                <td style="width: 25%; text-align: right">
                                    <select id="cboMerchandiser" style="width: 100%"></select>
                                </td>

                            </tr>

                            <tr>
                                <td style="width: 10%; text-align: right">
                                    Remarks :
                                </td>
                                <td colspan="3" style="width: 55%; text-align: left">
                                    @Html.TextBoxFor(model => model.Note, new { style = "width:99%;", id = "txtNote" })
                                </td>
                                <td style="width:10%; text-align: right">
                                    C. Rate :
                                </td>
                                <td style="width: 25%; text-align: right">
                                    <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                        <tr>
                                            <td style="width:40%">
                                                <input type="text" style="width:99%; text-align:left" id="txtCRate" />
                                            </td>
                                            <td style="width:60%; text-align:right;">Rate On: <input type="number" style="width:50%;text-align:right;" id="txtRateUnit" /></td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                        </table>
                    </fieldset>
                </div>
                <table id="tblWorkOrderDetail" title="Work Order Details" class="easyui-datagrid" style="height:320px; width:100%;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar" data-options="onClickRow: onClickRow">
                    <thead data-options="frozen:true">
                        <tr>
                            <th field="ProductCode" width="6%" align="left">Code</th>
                            <th field="ProductName" width="14%" align="left">Product</th>
                            <th field="OrderRecapNo" width="8%" align="left">Recap/PO No</th>
                            <th field="StyleNo" width="10%" align="left">Style No</th>
                            <th field="ColorName" width="8%" align="left">Color</th>
                            <th field="SizeName" width="8%" align="left">Size</th>
                            <th field="UnitSymbol" width="4%" align="left">Unit</th>
                            <th width="7%" align="right" data-options="field:'Qty',editor:{type:'numberbox',options:{precision:2}}">Qty</th>
                            <th width="5%" align="right" data-options="field:'UnitPrice',editor:{type:'numberbox',options:{precision:4}}">Rate</th>
                            <th field="Amount" width="10%" formatter="formatPrice" align="right">Amount</th>
                        </tr>
                    </thead>
                    <thead>
                        <tr>
                            <th width="20%" align="left" data-options="field:'ProductDescription',editor:{type:'textbox'}">Product Description</th>
                            <th width="20%" align="left" data-options="field:'Measurement',editor:{type:'textbox'}">Measurement</th>
                            <th width="10%" align="left" data-options="field:'Remarks',editor:{type:'textbox'}">Remarks/Style Qty</th>
                            <th width="10%" align="left" data-options="field:'MCDia',editor:{type:'textbox'}">M/C Dia</th>
                            <th width="10%" align="left" data-options="field:'FinishDia',editor:{type:'textbox'}">Finish Dia</th>
                            <th width="10%" align="left" data-options="field:'GSM',editor:{type:'textbox'}">GSM</th>
                            <th data-options="field:'Stretch_Length',width:100,align:'left',editor:{type:'text'}">S.Length</th>
                        </tr>
                    </thead>
                </table>
                <div id="toolbar">
                    <table border="0" cellpadding="1" cellspacing="1" style="width:100%;">
                        <tr>
                            <td style="width:30%"><input type="text" placeholder="Enter With Recap No" id="txtRecap" style="width:42%" /><input type="button" style="width:8%;" id="btnRecapPiker" value="P" /><input type="text" placeholder="Enter With Style No" id="txtStyle" style="width:42%" /><input type="button" style="width:8%;" id="btnStylePiker" value="P" /></td>
                            <td style="width:20%"><input type="text" placeholder="Press Enter With Product Name" id="txtProductName" style="width:78%" /><input type="button" style="width:19%;" id="btnProductPiker" value="Pick" /></td>
                            <td style="width:10%;"><select id="cboUnit" style="width:100%;"></select></td>
                            <td style="width:20%"><input type="text" placeholder="Press Enter With Color Name" id="txtColorName" style="width:78%" /><input type="button" style="width:19%;" id="btnColorPiker" value="Pick" /></td>
                            <td style="width:20%"><input type="text" placeholder="Press Enter With Size Name" id="txtSizeName" style="width:78%" /><input type="button" style="width:19%;" id="btnSizePiker" value="Pick" /></td>
                        </tr>
                        <tr>
                            <td style="width:30%"><input type="text" placeholder="Product Description" id="txtProductDescription" style="width:97%" /></td>
                            <td colspan="2" style="width:30%"><input type="text" placeholder="Measurement" id="txtMeasurement" style="width:98%" /></td>
                            <td style="width:20%;text-align:left;"><input type="text" id="txtQty" placeholder="Type Qty" style="width:46%" />&nbsp;<input type="text" id="txtRate" placeholder="Type Price" style="width:46%" /></td>
                            <td style="width:20%;text-align:right;"><a id="btnAddDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a><a id="btnRemoveDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a><a id="btnEditDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true"></a><a id="btnRefreshDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true"></a></td>
                        </tr>
                    </table>
                </div>
                <table border="0" cellpadding="0" cellspacing="0" style="width:100%;">
                    <tr>
                        <td style="width:50%;  text-align:right;font-weight:bold;">Total:</td>
                        <td style="width:10%;  text-align:right;font-weight:bold;"><label id="lblTotalQty">0</label> </td>
                        <td style="width:3%;  text-align:right;font-weight:bold;"> </td>
                        <td style="width:10%; text-align:right; font-weight:bold;"><label id="lblCurrencySymbol"></label>&nbsp;<label id="lblTotalAmount">0.00</label> </td>
                        <td style="width:18%;  text-align:right;font-weight:bold;"> </td>
                    </tr>
                </table>
            </div>
            <div title="Term & Condition" style="font-family:Tahoma; text-align:center; height:90%;">
                <table id="tblWOTermsAndCondition" class="easyui-datagrid" style="width:100%; height:450px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#TCtoolbar" data-options="singleSelect: true, fitColumns:false,  rownumbers:true,pagination:false,autoRowHeight:false , onClickRow: onClickRowTC">
                    <thead>
                        <tr>
                            <th field="TermsAndCondition" width="80%" align="left" data-options="field:'TermsAndCondition',editor:{type:'text',options:{precision:0}}"> Terms & Condition </th>
                        </tr>
                    </thead>
                </table>
                <div id="TCtoolbar" style=" height:25px;">
                    <input type="button" id="btnPickTermsAndCondition" value="Pick Term And Condition" style="width: 150px; font-size: 12px" />
                    <input type="button" id="btnRemoveTandC" value="Remove" style="width: 80px; font-size: 12px" />
                    <input type="button" id="btnRefreshTandC" value="Refresh" style="width: 80px; font-size: 12px" />
                </div>
            </div>
        </div>
        <fieldset style="height:10%">
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                <tr>
                    <td style="width:83%; text-align:right"></td>
                    <td style="width:17%;text-align:right;">
                        <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true">Approve</a>
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>
<style>
    th,td{
        padding:1px;
    }
</style>
<script type="text/javascript">
    var _oWorkOrder=null;
    $(document).ready(function () {
        _oWorkOrder =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oMerchandisers = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Merchandisers));
        var oCurrencys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Currencys));
        var oCompany= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Company));
        $('#divWorkOrder').data('Company', oCompany);
        $('#cboCurrency').data('Currencys', oCurrencys);
        $('#cboMerchandiser').data('Merchandisers', oMerchandisers);
        $('#txtSupplierName').data('SupplierID', _oWorkOrder.SupplierID);
        $('#txtProductName').data('Product', null);
        $('#txtRecap').data('OrderRecap', null);
        $('#txtStyle').data('TechnicalSheet', null);
        $('#txtColorName').data('TechnicalSheetColors', []);
        $('#txtSizeName').data('TechnicalSheetSizes', []);
        RefreshCombobox();
        $('#txtCRate,#txtQty').icsCurrencyBox();
        $('#txtRate').icsCurrencyBox(null, null, 4);
        $('#txtRateUnit').val(_oWorkOrder.RateUnit);
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();

        $('#txtWorkOrderDate').datebox('setValue',_oWorkOrder.WorkOrderDateSt);
        $('#txtExpectedDeliveryDate').datebox('setValue',_oWorkOrder.ExpectedDeliveryDateSt);

        $('#btnApprove').hide();
        if(parseInt(_oWorkOrder.WorkOrderID)>0)
        {
            RefreshControl(_oWorkOrder);
        }
    });

    function RefreshCombobox()
    {
        //$('#txtRecap').prop('disabled',true);
        var oCurrencys = $('#cboCurrency').data('Currencys');
        var oMerchandisers = $('#cboMerchandiser').data('Merchandisers');
        $("#cboCurrency").icsLoadCombo({List: oCurrencys,OptionValue: "CurrencyID",DisplayText: "CurrencyName"});
        $("#cboMerchandiser").icsLoadCombo({List: oMerchandisers,OptionValue: "MarketingAccountID",DisplayText: "Name"});
    }

    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }

    $('#cboCurrency').change(function(){
        SetCurrency(true);
    });

    function SetCurrency(bIsComboChange)
    {
        if(parseInt($('#cboCurrency').val())!=0)
        {
            var oCurrencys = $('#cboCurrency').data('Currencys');
            var oCompany= $('#divWorkOrder').data('Company');

            for(var i=0;i<oCurrencys.length;i++)
            {
                if(parseInt(oCurrencys[i].CurrencyID)== parseInt($('#cboCurrency').val()))
                {
                    if(parseInt(oCurrencys[i].CurrencyID) === parseInt(oCompany.BaseCurrencyID))
                    {
                        $('#txtCRate').val(1);
                        $("#txtCRate" ).prop( "disabled", true );
                    }else{
                        if(bIsComboChange)
                        {
                            $('#txtCRate').val(0.00);
                            $("#txtCRate" ).prop( "disabled", false);
                        }
                    }
                    $('#lblCurrencySymbol').html(oCurrencys[i].Symbol);
                    break;
                }
            }
        }
    }
    function RefreshControl(oWorkOrder)
    {
        $('#txtCRate').val(oWorkOrder.CRateSt)
        $("#txtSupplierName ").addClass("fontColorOfPickItem");
        GetContactPerson(oWorkOrder.SupplierID);
        $('#cboCurrency').val(oWorkOrder.CurrencyID);
        $('#cboMerchandiser').val(oWorkOrder.MerchandiserID);
        RefreshDetailList(oWorkOrder.WorkOrderDetails);
        RefreshTermsAndCondition(oWorkOrder.WOTermsAndConditions);
        SetCurrency(false);
        SetTotal();
        var sWorkOrderHeader = sessionStorage.getItem("WorkOrderHeader");
        if(sWorkOrderHeader=="View Work Order")
        {
            $('#btnSave,#btnAddDetail,#btnEditDetail,#btnRemoveDetail').hide();
            $("#divWorkOrder :input").prop('disabled', true);
        }
        if(sWorkOrderHeader=="Approved Work Order")
        {
            $('#btnSave,#btnAddDetail,#btnEditDetail,#btnRemoveDetail').hide();
            $('#btnApprove').show();
        }
    }
    function RefreshDetailList(oOrderDetailList)
    {
        var data=oOrderDetailList;
        data={"total":""+data.length+"","rows":data};
        $('#tblWorkOrderDetail').datagrid('loadData',data);
    }
    function RefreshTermsAndCondition(oTermsAndConditions)
    {
        var data=oTermsAndConditions;
        data={"total":""+data.length+"","rows":data};
        $('#tblWOTermsAndCondition').datagrid('loadData',data);
    }
    $('#txtRateUnit').change(function(){
        SetTotal();
    });

    function Validation()
    {
        var sWorkOrderDate = $('#txtWorkOrderDate').datebox('getValue');
        if(sWorkOrderDate===null || sWorkOrderDate==="")
        {
            alert('Please select Work Order Date!');
            return false;
        }

        if($('#txtWorkOrderNo').val()=="" || $('#txtWorkOrderNo').val()==null)
        {
            $('#txtWorkOrderNo').focus();
            $('#txtWorkOrderNo').addClass("errorFieldBorder");
            alert('Please enter work order No!');
            return false;
        }else{
            $('#txtWorkOrderNo').removeClass("errorFieldBorder");
        }

        var sExpectedDeliveryDate = $('#txtExpectedDeliveryDate').datebox('getValue');
        if(sExpectedDeliveryDate===null || sExpectedDeliveryDate==="")
        {
            alert('Please select Expected Delivery Date!');
            return false;
        }

        var dWorkOrderDate = new Date(sWorkOrderDate);
        var dExpectedDeliveryDate= new Date(sExpectedDeliveryDate);
        if(dWorkOrderDate>dExpectedDeliveryDate)
        {
            alert('Expected Delivery Date must be grater than Work Order Date');
            return false;
        }

        if($('#cboCurrency').val()<=0){
            $('#cboCurrency').focus();
            $('#cboCurrency').addClass("errorFieldBorder");
            alert('Select Currency');
            return false;
        }
        else{
            $('#cboCurrency').removeClass("errorFieldBorder");
        }

        if(parseInt($('#txtSupplierName').data('SupplierID'))<=0){
            $('#txtSupplierName').focus();
            $('#txtSupplierName').addClass("errorFieldBorder");
            alert('Please Pick Buyer.');
            return false;
        }
        else{
            $('#txtSupplierName').removeClass("errorFieldBorder");
        }

        if(parseInt($('#cboContactPerson').val())<=0){
            $('#cboContactPerson').focus();
            $('#cboContactPerson').addClass("errorFieldBorder");
            alert('Select Buyer Contact Person.');
            return false;
        }
        else{
            $('#cboContactPerson').removeClass("errorFieldBorder");
        }

        if(parseInt($('#cboMerchandiser').val())<=0){
            $('#cboMerchandiser').focus();
            $('#cboMerchandiser').addClass("errorFieldBorder");
            alert('Please Select Merchandiser.');
            return false;
        }
        else{
            $('#cboMerchandiser').removeClass("errorFieldBorder");
        }

        if(icsRemoveComma($('#txtCRate').val())<=0){
            $('#txtCRate').focus();
            $('#txtCRate').addClass("errorFieldBorder");
            alert('C. Rate Should be Greater than 0.');
            return false;
        }
        else{
            $('#txtCRate').removeClass("errorFieldBorder");
        }

        if(parseInt($('#txtRateUnit').val())<=0){
            $('#txtRateUnit').focus();
            $('#txtRateUnit').addClass("errorFieldBorder");
            alert('Rate Should be Greater than 0.');
            return false;
        }
        else{
            $('#txtRateUnit').removeClass("errorFieldBorder");
        }

        var oWorkOrderDetails = $('#tblWorkOrderDetail').datagrid('getRows');
        if(oWorkOrderDetails.length<=0)
        {
            alert("Please enter at least one Item!");
            return false;
        }

        for(i=0; i<oWorkOrderDetails.length; i++)
        {
            if(parseFloat(oWorkOrderDetails[i].Qty)<=0)
            {
                alert("Please enter Qty for Product : "+ oWorkOrderDetails[i].ProductName +", & Style No :"+ oWorkOrderDetails[i].StyleNo);
                return false;
            }

            if(parseFloat(oWorkOrderDetails[i].UnitPrice)<=0)
            {
                alert("Please enter Qty for Product : "+ oWorkOrderDetails[i].ProductName +", & Style No :"+ oWorkOrderDetails[i].StyleNo);
                return false;
            }
        }
        return true;
    }
    function RefreshObject()
    {
        var oWorkOrder={
            WorkOrderID : parseInt(_oWorkOrder.WorkOrderID),
            BUID : parseInt(sessionStorage.getItem('BUID')),
            FileNo : $.trim($('#txtFileNo').val()),
            WorkOrderNo : $.trim($('#txtWorkOrderNo').val()),
            WorkOrderDate : $('#txtWorkOrderDate').datebox('getValue'),
            ExpectedDeliveryDate : $('#txtExpectedDeliveryDate').datebox('getValue'),
            WorkOrderStatusInt : parseInt(_oWorkOrder.WorkOrderStatusInt),
            SupplierID : parseInt($('#txtSupplierName').data('SupplierID')),
            ContactPersonID : parseInt($('#cboContactPerson').val()),
            Note : $.trim($('#txtNote').val()),
            MerchandiserID : parseInt($('#cboMerchandiser').val()),
            CurrencyID : parseInt($('#cboCurrency').val()),            
            CRate : icsRemoveComma($('#txtCRate').val()),
            RateUnit : parseInt($('#txtRateUnit').val()),
            ReviseNo : parseInt(_oWorkOrder.ReviseNo),
            WorkOrderDetails:$('#tblWorkOrderDetail').datagrid('getRows'),
            WOTermsAndConditions:$('#tblWOTermsAndCondition').datagrid('getRows')
        };
        return oWorkOrder;
    }
    $("#btnSave").click(function (){
        endEditing();
        endEditingTC();
        if(!Validation()) return false;
        var oWorkOrder=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/WorkOrder/Save",
            traditional: true,
            data:  JSON.stringify(oWorkOrder),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oWorkOrder = jQuery.parseJSON(data);
                if (oWorkOrder.ErrorMessage==null || oWorkOrder.ErrorMessage=="") {
                    alert("Data Saved successfully");
                    var oWorkOrders = sessionStorage.getItem("WorkOrders");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oWorkOrders != null) {
                        oWorkOrders = jQuery.parseJSON(oWorkOrders);
                    }
                    else {
                        oWorkOrders = [];
                    }
                    if (nIndex != -1) {
                        oWorkOrders[nIndex] = oWorkOrder;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oWorkOrders.length);
                        oWorkOrders.push(oWorkOrder);
                    }
                    sessionStorage.setItem("WorkOrders", JSON.stringify(oWorkOrders));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oWorkOrder.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });
    $("#btnApprove").click(function (){
        if(!Validation()) return false;
        if (!confirm("Confirm to Approve?")) return false;
        var oWorkOrder=RefreshObject();
        oWorkOrder.ActionTypeExtra = "Approve";
        oWorkOrder.WorkOrderStatusInInt = 2;//
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/WorkOrder/ChangeStatus",
            traditional: true,
            data:  JSON.stringify(oWorkOrder),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //
                oWorkOrder = jQuery.parseJSON(data);
                if (oWorkOrder.ErrorMessage==null || oWorkOrder.ErrorMessage=="") {
                    alert("Approved successfully");
                    var oWorkOrders = sessionStorage.getItem("WorkOrders");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oWorkOrders != null) {
                        oWorkOrders = jQuery.parseJSON(oWorkOrders);
                    }
                    else {
                        oWorkOrders = [];
                    }
                    if (nIndex != -1) {
                        oWorkOrders[nIndex] = oWorkOrder;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oWorkOrders.length);
                        oWorkOrders.push(oWorkOrder);
                    }
                    sessionStorage.setItem("WorkOrders", JSON.stringify(oWorkOrders));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oWorkOrder.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    //start supplier picker
    $("#txtSupplierName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var sSupplierName = $.trim($('#txtSupplierName').val());
            PickSupplier(sSupplierName);
        }
    });
    $("#btnPickSupplier").click(function () {
        PickSupplier('');
    });
    $('#txtSupplierName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtSupplierName").removeClass("fontColorOfPickItem");
            $('#txtSupplierName').data('SupplierID', 0);
        }
    });
    function PickSupplier(sSupplierName)
    {
        
        // Supplier = 1, InternalContractor = 7
        var oContractor = { Params: "1,7~"+sSupplierName+"~"+sessionStorage.getItem("BUID") };//here 1 Is Supplier
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winSuppliers',
                        winclass: 'clsSupplier',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblSuppliers',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Supplier List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });
    }
    //end supplier picker

    //start product picker
    $("#txtProductName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var sProductName = $.trim($('#txtProductName').val());
            if(sProductName === null || sProductName === "")
            {
                alert("Please Type Product and Press Enter.");
                $('#txtProductName').focus();
                return;
            }
            PickProducts(sProductName);
        }else if (code == 8) //backspace=8
        {
            $("#txtProductName").removeClass("fontColorOfPickItem");
            $('#txtProductName').data('Product', null);
        }
    });
    $("#btnProductPiker").click(function () {
        if($('#txtStyle').data('TechnicalSheet')==null)
        {
            PickProducts("");
        }else
        {
            var oBillOfMaterial = { TechnicalSheetID: parseInt($('#txtStyle').data('TechnicalSheet').TechnicalSheetID)};
            var obj = {
                BaseAddress: sessionStorage.getItem('BaseAddress'),
                Object: oBillOfMaterial,
                ControllerName: "WorkOrder",
                ActionName: "PickWorkOrderDetails",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ProductID > 0) {
                        var tblColums = []; var oColumn = { field: "ProductCode", title: "Code", width:100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ProductName", title: "Product Name", width:140, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ColorName", title: "Color", width:100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "SizeName", title: "Size", width:70, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Reference", title: "Reference", width:110, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "UnitSymbol", title: "Unit", width:35, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Qty", title: "Qty", width:70, formatter:formatPricewithoutdecimal, align: "right" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winBillOfMaterialPicker',
                            winclass: 'clsBillOfMaterialPicker',
                            winwidth:650,
                            winheight: 460,
                            tableid: 'tblBillOfMaterialPicker',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName: 'ProductName',
                            windowTittle: 'Product List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }

                }else{
                    alert("Data Not Found.");
                }
            });
        }
    });
    function PickProducts(sProductName)
    {
        var oProduct = { BUID: sessionStorage.getItem("BUID"), ProductName: sProductName };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oProduct,
            ControllerName: "Product",
            ActionName: "SearchByProductBUWise",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = []; var oColumn = { field: "NameCode", title: "Product Name", width: 300, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPicker',
                        winclass: 'clsProductPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    //end product picker

    //start style picker
    $("#txtStyle").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var sStyleNumber = $.trim($('#txtStyle').val());
            if(sStyleNumber === null || sStyleNumber === "")
            {
                alert("Press Enter With Style Number!");
                $('#txtStyle').focus();
                return;
            }
            PickStyles(sStyleNumber);
        }else   if (code == 8) //backspace=8
        {
            $("#txtStyle,#txtRecap").removeClass("fontColorOfPickItem");
            $('#txtStyle').data('TechnicalSheet', null);
            $('#txtRecap').data('OrderRecap', null);
        }
    });
    $("#btnStylePiker").click(function () {
        PickStyles("");
    });
    function PickStyles(sStyleNumber)
    {
        var oTechnicalSheet = { StyleNo: sStyleNumber, BUID:sessionStorage.getItem('BUID')};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oTechnicalSheet,
            ControllerName: "TechnicalSheet",
            ActionName: "StyleSearch",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].TechnicalSheetID > 0) {
                    var tblColums = []; var oColumn = { field: "StyleNo", title: "Style No", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BuyerName", title: "Buyer Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "SessionName", title: "Business Session", width: 100, align: "left" }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winStylePicker',
                        winclass: 'clsStylePicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblStylePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'StyleNo',
                        windowTittle: 'Style List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    //end style picker

    //start Recap picker
    $("#txtRecap").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var sRecapNumber = $.trim($('#txtRecap').val());
            if(sRecapNumber === null || sRecapNumber === "")
            {
                alert("Press Enter With Recap Number!");
                $('#txtRecap').focus();
                return;
            }
            PickRecaps(sRecapNumber);
        }else   if (code == 8) //backspace=8
        {
            $("#txtRecap").removeClass("fontColorOfPickItem");
            $('#txtRecap').data('TechnicalSheet', null);
        }
    });
    $("#btnRecapPiker").click(function () {
        PickRecaps("");
    });
    function PickRecaps(sRecapNumber)
    {
        var oOrderRecap = { OrderRecapNo: sRecapNumber, BUID:sessionStorage.getItem('BUID')};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oOrderRecap,
            ControllerName: "OrderRecap",
            ActionName: "GetOrderRecapsByBU",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].TechnicalSheetID > 0) {
                    var tblColums = []; var oColumn = { field: "OrderRecapNo", title: "Recap/PO No", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BuyerName", title: "Buyer Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "StyleNo", title: "Style No", width: 100, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winRecapPicker',
                        winclass: 'clsRecapPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblRecapPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'RecapNo',
                        windowTittle: 'Recap List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    //end Recap picker

    //start color picker
    $("#txtColorName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var sColorName = $.trim($('#txtColorName').val());
            if(sColorName===null || sColorName==="")
            {
                alert("Press Enter With Color Name!");
                $('#txtColorName').focus();
                return;
            }
            PickColor(sColorName);
        }
    });    
    $('#txtColorName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtColorName").removeClass("fontColorOfPickItem");
            $('#txtColorName').data('TechnicalSheetColors', []);
        }
    });
    function PickColor(sColorName)
    {
        var oColorCategory = {Param:sColorName};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oColorCategory,
            ControllerName:"ColorCategory",
            ActionName: "SearchColor",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ColorCategoryID > 0) {

                    var tblColums = []; var oColumn = { field: "ColorName", title: "Color Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Note", title: "Note", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winColorCategory',
                        winclass: 'clsColorCategory',
                        winwidth: 500,
                        winheight: 400,
                        tableid: 'tblColorCategory',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ColorName',
                        windowTittle: 'Color List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });
    }
    //end color picker

    //start size picker
    $("#txtSizeName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var sSizeName = $.trim($('#txtSizeName').val());
            if(sSizeName===null || sSizeName==="")
            {
                alert("Press Enter With Size Name!");
                $('#txtSizeName').focus();
                return;
            }
            PickSize(sSizeName);
        }
    });    
    $('#txtSizeName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtSizeName").removeClass("fontColorOfPickItem");
            $('#txtSizeName').data('TechnicalSheetSizes', []);
        }
    });
    function PickSize(sSizeName)
    {
        var oSizeCategory = {Param:sSizeName};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oSizeCategory,
            ControllerName:"SizeCategory",
            ActionName: "SearchSize",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].SizeCategoryID > 0) {

                    var tblColums = []; var oColumn = { field: "SizeCategoryName", title: "Size Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Note", title: "Note", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winSizeCategory',
                        winclass: 'clsSizeCategory',
                        winwidth: 500,
                        winheight: 400,
                        tableid: 'tblSizeCategory',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'SizeCategoryName',
                        windowTittle: 'Size List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });
    }
    //end size picker


    $("#btnRefreshDetail").click(function (){
        endEditing();
    });

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }

    function SetPickerValueAssign(oPickerobj)
    {
        debugger;
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

        if (oPickerobj.winid == 'winSuppliers')
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0) {
                $('#txtSupplierName').val(oreturnObj.Name);
                $('#txtSupplierName').addClass('fontColorOfPickItem');
                $('#txtSupplierName').data('SupplierID', parseInt(oreturnObj.ContractorID));
                GetContactPerson(parseInt(oreturnObj.ContractorID));
                $('#cboContactPerson').focus();
            }
        }
        else if (oPickerobj.winid == 'winProductPicker')
        {
            if (oreturnObj != null && oreturnObj.ProductID> 0)
            {
                $('#txtProductName').val(oreturnObj.ProductName);
                $('#txtProductName').addClass('fontColorOfPickItem');
                $('#txtProductName').data('Product', oreturnObj);
                GetMeasurementUnitByType(oreturnObj.UnitTypeInInt);
                if(Boolean(oreturnObj.IsApplyColor))
                {
                    $('#txtColorName').val('');
                    $('#txtColorName').data('TechnicalSheetColors', []);
                    $('#txtColorName,#btnColorPick').prop('disabled', false);
                }
                else
                {
                    $('#txtColorName').val('');
                    $('#txtColorName').data('TechnicalSheetColors', []);
                    $('#txtColorName,#btnColorPick').prop('disabled', true);
                }
                if(Boolean(oreturnObj.IsApplySize))
                {
                    $('#txtSizeName').val('');
                    $('#txtSizeName').data('TechnicalSheetSizes', []);
                    $('#txtSizeName,#btnSizePiker').prop('disabled', false);
                }
                else
                {
                    $('#txtSizeName').val('');
                    $('#txtSizeName').data('TechnicalSheetSizes', []);
                    $('#txtSizeName,#btnSizePiker').prop('disabled', true);
                }
                if(Boolean(oreturnObj.IsApplyMeasurement))
                {
                    $('#txtMeasurement').val('');
                    $('#txtMeasurement').prop('disabled', false);
                }
                else
                {
                    $('#txtMeasurement').val('');
                    $('#txtMeasurement').prop('disabled', true);
                }
                $('#cboUnit').focus();
            }

        }
        else if (oPickerobj.winid=='winStylePicker')
        {
            if (oreturnObj != null && oreturnObj.TechnicalSheetID > 0)
            {
                $('#txtStyle').val(oreturnObj.StyleNo);
                $('#txtStyle').addClass('fontColorOfPickItem');
                $('#txtStyle').data('TechnicalSheet', oreturnObj);
                var oProduct = $('#txtProductName').data('Product');
                if(oProduct!=null)
                {
                    if(Boolean(oProduct.IsApplyColor))
                    {
                        $('#txtColorName').focus();
                    }
                    else if(Boolean(oProduct.IsApplySize))
                    {
                        $('#txtSizeName').focus();
                    }
                    else if(Boolean(oProduct.IsApplyMeasurement))
                    {
                        $('#txtMeasurement').focus();
                    }
                    else
                    {
                        $('#txtQty').focus();
                    }
                }
            }
        }else if (oPickerobj.winid=='winRecapPicker')
        {
            if (oreturnObj != null && oreturnObj.OrderRecapID > 0)
            {
                $('#txtRecap').val(oreturnObj.OrderRecapNo);
                $('#txtStyle').val(oreturnObj.StyleNo);
                $('#txtRecap,#txtStyle').addClass('fontColorOfPickItem');
                $('#txtRecap').data('OrderRecap', oreturnObj);
                var oTechnicalSheet ={TechnicalSheetID:oreturnObj.TechnicalSheetID, StyleNo:oreturnObj.StyleNo};
                $('#txtStyle').data('TechnicalSheet', oTechnicalSheet);
                $('#txtProductName').focus();
                
            }
        }
        else if (oPickerobj.winid=='winColorCategory')
        {
            if (oreturnObj != null && oreturnObj.ColorCategoryID > 0)
            {
                var oTSColor = {
                    TechnicalSheetColorID: 0,
                    TechnicalSheetID: 0,
                    ColorCategoryID: oreturnObj.ColorCategoryID,
                    ColorName: oreturnObj.ColorName,
                    Sequence: 0
                };

                $('#txtColorName').val(oTSColor.ColorName);
                $('#txtColorName').addClass('fontColorOfPickItem');
                $('#txtColorName').data('TechnicalSheetColors', [oTSColor]);
                var oProduct = $('#txtProductName').data('Product');
                if(oProduct!=null)
                {
                    if(Boolean(oProduct.IsApplySize))
                    {
                        $('#txtSizeName').focus();
                    }
                    else if(Boolean(oProduct.IsApplyMeasurement))
                    {
                        $('#txtMeasurement').focus();
                    }
                    else
                    {
                        $('#txtQty').focus();
                    }
                }
            }
        }
        else if (oPickerobj.winid=='winSizeCategory')
        {
            if (oreturnObj != null && oreturnObj.SizeCategoryID > 0)
            {
                var oTSSize = {
                    TechnicalSheetSizeID: 0,
                    TechnicalSheetID: 0,
                    SizeCategoryID: oreturnObj.SizeCategoryID,
                    SizeCategoryName: oreturnObj.SizeCategoryName,
                    Sequence: 0
                };

                $('#txtSizeName').val(oTSSize.SizeCategoryName);
                $('#txtSizeName').addClass('fontColorOfPickItem');
                $('#txtSizeName').data('TechnicalSheetSizes', [oTSSize]);

                var oProduct = $('#txtProductName').data('Product');
                if(oProduct!=null)
                {
                    if(Boolean(oProduct.IsApplyMeasurement))
                    {
                        $('#txtMeasurement').focus();
                    }
                    else
                    {
                        $('#txtQty').focus();
                    }
                }
            }
        }
        else if (oPickerobj.winid=='winStylePickerEdit')
        {
            if (oreturnObj != null && oreturnObj.TechnicalSheetID > 0)
            {
                $('#txtStyleEdit').val(oreturnObj.StyleNo);
                $('#txtStyleEdit').addClass('fontColorOfPickItem');
                $('#txtStyle').data('TechnicalSheet', oreturnObj);
            }
        }
        else if (oPickerobj.winid=='winColorCategoryEdit')
        {
            if (oreturnObj != null && oreturnObj.ColorCategoryID > 0)
            {
                $('#txtColorNameEdit').val(oreturnObj.ColorName);
                $('#txtColorNameEdit').addClass('fontColorOfPickItem');
                $('#txtColorName').data('ColorCategory', oreturnObj);
            }
        }
        else if (oPickerobj.winid=='winSizeCategoryEdit')
        {
            if (oreturnObj != null && oreturnObj.SizeCategoryID > 0)
            {
                $('#txtSizeNameEdit').val(oreturnObj.SizeCategoryName);
                $('#txtSizeNameEdit').addClass('fontColorOfPickItem');
                $('#txtSizeName').data('SizeCategory', oreturnObj);
            }
        }else if(oPickerobj.winid=='winBillOfMaterialPicker')
        {
            if(oreturnobjs.length>0)
            {
                for(var i=0;i<oreturnobjs.length;i++)
                {
                    if(!Exist(oreturnobjs[i]))
                    {
                        $('#tblWorkOrderDetail').datagrid('appendRow', oreturnobjs[i]);
                    }
                }
            }
            ResetDetail();
        } else if (oPickerobj.winid == 'winTermsAndConditionPicker')
        {
            if (oreturnobjs!=null && oreturnobjs.length > 0) 
            {
                SaveWOTermsAndCondition(oreturnobjs);
            }
        }
    }

    function SaveWOTermsAndCondition(oTermsAndConditions)
    {
        if (oTermsAndConditions != null && oTermsAndConditions.length > 0)
        {
            var oWOTermsAndCondition = $('#tblWOTermsAndCondition').datagrid('getRows');
            if (oTermsAndConditions.length > 0)
            {
                for (var i = 0; i < oTermsAndConditions.length; i++)
                {
                    if(!ICS_IsExist(oWOTermsAndCondition, 'TermsAndCondition',oTermsAndConditions[i].TermsAndConditionText))
                    {
                        var oWOTermsAndConditionTemp = {
                            WOTermsAndConditionID : 0,
                            WOID:0,
                            TermsAndCondition:oTermsAndConditions[i].TermsAndConditionText                         
                        };
                        $('#tblWOTermsAndCondition').datagrid('appendRow', oWOTermsAndConditionTemp);
                    }

                }

            }

        }
    }


    function Exist(oWorkOrderDetail)
    {
        var oPriviousItems = $('#tblWorkOrderDetail').datagrid('getRows');
        for(var i = 0;i<oPriviousItems.length;i++)
        {
            if(parseInt(oWorkOrderDetail.StyleID)== parseInt(oPriviousItems[i].StyleID)&& parseInt(oWorkOrderDetail.ProductID)== parseInt(oPriviousItems[i].ProductID) && parseInt(oWorkOrderDetail.ColorID)== parseInt(oPriviousItems[i].ColorID) && parseInt(oWorkOrderDetail.SizeID)== parseInt(oPriviousItems[i].SizeID))
            {
                return true;
            }
        }
        return false;
    }
    function GetContactPerson(nContractorID)
    {
        var oContractor = {ContractorID:nContractorID};
        $.ajax
           ({
               type: "POST",
               dataType: "json",
               url: sessionStorage.getItem('BaseAddress') + "/Contractor/GetContactPersonnels",
               traditional: true,
               data:  JSON.stringify(oContractor),
               contentType: "application/json; charset=utf-8",
               success: function (data) {
                   var oContactPersonnels = jQuery.parseJSON(data);
                   if (oContactPersonnels != null)
                   {
                       $("#cboContactPerson").icsLoadCombo({List: oContactPersonnels,OptionValue: "ContactPersonnelID",DisplayText: "Name"});
                       $('#cboContactPerson').val(_oWorkOrder.ContactPersonID);
                   }
               },
               error: function (xhr, status, error) {
                   alert(error);
               }

           });

    }

    function GetMeasurementUnitByType(nUnitTypeInt)
    {
        var oMeasurementUnit={
            UnitTypeInInt : nUnitTypeInt
        };
        $.ajax ({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/MeasurementUnit/GetbyUnitType",
            data:  JSON.stringify(oMeasurementUnit),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //
                var  oUnits = jQuery.parseJSON(data);
                if (oUnits!=null)
                {
                    if(oUnits.length>0)
                    {
                        $("#cboUnit").icsLoadCombo({List: oUnits,OptionValue: "MeasurementUnitID",DisplayText: "Symbol"});
                    }
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }

    function ValidateInputDetail()
    {
        var oProduct = $('#txtProductName').data('Product');
        if(oProduct===null || parseInt(oProduct.ProductID)<=0)
        {
            $('#txtProductName').focus();
            $('#txtProductName').addClass("errorFieldBorder");
            alert('Please select product!');
            return false;
        }

        if(parseInt($('#cboUnit').val())<=0)
        {
            $('#cboUnit').focus();
            alert('Select Unit.');
            return false;
        }

        var oTechnicalSheet = $('#txtStyle').data('TechnicalSheet')
        if(oTechnicalSheet===null || parseInt(oTechnicalSheet.TechnicalSheetID)<=0)
        {
            $('#txtStyle').focus();
            $('#txtStyle').addClass("errorFieldBorder");
            alert('Please select Style!');
            return false;
        }

        if(Boolean(oProduct.IsApplyColor))
        {
            var oColorCategorys = $('#txtColorName').data('TechnicalSheetColors');
            if(oColorCategorys===null || oColorCategorys.length<=0)
            {
                $('#txtColorName').focus();
                $('#txtColorName').addClass("errorFieldBorder");
                alert('Please select color!');
                return false;
            }
        }

        if(Boolean(oProduct.IsApplySize))
        {
            var oSizeCategorys = $('#txtSizeName').data('TechnicalSheetSizes');
            if(oSizeCategorys===null || oSizeCategorys.length<=0)
            {
                $('#txtSizeName').focus();
                $('#txtSizeName').addClass("errorFieldBorder");
                alert('Please select Size!');
                return false;
            }
        }

        if(Boolean(oProduct.IsApplyMeasurement))
        {
            var sMeasurement = $.trim($('#txtMeasurement').val());
            if(sMeasurement===null || sMeasurement==="")
            {
                $('#txtMeasurement').focus();
                $('#txtMeasurement').addClass("errorFieldBorder");
                alert('Please enter Measurement!');
                return false;
            }
        }

        if(parseInt(icsRemoveComma($('#txtQty').val()))<=0)
        {
            $('#txtQty').focus();
            $('#txtQty').addClass("errorFieldBorder");
            alert('Qty Should be Greater than 0');
            return false;
        }

        if(parseFloat(icsRemoveComma($('#txtRate').val()))<=0)
        {
            $('#txtRate').focus();
            $('#txtRate').addClass("errorFieldBorder");
            alert('Rate Should be Greater than 0');
            return false;
        }
        return true;
    }

    function ResetDetail(){
        $('#txtProductName').data('Product', null);
        $('#txtStyle').data('TechnicalSheet', null);
        $('#txtRecap').data('OrderRecap', null);  
        $('#txtColorName').data('TechnicalSheetColors', []);
        $('#txtSizeName').data('TechnicalSheetSizes', []);
        $('#txtQty,#txtRate').val('');
        $('#txtProductName,#txtRecap,#txtStyle,#txtColorName,#txtSizeName,#txtProductDescription,#txtMeasurement').removeClass("fontColorOfPickItem");
        $('#txtProductName,#txtRecap,#txtStyle,#txtColorName,#txtSizeName,#txtProductDescription,#txtMeasurement').val("");
        $('#txtProductName,#btnProductPiker,#txtRecap,#txtStyle,#btnStylePiker,#txtColorName,#btnColorPiker,#txtSizeName,#btnSizePiker,#txtProductDescription,#txtMeasurement').prop("disabled", false);
        var oUnits = [];
        $("#cboUnit").icsLoadCombo({List: oUnits,OptionValue: "MeasurementUnitID",DisplayText: "Symbol"});
        $('#txtProductName').focus();
    }

    function SetTotal()
    {
        if(parseInt($('#txtRateUnit').val())>0)
        {
            var oDetails = $('#tblWorkOrderDetail').datagrid('getRows');
            for(var i = 0;i<oDetails.length;i++)
            {
                oDetails[i].Amount = parseFloat(parseFloat(oDetails[i].Qty)/ parseInt($('#txtRateUnit').val())) * parseFloat(oDetails[i].UnitPrice);
            }
            RefreshDetailList(oDetails);
        }
        else
        {
            alert("Price Unit Should be Greater than 0");
            $('#txtRateUnit').val(1);
        }

        var oWorkOrderDetails = $('#tblWorkOrderDetail').datagrid('getRows');
        var nTotalValue = 0;
        var nTotalQty = 0;
        for(var i = 0;i<oWorkOrderDetails.length;i++)
        {
            nTotalValue = nTotalValue + parseFloat(oWorkOrderDetails[i].Amount);
            nTotalQty = nTotalQty + parseInt(oWorkOrderDetails[i].Qty);
        }
        $("#lblTotalQty").html(nTotalQty);
        $("#lblTotalAmount").html(formatPrice(nTotalValue,0));
    }

    $("#btnAddDetail").click(function () {
        if(!ValidateInputDetail())return;

        var oWorkOrderDetails = [];
        var oProduct = $('#txtProductName').data('Product');
        var oOrderRecap= $('#txtRecap').data('OrderRecap');
        var oTechnicalSheet = $('#txtStyle').data('TechnicalSheet');
        var oColorCategorys = $('#txtColorName').data('TechnicalSheetColors');
        var oSizeCategorys = $('#txtSizeName').data('TechnicalSheetSizes');

        if(oColorCategorys.length<=0 && oSizeCategorys.length<=0)
        {
            var oWorkOrderDetail = MakeObject(oOrderRecap,oTechnicalSheet, oProduct, null, null);
            oWorkOrderDetails.push(oWorkOrderDetail);
        }
        else if(oColorCategorys.length>0 && oSizeCategorys.length<=0)
        {
            for(var i=0;  i < oColorCategorys.length; i++)
            {
                var oWorkOrderDetail = MakeObject(oOrderRecap,oTechnicalSheet,oProduct, oColorCategorys[i], null);
                oWorkOrderDetails.push(oWorkOrderDetail);
            }
        }
        else if(oColorCategorys.length<=0 && oSizeCategorys.length>0)
        {
            for(var i=0;  i < oSizeCategorys.length; i++)
            {
                var oWorkOrderDetail = MakeObject(oOrderRecap,oTechnicalSheet, oProduct, null, oSizeCategorys[i]);
                oWorkOrderDetails.push(oWorkOrderDetail);
            }
        }
        else if(oColorCategorys.length>0 && oSizeCategorys.length>0)
        {
            for(var i=0;  i < oColorCategorys.length; i++)
            {
                for(var j=0;  j < oSizeCategorys.length; j++)
                {
                    var oWorkOrderDetail = MakeObject(oOrderRecap,oTechnicalSheet, oProduct, oColorCategorys[i], oSizeCategorys[j]);
                    oWorkOrderDetails.push(oWorkOrderDetail);
                }
            }
        }

        for(var i=0; i<oWorkOrderDetails.length; i++)
        {            
            $('#tblWorkOrderDetail').datagrid('appendRow', oWorkOrderDetails[i]);
        }
        SetTotal();
        ResetDetail();
    });

    function MakeObject(oOrderRecap, oTechnicalSheet, oProduct, oColorCategory, oSizeCategory)
    {
        var nColorID = oColorCategory ==null ? 0 : parseInt(oColorCategory.ColorCategoryID);
        var sColorName = oColorCategory ==null ? "" : oColorCategory.ColorName;
        var nSizeID = oSizeCategory ==null ? 0 : parseInt(oSizeCategory.SizeCategoryID);
        var sSizeCategoryName = oSizeCategory ==null ? "" : oSizeCategory.SizeCategoryName;

        var oWorkOrderDetail= {
            WorkOrderDetailID : 0,
            WorkOrderID : parseInt(_oWorkOrder.WorkOrderID),
            ProductID : parseInt(oProduct.ProductID),
            OrderRecapID : oOrderRecap!=null?parseInt(oOrderRecap.OrderRecapID):0,
            StyleID : parseInt(oTechnicalSheet.TechnicalSheetID),
            ColorID : parseInt(nColorID),
            SizeID : parseInt(nSizeID),
            Measurement : $.trim($('#txtMeasurement').val()),
            ProductDescription : $.trim($('#txtProductDescription').val()),
            UnitID : parseInt($('#cboUnit').val()),
            Qty : icsRemoveComma($('#txtQty').val()),
            UnitPrice : icsRemoveComma($('#txtRate').val()),
            ProductCode : oProduct.ProductCode,
            ProductName : oProduct.ProductName,
            IsApplyColor : oProduct.IsApplyColor,
            IsApplySize : oProduct.IsApplySize,
            ColorName : sColorName,
            SizeName : sSizeCategoryName,
            StyleNo : oTechnicalSheet.StyleNo,
            OrderRecapNo :oOrderRecap!=null? oOrderRecap.OrderRecapNo:"",
            BuyerName : oTechnicalSheet.BuyerName,
            UnitName : "",
            UnitSymbol : $("#cboUnit option:selected").text(),
            Amount : (parseFloat(parseFloat(icsRemoveComma($('#txtQty').val()))/parseInt($('#txtRateUnit').val())) * parseFloat(icsRemoveComma($('#txtRate').val())))
        };
        return oWorkOrderDetail;
    }

    $('#btnClose').click(function(e){
        window.location.href = sessionStorage.getItem("BackLink");
    });

    $("#btnRemoveDetail").click(function () {

        var oWorkOrderDetail = $("#tblWorkOrderDetail").datagrid("getSelected");
        if (oWorkOrderDetail == null || parseInt(oWorkOrderDetail.ProductID) <= 0) { alert("Please select an item from list!"); return false; }
        if (!confirm("Confirm to Delete?")) return false;
        var SelectedRowIndex=$('#tblWorkOrderDetail').datagrid('getRowIndex',oWorkOrderDetail);
        alert("Data Delete Successfully.");
        $('#tblWorkOrderDetail').datagrid('deleteRow',SelectedRowIndex);
        SetTotal();
    });

    var editIndex = undefined;
    function endEditing(){
        if (editIndex == undefined){return true}
        if ($('#tblWorkOrderDetail').datagrid('validateRow', editIndex)){
            $('#tblWorkOrderDetail').datagrid('endEdit', editIndex);
            $('#tblWorkOrderDetail').datagrid('selectRow',editIndex);
            var oORSDetail=$('#tblWorkOrderDetail').datagrid('getSelected');
            if(oORSDetail!=null)
            {
                oORSDetail.Amount = parseFloat((parseFloat(oORSDetail.Qty)/parseInt($('#txtRateUnit').val())) *parseFloat(oORSDetail.UnitPrice));
                $('#tblWorkOrderDetail').datagrid('updateRow',{index: editIndex,	row: oORSDetail});
            }
            SetTotal();
            editIndex = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRow(index){
        if (editIndex != index){
            if (endEditing())
            {
                $('#tblWorkOrderDetail').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndex = index;
            }
            else
            {
                $('#tblWorkOrderDetail').datagrid('selectRow', editIndex);
            }
        }
    }

    //Start Edit Detail
    $('#btnEditDetail').click(function(e)
    {
        var oWorkOrderDetail = $("#tblWorkOrderDetail").datagrid("getSelected");
        if (oWorkOrderDetail == null || parseInt(oWorkOrderDetail.ProductID) <= 0)
        {
            alert("Please select an item from list!");
            return false;
        }
        $("#winEditDetail input").not("input[type='button']").val("");

        var oTechnicalSheet = {
            TechnicalSheetID : oWorkOrderDetail.TechnicalSheetID,
            StyleNo : oWorkOrderDetail.StyleNo,
            BuyerName : oWorkOrderDetail.BuyerName
        };

        var oColorCategory = {
            ColorCategoryID : oWorkOrderDetail.ColorID,
            ColorName : oWorkOrderDetail.ColorName
        };

        var oSizeCategory = {
            SizeCategoryID : oWorkOrderDetail.SizeID,
            SizeCategoryName : oWorkOrderDetail.SizeName
        };

        $('#txtStyle').data('TechnicalSheet', oTechnicalSheet);
        $('#txtStyleEdit').val(oTechnicalSheet.StyleNo);
        $('#txtStyleEdit').addClass('fontColorOfPickItem');

        if(Boolean(oWorkOrderDetail.IsApplyColor))
        {
            $('#txtColorNameEdit').val(oColorCategory.ColorName);
            $('#txtColorNameEdit').addClass('fontColorOfPickItem');
            $('#txtColorName').data('ColorCategory', oColorCategory);
            $('#txtColorNameEdit,#btnColorPikerEdit').prop('disabled', false);
        }
        else
        {
            $('#txtColorNameEdit').val('');
            $('#txtColorName').data('ColorCategory', null);
            $('#txtColorNameEdit,#btnColorPickEdit').prop('disabled', true);
        }

        if(Boolean(oWorkOrderDetail.IsApplySize))
        {
            $('#txtSizeNameEdit').val(oSizeCategory.SizeCategoryName);
            $('#txtSizeNameEdit').addClass('fontColorOfPickItem');
            $('#txtSizeName').data('SizeCategory', oSizeCategory);
            $('#txtSizeNameEdit,#btnSizePikerEdit').prop('disabled', false);
        }
        else
        {
            $('#txtSizeNameEdit').val('');
            $('#txtSizeName').data('SizeCategory', null);
            $('#txtSizeNameEdit,#btnSizePikerEdit').prop('disabled', true);
        }
        $("#winEditDetail").icsWindow('open', "Update Info");
    });

    $('#btnSaveEdit').click(function(){
        var oWorkOrderDetail = $("#tblWorkOrderDetail").datagrid("getSelected");
        var SelectedRowIndex=$('#tblWorkOrderDetail').datagrid('getRowIndex',oWorkOrderDetail);

        var oTechnicalSheet = $('#txtStyle').data('TechnicalSheet')
        if(oTechnicalSheet===null || parseInt(oTechnicalSheet.TechnicalSheetID)<=0)
        {
            $('#txtStyleEdit').focus();
            $('#txtStyleEdit').addClass("errorFieldBorder");
            alert('Please select Style!');
            return false;
        }

        var oColorCategory = $('#txtColorName').data('ColorCategory');
        var oSizeCategory = $('#txtSizeName').data('SizeCategory');

        if(Boolean(oWorkOrderDetail.IsApplyColor))
        {
            if(oColorCategory===null || parseInt(oColorCategory.ColorCategoryID)<=0)
            {
                $('#txtColorNameEdit').focus();
                $('#txtColorNameEdit').addClass("errorFieldBorder");
                alert('Please select color!');
                return false;
            }
        }

        if(Boolean(oWorkOrderDetail.IsApplySize))
        {
            if(oSizeCategory===null || parseInt(oSizeCategory.SizeCategoryID)<=0)
            {
                $('#txtSizeNameEdit').focus();
                $('#txtSizeNameEdit').addClass("errorFieldBorder");
                alert('Please select Size!');
                return false;
            }
        }

        oWorkOrderDetail.StyleID = parseInt(oTechnicalSheet.TechnicalSheetID);
        oWorkOrderDetail.ColorID = oColorCategory ==null ? 0 : parseInt(oColorCategory.ColorCategoryID);
        oWorkOrderDetail.SizeID = oSizeCategory ==null ? 0 : parseInt(oSizeCategory.SizeCategoryID);
        oWorkOrderDetail.ColorName = oColorCategory ==null ? '' : oColorCategory.ColorName;
        oWorkOrderDetail.SizeName = oSizeCategory ==null ? '' : oSizeCategory.SizeCategoryName;
        oWorkOrderDetail.StyleNo = oTechnicalSheet.StyleNo;
        oWorkOrderDetail.BuyerName = oTechnicalSheet.BuyerName;

        $('#tblWorkOrderDetail').datagrid('updateRow',{index: SelectedRowIndex,	row: oWorkOrderDetail});
        alert("Data Saved Succesfully");
        $("#winEditDetail").icsWindow('close');
    });

    $('#btnCloseEdit').click(function(){
        $("#winEditDetail").icsWindow('close');
    });

    //start style picker Edit
    $("#txtStyleEdit").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var sStyleNumber = $.trim($('#txtStyleEdit').val());
            if(sStyleNumber === null || sStyleNumber === "")
            {
                alert("Press Enter With Style Number!");
                $('#txtStyle').focus();
                return;
            }
            PickStylesEdit(sStyleNumber);
        }
    });
    $("#btnStylePikerEdit").click(function () {
        PickStylesEdit("");
    });
    $('#txtStyleEdit').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtStyleEdit").removeClass("fontColorOfPickItem");
            $('#txtStyle').data('TechnicalSheet', null);
        }
    });
    function PickStylesEdit(sStyleNumber)
    {
        var oTechnicalSheet = { StyleNo: sStyleNumber };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oTechnicalSheet,
            ControllerName: "TechnicalSheet",
            ActionName: "StyleSearch",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].TechnicalSheetID > 0) {
                    var tblColums = []; var oColumn = { field: "StyleNo", title: "Style No", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BuyerName", title: "Buyer Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "SessionName", title: "Business Session", width: 100, align: "left" }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winStylePickerEdit',
                        winclass: 'clsStylePickerEdit',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblStylePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'StyleNo',
                        windowTittle: 'Style List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    //end style picker Edit

    //start color picker Edit
    $("#txtColorNameEdit").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var sColorName = $.trim($('#txtColorNameEdit').val());
            if(sColorName===null || sColorName==="")
            {
                alert("Press Enter With Color Name!");
                $('#txtColorNameEdit').focus();
                return;
            }
            PickColorEdit(sColorName);
        }
    });
    $("#btnColorPikerEdit").click(function (){
        PickColorEdit("");
    });
    $('#txtColorNameEdit').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtColorNameEdit").removeClass("fontColorOfPickItem");
            $('#txtColorName').data('ColorCategory', null);
        }
    });
    function PickColorEdit(sColorName)
    {
        var oColorCategory = {Param:sColorName};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oColorCategory,
            ControllerName:"ColorCategory",
            ActionName: "SearchColor",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ColorCategoryID > 0) {

                    var tblColums = []; var oColumn = { field: "ColorName", title: "Color Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Note", title: "Note", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winColorCategoryEdit',
                        winclass: 'clsColorCategoryEdit',
                        winwidth: 500,
                        winheight: 400,
                        tableid: 'tblColorCategory',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ColorName',
                        windowTittle: 'Color List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });
    }
    //end color picker Edit

    //start size picker Edit
    $("#txtSizeNameEdit").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var sSizeName = $.trim($('#txtSizeNameEdit').val());
            if(sSizeName===null || sSizeName==="")
            {
                alert("Press Enter With Size Name!");
                $('#txtSizeNameEdit').focus();
                return;
            }
            PickSizeEdit(sSizeName);
        }
    });
    $("#btnSizePikerEdit").click(function (){
        PickSizeEdit("");
    });
    $('#txtSizeNameEdit').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtSizeNameEdit").removeClass("fontColorOfPickItem");
            $('#txtSizeName').data('SizeCategory', null);
        }
    });
    function PickSizeEdit(sSizeName)
    {
        var oSizeCategory = {Param:sSizeName};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oSizeCategory,
            ControllerName:"SizeCategory",
            ActionName: "SearchSize",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].SizeCategoryID > 0) {

                    var tblColums = []; var oColumn = { field: "SizeCategoryName", title: "Size Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Note", title: "Note", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winSizeCategoryEdit',
                        winclass: 'clsSizeCategoryEdit',
                        winwidth: 500,
                        winheight: 400,
                        tableid: 'tblSizeCategory',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'SizeCategoryName',
                        windowTittle: 'Size List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });
    }
    //end size picker Edit
    //End Edit Detail

    //start contact person add
    $('#btnAddContactPerson').click(function(){
        var nSupplierID = parseInt($('#txtSupplierName').data('SupplierID'));
        if(nSupplierID<=0)
        {
            alert("Please select an Supplier Name!");
            $('#txtSupplierName').focus();
            return;
        }
        $("#winContactPersonnel").icsWindow('open', "Add Contact Person");
        $("#winContactPersonnel input").not("input[type='button']").val("");
    });

    function ValidateInputCP()
    {
        var sName = $.trim($('#txtName').val());
        if(sName==null || sName=="")
        {
            alert("Please enter name!");
            $('#txtName').focus();
            return false;
        }

        var sPhone = $.trim($('#txtPhone').val());
        if(sPhone==null || sPhone=="")
        {
            alert("Please enter phone number!");
            $('#txtPhone').focus();
            return false;
        }
        return true;
    }

    function RefreshObjectCP()
    {
        var oContactPersonnel= {
            ContactPersonnelID : 0,
            ContractorID : parseInt($('#txtSupplierName').data('SupplierID')),
            Name : $("#txtName").val(),
            Address : $("#txtAddress").val(),
            Phone :$("#txtPhone").val(),
            Email : $("#txtEmail").val(),
            Note : $("#txtNote").val()
        };
        return oContactPersonnel;
    }

    $('#btnAddContactPersonnel').click(function(){
        if(!ValidateInputCP()) return;
        var oContactPersonnel=RefreshObjectCP();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/Contractor/SaveContactPersonnel",
            traditional: true,
            data:  JSON.stringify(oContactPersonnel),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oContactPersonnel = jQuery.parseJSON(data);
                if(parseInt(oContactPersonnel.ContactPersonnelID)>0)
                {
                    alert("Data Saved sucessfully");
                    $("#winContactPersonnel input").not("input[type='button']").val("");
                    $("#winContactPersonnel").icsWindow('close');
                    GetContactPerson(oContactPersonnel.ContractorID);
                }
                else {
                    alert(oContactPersonnel.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $('#btnCloseContactPersonnel').click(function(){
        $("#winContactPersonnel").icsWindow('close');
        $("#winContactPersonnel input").not("input[type='button']").val("");
    });
    //end contact person add


    $('#txtQty').tooltip({
        position: 'bottom',
        content: '<span style="color:#fff">Type Qty.</span>',
        onShow: function(){$(this).tooltip('tip').css({backgroundColor: '#666',borderColor: '#666'});}
    });

    $('#txtRate').tooltip({
        position: 'bottom',
        content: '<span style="color:#fff">Type Price.</span>',
        onShow: function(){$(this).tooltip('tip').css({backgroundColor: '#666',borderColor: '#666'});}
    });




    //Start terms & Conditions
    $("#btnPickTermsAndCondition").click(function () {
        //EnumModuleName : WorkOrder:82
        var oTermsAndCondition = {ModuleID:82 };
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oTermsAndCondition,
            ControllerName: "TermsAndCondition",
            ActionName: "GetsByModule",
            IsWinClose: false
        };    
        $.icsDataGets(obj, function (response) {
         
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].TermsAndConditionID > 0) {
                    var tblColums = []; var oColumn = { field: "TermsAndConditionText", title: "Terms and Condition", width:500, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winTermsAndConditionPicker',
                        winclass: 'clsTermsAndConditionPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblTermsAndConditionPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'TermsAndConditionText',
                        windowTittle: 'Terms And Condition List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiple return
                }
                else {
                    alert("Data not Found");
                }

            }
        });

    });
    $("#btnRefreshTandC").click(function (e) {
        endEditingTC();
        var oWOTermsAndCondition = $('#tblWOTermsAndCondition').datagrid('getRows');
        DynamicRefreshList(oWOTermsAndCondition, "tblWOTermsAndCondition");
    });
    $("#btnRemoveTandC").click(function (e) {
        var oWOTermsAndCondition = $('#tblWOTermsAndCondition').datagrid('getSelected');
        if(oWOTermsAndCondition==null)
        {
            alert("Please select a item from list!");
            return;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblWOTermsAndCondition').datagrid('getRowIndex',oWOTermsAndCondition);
        alert("Delete sucessfully");
        $('#tblWOTermsAndCondition').datagrid('deleteRow',SelectedRowIndex);
        var oWOTermsAndCondition = $('#tblWOTermsAndCondition').datagrid('getRows');
        DynamicRefreshList(oWOTermsAndCondition, "tblWOTermsAndCondition");
    });

    var editTCIndex = undefined;
    function endEditingTC() {
        if (editTCIndex == undefined) { return true }

        if ($('#tblWOTermsAndCondition').datagrid('validateRow', editTCIndex)) {
            $('#tblWOTermsAndCondition').datagrid('endEdit', editTCIndex);
            editTCIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    function onClickRowTC(index) {
        if (editTCIndex != index) {
            if (endEditingTC()) {
                $('#tblWOTermsAndCondition').datagrid('selectRow', index).datagrid('beginEdit', index);
                var oWOTermsAndCondition= $('#tblWOTermsAndCondition').datagrid('getSelected');
                editTCIndex = index;
            }
            else {
                $('#tblWOTermsAndCondition').datagrid('selectRow', editTCIndex);
            }
        }
    }
    //end terms & Conditions





    //Start Size & Color
    function GetTSColorNames(oTechnicalSheetColorList) {
        var sColorName = "";
        for (var i = 0; i < oTechnicalSheetColorList.length; i++) {
            sColorName = sColorName + oTechnicalSheetColorList[i].ColorName + "; "
        }
        return sColorName;
    }

    $('#txtSearchColorSequence').keyup(function(e){
        var oColorCategorys = $('#tblColorBank').data('ColorCategorys');
        $('#txtSearchColorSequence').icsSearchByText({
            Event: e,
            SearchProperty: "ColorName",
            GlobalObjectList: oColorCategorys,
            TableId: "tblColorBank"
        });
    });

    $('#btnColorSequenceClose').click(function(e){
        $("#winColorSequence").icsWindow('close');
    });

    $('#tblColorBank').datagrid({
        onDblClickRow: function(index,row){
            AddToColorList(row);
        }
    });

    $('#btnAddTSColor').click(function(e){
        var oColorCategory = $('#tblColorBank').datagrid('getSelected');
        if(oColorCategory===null || parseInt(oColorCategory.ColorCategoryID)<=0)
        {
            alert("Please select an color category!");
            return;
        }
        AddToColorList(oColorCategory);
    });

    $('#btnColorSequenceRemove').click(function(e){
        var oTechnicalSheetColor = $('#tblTechnicalSheetColor').datagrid('getSelected');
        if(oTechnicalSheetColor===null || parseInt(oTechnicalSheetColor.ColorCategoryID)<=0)
        {
            alert("Please select an color category!");
            return;
        }

        var nRowIndex = $('#tblTechnicalSheetColor').datagrid('getRowIndex', oTechnicalSheetColor);
        $('#tblTechnicalSheetColor').datagrid('deleteRow', nRowIndex);

    });

    $('#btnColorSequenceUp').click(function(e){
        var oTechnicalSheetColor = $('#tblTechnicalSheetColor').datagrid('getSelected');
        if(oTechnicalSheetColor==null || parseInt(oTechnicalSheetColor.ColorCategoryID)<=0)
        {
            alert("Please select color");
            return;
        }

        var SelectedRowIndex=$('#tblTechnicalSheetColor').datagrid('getRowIndex',oTechnicalSheetColor);
        var oTempTechnicalSheetColors = $('#tblTechnicalSheetColor').datagrid('getRows');
        if(SelectedRowIndex==0)return;
        var oTechnicalSheetColors=[];
        oTechnicalSheetColors=oTempTechnicalSheetColors;
        oTempTechnicalSheetColors=[];
        for(var i=0; i<oTechnicalSheetColors.length; i++)
        {
            if(i==(SelectedRowIndex-1))
            {
                oTempTechnicalSheetColors[i]=oTechnicalSheetColors[i+1];
            }
            else if(i==SelectedRowIndex)
            {
                oTempTechnicalSheetColors[i]=oTechnicalSheetColors[i-1];
            }
            else
            {
                oTempTechnicalSheetColors[i]=oTechnicalSheetColors[i];
            }
            oTempTechnicalSheetColors[i].Sequence=i+1;
        }

        data = oTempTechnicalSheetColors;
        data={"total":""+data.length+"","rows":data};
        $('#tblTechnicalSheetColor').datagrid('loadData',data);
        var newSelectedRowIndex=SelectedRowIndex-1;
        $('#tblTechnicalSheetColor').datagrid('selectRow',newSelectedRowIndex);
    });

    $('#btnColorSequenceDown').click(function(e){
        var oTechnicalSheetColor = $('#tblTechnicalSheetColor').datagrid('getSelected');
        if(oTechnicalSheetColor==null || parseInt(oTechnicalSheetColor.ColorCategoryID)<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        var SelectedRowIndex=$('#tblTechnicalSheetColor').datagrid('getRowIndex',oTechnicalSheetColor);
        var oTempTechnicalSheetColors = $('#tblTechnicalSheetColor').datagrid('getRows');
        if(SelectedRowIndex==(oTempTechnicalSheetColors.length-1))return;
        var oTechnicalSheetColors=[];
        oTechnicalSheetColors=oTempTechnicalSheetColors;
        oTempTechnicalSheetColors=[];
        for(var i=0; i<oTechnicalSheetColors.length; i++)
        {
            if(i==(SelectedRowIndex+1))
            {
                oTempTechnicalSheetColors[i]=oTechnicalSheetColors[i-1];
            }
            else if(i==SelectedRowIndex)
            {
                oTempTechnicalSheetColors[i]=oTechnicalSheetColors[i+1];
            }
            else
            {
                oTempTechnicalSheetColors[i]=oTechnicalSheetColors[i];
            }
            oTempTechnicalSheetColors[i].Sequence=i+1;
        }
        data = oTempTechnicalSheetColors;
        data={"total":""+data.length+"","rows":data};
        $('#tblTechnicalSheetColor').datagrid('loadData',data);
        var newSelectedRowIndex=SelectedRowIndex+1;
        $('#tblTechnicalSheetColor').datagrid('selectRow',newSelectedRowIndex);
    });

    $('#btnColorSequenceOk').click(function(e){
        var oTechnicalSheetColorList = [];
        var nMaxColorSequence = 0;
        var oTechnicalSheetColor = $('#tblTechnicalSheetColor').datagrid('getRows');
        for (var i = 0; i < oTechnicalSheetColor.length; i++) {
            nMaxColorSequence++;
            var oTSColor = {
                TechnicalSheetColorID: 0,
                TechnicalSheetID: 0,
                ColorCategoryID: oTechnicalSheetColor[i].ColorCategoryID,
                ColorName: oTechnicalSheetColor[i].ColorName,
                Sequence: nMaxColorSequence
            };
            oTechnicalSheetColorList.push(oTSColor);
        }
        $("#winColorSequence").icsWindow('close');
        $('#txtColorName').val(GetTSColorNames(oTechnicalSheetColorList));
        $('#txtColorName').addClass('fontColorOfPickItem');
        $('#txtSizeName').focus();
    });

    function AddToColorList(oColorCategory)
    {
        var oTechnicalSheetColors = $('#tblTechnicalSheetColor').datagrid('getRows');
        for (var i = 0; i < oTechnicalSheetColors.length; i++) {
            if (parseInt(oTechnicalSheetColors[i].ColorCategoryID) === parseInt(oColorCategory.ColorCategoryID)) {
                alert("Your Selected Color Already Exists!");
                return;
            }
        }
        var oTechnicalSheetColor = {
            TechnicalSheetColorID: 0,
            TechnicalSheetID: 0,
            ColorCategoryID: oColorCategory.ColorCategoryID,
            ColorName: oColorCategory.ColorName,
            Sequence: ($('#tblTechnicalSheetColor').datagrid('getRows').length+1)
        };
        $('#tblTechnicalSheetColor').datagrid('appendRow',oTechnicalSheetColor);
    }

    $('#btnColorPiker').click(function(e){
        var oColorCategory={ Param : '' };
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress') +  "/ColorCategory/SearchColor",
            traditional: true,
            data:  JSON.stringify(oColorCategory),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oColorCategorys = jQuery.parseJSON(data);
                $('#tblColorBank').data('ColorCategorys', oColorCategorys);
                $("#winColorSequence").icsWindow('open', "Pick Color");
                DynamicRefreshList(oColorCategorys, 'tblColorBank');
                var oTechnicalSheetColors = $('#txtColorName').data('TechnicalSheetColors');
                DynamicRefreshList(oTechnicalSheetColors, 'tblTechnicalSheetColor');
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $('#btnNewColorCategory').click(function(e){
        $("#winNewColor").icsWindow('open', "Add Color");
        $("#winNewColor input").not("input[type='button']").val("");
    });

    $('#btnNewColorSave').click(function(e){
        if($.trim($('#txtNewColorName').val())===null || $.trim($('#txtNewColorName').val())==="")
        {
            alert("Please Enter Color Name!");
            return;
        }
        var oColorCategory= {
            ColorCategoryID : 0,
            ColorName : $.trim($("#txtNewColorName").val()),
            Note : $.trim($("#txtNewColorNote").val())
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/ColorCategory/Save",
            traditional: true,
            data:  JSON.stringify(oColorCategory),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oColorCategory = jQuery.parseJSON(data);
                if (oColorCategory.ErrorMessage == null || oColorCategory.ErrorMessage == "") {
                    alert("Data Saved sucessfully");
                    $("#winNewColor").icsWindow('close');
                    var nRowIndex = $('#tblColorBank').datagrid('getRows').length;
                    $('#tblColorBank').datagrid('appendRow',oColorCategory);
                    $('#tblColorBank').datagrid('selectRow',nRowIndex);
                }
                else {
                    alert(oColorCategory.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $('#btnNewColorClose').click(function(e){
        $("#winNewColor").icsWindow('close');
    });

    function GetTSSizeNames(oTechnicalSheetSizeList) {
        var sSizeName = "";
        for (var i = 0; i < oTechnicalSheetSizeList.length; i++) {
            sSizeName = sSizeName + oTechnicalSheetSizeList[i].SizeCategoryName + "; "
        }
        return sSizeName;
    }

    $('#txtSearchSizeSequence').keyup(function(e){
        var oSizeCategorys = $('#tblSizeBank').data('SizeCategorys');
        $('#txtSearchSizeSequence').icsSearchByText({
            Event: e,
            SearchProperty: "SizeName",
            GlobalObjectList: oSizeCategorys,
            TableId: "tblSizeBank"
        });
    });

    $('#btnSizeSequenceClose').click(function(e){
        $("#winSizeSequence").icsWindow('close');
    });

    $('#tblSizeBank').datagrid({
        onDblClickRow: function(index,row){
            AddToSizeList(row);
        }
    });

    $('#btnAddTSSize').click(function(e){
        var oSizeCategory = $('#tblSizeBank').datagrid('getSelected');
        if(oSizeCategory===null || parseInt(oSizeCategory.SizeCategoryID)<=0)
        {
            alert("Please select an Size category!");
            return;
        }
        AddToSizeList(oSizeCategory);
    });

    $('#btnSizeSequenceRemove').click(function(e){
        var oTechnicalSheetSize = $('#tblTechnicalSheetSize').datagrid('getSelected');
        if(oTechnicalSheetSize===null || parseInt(oTechnicalSheetSize.SizeCategoryID)<=0)
        {
            alert("Please select an Size category!");
            return;
        }

        var nRowIndex = $('#tblTechnicalSheetSize').datagrid('getRowIndex', oTechnicalSheetSize);
        $('#tblTechnicalSheetSize').datagrid('deleteRow', nRowIndex);

    });

    $('#btnSizeSequenceUp').click(function(e){
        var oTechnicalSheetSize = $('#tblTechnicalSheetSize').datagrid('getSelected');
        if(oTechnicalSheetSize==null || parseInt(oTechnicalSheetSize.SizeCategoryID)<=0)
        {
            alert("Please select Size");
            return;
        }

        var SelectedRowIndex=$('#tblTechnicalSheetSize').datagrid('getRowIndex',oTechnicalSheetSize);
        var oTempTechnicalSheetSizes = $('#tblTechnicalSheetSize').datagrid('getRows');
        if(SelectedRowIndex==0)return;
        var oTechnicalSheetSizes=[];
        oTechnicalSheetSizes=oTempTechnicalSheetSizes;
        oTempTechnicalSheetSizes=[];
        for(var i=0; i<oTechnicalSheetSizes.length; i++)
        {
            if(i==(SelectedRowIndex-1))
            {
                oTempTechnicalSheetSizes[i]=oTechnicalSheetSizes[i+1];
            }
            else if(i==SelectedRowIndex)
            {
                oTempTechnicalSheetSizes[i]=oTechnicalSheetSizes[i-1];
            }
            else
            {
                oTempTechnicalSheetSizes[i]=oTechnicalSheetSizes[i];
            }
            oTempTechnicalSheetSizes[i].Sequence=i+1;
        }

        data = oTempTechnicalSheetSizes;
        data={"total":""+data.length+"","rows":data};
        $('#tblTechnicalSheetSize').datagrid('loadData',data);
        var newSelectedRowIndex=SelectedRowIndex-1;
        $('#tblTechnicalSheetSize').datagrid('selectRow',newSelectedRowIndex);
    });

    $('#btnSizeSequenceDown').click(function(e){
        var oTechnicalSheetSize = $('#tblTechnicalSheetSize').datagrid('getSelected');
        if(oTechnicalSheetSize==null || parseInt(oTechnicalSheetSize.SizeCategoryID)<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        var SelectedRowIndex=$('#tblTechnicalSheetSize').datagrid('getRowIndex',oTechnicalSheetSize);
        var oTempTechnicalSheetSizes = $('#tblTechnicalSheetSize').datagrid('getRows');
        if(SelectedRowIndex==(oTempTechnicalSheetSizes.length-1))return;
        var oTechnicalSheetSizes=[];
        oTechnicalSheetSizes=oTempTechnicalSheetSizes;
        oTempTechnicalSheetSizes=[];
        for(var i=0; i<oTechnicalSheetSizes.length; i++)
        {
            if(i==(SelectedRowIndex+1))
            {
                oTempTechnicalSheetSizes[i]=oTechnicalSheetSizes[i-1];
            }
            else if(i==SelectedRowIndex)
            {
                oTempTechnicalSheetSizes[i]=oTechnicalSheetSizes[i+1];
            }
            else
            {
                oTempTechnicalSheetSizes[i]=oTechnicalSheetSizes[i];
            }
            oTempTechnicalSheetSizes[i].Sequence=i+1;
        }
        data = oTempTechnicalSheetSizes;
        data={"total":""+data.length+"","rows":data};
        $('#tblTechnicalSheetSize').datagrid('loadData',data);
        var newSelectedRowIndex=SelectedRowIndex+1;
        $('#tblTechnicalSheetSize').datagrid('selectRow',newSelectedRowIndex);
    });

    $('#btnSizeSequenceOk').click(function(e){
        var oTechnicalSheetSizeList = [];
        var nMaxSizeSequence = 0;
        var oTechnicalSheetSize = $('#tblTechnicalSheetSize').datagrid('getRows');
        for (var i = 0; i < oTechnicalSheetSize.length; i++) {
            nMaxSizeSequence++;
            var oTSSize = {
                TechnicalSheetSizeID: 0,
                TechnicalSheetID: 0,
                SizeCategoryID: oTechnicalSheetSize[i].SizeCategoryID,
                SizeCategoryName: oTechnicalSheetSize[i].SizeCategoryName,
                Sequence: nMaxSizeSequence
            };
            oTechnicalSheetSizeList.push(oTSSize);
        }
        $("#winSizeSequence").icsWindow('close');
        $('#txtSizeName').val(GetTSSizeNames(oTechnicalSheetSizeList));
        $('#txtSizeName').addClass('fontColorOfPickItem');
        $('#txtReqQty').focus();
    });

    function AddToSizeList(oSizeCategory)
    {
        var oTechnicalSheetSizes = $('#tblTechnicalSheetSize').datagrid('getRows');
        for (var i = 0; i < oTechnicalSheetSizes.length; i++) {
            if (parseInt(oTechnicalSheetSizes[i].SizeCategoryID) === parseInt(oSizeCategory.SizeCategoryID)) {
                alert("Your Selected Size Already Exists!");
                return;
            }
        }
        var oTechnicalSheetSize = {
            TechnicalSheetSizeID: 0,
            TechnicalSheetID: 0,
            SizeCategoryID: oSizeCategory.SizeCategoryID,
            SizeCategoryName: oSizeCategory.SizeCategoryName,
            Sequence: ($('#tblTechnicalSheetSize').datagrid('getRows').length+1)
        };
        $('#tblTechnicalSheetSize').datagrid('appendRow',oTechnicalSheetSize);
    }

    $('#btnSizePiker').click(function(e){
        var oSizeCategory={ Param : '' };
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/SizeCategory/SearchSize",
            traditional: true,
            data:  JSON.stringify(oSizeCategory),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oSizeCategorys = jQuery.parseJSON(data);
                $('#tblSizeBank').data('SizeCategorys', oSizeCategorys);
                $("#winSizeSequence").icsWindow('open', "Pick Size");
                DynamicRefreshList(oSizeCategorys, 'tblSizeBank');
                var oTechnicalSheetSizes = $('#txtSizeName').data('TechnicalSheetSizes');
                DynamicRefreshList(oTechnicalSheetSizes, 'tblTechnicalSheetSize');
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $('#btnNewSizeCategory').click(function(e){
        $("#winNewSize").icsWindow('open', "Add Size");
        $("#winNewSize input").not("input[type='button']").val("");
    });

    $('#btnNewSizeSave').click(function(e){
        if($.trim($('#txtNewSizeName').val())===null || $.trim($('#txtNewSizeName').val())==="")
        {
            alert("Please Enter Size Name!");
            return;
        }
        var oSizeCategory= {
            SizeCategoryID : 0,
            SizeCategoryName : $.trim($("#txtNewSizeName").val()),
            Note : $.trim($("#txtNewSizeNote").val())
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/SizeCategory/Save",
            traditional: true,
            data:  JSON.stringify(oSizeCategory),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oSizeCategory = jQuery.parseJSON(data);
                if (oSizeCategory.ErrorMessage == null || oSizeCategory.ErrorMessage == "") {
                    alert("Data Saved sucessfully");
                    $("#winNewSize").icsWindow('close');
                    var nRowIndex = $('#tblSizeBank').datagrid('getRows').length;
                    $('#tblSizeBank').datagrid('appendRow',oSizeCategory);
                    $('#tblSizeBank').datagrid('selectRow',nRowIndex);
                }
                else {
                    alert(oSizeCategory.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $('#btnNewSizeClose').click(function(e){
        $("#winNewSize").icsWindow('close');
    });

</script>