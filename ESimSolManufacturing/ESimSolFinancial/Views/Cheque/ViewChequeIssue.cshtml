@model ESimSol.BusinessObjects.Cheque
<html>
@{
    ViewBag.Title = "Cheque Issue";
}
<body>
    <div style="width:100%;height:100%;">
        <div id="winStatusChangeConfirmation" class="easyui-window" title="StatusChangeConfirmation" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="font-family:Tahoma;">
                <textarea id="txtRemarks" placeholder="Remarks" rows="4" cols="50" style="width:440px;"></textarea>
            </div>
            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:300px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnOkStatusChange" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Yes</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnNoStatusChange" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">No</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
        <div id="divCheque" class="easyui-panel" title="Add Cheque" style="font-family:Tahoma; height:100%; width:100%">
            <div style="width:100%; height:88%; text-align:center">
                <fieldset style="height:97%;">
                    <legend style="font-weight:bold;text-align:left;"> Cheque Informations : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;width:100%;">
                        <tr>
                            <td style="width:20%; text-align:right">
                                Cheque Date :
                            </td>
                            <td style="width:30%;text-align:left;">
                                <input id="txtChequeDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:204px" />
                            </td>
                            <td style="width:20%; text-align:right;">
                                Payment Type :
                            </td>
                            <td style="width:30%;text-align:left;">
                                @Html.DropDownListFor(model => model.PaymentType, Model.PaymentTypes.Select(x => new SelectListItem() { Text = x.Value, Value = x.id.ToString() }), new { id = "cboPaymentTypes", style = "width: 203px;" })
                            </td>
                        </tr>
                        <tr>
                            <td style="width:20%; text-align:right">
                                Contractor Name :
                            </td>
                            <td style="width:80%;text-align:left;" colspan="3">
                                @Html.TextBoxFor(model => model.ContractorName, new { style = "width: 694px;", placeholder = "Type Contractor Name", id = "txtContractorName" })
                                @*<a id="btnAddContractor" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true"></a>*@
                            </td>
                        </tr>
                        <tr>
                            <td style="width:20%; text-align:right">
                                Pay To :
                            </td>
                            <td style="width:80%;text-align:left;" colspan="3">
                                <select id="cboIssueFigure" style="width:698px;"></select>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:20%; text-align:right">
                                Amount :
                            </td>
                            <td style="width:30%;text-align:left;">
                                <input type="text" class="easyui-numberbox" data-options="min:0,precision:2" style="width: 200px; text-align:right" id="txtAmount" />
                            </td>
                            <td style="width:20%; text-align:right">
                                Voucher Reference :
                            </td>
                            <td style="width:30%;text-align:left;">
                                @Html.TextBoxFor(model => model.VoucherReference, new { style = "width: 200px;", id = "txtVoucherReference" })
                            </td>
                        </tr>
                        <tr>
                            <td style="width:20%; text-align:right">
                                Amount In Word :
                            </td>
                            <td style="width:80%;text-align:left;" colspan="3">
                                <input type="text" style="width: 694px;" disabled="disabled" id="txtAmountInWord" />
                            </td>
                        </tr>
                        <tr>
                            <td style="width:20%; text-align:right">
                                Bank :
                            </td>
                            <td style="width:30%;text-align:left;">
                                @Html.TextBoxFor(model => model.BankName, new { style = "width: 200px;", id = "txtBankName", disabled = "disabled" })
                            </td>
                            <td style="width:20%; text-align:right">
                                Branch :
                            </td>
                            <td style="width:30%;text-align:left;">
                                @Html.TextBoxFor(model => model.BankBranchName, new { style = "width: 200px;", id = "txtBankBranchName", disabled = "disabled" })
                            </td>
                        </tr>
                        <tr>
                            <td style="width:20%; text-align:right">
                                Account No :
                            </td>
                            <td style="width:30%;text-align:left;">
                                @Html.TextBoxFor(model => model.AccountNo, new { style = "width: 200px;", id = "txtAccountNo", disabled = "disabled" })
                            </td>
                            <td style="width:20%; text-align:right">
                                Cheque No :
                            </td>
                            <td style="width:30%;text-align:left;">
                                @Html.TextBoxFor(model => model.ChequeNo, new { style = "width: 200px;", id = "txtChequeNo", disabled = "disabled" })
                            </td>
                        </tr>
                        <tr>
                            <td style="width:20%; text-align:right">
                                Note :
                            </td>
                            <td style="width:80%;text-align:left;" colspan="3">
                                <textarea id="txtNote" style="width:694px;" rows="5" cols="400"></textarea>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
            <div style="width:100%; height:10%">
                <fieldset>
                    <legend style=" font-weight:bold">
                        Action :
                    </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;width:100%;">
                        <tr>
                            <td style="width:70%; text-align:right"></td>

                            <td style="width:10%; text-align:right">
                                <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                            </td>
                            <td style="width:10%; text-align:right">
                                <a id="btnHistory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true" onclick="History()">History</a>
                            </td>
                            <td style="width:10%; text-align:right">
                                <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>
    </div>
</body>
</html>

<script type="text/javascript">
    var _oCheque;
    var _oContractor;
    var _sBaseAddress="";
    var _sChequeHeader=null;
    var _stxtRemarks= null;
    var _oIssueFgures=[];
    $(document).ready(function () {
        debugger;
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _sChequeHeader=sessionStorage.getItem("ChequeHeader");
        
        $('#divCheque').panel({ title:_sChequeHeader});

        _oCheque =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oContractor=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.Contractor));

        $('#txtContractorName').icsAutoComplete({
            BaseAddress : sessionStorage.getItem('BaseAddress'),
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            Object: {Params :'~'},
            PropertyName: "Name",
            ParamName: "Param",
            PreParam: "~",
            PostParam:"~"},function (resp){
                GetsIssueFigures(resp.obj);
            });
        RefreshLayout();
        RefreshControl();
        var oCheque =sessionStorage.getItem("Cheque");
        if(oCheque!=null)
        {
            oCheque = jQuery.parseJSON(oCheque)===null?_oCheque:jQuery.parseJSON(oCheque);
        }
        else{
            oCheque=_oCheque;
        }
        RefreshValues(oCheque);
    });
    function RefreshValues(oCheque){
        $('#txtChequeDate').datebox('setValue',icsdateformat(new Date(oCheque.ChequeDate)));
        $('#cboPaymentTypes').val(oCheque.PaymentType);
        $('#txtAmount').numberbox('setValue',oCheque.Amount);
        $('#txtVoucherReference').val(oCheque.VoucherReference);
        $('#txtNote').val(oCheque.Note);
    }
    $("#btnAddContractor").click(function(){
        var oCheque=RefreshObject();
        var sURL=window.location.href;
        sessionStorage.setItem("ContractorBackTo", sURL);
        sessionStorage.setItem("Cheque", JSON.stringify(oCheque));
        sessionStorage.setItem("SelectedRowIndex", -1);
        sessionStorage.setItem("ContractorHeader", "Add Contractor");
        var tsv=((new Date()).getTime())/1000;
        window.location.href = _sBaseAddress+ "/Contractor/ViewContractor?id=0&ts="+tsv;


    });
    $('#btnSave').click(function (){if(!ValidateInput()) {return false;}$('#winStatusChangeConfirmation').icsWindow('open',_sChequeHeader);$('#txtRemarks').val('');$('#txtRemarks').focus();});
    $('#btnOkStatusChange').click(function ()
    {
        _stxtRemarks= $('#txtRemarks').val();
        Save();
        $('#txtRemarks').val('');
        $('#winStatusChangeConfirmation').icsWindow('close');
    });
    $('#btnNoStatusChange').click(function ()
    {
        $('#txtRemarks').val('');
        $('#winStatusChangeConfirmation').icsWindow('close');
    });
    function History()
    {
        var sURL=window.location.href;
        sessionStorage.setItem("ChequeHistoryBackTo", sURL);
        sessionStorage.setItem("CID", _oCheque.ChequeID );
        sessionStorage.setItem("CBID", _oCheque.ChequeBookID);
        sessionStorage.setItem("ChequeHistoryHeader", "Status History of Cheque No: " + _oCheque.ChequeNo + " from Book No: " + _oCheque.BookCode);
        window.location.href = _sBaseAddress+  "/ChequeHistory/ViewChequeHistorys?nid="+_oCheque.ChequeID;
    }
    function GetsIssueFigures(oSelectedContractor)
    {
        debugger;
        var oContractor;
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/IssueFigure/GetsIssueFigures",
            traditional: true,
            data:  JSON.stringify(oSelectedContractor),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                oContractor = jQuery.parseJSON(data);
                if(oContractor!=null){_oContractor=null;_oContractor=oContractor;}
                RefreshContractorControls();        
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
                
    }
    function RefreshControl()
    {
        if(_oCheque.PayTo > 0)
        {
            $('#txtChequeDate').datebox('setValue',_oCheque.ChequeDateInString);
            $('#txtAmount').numberbox('setValue',_oCheque.Amount);
            RefreshContractorControls();
        }
        else
        {
            $('#txtChequeDate').datebox('setValue', icsdateformat(new Date()));
        }
        $('#cboPaymentTypes').val(_oCheque.PaymentType);
        $('#txtNote').val(_oCheque.Note);
    }
    
    function RefreshArguments()
    {
        debugger;
        var arg='Arguments;';
        var txtContractorName=$("#txtContractorName").val();



        if(txtContractorName!=null)
        {
            arg=arg+txtContractorName+'~';
        }

        _oContractor.ErrorMessage="";
        _oContractor.ErrorMessage=arg;
    }
    function RefreshContractorControls()
    {
        debugger;
        if(_oContractor !=null)
        {
            if(parseInt(_oContractor.ContractorID)>0)
            {
                $('#txtContractorName').val(_oContractor.Name);
                $('#txtContractorName').addClass('fontColorOfPickItem');;

                $('#cboIssueFigure').empty();
                $('#cboIssueFigure').icsLoadCombo({
                    List: _oContractor.IssueFigures,
                    OptionValue: "IssueFigureID",
                    DisplayText: "ChequeIssueTo"}); 
                $('#cboIssueFigure').val(_oCheque.IssueFigureID);
            }
        }
    }
    $('#txtAmount').numberbox({onChange:function(newValue,oldValue){txtAmountOnchange(newValue,oldValue);}});
    function txtAmountOnchange(newValue,oldValue)
    {
        //debugger;
        $('#txtAmountInWord').val('');
        $('#txtAmountInWord').val(TakaWords(parseFloat(newValue)));
    }
    

    function RefreshLayout()
    {

        if(_sChequeHeader== 'View Cheque')
        {
            document.getElementById('cboPaymentTypes').disabled = true;
            document.getElementById('txtContractorName').disabled = true;
            document.getElementById('cboIssueFigure').disabled = true;
            document.getElementById('txtVoucherReference').disabled = true;
            document.getElementById('txtAmount').disabled = true;
            document.getElementById('txtNote').disabled = true;

            document.getElementById('btnSave').style.display = 'none';
        }
    }

    function ValidateInput()
    {
        var cboPaymentTypes = $("#cboPaymentTypes").val();
        if(cboPaymentTypes==null || cboPaymentTypes<=0)
        {
            alert("Please Select a Payment Type");
            $('#cboPaymentTypes').focus();
            return false;
        }

        var txtContractorName = $("#txtContractorName").val();
        if(txtContractorName==null || txtContractorName=="")
        {
            alert("Please Select a Contractor!");
            $('#txtContractorName').focus();
            return false;
        }

        var oContractor= $('#txtContractorName').data('obj');
        if(oContractor==null ||oContractor.ContractorID<=0){
            if(_oCheque.PayTo<=0)
            {
                alert("Please select a Contractor!");
                $("#txtContractorName").addClass("errorFieldBorder");
                $("#txtContractorName").focus();
                $("#cboIssueFigure").empty();
                return false;
            } else {
                $("#txtContractorName").removeClass("errorFieldBorder");
            }
        } else {
            $("#txtContractorName").removeClass("errorFieldBorder");
        }
        var cboIssueFigure = $("#cboIssueFigure").val();
        if(cboIssueFigure==null || cboIssueFigure<=0)
        {
            alert("Please Select Pay to Name");
            $("#cboIssueFigure").focus();
            return false;
        }
        var txtAmount = $("#txtAmount").val();
        if(txtAmount==null || txtAmount=="")
        {
            alert("Please enter Cheque Amount!");
            $('#txtAmount').focus();
            return false;
        }


        return true;
    }


    function RefreshObject()
    {
        var oCheque= {
            ChequeID : _oCheque.ChequeID,
            PayTo : $('#txtContractorName').data('obj')==null?_oCheque.PayTo: $('#txtContractorName').data('obj').ContractorID,
            IssueFigureID : $("#cboIssueFigure").val(),
            Amount : $("#txtAmount").val(),
            ChequeDate : $("#txtChequeDate").datebox('getValue'),
            VoucherReference : $("#txtVoucherReference").val(),
            Note : $("#txtNote").val(),
            PaymentType : $("#cboPaymentTypes").val(),
            ErrorMessage: _sChequeHeader    
        };
        return oCheque;
    }

    function Save()
    {
        debugger;
        
       
        var oCheque=RefreshObject();

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/Cheque/Commit",
            traditional: true,
            data:  JSON.stringify(oCheque),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                oCheque = jQuery.parseJSON(data);
                if (oCheque.ErrorMessage=="Cheque Issued Successfully"||oCheque.ErrorMessage=="Cheque Edited Successfully") {
                    alert("Data Saved sucessfully");
                    var oCheques =sessionStorage.getItem("Cheques");
                    var nIndex= parseInt(sessionStorage.getItem("ChequeSelectedRowIndex"));
                    if(oCheques!=null)
                    {
                        oCheques = jQuery.parseJSON(oCheques);
                    }
                    else
                    {
                        oCheques=[];
                    }
                    if(nIndex!=-1)
                    {
                        oCheques[nIndex]=oCheque;
                    }
                    else
                    {
                        sessionStorage.setItem("ChequeSelectedRowIndex", oCheques.length);
                        oCheques.push(oCheque);
                    }
                    sessionStorage.setItem("Cheques", JSON.stringify(oCheques));
                    window.location.href = sessionStorage.getItem("ChequeBackTo");
                }
                else {
                    alert(oCheque.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }


    $("#btnClose").click(function(){
        sessionStorage.removeItem("Cheque");
        window.location.href = sessionStorage.getItem("ChequeBackTo");
    });

    //$(document).keydown(function(e) {
    //    if(e.which == 27)//escape=27
    //    {
    //        sessionStorage.removeItem("Cheque");
    //        window.location.href = _sBaseAddress+ "/Cheque/ViewChequeMgt?nid="+_oCheque.ChequeBookID;
    //    }
    //});
    </script>