@{
    ViewBag.Title = "FN QC List";
}
@model IEnumerable<ESimSol.BusinessObjects.FNProductionBatch>
<div class="menuMainCollectionTable" ng-app="FNProductionBatchApp" style="height:540px;overflow:hidden;">

<div ng-controller="FNProductionBatchController">
<div class="region-tab" style="height:30px;">
<div class="tab">
    <button id="btnPretreatment" class="tablinks" ng-class="active" ng-click="openTab($event)">Pre-treatment Batch</button>
    <button id="btnDyeing" class="tablinks" ng-click="openTab($event)">Dyeing Batch</button>
    <button id="btnFinishing" class="tablinks" ng-click="openTab($event)">Finishing Batch</button>
</div>
</div>
<div>
<div id="region-PreTreatment" style="overflow:no-display;" ng-if="regionPreTreatment">
    <div title="FNProductionBatch List" class=" ui-grid-top-panel">
        <div class="container" style="width:99%">
            <div class="form-inline">
                <select class="form-control" ng-model="Status.FNBatchStatus" ng-change="changeFNStatus(1)">
                    <option value="">--Select One--</option>
                    <option value="1">Qc OK</option>
                    <option value="2">Qc Not OK</option>
                    <option value="3">Waiting For QC</option>
                    <option value="4">Waiting For Transfer</option>
                </select>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="AdvSerach(1)"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Adv. Search</button>
                <button type="button" class="btn btn-sm btn-success" aria-label="Left Align" ng-click="Add(1)"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> QC</button>
                <button type="button" class="btn btn-sm btn-info" aria-label="Left Align" ng-click="Reprocess(1)"> <span class="glyphicon glyphicon-refresh" aria-hidden="true"></span> Re-process</button>
                <button type="button" class="btn btn-sm btn-success" aria-label="Left Align" ng-click="AddQCParameter()"> <span class="glyphicon glyphicon-list" aria-hidden="true"></span> Fabric Test Report</button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="QCParameterReport()"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Print Test Report</button>
            </div>
        </div>
    </div>
    <div ui-grid="gridOptions" ui-grid-selection ui-grid-edit ui-grid-resize-columns ui-grid-key-nav class="grid-angular"></div>

</div>
<div id="region-Dyeing" ng-if="regionDyeing">
    <div title="FNProductionBatch List" class="ui-grid-top-panel">
        <div class="container" style="width:99%">
            <div class="form-inline">
                <div class="form-inline">
                    <select class="form-control" ng-model="StatusForDyeing.FNBatchStatusForDyeing" ng-change="changeFNStatus(2)">
                        <option value="">--Select One--</option>
                        <option value="1">Qc OK</option>
                        <option value="2">Qc Not OK</option>
                        <option value="3">Waiting For QC</option>
                        <option value="4">Waiting For Transfer</option>
                    </select>
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="AdvSerach(2)"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Adv. Search</button>
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Add(2)"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> QC</button>
                    <button type="button" class="btn btn-sm btn-info" aria-label="Left Align" ng-click="Reprocess(2)"> <span class="glyphicon glyphicon-refresh" aria-hidden="true"></span> Re-process</button>
                    <button type="button" class="btn btn-sm btn-success" aria-label="Left Align" ng-click="AddQCParameterDyeing()"> <span class="glyphicon glyphicon-list" aria-hidden="true"></span> Fabric Test Report</button>
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="QCParameterReportDyeing()"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Print Test Report</button>
                </div>
            </div>
        </div>
        <div ui-grid="gridOptionsForDyeing" ui-grid-selection ui-grid-edit ui-grid-resize-columns ui-grid-key-nav class="grid-angular"></div>
    </div>
</div>
<div id="region-Finishing" ng-if="regionFinishing">
    <div title="FNProductionBatch List" class="ui-grid-top-panel">
        <div class="container" style="width:99%">
            <div class="form-inline">
                <div class="form-inline">
                    <select class="form-control" ng-model="StatusForFinishing.FNBatchStatusForFinishing" ng-change="changeFNStatus(3)">
                        <option value="">--Select One--</option>
                        <option value="1">Qc OK</option>
                        <option value="2">Qc Not OK</option>
                        <option value="3">Waiting For QC</option>
                        <option value="4">Waiting For Transfer</option>
                    </select>
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="AdvSerach(3)"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Adv. Search</button>
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Add(3)"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> QC</button>
                    <button type="button" class="btn btn-sm btn-info" aria-label="Left Align" ng-click="Reprocess(3)"> <span class="glyphicon glyphicon-refresh" aria-hidden="true"></span> Re-process</button>
                    <button type="button" class="btn btn-sm btn-success" aria-label="Left Align" ng-click="AddQCParameterFinishing()"> <span class="glyphicon glyphicon-list" aria-hidden="true"></span> Fabric Test Report</button>
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="QCParameterReportFinishing()"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Print Test Report</button>
                </div>
            </div>
        </div>
        <div ui-grid="gridOptionsForFinishing" ui-grid-selection ui-grid-edit ui-grid-resize-columns ui-grid-key-nav class="grid-angular"></div>

    </div>
</div>

<script type="text/ng-template" id="divQC.html">
    <div class="modal-header">
        <h4 class="modal-title" id="modal-title"> QC</h4>
    </div>
    <div>
        <div class="col-md-12">
            <div class="col-md-4" style="font-weight:bold; text-align:right;"><input type="checkbox" ng-model="chkboxOk" ng-init="checked=true" ng-change="ChangeCheckBox()" /> OK</div>
            <div class="col-md-8" style="font-weight:bold"> <input type="checkbox" ng-model="chkboxNotOk" ng-change="ChangeCheckBoxForNot()" /> Not Ok</div>
        </div>
        <div class="col-md-12">
            <div class="col-md-4" style="font-weight:bold; text-align:right;">Remarks:</div>
            <div class="col-md-8"><input type="text" ng-model="txtRemarks" style="width:100%" /></div>
        </div>
        <fieldset>
            <legend>Action</legend>
            <div style="text-align:right">
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Save()"> <span class="glyphicon glyphicon-floppy-save" aria-hidden="true"></span> Save</button>
                <button type="button" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="Close()"> <span class="glyphicon glyphicon-folder-close" aria-hidden="true"></span> Close</button>
            </div>
        </fieldset>
    </div>
</script>

<script type="text/ng-template" id="divAdvSearch.html">

    <div class="modal-header">
        <h4 class="modal-title" id="modal-title" ng-bind="PickerTitle">Advance Search( Fabric Batch QC)</h4>
    </div>
    <div class="modal-body regionSearch">
        <fieldset style="margin-bottom: 0px;">
            <legend>Searching Criteria</legend>
           

            <div class="col-md-12">
                <div class="col-md-4" style="font-weight:bold; text-align:right;">Order No:</div>
                <div class="col-md-8"><input type="text" ng-model="txtFNExeNo" class="form-control" style="width:100%" ng-keydown="SearchKeyDownFNExeNo($event)" placeholder="Type Order No & Press Enter" /></div>
            </div>

            <div class="col-md-12" style="padding-top:3px;">
                <div class="col-md-4" style="font-weight:bold; text-align:right;">Batch No:</div>
                <div class="col-md-8"><input type="text" ng-model="txtBatchNo" class="form-control" style="width:100%" placeholder="Type Order No & Press Enter" ng-keydown="SearchKeyDownFNBatch($event)" /></div>
            </div>
            <div class="col-md-12">
                <div class="col-md-4" style="font-weight:bold; text-align:right;">Issue Date:</div>
                <div class="col-md-8">
                    <div class="col-md-4 text-left">
                        <select class="form-control" ng-model="cboIssueDate" ng-change="IssueDateChange()" ng-options="item.id as item.Value for item in CompareOperators"></select>
                    </div>
                    <div class="col-md-8 text-left regionSearch">
                        <div class="col-md-12">
                            <div class="input-group date date-container" style="width:45%;float:left">
                                <input type="text" class="form-control" ng-model="IssueDateStart"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                            </div>
                            <div style="width:10%;float:inherit;">
                                <span class="input-group-addon" style="height:26px;"><span class="label label-primary">To</span></span>
                            </div>
                            <div class="input-group date date-container" style="width:45%;float:left">
                                <input type="text" class="form-control" ng-model="IssueDateEnd" ng-disabled="IssueDateEndDisabled"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="col-md-4" style="font-weight:bold; text-align:right;"><input type="checkbox" ng-model="chkboxQCOk" />QC OK</div>
                <div class="col-md-4" style="font-weight:bold"> <input type="checkbox" ng-model="chkboxQCNotOk" />QC Not Ok</div>
                <div class="col-md-4" style="font-weight:bold"> <input type="checkbox" ng-model="chkboxWaitingForQC" />Waiting For QC</div>
            </div>
        </fieldset>
    </div>
    <div class="modal-footer">
        <label ng-hide="lblLoadingMessage" style="float:left;color:green; ">Loading Please Wait...</label>
        <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Search()"> <span class="glyphicon glyphicon-floppy-save" aria-hidden="true"></span> Search</button>
        <button type="button" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="Close()"> <span class="glyphicon glyphicon-folder-close" aria-hidden="true"></span> Close</button>
    </div>

</script>
</div>
</div>
</div>
                      
<style type="text/css">
    .grid-angular {
        width:100%;
        height:480px;
    }
    .input-group-addon {
        padding: 3px 6px;
    }
    .form-control {
        height: 24px;
        padding: 0px 4px;
        font-size: 12px;
    }

     /*-------Navigation Tab---------*/
        /* Style the tab */
        .region-tab div.tab {
            overflow: hidden;
            border: none;
            background-color: #FFFFFF;
            height: 30px;
        }
        /* Style the buttons inside the tab */
        div.tab button {
            background-color: inherit;
            float: left;
            border: none;
            outline: none;
            cursor: pointer;
            padding-top: 10px;
            padding-right: 10px;
            padding-left: 10px;
            transition: 0.3s;
        }
        .region-tab div.tab label {
            background-color: inherit;
            float: right;
            border: none;
            outline: none;
            cursor: pointer;
            padding: 6px 10px;
            /*transition: 0.3s;*/
            font-weight:bold;
        }
        /* Change background color of buttons on hover */
        div.tab button:hover {
            border-bottom: 2px solid blue;
        }
        /* Create an active/current tablink class */
        div.tab button.active {
            border-bottom: 2px solid blue;
            background-color: #E0ECFF;
        }
        .regionSearch .col-md-4 {
        width: 28%;
        padding-right: 1px;
        padding-left: 1px;
    }

    .regionSearch .col-md-8 {
        width: 72%;
        padding-right: 1px;
        padding-left: 1px;
    }
</style>

<script type="text/javascript">
    var oFNProductionBatchs =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oDyeingBatchs=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DyeingBatchs));
    var oFinishingBatchs=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FinishingBatchs));
    var oCompareOperators=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
    @*var oDyeingBatchs=@Html.Raw(Json.Encode(@ViewBag.DyeingBatchs));
    var oFinishingBatchs=@Html.Raw(Json.Encode(@ViewBag.FinishingBatchs));
   // var oCompareOperators =@Html.Raw(Json.Encode(@ViewBag.CompareOperators));*@
    var CCapp= angular.module('FNProductionBatchApp', ['ngAnimate','ui.bootstrap', 'ui.grid','ui.grid.selection','ui.grid.edit', 'ui.grid.rowEdit','ui.grid.cellNav','ui.grid.resizeColumns','ms.service','QC.service','AdvSearch.service']);
    CCapp.controller('FNProductionBatchController',function ($scope, $http,   $uibModal, $log, uiGridConstants, msModal, userSession, qcservice,advSearchservice)
    {
        oFNProductionBatchs= (userSession.getData('FNProductionBatchs').length>0)? userSession.getData('FNProductionBatchs'):oFNProductionBatchs;
        debugger;
        $scope.active ="active";
        $scope.regionDyeing =false;
        $scope.regionFinishing =false;
        $scope.regionPreTreatment =true;

        $scope.openTab= function(event) {

            var i, tablinks;
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace("active", "");
            }
            document.getElementById(event.target.id).classList.add("active");

            if(event.target.id==='btnPretreatment'){
                $scope.regionPreTreatment =true;
                $scope.regionDyeing =false;
                $scope.regionFinishing =false;

            }
            if(event.target.id==='btnDyeing'){

                $scope.regionPreTreatment =false;
                $scope.regionDyeing =true;
                $scope.regionFinishing =false;
            }
            if(event.target.id==='btnFinishing'){
                $scope.regionPreTreatment =false;
                $scope.regionDyeing =false;
                $scope.regionFinishing =true;
            }
        }

        $scope.gridOptions= {
            multiSelect: false,
            enableFullRowSelection: true,
            enableHorizontalScrollbar: uiGridConstants.scrollbars.ALWAYS ,
            columnDefs: [
            { field: 'BatchNo', name:'Batch No',cellClass: 'text-left', width:'12%' },
            { field: 'FNExONo', name:'Order No',cellClass: 'text-left', width:'12%' },
            { field: 'StartDateTimeSt', name:'Start Time',cellClass: 'text-left', width:'12%' },
            { field: 'EndDateTimeSt', name:'End Time',cellClass: 'text-left', width:'12%' },
            { field: 'QCStatusStr', name:'QC Status',cellClass: 'text-left', width:'12%' },
            { field: 'FNProcess', name:'Process',cellClass: 'text-left', width:'12%' },
            { field: 'StartBatcherName', name:'Start Batcher',cellClass: 'text-left', width:'12%' },
            { field: 'EndBatcherName', name:'End Batcher',cellClass: 'text-left', width:'12%' },
            { field: 'StartQty', name:'Start Qty',cellClass: 'text-right', width:'7%' },
            { field: 'EndQty', name:'End Qty',cellClass: 'text-right', width:'7%' },
            { field: 'StartWidth', name:'Start Width',cellClass: 'text-right', width:'10%' },
            { field: 'EndWidth', name:'End Width', width:'8%' ,cellClass: 'text-right', enableSorting: false}
            ],
            data: oFNProductionBatchs,
            onRegisterApi : function(gridApi)
            {
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.selection.selectRow($scope.gridOptions.data[userSession.getRowIndex()]);
                userSession.clear();

            }
        };

        $scope.gridOptionsForDyeing= {
            multiSelect: false,
            enableFullRowSelection: true,
            enableHorizontalScrollbar: uiGridConstants.scrollbars.ALWAYS ,
            columnDefs: [
             { field: 'BatchNo', name:'Batch No',cellClass: 'text-left', width:'12%' },
            { field: 'FNExONo', name:'Order No',cellClass: 'text-left', width:'12%' },
            { field: 'StartDateTimeSt', name:'Start Time',cellClass: 'text-left', width:'12%' },
            { field: 'EndDateTimeSt', name:'End Time',cellClass: 'text-left', width:'12%' },
            { field: 'QCStatusStr', name:'QC Status',cellClass: 'text-left', width:'12%' },
            { field: 'FNProcess', name:'Process',cellClass: 'text-left', width:'12%' },
            { field: 'StartBatcherName', name:'Start Batcher',cellClass: 'text-left', width:'12%' },
            { field: 'EndBatcherName', name:'End Batcher',cellClass: 'text-left', width:'12%' },
            { field: 'StartQty', name:'Start Qty',cellClass: 'text-right', width:'7%' },
            { field: 'EndQty', name:'End Qty',cellClass: 'text-right', width:'7%' },
            { field: 'StartWidth', name:'Start Width',cellClass: 'text-right', width:'10%' },
            { field: 'EndWidth', name:'End Width', width:'8%' ,cellClass: 'text-right', enableSorting: false}
            ],
            data: oDyeingBatchs,
            onRegisterApi : function(gridApi)
            {
                $scope.gridApiForDyeing = gridApi;
                $scope.gridApiForDyeing.selection.clearSelectedRows();
                $scope.gridApiForDyeing.selection.selectRow($scope.gridOptions.data[userSession.getRowIndex()]);



            }
        };
        $scope.AddQCParameter = function(){
            debugger;
            var obj=$scope.gridApi.selection.getSelectedRows()[0];
            if(obj==null || obj.FNPBatchID<=0)
            {
                msModal.Message({headerTitle : '', bodyText:'Please Select Batch To Add Parameter', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            var url = _sBaseAddress + "/FNQCResult/ViewFNQCResults?id="+obj.FNPBatchID;
            window.open(url, "_blank");
        };
        $scope.AddQCParameterDyeing = function(){
            debugger;

            var obj=$scope.gridApiForDyeing.selection.getSelectedRows()[0];
            if(obj==null || obj.FNPBatchID<=0)
            {
                msModal.Message({headerTitle : '', bodyText:'Please Select Batch To Add Parameter', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            var url = _sBaseAddress + "/FNQCResult/ViewFNQCResults?id="+obj.FNPBatchID;
            window.open(url, "_blank");
        };
        $scope.AddQCParameterFinishing = function(){
            debugger;
            var obj=$scope.gridApiForFinishing.selection.getSelectedRows()[0];
            if(obj==null || obj.FNPBatchID<=0)
            {
                msModal.Message({headerTitle : '', bodyText:'Please Select Batch To Add Parameter', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            var url = _sBaseAddress + "/FNQCResult/ViewFNQCResults?id="+obj.FNPBatchID;
            window.open(url, "_blank");
        };
        $scope.QCParameterReport = function()
        {
            debugger;
            var obj=$scope.gridApi.selection.getSelectedRows()[0];
            if(obj==null || obj.FNPBatchID<=0)
            {
                msModal.Message({headerTitle : '', bodyText:'Please Select Batch To Add Parameter', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            window.open(_sBaseAddress+"/FNProductionBatchQuality/PrintQCParameter?nFNPBatchID="+obj.FNPBatchID);
        };
        $scope.QCParameterReportDyeing = function()
        {
            debugger;
            var obj=$scope.gridApiForDyeing.selection.getSelectedRows()[0];
            if(obj==null || obj.FNPBatchID<=0)
            {
                msModal.Message({headerTitle : '', bodyText:'Please Select Batch To Add Parameter', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            window.open(_sBaseAddress+"/FNProductionBatchQuality/PrintQCParameter?nFNPBatchID="+obj.FNPBatchID);
        };
        $scope.QCParameterReportFinishing = function()
        {
            debugger;
            var obj=$scope.gridApiForFinishing.selection.getSelectedRows()[0];
            if(obj==null || obj.FNPBatchID<=0)
            {
                msModal.Message({headerTitle : '', bodyText:'Please Select Batch To Add Parameter', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            window.open(_sBaseAddress+"/FNProductionBatchQuality/PrintQCParameter?nFNPBatchID="+obj.FNPBatchID);
        };


        $scope.gridOptionsForFinishing= {
            multiSelect: false,
            enableFullRowSelection: true,
            enableHorizontalScrollbar: uiGridConstants.scrollbars.ALWAYS ,
            columnDefs: [
            { field: 'BatchNo', name:'Batch No',cellClass: 'text-left', width:'12%' },
            { field: 'FNExONo', name:'Order No',cellClass: 'text-left', width:'12%' },
            { field: 'StartDateTimeSt', name:'Start Time',cellClass: 'text-left', width:'12%' },
            { field: 'EndDateTimeSt', name:'End Time',cellClass: 'text-left', width:'12%' },
            { field: 'QCStatusStr', name:'QC Status',cellClass: 'text-left', width:'12%' },
            { field: 'FNProcess', name:'Process',cellClass: 'text-left', width:'12%' },
            { field: 'StartBatcherName', name:'Start Batcher',cellClass: 'text-left', width:'12%' },
            { field: 'EndBatcherName', name:'End Batcher',cellClass: 'text-left', width:'12%' },
            { field: 'StartQty', name:'Start Qty',cellClass: 'text-right', width:'7%' },
            { field: 'EndQty', name:'End Qty',cellClass: 'text-right', width:'7%' },
            { field: 'StartWidth', name:'Start Width',cellClass: 'text-right', width:'10%' },
            { field: 'EndWidth', name:'End Width', width:'8%' ,cellClass: 'text-right', enableSorting: false}
            ],
            data: oFinishingBatchs,
            onRegisterApi : function(gridApi)
            {
                $scope.gridApiForFinishing = gridApi;
                $scope.gridApiForFinishing.selection.clearSelectedRows();
                $scope.gridApiForFinishing.selection.selectRow($scope.gridOptions.data[userSession.getRowIndex()]);

            }
        };


        $scope.Add=function(treatMentProcess)
        {
            debugger;
            var oFNProductionBatch=null;
            if(treatMentProcess==1)
                oFNProductionBatch=$scope.gridApi.selection.getSelectedRows()[0];

            if(treatMentProcess==2)
                oFNProductionBatch=$scope.gridApiForDyeing.selection.getSelectedRows()[0];
            if(treatMentProcess==3)
                oFNProductionBatch=$scope.gridApiForFinishing.selection.getSelectedRows()[0];
            //var oFNProductionBatch= data[0];//get selected index
            if(oFNProductionBatch==null || oFNProductionBatch.FNPBatchID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var modalObj={
                modalcontroller:'ModalQCCtrl',
                appcontroller:'FNProductionBatchController',
                FNProductionBatch:oFNProductionBatch
            }
            var modalInstance=qcservice.Instance(modalObj);
            modalInstance.result.then(function (result)
            {
                window.location.href = window.location.href;//Reload page
                //$scope.gridOptions.data = result;
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        }

        $scope.Reprocess = function (treatMentProcess)
        {
            debugger;
            var oFNProductionBatch=null;
            var nIndex = 0;
            if(treatMentProcess==1){
                oFNProductionBatch=$scope.gridApi.selection.getSelectedRows()[0];
                nIndex = $scope.gridOptions.data.indexOf(oFNProductionBatch);
            }
            else if(treatMentProcess==2){
                oFNProductionBatch=$scope.gridApiForDyeing.selection.getSelectedRows()[0];
                nIndex = $scope.gridOptionsForDyeing.data.indexOf(oFNProductionBatch);
            }
            else if(treatMentProcess==3){
                oFNProductionBatch=$scope.gridApiForFinishing.selection.getSelectedRows()[0];
                nIndex = $scope.gridOptionsForFinishing.data.indexOf(oFNProductionBatch);
            }

            //var oFNProductionBatch= data[0];//get selected index
            if(oFNProductionBatch==null || oFNProductionBatch.FNPBatchID<=0)
            {
                alert("Please select an item from list!");
                return;
            }

            //if(parseInt(oFNProductionBatch.QCStatus)!=3)
            //{
            //    alert("Invalid Reprocess. Please select a 'QC Failed' item!");
            //    return;
            //}

            if (!confirm("Confirm to send Reprocess?")) return ;

            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/FNProductionBatchQuality/Reprocess', $.param(oFNProductionBatch), config).then(
                        function (response)
                        {
                            var oFNPBQ = jQuery.parseJSON(response.data);
                            if (parseInt(oFNPBQ.FNPBQualityID)>0 && (oFNPBQ.ErrorMessage==""|| oFNPBQ.ErrorMessage==null))
                            {
                                alert("Succefully Reprocessed.");
                                if(treatMentProcess==1){
                                    $scope.gridOptions.data[nIndex].QCStatusStr= 'Reprocess';
                                }
                                else if(treatMentProcess==2){
                                    $scope.gridOptionsForDyeing.data[nIndex].QCStatusStr= 'Reprocess';
                                }
                                else if(treatMentProcess==3){
                                    $scope.gridOptionsForFinishing.data[nIndex].QCStatusStr= 'Reprocess';
                                }
                                //$scope.gridOptions.data[nIndex] = $scope.gridOptions.data[nIndex];
                                //$uibModalInstance.close(oFNPBQ);
                            } else {
                                alert(oFNPBQ.ErrorMessage);
                                return;
                            }

                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message); }
                    );
        };

        $scope.Print = function()
        {
            var data=$scope.gridApi.selection.getSelectedRows();
            var oFNProductionBatch= data[0];//get selected index
            if(oFNProductionBatch==null || oFNProductionBatch.FNRID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(_sBaseAddress+'/FNProductionBatch/Print?FNRID='+ oFNProductionBatch.FNRID);
        }

        $scope.AdvSerach=function(treatmentProcess)
        {

            var modalObj={
                modalcontroller:'ModalAdvSearchCtrl',
                appcontroller:'FNProductionBatchController',
                TreatmentProcess:treatmentProcess,
                CompareOperators:oCompareOperators

            }
            var modalInstance=advSearchservice.Instance(modalObj);
            modalInstance.result.then(function (result)
            {
                if(treatmentProcess==1)
                    $scope.gridOptions.data=result;
                if(treatmentProcess==2)
                    $scope.gridOptionsForDyeing.data=result;
                if(treatmentProcess==3)
                    $scope.gridOptionsForFinishing.data=result;
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        }

        $scope.Status={};
        $scope.StatusForFinishing ={};
        $scope.StatusForDyeing ={};

        $scope.changeFNStatus =function(treatmentProcess){
            debugger;
            $scope.SelectedChkFNBatchStatus="";

            if(treatmentProcess==1)
            {
                $scope.FNBatchStatusForDyeing="";
                $scope.FNBatchStatusForFinishing="";
                $scope.SelectedChkFNBatchStatus =$scope.Status.FNBatchStatus;

                if($scope.FNBatchStatus=="")
                {
                    return false;
                }
            }
            if(treatmentProcess==2){
                $scope.FNBatchStatus="";
                $scope.FNBatchStatusForFinishing="";
                $scope.SelectedChkFNBatchStatus =$scope.StatusForDyeing.FNBatchStatusForDyeing;
                if($scope.FNBatchStatusForDyeing=="")
                {
                    return false;
                }
            }

            if(treatmentProcess==3){
                $scope.FNBatchStatus="";
                $scope.FNBatchStatusForDyeing="";
                $scope.SelectedChkFNBatchStatus =$scope.StatusForFinishing.FNBatchStatusForFinishing;
                if($scope.FNBatchStatusForFinishing=="")
                {
                    return false;
                }
            }

            $scope.chkboxQCOk=false;
            $scope.chkboxQCNotOk=false;
            $scope.chkboxWaitingForQC=false;
            $scope.chkWaitingForTransfer =false;
            if($scope.SelectedChkFNBatchStatus==1)
                $scope.chkboxQCOk=true;
            if($scope.SelectedChkFNBatchStatus==2)
                $scope.chkboxQCNotOk=true;
            if($scope.SelectedChkFNBatchStatus==3)
                $scope.chkboxWaitingForQC=true;
            if($scope.SelectedChkFNBatchStatus==4)
                $scope.chkWaitingForTransfer=true;
            var oFNBatch = {
                Params:'' +'~' +'' +'~'+$scope.chkboxQCOk+'~'+ $scope.chkboxQCNotOk+'~'+$scope.chkboxWaitingForQC+'~'+treatmentProcess +'~'+  $scope.chkWaitingForTransfer+'~0~~'
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/FNProductionBatchQuality/FNProductionBatchQualitysAdvSearch', $.param(oFNBatch), config).then(
                        function (response)
                        {

                            var oFNPBQs = jQuery.parseJSON(response.data);
                            if (oFNPBQs.length>0)
                            {
                                if(treatmentProcess==1)
                                    $scope.gridOptions.data=oFNPBQs;
                                if(treatmentProcess==2)
                                    $scope.gridOptionsForDyeing.data=oFNPBQs;
                                if(treatmentProcess==3)
                                    $scope.gridOptionsForFinishing.data=oFNPBQs;

                            } else {
                                alert("Data Not Found.");

                                return;
                            }

                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message); }
                    );

        }

    });

    var masterfnppservice = angular.module('QC.service', ['ms.service', 'ngAnimate', 'ui.bootstrap']);
    masterfnppservice.service('qcservice', function ($uibModal)
    {
        this.Instance = function (modalProperty) {
            var modalInstance = {
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'md',
                templateUrl: 'divQC.html',
                controller: 'ModalQCCtrl',
                controllerAs: (modalProperty.appcontroller == undefined) ? '' : modalProperty.appcontroller,
                resolve: {
                    obj: function () {
                        return {
                            FNProductionBatch: (modalProperty.FNProductionBatch == undefined) ? [] : modalProperty.FNProductionBatch
                        };
                    }

                }
            }

            modalInstance.controller = function ($http, $scope, $log, $uibModalInstance, uiGridConstants,msModal,icsMethod, obj) {
                debugger;
                $(document).on('mousemove', '.modal-body', function () {
                    $('.date-container').datepicker({
                        format: "dd M yyyy",
                        calendarWeeks: true,
                        autoclose: true,
                        todayHighlight: true
                    });
                });

                $scope.chkboxOk = true;
                $scope.chkboxNotOk = false;
                $scope.ChangeCheckBox = function()
                {
                    debugger;
                    if(!$scope.chkboxOk)
                    {
                        $scope.chkboxNotOk = true;
                        $scope.chkboxOk = false;
                    }
                    if($scope.chkboxOk)
                    {
                        $scope.chkboxNotOk = false;
                        $scope.chkboxOk = true;
                    }

                }


                $scope.ChangeCheckBoxForNot = function()
                {
                    debugger;

                    if(!$scope.chkboxNotOk)
                    {
                        $scope.chkboxOk = true;
                        $scope.chkboxNotOk = false;
                    }else
                    {
                        $scope.chkboxOk = false;
                        $scope.chkboxNotOk = true;
                    }
                }

                $scope.PickerTitle ="QC Of Batch No:"+obj.BatchNo;

                $scope.Save = function ()
                {
                    debugger;
                    var oFNProductionBatchQuality = {
                        FNPBQualityID:0,
                        FNPBatchID:obj.FNProductionBatch.FNPBatchID,
                        IsOk : $scope.chkboxOk?true:false,
                        Remark: ($scope.txtRemarks==undefined?"":$scope.txtRemarks)
                    };
                    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                    $http.post(_sBaseAddress+'/FNProductionBatchQuality/Save', $.param(oFNProductionBatchQuality), config).then(
                                function (response)
                                {
                                    var oFNPBQ = jQuery.parseJSON(response.data);
                                    if (parseInt(oFNPBQ.FNPBQualityID)>0 && (oFNPBQ.ErrorMessage==""|| oFNPBQ.ErrorMessage==null))
                                    {
                                        alert("Succefully Complete QC.");
                                        $uibModalInstance.close(oFNPBQ);
                                    } else {
                                        alert(oFNPBQ.ErrorMessage);
                                        return;
                                    }

                                },
                                    function (response) { alert(jQuery.parseJSON(response.data).Message); }
                            );
                };

                $scope.Close = function () {
                    $uibModalInstance.dismiss('cancel');
                };
            }
            return $uibModal.open(modalInstance);
        }
    });

    var FNadvSEarchService = angular.module('AdvSearch.service', ['ms.service', 'ngAnimate', 'ui.bootstrap']);
    FNadvSEarchService.service('advSearchservice', function ($uibModal) {

        this.Instance = function (modalProperty) {
            var modalInstance = {
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'md',
                templateUrl: 'divAdvSearch.html',
                controller: 'ModalAdvSearchCtrl',
                controllerAs: (modalProperty.appcontroller == undefined) ? '' : modalProperty.appcontroller,
                resolve: {
                    obj: function () {
                        return {
                            TreatmentProcess: (modalProperty.TreatmentProcess == undefined) ? 0 : modalProperty.TreatmentProcess,
                            CompareOperators : (modalProperty.CompareOperators == undefined) ? 0 : modalProperty.CompareOperators
                        };
                    }

                }
            }

            modalInstance.controller = function ($http, $scope, $log, $uibModalInstance, uiGridConstants,msModal,icsMethod, obj ,msModal) {
                debugger;

                $(document).on('mousemove', '.modal-body', function () {
                    $('.date-container').datepicker({
                        format: "dd M yyyy",
                        calendarWeeks: true,
                        autoclose: true,
                        todayHighlight: true
                    });
                });

                $scope.chkboxQCOk =false;
                $scope.chkboxQCNotOk =false;
                $scope.chkboxWaitingForQC=false;
                $scope.chkWaitingForTransfer =false;
                $scope.txtFNExeNo="";  $scope.txtBatchNo="";
                $scope.FNBatchIDs ="";
                $scope.FNOrderIDs ="";
                $scope.CompareOperators = obj.CompareOperators;
                $scope.cboIssueDate =  $scope.CompareOperators[0].id;
                $scope.lblLoadingMessage = true;
                $scope.IssueDateStart = $scope.IssueDateEnd = icsdateformat(new Date());
                $scope.IssueDateChange = function()
                {
                    $scope.IssueDateEndDisabled = icsMethod.IsDateBoxdisabled($scope.cboIssueDate);
                }
                $scope.Search = function ()
                {
                    $scope.lblLoadingMessage = false;
                    var oFNBatch = {
                        Params:$scope.FNOrderIDs +'~' +$scope.FNBatchIDs +'~'+$scope.chkboxQCOk+'~'+ $scope.chkboxQCNotOk+'~'+$scope.chkboxWaitingForQC+'~'+obj.TreatmentProcess+'~'+  $scope.chkWaitingForTransfer+'~'+$scope.cboIssueDate + '~' + $scope.IssueDateStart + '~' + $scope.IssueDateEnd
                    };
                    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                    $http.post(_sBaseAddress+'/FNProductionBatchQuality/FNProductionBatchQualitysAdvSearch', $.param(oFNBatch), config).then(
                                function (response)
                                {
                                    $scope.lblLoadingMessage = true;
                                    var oFNPBQs = jQuery.parseJSON(response.data);
                                    if (oFNPBQs.length>0)
                                    {
                                        $uibModalInstance.close(oFNPBQs);
                                    } else {
                                        alert("Data Not Found.");

                                        return;
                                    }

                                },
                                    function (response) { alert(jQuery.parseJSON(response.data).Message); }
                            );
                };

                $scope.Close = function () {
                    $uibModalInstance.dismiss('cancel');
                };

                $scope.SearchKeyDownFNBatch = function (e) {

                    var code = (e.keyCode ? e.keyCode : e.which);
                    if (code == 13) {
                        var txtBatchNo = $.trim($scope.txtBatchNo);
                        if (txtBatchNo == "" || txtBatchNo == null) {

                            msModal.Message({ headerTitle: '', bodyText: 'Type Batch No and Press Enter', sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                            return;
                        }
                        $scope.getsFNBatch();
                    } else if (code == 8)
                    {
                        $scope.txtBatchNo = '';
                        $scope.FNBatchIDs ="";
                    }
                };
                $scope.getsFNBatch = function () {


                    var oSupplier = {
                        BatchNo: $scope.txtBatchNo
                    }
                    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                    $http.post(_sBaseAddress + '/FNProductionBatchQuality/GetsFNBatch', $.param(oSupplier), config).then(
                                        function (response) {
                                            debugger;
                                            var results = jQuery.parseJSON(response.data);
                                            var modalObj = {
                                                size: 'sm',
                                                title: 'Batch List',
                                                url: _sBaseAddress + '/Home/Modal',
                                                modalController: 'ContractorModalCtrl',
                                                appController: 'GRNController',
                                                objs: results,
                                                multiSelect: true,
                                                columns: [{ field: 'BatchNo', name: 'Batch No' }]
                                            }

                                            var modalInstance = msModal.Instance(modalObj);

                                            modalInstance.result.then(function (result) {
                                                debugger;
                                                var count=1;
                                                var FNBatchIDs="";
                                                angular.forEach(result,function(item ,index){
                                                    FNBatchIDs+=item.FNBatchID+',';
                                                    count+=(index);
                                                });
                                                $scope.FNBatchIDs= FNBatchIDs.substring(0,FNBatchIDs.length-1);
                                                $scope.txtBatchNo=count+" item Selected";

                                            }, function () {
                                                $log.info('Modal dismissed at: ' + new Date());
                                            });
                                        },
                                          function (response) { alert(jQuery.parseJSON(response.data).Message); }
                                    );
                };
                $scope.SearchKeyDownFNExeNo = function (e) {

                    var code = (e.keyCode ? e.keyCode : e.which);
                    if (code == 13) {
                        var txtFNExeNo = $.trim($scope.txtFNExeNo);
                        if (txtFNExeNo == "" || txtFNExeNo == null) {

                            msModal.Message({ headerTitle: '', bodyText: 'Type Order No and Press Enter', sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                            return;
                        }
                        $scope.getsFNOrders();
                    } else if (code == 8)
                    {
                        $scope.txtFNExeNo = '';
                        $scope.FNOrderIDs  ="";
                    }
                };
                $scope.getsFNOrders = function () {
                    var FNOrder = {
                        FNExONo: $scope.txtFNExeNo
                    }
                    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                    $http.post(_sBaseAddress + '/FNProductionBatchQuality/GetsFNExeOrders', $.param(FNOrder), config).then(
                                        function (response) {
                                            debugger;
                                            var results = jQuery.parseJSON(response.data);
                                            var modalObj = {
                                                size: 'sm',
                                                title: 'Order List',
                                                url: _sBaseAddress + '/Home/Modal',
                                                modalController: 'ContractorModalCtrl',
                                                appController: 'GRNController',
                                                objs: results,
                                                multiSelect: true,
                                                columns: [{ field: 'FNExONo', name: 'Order No' }]
                                            }

                                            var modalInstance = msModal.Instance(modalObj);

                                            modalInstance.result.then(function (result) {
                                                debugger;
                                                var count=0;
                                                var FNOrderIDs ="";
                                                angular.forEach(result,function(item ,index){
                                                    FNOrderIDs+=item.FNExOID+',';
                                                    count+=(index);
                                                });
                                                $scope.FNOrderIDs=FNOrderIDs.substring(0, FNOrderIDs.length-1);
                                                $scope.txtFNExeNo=count+" item Selected";



                                            }, function () {
                                                $log.info('Modal dismissed at: ' + new Date());
                                            });
                                        },
                                          function (response) { alert(jQuery.parseJSON(response.data).Message); }
                                    );
                };
            }
            return $uibModal.open(modalInstance);
        }


    });
</script>
