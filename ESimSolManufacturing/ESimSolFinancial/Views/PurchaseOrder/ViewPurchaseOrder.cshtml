<html>

<body>
    @{
        ViewBag.Title = "Purchase Order";
    }
    @model ESimSol.BusinessObjects.PurchaseOrder
    <div id="progbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div class="menuMainCollectionTable" id="divPurchaseOrder" title="Add Purchase Order" style="font-family:Tahoma; height:100%; width:100%">
        <div id="tabPurchaseOrderTabs" class="easyui-tabs" style="width:100%; height:91%">
            <div id="vidPOBasicInfo" title="PURCHASE ORDER" style="">
                <fieldset>
                    <legend style="font-weight: bold"> </legend>
                    <table border="0" cellspacing="1" cellpadding="1" style="font-size: 11px; font-weight: bold; width:100%">
                        <tr>
                            <td style="text-align:right; width:12%">
                                Ref Type :
                            </td>
                            <td style="text-align:left; width:30%">
                                <table>
                                    <tr>
                                        <td style="width:10%; text-align:right">
                                            <select id="cboRefType" style="width:98%"><option value="1">Open</option><option value="2">@ViewBag.NOAOperationType.Value</option><option value="3">Requisition</option></select>
                                        </td>
                                        <td style="width:7%; text-align:right;">
                                            Mode
                                        </td>
                                        <td style="width:13%; text-align:left;">
                                            <select id="cboPaymentMode" style="width:98%"> </select>
                                        </td>
                                    </tr>
                                </table>
                            </td>
                            <td style="text-align:right; width:12%">
                                PO No :
                            </td>
                            <td style="text-align:left; width:17%">
                                @Html.TextBoxFor(model => model.PONo, new { id = "txtPONo", disabled = "disabled", style = "width: 96%" })
                            </td>
                            <td style="text-align:right; width:12%">
                                PO Date :
                            </td>
                            <td style="text-align:right; width:17%">
                                <input type="text" style="width:100%" id="txtPODate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            </td>
                        </tr>
                        <tr id="trReference">
                            <td style="text-align:right; width:12%">
                                <label id="lblRefNo">Requisition No :</label>                                
                            </td>
                            <td style="text-align:left; width:30%">
                                <input type="text" id="txtRefNo" placeholder="Type Requisition No and press enter" style="width:80%;" />                                
                                <input type="button" value="Pick" id="btnRefPick" />                                
                            </td>
                            <td style="text-align:right; width:12%">
                                <label id="lblRefDate">Requisition Date :</label>                                
                            </td>
                            <td style="text-align:left; width:17%">
                                @Html.TextBoxFor(model => model.RefDateSt, new { id = "txtRefDate", disabled = "disabled", style = "width: 96%" })                                
                            </td>
                            <td style="text-align:right; width:12%">                                
                                <label id="lblRefBy">Requisition By :</label>
                            </td>
                            <td style="text-align:right; width:17%">
                                @Html.TextBoxFor(model => model.RefBy, new { id = "txtRefBy", disabled = "disabled", style = "width: 96%" })                                
                            </td>
                        </tr>
                        <tr>
                            <td style="text-align:right; width:12%">
                                Supplier Name :
                            </td>
                            <td style="text-align:left; width:30%">
                                <input type="text" style="width:80%; text-align:left" id="txtSupplierName" placeholder="Type Name & Press Enter" />
                                <input type="button" value="Pick" id="btnPickSupplier" />                                
                            </td>
                            <td style="text-align:right; width:12%">
                                MKT Person :
                            </td>
                            <td style="text-align:left; width:17%">
                                <select style="width:100%" id="cboMKTPerson"></select>
                            </td>
                            <td style="text-align:right; width:12%">
                                Currency :
                            </td>
                            <td style="text-align:left; width:17%">
                                <table border="0" cellpadding="0" cellspacing="0">
                                    <tr>
                                        <td style="width:50%"><select id="cboCurrency" style="width:100%;"></select></td>
                                        <td style="width:20%">C.Rate</td>
                                        <td style="width:30%"><input type="text" style="width:100%; text-align:left" id="txtCRate" /></td>
                                    </tr>
                                </table>
                                
                            </td>
                        </tr>
                        <tr>
                            <td style="text-align:right; width:12%">
                                Contact Person :
                            </td>
                            <td style="text-align:left; width:30%">                  
                                <table border="0" cellspacing="0"  cellpadding="0" width="100%">
                                    <tr>
                                        <td style="width:78%; text-align:left">
                                            <select id="cboContactPerson" style="width:100%;"></select>
                                        </td>
                                        <td style="width:22%; text-align:right">
                                            <a id="btnReLoadLoadContactPerson" href=" javascript:void(0)" class="easyui-linkbutton" onclick="LoadContactPerson(0, 0)" iconcls="icon-reload" plain="false"></a>
                                            <a id="btnNewContactPerson" href=" javascript:void(0)" class="easyui-linkbutton" onclick="NewContactPerson(1)" iconcls="icon-add" plain="false"></a>
                                        </td>
                                    </tr>
                                </table>                                              
                            </td>
                            <td style="text-align:right; width:12%">
                                Payment Term :
                            </td>
                            <td style="text-align:left; width:17%">
                                <input type="text" style="width:100%; text-align:left" id="txtPaymentTerm"  placeholder="Type Name & Press Enter" />
                            </td>    
                            <td style="text-align:right; width:12%">
                                Ship By:
                            </td>
                            <td style="text-align:left; width:17%">
                                <input type="text" style="width:100%; text-align:left" id="txtShipBy" />
                            </td>                                 
                        </tr>
                        <tr>
                            <td style="text-align:right; width:12%">
                                Delivery To :
                            </td>
                            <td style="text-align:left; width:30%">
                                @Html.TextBoxFor(model => model.DeliveryToName, new { style = "width:80%;", placeholder = "Type Name & Press Enter", id = "txtDeliveryToName" })
                                <input type="button" value="Pick" id="btnPickDeliveryTo" />
                            </td>
                            <td style="text-align:right; width:12%">
                                Contact Person :
                            </td>
                            <td style="text-align:left; width:17%">
                                <table border="0" cellspacing="0" cellpadding="0" width="100%">
                                    <tr>
                                        <td style="width:60%; text-align:left">
                                            <select id="cboDeliveryToContactPerson" style="width:100%;"></select>
                                        </td>
                                        <td style="width:40%; text-align:right">
                                            <a id="btnLoadDeliveryToContactPerson" href=" javascript:void(0)" class="easyui-linkbutton" onclick="ReLoadLoadContactPerson(2)" iconcls="icon-reload" plain="false"></a>
                                            <a id="btnNewDeliveryToContactPerson" href=" javascript:void(0)" class="easyui-linkbutton" onclick="NewContactPerson(2)" iconcls="icon-add" plain="false"></a>
                                        </td>
                                    </tr>
                                </table>             
                            </td>
                            <td style="text-align:right; width:12%">
                                Trade Term :
                            </td>
                            <td style="text-align:left; width:17%">
                                @Html.TextBoxFor(model => model.TradeTerm, new { style = "width: 100%;", id = "txtTradeTerm" })
                            </td>
                        </tr>
                        <tr>
                            <td style="text-align:right; width:12%">
                                Bill To :
                            </td>
                            <td style="text-align:left; width:30%">
                                @Html.TextBoxFor(model => model.BillToName, new { style = "width:80%;", placeholder = "Type Name & Press Enter", id = "txtBillToName" })
                                <input type="button" value="Pick" id="btnPickBillTo" />
                            </td>
                            <td style="text-align:right; width:12%">
                                Contact Person :
                            </td>
                            <td style="text-align:left; width:17%">
                                <table border="0" cellspacing="0" cellpadding="0" width="100%">
                                    <tr>
                                        <td style="width:60%; text-align:left">
                                            <select id="cboBIllToContactPerson" style="width:100%;"></select>
                                        </td>
                                        <td style="width:40%; text-align:right">
                                            <a id="btnLoadBIllToContactPerson" href=" javascript:void(0)" class="easyui-linkbutton" onclick="ReLoadLoadContactPerson(3)" iconcls="icon-reload" plain="false"></a>
                                            <a id="btnNewBIllToContactPerson" href=" javascript:void(0)" class="easyui-linkbutton" onclick="NewContactPerson(3)" iconcls="icon-add" plain="false"></a>
                                        </td>
                                    </tr>
                                </table>        
                            </td>
                            <td style="text-align:right; width:12%">
                                Note :
                            </td>
                            <td style="text-align:left; width:17%">
                                @Html.TextBoxFor(model => model.Note, new { style = "width: 100%;", id = "txtNote" })
                            </td>
                        </tr>
                    </table>                    
                </fieldset>
                <div style="width:100%; height:255px">
                    <table id="tblPODetail" title="Purchase Order Detail" class="easyui-datagrid" style="width:100%;height:195px" showFooter='true'
                           data-options="singleSelect: true, fit:true, fitColumns:true, rownumbers:true, pagination:false, autoRowHeight:true, toolbar:'#toolbarPurchaseOrderDetail',onClickRow:onClickRow">
                        <thead>
                            <tr>
                                <th field="StyleNo" width="8%" align="left">Style</th>
                                <th field="OrderRecapNo" width="8%" align="left"> Order No</th>
                                <th field="BuyerName" width="10%" align="left"> Buyer</th>
                                <th field="ProductCode" width="10%" align="left">Item Code</th>
                                <th field="ProductName" width="20%" align="left">Item Name</th>   
                                <th field="Specifications" width="20%" align="left">Specifications</th>                                
                                <th data-options="field:'Note',align:'left',editor:{type:'textbox'}" width="13%"> Remark </th>
                                <th field="Qty" width="8%" align="right" formatter="formatPrice">Qty</th>
                                <th field="UnitSymbol" width="5%" align="left">Unit</th>
                                <th data-options="field:'Qty_Entry',align:'right',editor:{type:'numberbox',options:{precision:2}}" formatter="formatPrice" width="8%"> Qty</th>
                                <th field="UnitPrice" width="8%" align="right" formatter="formatPrice4digit">UnitPrice</th>
                                <th data-options="field:'UnitPrice_Entry',align:'right',editor:{type:'numberbox',options:{precision:5}}" formatter="formatPrice4digit" width="8%">Unit Price</th>
                                <th data-options="field:'Amount_Entry',align:'right',editor:{type:'numberbox',options:{precision:5}}" formatter="formatPrice" width="8%">Amount</th>
                                <th field="AmountST" width="8%" align="right">Amount</th>
                            </tr>
                        </thead>
                    </table>
                    <div id="toolbarPurchaseOrderDetail">
                        <input type="text" id="txtRecapNo" placeholder="Type Order Recap & Press Enter" style="width:10%;" />
                        <a id="btnOrderRecapPick" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Pick</a>
                        <input type="text" id="txtProductName" placeholder="Press enter with product name or code" style="width:15%" />
                        <a id="btnPickProduct" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Pick</a>
                        <select id="cboMeasurementUnit" style="width: 10%"></select>
                        <label id="lblQty">Qty :</label><input type="text" id="txtQty" style="width: 10%; text-align:right;" />
                        <label id="lblRate">Rate :</label><input type="text" id="txtUnitPrice" style="width: 10%; text-align:right;" />
                        <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true"> Add</a>
                        <a id="btnRemove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                        <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
                        <a id="btnUpdateRate" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Update Rate</a>
                        <a id="btnAddSpecification" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Specification </a>
                    </div> 
                                  
                </div>
                <div style="height:20px">
                    <table border="0" cellpadding="0" cellspacing="0" width="100%">
                        <tr>
                            <td style="width:5%;  text-align:right;font-weight:bold;">Total:</td>
                            <td style="width:10%; text-align:right; font-weight:bold;">
                                <label id="lblTotalAmount">0.00</label>
                            </td>
                            <td style="width:4%">  </td>

                            <td style=" width:8%; text-align:right;font-weight:bold;">
                                @*Discount:*@
                            </td>
                            <td style="width:15%; text-align:right; font-weight:bold;">
                                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                    <tr>
                                        @*<td style="width:35%"><input type="text" id="txtDiscountinAmountPercentage" style="width:100%; text-align:right;float: right;" /></td>
                                        <td style="width:10%">(%)</td>
                                        <td style="width:55%"><input type="text" id="txtDiscountinAmount" style="width:100%; text-align:right;float: right;" /></td>*@
                                    </tr>
                                </table>
                            </td>
                            <td style="width:4%">  </td>

                            <td style="width:8%;  text-align:right;font-weight:bold;">Sub Total:</td>
                            <td style="width:15%; text-align:right; font-weight:bold;">
                                <label id="lblSubtotal">0.00</label>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
            <div title="Terms and Condition " style="width: 100%; height:450px">
                <table id="tblPOTandCClauses" class="easyui-datagrid" style="width:100%; height:450px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#TCtoolbar" data-options="singleSelect: true, fitColumns:false,  rownumbers:true,pagination:false,autoRowHeight:false , onClickRow: onClickRowTC">
                    <thead>
                        <tr>
                            <th field="ClauseTypeSt" width="15%" align="left"> Type </th>
                            <th field="TermsAndCondition" width="80%" align="left" data-options="field:'TermsAndCondition',editor:{type:'text',options:{precision:0}}"> Terms & Condition </th>
                        </tr>
                    </thead>
                </table>
                <div id="TCtoolbar" style=" height:25px;">
                    <input type="button" id="btnPickPOTandC" value="Pick Term And Condition" style="width: 150px; font-size: 12px" />
                    <input type="button" id="btnRemovePOTandC" value="Remove" style="width: 80px; font-size: 12px" />
                    <input type="button" id="btnRefreshPOTandC" value="Refresh" style="width: 80px; font-size: 12px" />
                    <input type="button" id="btnGetTermsAndCondition" value="Terms & Condition" style="width: 150px; font-size: 12px" />
                </div>

            </div>
            <div title="Costing" style="width: 100%; height:650px">
                <table id="tblCostingHead" class="easyui-datagrid" style="width:99%; height:450px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#Costtoolbar" data-options="singleSelect: true, fitColumns:false,  rownumbers:true,pagination:false,autoRowHeight:false , onClickRow: onClickRowCosting">
                    <thead>
                        <tr>
                            <th field="Name" width="200" align="left"> Name </th>
                            <th field="CostHeadTypeSt" width="120" align="left"> Type </th>
                            <th data-options="field:'ValueInPercent',align:'right',editor:{type:'numberbox',options:{precision:2}}" formatter="formatPrice" width="120">%</th>
                            <th data-options="field:'ValueInAmount',align:'right',editor:{type:'numberbox',options:{precision:2}}" formatter="formatPrice" width="120"> Amount</th>
                            <th field="Sequence" width="200" align="center"> Sequence </th>
                        </tr>
                    </thead>
                </table>
                <div id="Costtoolbar" style=" height:75px;">
                    Total    : <label id="lblCostingTotalAmount">0.00</label> 
                    <br />
                    Sub-Total:<label id="lblCostingSubtotal">0.00</label>
                    <br />
                   
                    <input type="button" id="btnPickPOCosting" value="Pick Cost Head" style="width: 150px; font-size: 12px" />
                    <input type="button" id="btnRemovePOCosting"  value="Remove" style="width: 80px; font-size: 12px" />
                    <input type="button" id="btnRefreshPOCosting" value="Refresh" style="width: 80px; font-size: 12px" />
                    <a href="javascript:void(0)" id="btnUpPOCosting" class="easyui-linkbutton" iconcls="icon-up" plain="true">Up</a>
                    <a href="javascript:void(0)" id="btnDownPOCosting" class="easyui-linkbutton" iconcls="icon-down" plain="true">Down</a>
                </div>
               
            </div>
        </div>
        <div style="width:100%; height:10%">
            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                    <tr>                        
                        <td style="width:85%; text-align:right"></td>
                        <td style="width: 15%">                            
                            <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                            <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                        
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>
    <div id="winPOSpecification" style=" width:auto;" class="easyui-window" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="height: 250px; width:100%;">
            <table id="tblPOSpec" class="easyui-datagrid" style="height:250px;width:100%" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false" data-options="onClickRow: onClickRowPOSpec ,toolbar:'#toolbarPickSpec'">
                <thead>
                    <tr>
                        <th data-options="field:'Selected',checkbox:true"></th>
                        <th field="SpecName" width='40%' align="left">Specification Head</th>
                        <th data-options="field:'PODescription', align:'left',editor:{type:'text'}" width='50%'>Description</th>

                    </tr>
                </thead>
            </table>
            <div id="toolbarPickSpec">
                <a id="btnSpecPick" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Pick Specification</a>
            </div>

        </div>

        <fieldset style="font-family:Tahoma">
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px;width:100%; font-weight:bold;font-size:12">
                <tr>

                    <td style="width:85%; text-align:right"></td>
                    <td style="width: 15%">
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="SavePOSpec()">Save</a>
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="ClosePOSpec()">Close</a>
                    </td>
                </tr>

            </table>
        </fieldset>


    </div>
</body>
</html>
<style>
    td, th {
        padding: 2px;
    }
</style>

<script type="text/javascript">
    var NOAObj =null;
    $(document).ready(function () {
        debugger;
        var oPurchaseOrder =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oCurrencys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
        var oMarketingAccounts = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.MarketingAccounts));
        var oPOTandCClauses= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.POTandCClauses));
        var oClientOperationSetting = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ClientOperationSetting));
        var oCompany = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Company));
        var oInvoicePaymentModes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.InvoicePaymentModes));
        if(sessionStorage.getItem("BaseAddress")==null){sessionStorage.setItem("BaseAddress","");}//some times base address default null 
        $('#btnAddSpecification').hide();
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").hide();
        $('#divPurchaseOrder').data('Company', oCompany);
        $('#divPurchaseOrder').data('PurchaseOrder', oPurchaseOrder);
        $('#divPurchaseOrder').data('ClientOperationSetting', oClientOperationSetting);
        $('#txtRecapNo').data('OrderRecap',null);
        $('#cboCurrency').data('Currencys', oCurrencys);
        $('#cboMKTPerson').data('MKTPersons', oMarketingAccounts);
        $('#txtUnitPrice').icsCurrencyBox(null, null, 5);
        $('#txtQty,#txtCRate').icsCurrencyBox(null, null, 2);
        $('#cboPaymentMode').data('PaymentModes',oInvoicePaymentModes);
        RefreshComboBox();

        $('#tabPurchaseOrderTabs').tabs({
            border:false,
            onSelect:function(title){
                if(title=="Costing"){
               
                    var totalAmount =  parseFloat(icsRemoveComma(document.getElementById('lblTotalAmount').innerHTML));
                    document.getElementById('lblCostingTotalAmount').innerText =formatPrice(totalAmount);
                    GetFinalSubTotalAmount();
                }
            }
        });


        RefreshControls();
        RefreshLayout();
     
        $("#cboPaymentMode").val(oPurchaseOrder.PaymentModeInt);
        $('#btnAddSpecification').hide();
        $('#txtDiscountinAmountPercentage, #txtDiscountinAmount').icsCurrencyBox();
        $('#txtDiscountinAmountPercentage').val(oPurchaseOrder.DiscountInPercent);
        $('#txtDiscountinAmount').val(oPurchaseOrder.DiscountInAmount);
        var totalAmount =  parseFloat(icsRemoveComma(document.getElementById('lblTotalAmount').innerHTML));
        //    $('#txtDiscountinAmountPercentage').val(_oPurchaseQuotation.DiscountInPercent);
        //    $('#txtDiscountinAmount').val(_oPurchaseQuotation.DiscountInAmount);
        //document.getElementById('lblSubtotal').innerText =formatPrice(totalAmount-oPurchaseOrder.DiscountInAmount);
        cboChange();
    });
    



    $('#txtDiscountinAmountPercentage').change(function(){
        var txtDiscountinAmountPercentage = $('#txtDiscountinAmountPercentage').val();
        var totalAmount =  parseFloat(icsRemoveComma(document.getElementById('lblTotalAmount').innerHTML));
        if(txtDiscountinAmountPercentage>100 || totalAmount<=0){
            $('#txtDiscountinAmountPercentage').val(0.00);
        }
        else{

            var DiscountinAmount = (totalAmount *txtDiscountinAmountPercentage)/100;
            $('#txtDiscountinAmount').val(formatPrice(DiscountinAmount,0));
            document.getElementById('lblSubtotal').innerText =formatPrice(totalAmount-DiscountinAmount);

        }

    });
    $('#txtDiscountinAmount').change(function(){
        var txtDiscountinAmount = icsRemoveComma($('#txtDiscountinAmount').val());
        var totalAmount =  parseFloat(icsRemoveComma(document.getElementById('lblTotalAmount').innerHTML));
        if(txtDiscountinAmount>totalAmount || totalAmount<=0){
            $('#txtDiscountinAmount').val(0.00);
        }
        else{
            var DiscountinAmountPercentage =parseFloat((txtDiscountinAmount *100)/totalAmount,2);
            $('#txtDiscountinAmountPercentage').val(DiscountinAmountPercentage);
            document.getElementById('lblSubtotal').innerText =formatPrice(totalAmount-txtDiscountinAmount);

        }

    });
    $("#cboCurrency").change(function(){
        cboChange();
    });

    function cboChange()
    {
        var nCurrencyID = $('#cboCurrency').val();
        var oCompany = $('#divPurchaseOrder').data('Company');
        if(parseInt(nCurrencyID)==parseInt(oCompany.BaseCurrencyID))
        {
            $('#txtCRate').val(1);
            $('#txtCRate').prop('disabled',true);
        }else{
            var oPurchaseOrder = $('#divPurchaseOrder').data('PurchaseOrder');
            if(oPurchaseOrder != null && oPurchaseOrder.POID > 0)
                $('#txtCRate').val(oPurchaseOrder.CRate)
            else
                $('#txtCRate').val(0);
            $('#txtCRate').prop('disabled',false);
        }
    }

    function updateProgress() {
        var value =$('#progbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progbar').progressbar('setValue', value);
        }
    }

    function hideShow(miliseconds) {
        $("#progbarParent").hide();
    }

    function RefreshLayout()
    {
        //Open=1, NOA=2, & Requisition=3
        if(parseInt($("#cboRefType").val())===1)
        {
            $('#trReference,#lblRefNo,#txtRefNo,#btnRefPick,#lblRefDate,#txtRefDate,#lblRefBy,#txtRefBy,#lblQty,#lblRate,#cboMeasurementUnit,#txtQty,#txtUnitPrice,#btnAdd').hide();
            $('#txtSupplierName,#btnPickSupplier').show();
            $('#tblPODetail').datagrid('hideColumn','UnitPrice');
            $('#tblPODetail').datagrid('hideColumn','Qty');
            $('#tblPODetail').datagrid('hideColumn','AmountST');
            $('#tblPODetail').datagrid('showColumn','UnitPrice_Entry');
            $('#tblPODetail').datagrid('showColumn','Amount_Entry');
            $('#tblPODetail').datagrid('showColumn','Qty_Entry');
        }
        else if(parseInt($("#cboRefType").val())===2)
        {
            $('#trReference,#lblRefNo,#txtRefNo,#btnRefPick,#lblRefDate,#txtRefDate,#lblRefBy,#txtRefBy,#txtSupplierName,#btnPickSupplier').show();
            $('#lblQty,#lblRate,#cboMeasurementUnit,#txtQty,#txtUnitPrice,#btnAdd').hide();
            $('#lblRefNo').html("@ViewBag.NOAOperationType.Value No :");
            $('#lblRefDate').html("@ViewBag.NOAOperationType.Value Date :");
            $('#lblRefBy').html("@ViewBag.NOAOperationType.Value Approved :");
            $('#txtRefNo').attr("placeholder", "Type @ViewBag.NOAOperationType.Value Number and press enter");
            $('#tblPODetail').datagrid('showColumn','UnitPrice');
            $('#tblPODetail').datagrid('showColumn','Qty');
            $('#tblPODetail').datagrid('showColumn','AmountST');
            $('#tblPODetail').datagrid('showColumn','Specifications');
            $('#tblPODetail').datagrid('hideColumn','UnitPrice_Entry');
            $('#tblPODetail').datagrid('hideColumn','Amount_Entry');
            $('#tblPODetail').datagrid('hideColumn','Qty_Entry');
        }
        else if(parseInt($("#cboRefType").val())===3)
        {
            $('#trReference,#lblRefNo,#txtRefNo,#btnRefPick,#lblRefDate,#txtRefDate,#lblRefBy,#txtRefBy,#txtSupplierName,#btnPickSupplier').show();
            $('#lblQty,#lblRate,#cboMeasurementUnit,#txtQty,#txtUnitPrice,#btnAdd').hide();
            $('#lblRefNo').html("Requisition No :");
            $('#lblRefDate').html("Requisition Date :");
            $('#lblRefBy').html("Requisition By :");
            $('#txtRefNo').attr("placeholder", "Type Requisition No and pres enter");
            $('#tblPODetail').datagrid('hideColumn','UnitPrice');
            $('#tblPODetail').datagrid('hideColumn','Qty');
            $('#tblPODetail').datagrid('hideColumn','AmountST');
            $('#tblPODetail').datagrid('showColumn','UnitPrice_Entry');
            $('#tblPODetail').datagrid('showColumn','Amount_Entry');
            $('#tblPODetail').datagrid('showColumn','Qty_Entry');
        }

        var sPurchaseOrderHeader = sessionStorage.getItem("PurchaseOrderHeader");
        if (sPurchaseOrderHeader != "Add PurchaseOrder")
        {
            $('#txtSupplierName,#txtDeliveryToName,#txtBillToName').css('color', 'blue');
            $('#txtSupplierName,#txtDeliveryToName,#txtBillToName').css('fontWeight', 'bold');
            $('#txtRefNo').css('color', 'blue');
            $('#txtRefNo').css('fontWeight', 'bold');
            //Load Supplier Contact Person
            var nContractorID=parseInt($('#divPurchaseOrder').data('PurchaseOrder').ContractorID);
            LoadContactPerson(nContractorID,1);

            //Load Delivery To Contact Person
            nContractorID=parseInt($('#divPurchaseOrder').data('PurchaseOrder').DeliveryTo);
            LoadContactPerson(nContractorID,2);

            //Load Bill Contact Person
            nContractorID=parseInt($('#divPurchaseOrder').data('PurchaseOrder').BillTo);
            LoadContactPerson(nContractorID,3);
        }

        if (sPurchaseOrderHeader === "View PurchaseOrder") {
            $('#vidPOBasicInfo,#toolbarPurchaseOrderDetail').find('input, textarea, button, select').attr('disabled','disabled');
            $('#btnSave').hide();
            //document.getElementById('txtDiscountinAmountPercentage').style.disabled = true;
            //document.getElementById('txtDiscountinAmount').style.disabled = true;
        }
    }

    function RefreshComboBox()
    {
        var oCurrencys = $('#cboCurrency').data('Currencys');
        var oMarketingAccounts = $('#cboMKTPerson').data('MKTPersons');
        var oMarketingAccounts = $('#cboMKTPerson').data('MKTPersons');
        var oInvoicePaymentModes= $('#cboPaymentMode').data('PaymentModes');
        $("#cboCurrency").icsLoadCombo({ List: oCurrencys, OptionValue: "CurrencyID", DisplayText: "NameSymbol" });
        $("#cboPaymentMode").icsLoadCombo({ List: oInvoicePaymentModes, OptionValue: "id", DisplayText: "Value" });
        $("#cboMKTPerson").icsLoadCombo({ List: oMarketingAccounts, OptionValue: "MarketingAccountID", DisplayText: "Name" });
    }

    function RefreshControls()
    {
        var oClientOperationSetting = $('#divPurchaseOrder').data('ClientOperationSetting');
        if(parseInt(oClientOperationSetting.Value)==0)//if not apply
        {
            $('#txtRecapNo,#btnOrderRecapPick').hide();
            $("#tblPODetail").datagrid('hideColumn','StyleNo');
            $("#tblPODetail").datagrid('hideColumn','OrderRecapNo');
            $("#tblPODetail").datagrid('hideColumn','BuyerName');
            $("#tblPODetail").datagrid('hideColumn','Specifications');
        }
        debugger;
        var oPurchaseOrder = $('#divPurchaseOrder').data('PurchaseOrder');
        $('#cboRefType').val(oPurchaseOrder.RefTypeInt);
        $('#txtPODate').datebox('setValue',oPurchaseOrder.PODateSt);
        $('#txtRefNo').val(oPurchaseOrder.RefNo);
        $('#txtSupplierName').val(oPurchaseOrder.ContractorName);
        $('#cboRefType').val(oPurchaseOrder.RefTypeInt);
        $('#cboMKTPerson').val(oPurchaseOrder.ConcernPersonID);
        $('#cboCurrency').val(oPurchaseOrder.CurrencyID);
        //$('#txtCRate').val(oPurchaseOrder.CRate);
        $('#txtNote').val(oPurchaseOrder.Note);
        if(oPurchaseOrder.PurchaseOrderDetails!=null)
        {
            DynamicRefreshList(oPurchaseOrder.PurchaseOrderDetails, 'tblPODetail');
        }
        if(oPurchaseOrder.POTandCClauses!=null && oPurchaseOrder.POTandCClauses!=[])
        {
            DynamicRefreshList(oPurchaseOrder.POTandCClauses, 'tblPOTandCClauses');
        }
        if(oPurchaseOrder.PurchaseCosts!=null && oPurchaseOrder.PurchaseCosts!=[])
        {
            DynamicRefreshList(oPurchaseOrder.PurchaseCosts, 'tblCostingHead');
          //  GetFinalSubTotalAmount();
        }
        RefreshSummery();
        GetFinalSubTotalAmount();
    }

   

    function ValidateInput()
    {
        var oPurchaseOrder = $('#divPurchaseOrder').data('PurchaseOrder');
        if(oPurchaseOrder===null)
        {
            alert("Invalid Purchase Order!");
            return false;
        }
        var nRefType=parseInt($('#cboRefType').val());
        if(parseInt($('#cboRefType').val())<=0)
        {
            alert("Please select Refrence Type!");
            $("#cboRefType").addClass("errorFieldBorder");
            $("#cboRefType").focus();
            return false;
        }
        else
        {
            $("#cboRefType").removeClass("errorFieldBorder");
        }

        var sPODate= $('#txtPODate').datebox('getValue');
        if(sPODate === null || sPODate==="")
        {
            alert("Please select PO Date!");
            $("#txtPODate").focus();
            return false;
        }

        if(nRefType!=1)
        {
            if(oPurchaseOrder.RefID===null || parseInt(oPurchaseOrder.RefID)<=0)
            {
                var sRefName ="Requisition";
                if(nRefType===2)
                {
                    sRefName ="@ViewBag.NOAOperationType.Value";
                }
                alert("Please select an "+sRefName+" Number!");
                $("#txtRefNo").addClass("errorFieldBorder");
                $("#txtRefNo").focus();
                return false;
            }
            else
            {
                $("#txtRefNo").removeClass("errorFieldBorder");
            }
        }

        if (oPurchaseOrder.ContractorID===null || parseInt(oPurchaseOrder.ContractorID) <= 0) {
            alert("Please enter Supplier Name.");
            $("#txtSupplierName").addClass("errorFieldBorder");
            $("#txtSupplierName").focus();
            return false;
        } 
        else 
        {
            $("#txtSupplierName").removeClass("errorFieldBorder");
        }

        if ($('#cboMKTPerson').val()===null || parseInt($('#cboMKTPerson').val())<=0)
        {
            alert("Please Select MKT Person!");
            $("#cboMKTPerson").addClass("errorFieldBorder");
            $("#cboMKTPerson").focus();
            return false;
        } else {
            $("#cboMKTPerson").removeClass("errorFieldBorder");
        }

        if ($('#cboCurrency').val()===null || parseInt($('#cboCurrency').val())<=0)
        {
            alert("Please Select Currency!");
            $("#cboCurrency").addClass("errorFieldBorder");
            $("#cboCurrency").focus();
            return false;
        } else {
            $("#cboCurrency").removeClass("errorFieldBorder");
        }

        if (parseFloat(icsRemoveComma($('#txtCRate').val()))<=0)
        {
            alert("Currency Rate Should be Greater than 0.");
            $("#txtCRate").addClass("errorFieldBorder");
            $("#txtCRate").focus();
            return false;
        } else {
            $("#txtCRate").removeClass("errorFieldBorder");
        }

        if ($('#cboContactPerson').val()===null || parseInt($('#cboContactPerson').val())<=0)
        {
            alert("Please Select Contact Person!");
            $("#cboContactPerson").addClass("errorFieldBorder");
            $("#cboContactPerson").focus();
            return false;
        } else {
            $("#cboContactPerson").removeClass("errorFieldBorder");
        }

        var oPODetails = $('#tblPODetail').datagrid('getRows');
        if(oPODetails==null || oPODetails.length<=0)
        {
            alert("Add At least one Detail.");
            return false;
        }

        if(nRefType == 1){
            for(var i =0;i<oPODetails.length;i++)
            {
                if(parseFloat(oPODetails[i].Qty_Entry)<=0)
                {
                    alert("Quantity Should be greater than 0 for ["+oPODetails[i].ProductName+"]");
                    return false;
                }
                if(parseFloat(oPODetails[i].UnitPrice_Entry)<=0)
                {
                    alert("Unit Price Should be greater than 0 for ["+oPODetails[i].ProductName+"]");
                    return false;
                }
            }
        }else{
            for(var i =0;i<oPODetails.length;i++)
            {
                if(parseFloat(oPODetails[i].Qty)<=0)
                {
                    alert("Quantity Should be greater than 0 for ["+oPODetails[i].ProductName+"]");
                    return false;
                }
                if(parseFloat(oPODetails[i].UnitPrice)<=0)
                {
                    alert("Unit Price Should be greater than 0 for ["+oPODetails[i].ProductName+"]");
                    return false;
                }
            }
        }

        
        //terms and condition
        var termsAndCondition = $('#tblPOTandCClauses').datagrid('getRows');
        if(termsAndCondition.length <= 0)
        {
            alert("Enter at least one terms and condition.");
            $('#tabPurchaseOrderTabs').tabs('select',1);
            return false;
        }
        //Costing Head
        var oCostingHeads = $('#tblCostingHead').datagrid('getRows');
        if(termsAndCondition.length <= 0)
        {
            alert("Enter at least one terms and condition.");
            $('#tabPurchaseOrderTabs').tabs('select',1);
            return false;
        }
       
        var hasZero=false;
        for(var i=0; i<oCostingHeads.length;i++){
            if(oCostingHeads[i].ValueInPercent<=0 && oCostingHeads[i].ValueInAmount<=0){
                hasZero=true;
                break;
            }
        }
        if(hasZero){
            alert("Amount in percent & amount can not be zero.");
            $('#tabPurchaseOrderTabs').tabs('select',2);
            return false;
        }
        return true;
    }

    function RefreshObject()
    {
        var oTempPurchaseOrder = $('#divPurchaseOrder').data('PurchaseOrder');

        var oPurchaseOrder= {
            POID : parseInt(oTempPurchaseOrder.POID),
            BUID : parseInt(sessionStorage.getItem('BUID')),
            PONo : oTempPurchaseOrder.PONo,
            PODate : new Date($('#txtPODate').datebox('getValue')),
            RefTypeInt : parseInt($('#cboRefType').val()),
            RefID : parseInt(oTempPurchaseOrder.RefID),
            StatusInt : parseInt(oTempPurchaseOrder.StatusInt),
            ContractorID : parseInt(oTempPurchaseOrder.ContractorID),
            ContactPersonnelID : parseInt($("#cboContactPerson").val()),
            Note : $.trim($("#txtNote").val()),
            ConcernPersonID : parseInt($("#cboMKTPerson").val()),
            ApproveBy : parseInt(oTempPurchaseOrder.ApproveBy),
            CurrencyID : parseInt($("#cboCurrency").val()),
            CRate: parseFloat(icsRemoveComma($('#txtCRate').val())),
            PaymentTermID:$('#divPurchaseOrder').data('PurchaseOrder').PaymentTermID,
            ShipBy :$.trim($("#txtShipBy").val()),
            TradeTerm :$.trim($("#txtTradeTerm").val()),
            DeliveryTo :$('#divPurchaseOrder').data('PurchaseOrder').DeliveryTo,
            DeliveryToContactPerson :$('#cboDeliveryToContactPerson').val(),
            BillTo :$('#divPurchaseOrder').data('PurchaseOrder').BillTo,
            BIllToContactPerson :$('#cboBIllToContactPerson').val(),
            PurchaseOrderDetails : $('#tblPODetail').datagrid('getRows'),
            POTandCClauses : $('#tblPOTandCClauses').datagrid('getRows'),
            PurchaseCosts : $('#tblCostingHead').datagrid('getRows'),
            //DiscountInPercent:parseFloat(icsRemoveComma($('#txtDiscountinAmountPercentage').val())),
            //DiscountInAmount:parseFloat(icsRemoveComma($('#txtDiscountinAmount').val())),
            PaymentModeInt:parseInt($('#cboPaymentMode').val()) 
        };
        return oPurchaseOrder;
    }

    $('#btnSave').click(function(e){
        endEditingTC();
        endEditing();
        endEditingCosting();
        var oPurchaseOrder=RefreshObject();
        if(!ValidateInput()) return;

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/PurchaseOrder/Save",
            traditional: true,
            data:  JSON.stringify(oPurchaseOrder),
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                var oPO= jQuery.parseJSON(data);
                if (parseInt(oPO.POID)>0 &&( oPO.ErrorMessage=="" || oPO.ErrorMessage==null))
                {
                    alert("Data Save Succesfully!!");
                    _oPurchaseOrder=oPO;
                    if(confirm("Are you want to entry specification ?!"))
                    {

                        $('#divPurchaseOrder').data('PurchaseOrder',oPO);
                        $('#tblPODetail').datagrid('loadData',_oPurchaseOrder.PurchaseOrderDetails);
                        $('#txtPONo').val(_oPurchaseOrder.PONo);
                        $('#tabPurchaseOrderTabs').tabs('select',0);

                    }
                    else
                    {
                        var oPurchaseQuotation =oPO;
                        var oPurchaseQuotations =sessionStorage.getItem("PurchaseQuotations");
                        var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                        if(_oPurchaseOrder.PurchaseOrderDetails!=null)
                        {
                            DynamicRefreshList(_oPurchaseOrder.PurchaseOrderDetails, 'tblPODetail');
                        }

                        var oPurchaseOrders =sessionStorage.getItem("PurchaseOrders");
                        var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));

                        if(oPurchaseOrders!=null)
                        {
                            oPurchaseOrders = jQuery.parseJSON(oPurchaseOrders);
                        }
                        else
                        {
                            oPurchaseOrders=[];
                        }
                        if(nIndex!=-1)
                        {
                            oPurchaseOrders[nIndex]=_oPurchaseOrder;
                        }
                        else
                        {
                            sessionStorage.setItem("SelectedRowIndex", oPurchaseOrders.length);
                            oPurchaseOrders.push(_oPurchaseOrder);
                        }
                        sessionStorage.setItem("PurchaseOrders", JSON.stringify(oPurchaseOrders));
                        window.location.href = sessionStorage.getItem('BackLink');

                    }
                }
                else
                {
                    alert(oPO.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    });

    $('#cboRefType').change(function(e){
        RefreshLayout();
        $('#txtRefNo').val('');
        $('#txtRefDate').val('');
        $('#txtRefBy').val('');
        $('#txtSupplierName').val('');
        $('#cboCntactPerson').empty();
        RefreshList([]);
        $('#divPurchaseOrder').data('PurchaseOrder').RefID = 0;
        $('#divPurchaseOrder').data('PurchaseOrder').ContractorID = 0;
    });

    $("#btnAdd").click(function () {
        if (!ValidatePurchaseOrderDetail()) return;
        var oPurchaseOrderDetail = DetailRefreshObject();
        $('#tblPODetail').datagrid('appendRow', oPurchaseOrderDetail);

        //Reset Detail Control
        $("#txtProductName").removeClass("fontColorOfPickItem");
        $('#txtProductName').data('Product', null);
        $("#txtProductName").val("");
        $('#txtQty').val('0.00');
        $('#txtUnitPrice').val('0.00');
        LoadMeasurementUnit(0, null);
        RefreshGrid();
        $('#txtProductName').focus();
    });

    $("#btnRemove").click(function () {
        var oPODetail = $('#tblPODetail').datagrid('getSelected');
        if (oPODetail == null) {
            alert("Please select a item from list!");
            return;
        }
        var conf = confirm("Confirm to delete?");
        if (conf == false) return;

        endEditing();
        var SelectedRowIndex = $('#tblPODetail').datagrid('getRowIndex', oPODetail);
        $('#tblPODetail').datagrid('deleteRow', SelectedRowIndex);

        var ooPODetails = $('#tblPODetail').datagrid('getRows');
        RefreshList(ooPODetails);
    });

    $('#btnUpdateRate').click(function(){
        var oPODetail = $('#tblPODetail').datagrid('getSelected');
        if (oPODetail == null)
        {
            alert("Please select a item from list!");
            return;
        }
        var nSelectedIndex = $('#tblPODetail').datagrid('getRowIndex',oPODetail);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/PurchaseOrder/GetLastRate",
            traditional: true,
            data:  JSON.stringify(oPODetail),
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                var oPODetail= jQuery.parseJSON(data);
                if (parseInt(oPODetail.UnitPrice)>0)
                {
  
                        $('#tblPODetail').datagrid('updateRow',{
                            index:nSelectedIndex,
                            row:oPODetail
                        });
                        alert("Succesfully Price Updated");
                        RefreshGrid();
                    
                }
                else
                {
                    alert("Sorry, This Product Not Purchase in Before.");
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    });

    function ValidatePurchaseOrderDetail() {
        var oProduct = $('#txtProductName').data('Product');
        if (oProduct == null || parseInt(oProduct.ProductID) <= 0) {
            alert("Please Pick Product!");
            $('#txtProductName').focus();
            return false;
        }
        var oPODetails = $('#tblPODetail').datagrid('getRows');
        for (var i = 0; i < oPODetails.length; i++) {
            if (parseInt(oPODetails[i].ProductID) == parseInt(oProduct.ProductID)) {
                alert("Your Selected Product Already Exists!");
                $('#txtProductName').focus();
                return false;
            }
        }
        if($('#cboMeasurementUnit').val() === null || parseInt($('#cboMeasurementUnit').val()) <= 0) {
            alert("Please select an Unit");
            $('#cboMeasurementUnit').focus();
            return false;
        }

        var nQty = icsRemoveComma($('#txtQty').val());
        if (nQty == null || nQty == "" || parseFloat(nQty) <= 0) {
            alert("Please Enter Invoice Qty!");
            $('#txtQty').focus();
            return false;
        }
        var nUnitPrice = icsRemoveComma($('#txtUnitPrice').val());
        if (nUnitPrice == null || nUnitPrice == "" || parseFloat(nUnitPrice) <= 0) {
            alert("Please Enter Unit Price!");
            $('#txtUnitPrice').focus();
            return false;
        }
        return true;
    }

    function DetailRefreshObject() {
        var oProduct = $('#txtProductName').data('Product');
        var nUnitID = parseInt($('#cboMeasurementUnit').val());
        var sUnitName = GetUnitNameSymbol(nUnitID, true);
        var sSymbol = GetUnitNameSymbol(nUnitID, false);
        var nQty = parseFloat(icsRemoveComma($('#txtQty').val()));
        var nUnitPrice = parseFloat(icsRemoveComma($('#txtUnitPrice').val()));
        var oPurchaseOrderDetail = {
            PODetailID: 0,
            POID: 0,
            OrderRecapID:$('#txtRecapNo').data('OrderRecap')==null?0:$('#txtRecapNo').data('OrderRecap').OrderRecapID,
            BuyerName:$('#txtRecapNo').data('OrderRecap')==null?"":$('#txtRecapNo').data('OrderRecap').BuyerName,
            OrderRecapNo:$('#txtRecapNo').data('OrderRecap')==null?"":$('#txtRecapNo').data('OrderRecap').OrderRecapNo,
            StyleNo :$('#txtRecapNo').data('OrderRecap')==null?"":$('#txtRecapNo').data('OrderRecap').StyleNo,
            ProductID: oProduct.ProductID,
            MUnitID: nUnitID,
            Qty: nQty,
            Qty_Entry: nQty,
            UnitPrice: nUnitPrice,
            UnitPrice_Entry: nUnitPrice,
            Amount_Entry: nQty * nUnitPrice,
            AmountST : formatPrice(nQty * nUnitPrice),
            ProductCode : oProduct.ProductCode,
            ProductName : oProduct.ProductName,
            UnitSymbol : sSymbol
        };
        return oPurchaseOrderDetail;
    }

    function RefreshList(oPurchaseOrderDetails) {
        data = oPurchaseOrderDetails;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblPODetail').datagrid('loadData', data);
        RefreshSummery();
    }

    $("#btnRefresh").click(function () {
        endEditing();
        _nTotalQty=0;
        data = $('#tblPODetail').datagrid('getRows');
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblPODetail').datagrid('loadData', data);
        RefreshSummery();
    });

    function RefreshGrid() {
        endEditing();
        data = $('#tblPODetail').datagrid('getRows');
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblPODetail').datagrid('loadData', data);
        RefreshSummery();
    }

    function RefreshSummery() {
        var nTotalAmount = 0;
        var nSubTotalAmount = 0;
        var oPODetails = $('#tblPODetail').datagrid('getRows');
        for (var i = 0; i < oPODetails.length; i++)
        {
            nTotalAmount = nTotalAmount + (parseFloat(oPODetails[i].Qty)*parseFloat(oPODetails[i].UnitPrice));
            nSubTotalAmount = nSubTotalAmount + (parseFloat(oPODetails[i].Qty)*parseFloat(oPODetails[i].UnitPrice));
        }
        
        $('#lblTotalAmount').html(formatPrice(nTotalAmount));
        $('#lblCostingTotalAmount').html(formatPrice(nTotalAmount));
        //GetFinalSubTotalAmount();
        //$('#lblSubtotal').html(formatPrice(nSubTotalAmount));
        //$('#lblCostingSubtotal').html(formatPrice(nSubTotalAmount));
        //MakeFooterColumn('tblPODetail');
    }

    var _nTotalQty=0;
    function MakeFooterColumn(sTable)
    {
        debugger;
        var FooterField=[];
        var obj=new Object();
        var FieldNames=["AmountST"];
        if(parseInt($("#cboRefType").val())===3)//Requisition
        {
            FieldNames=["Amount_Entry"];
        }
        obj['ProductName']="Gross Total: ";
        for(var j=0; j<FieldNames.length;j++)
        {
            obj[FieldNames[j]]=GetSum(FieldNames[j],sTable);
        }
        obj['Qty']=_nTotalQty;
        if(parseInt($("#cboRefType").val())===3)//Requisition
        {
            obj['Qty_Entry']=_nTotalQty;
        }
        FooterField.push(obj);
        $('#'+sTable).datagrid('reloadFooter',FooterField);

        //document.getElementById('lblSubtotal').innerText =formatPrice(totalAmount-NOAObj.DiscountInAmount);
    }
    function GetSum(sFieldName,sTable)
    {
        debugger;
        var data=$('#'+sTable).datagrid('getRows')
        var sum = 0;

        for (i = 0; i < data.length; i++)
        {
            sum+=parseFloat(data[i].Qty*data[i].UnitPrice);
            _nTotalQty+=parseFloat(data[i].Qty);
        }
        return sum;
    }

    $("#btnClose").click(function(){
        window.location.href = sessionStorage.getItem('BackLink');
    });

    $(document).keydown(function(e) {
        if(e.which == 27)//escape=27
        {
            window.location.href = sessionStorage.getItem('BackLink');
        }
    });

    $("#btnRefreshPOTandC").click(function (e) {
        endEditingTC();
        var oPOTandCClauses = $('#tblPOTandCClauses').datagrid('getRows');
        DynamicRefreshList(oPOTandCClauses, "tblPOTandCClauses");
    });

    $("#btnRemovePOTandC").click(function (e) {
        var oPOTandCClauses = $('#tblPOTandCClauses').datagrid('getSelected');
        if(oPOTandCClauses==null)
        {
            alert("Please select a item from list!");
            return;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblPOTandCClauses').datagrid('getRowIndex',oPOTandCClauses);
        alert("Delete sucessfully");
        $('#tblPOTandCClauses').datagrid('deleteRow',SelectedRowIndex);
        var oPOTandCClauses = $('#tblPOTandCClauses').datagrid('getRows');
        DynamicRefreshList(oPOTandCClauses, "tblPOTandCClauses");
    });


    //Start Grid Edit
    var editTCIndex = undefined;
    function endEditingTC() {
        if (editTCIndex == undefined) { return true }

        if ($('#tblPOTandCClauses').datagrid('validateRow', editTCIndex)) {
            $('#tblPOTandCClauses').datagrid('endEdit', editTCIndex);
            editTCIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    function onClickRowTC(index) {
        if (editTCIndex != index) {
            if (endEditingTC()) {
                $('#tblPOTandCClauses').datagrid('selectRow', index).datagrid('beginEdit', index);
                var oPOTandCClause= $('#tblPOTandCClauses').datagrid('getSelected');
                editTCIndex = index;
            }
            else {
                $('#tblPOTandCClauses').datagrid('selectRow', editTCIndex);
            }
        }
    }

    $("#btnRefreshPOCosting").click(function (e) {
        endEditingCosting();
        var oPOCostings = $('#tblCostingHead').datagrid('getRows');
        DynamicRefreshList(oPOCostings, "tblCostingHead");
    });

    $("#btnRemovePOCosting").click(function (e) {
        endEditingCosting();
        var oPOCosting = $('#tblCostingHead').datagrid('getSelected');
        if(oPOCosting==null)
        {
            alert("Please select a item from list!");
            return;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblCostingHead').datagrid('getRowIndex',oPOCosting);
        alert("Delete sucessfully");
        $('#tblCostingHead').datagrid('deleteRow',SelectedRowIndex);
        //var txtDiscountinAmountPercentage = oPOCosting.ValueInAmount;
        //var totalAmount =  parseFloat(icsRemoveComma(document.getElementById('lblCostingTotalAmount').innerHTML));
        //var subtotalAmount =  parseFloat(icsRemoveComma(document.getElementById('lblCostingSubtotal').innerHTML));
        //if(subtotalAmount<=0){
        //    subtotalAmount=totalAmount;
        //}
        //if(oPOCosting.CostHeadType==1)//Add
        //    document.getElementById('lblCostingSubtotal').innerText =formatPrice(subtotalAmount+oPOCosting.ValueInAmount);
        //if(oPOCosting.CostHeadType==2)//Substract
        //    document.getElementById('lblCostingSubtotal').innerText =formatPrice(subtotalAmount-oPOCosting.ValueInAmount);
         var oPOCostings = $('#tblCostingHead').datagrid('getRows');
         DynamicRefreshList(oPOCostings, "tblCostingHead");
         GetFinalSubTotalAmount();
         ResetSequence();
    });

    var editCostingIndex = undefined;
    var _nAmountInPercent=0;
    var _nAmountInDiscount=0;
    function GetFinalSubTotalAmount(){
        debugger;
        var oCostings= $('#tblCostingHead').datagrid('getRows');
        var ttladdAmount=0;
        var ttlsubAmount=0;
        
        for(var i=0;i<oCostings.length;i++){
            if(oCostings[i].CostHeadType==1)//Add
            {
                ttladdAmount+=parseFloat(oCostings[i].ValueInAmount);
            }
            if(oCostings[i].CostHeadType==2)//Substract
            {
                ttlsubAmount+=parseFloat(oCostings[i].ValueInAmount);
            }
        }
        var totalAmount =  parseFloat(icsRemoveComma(document.getElementById('lblCostingTotalAmount').innerHTML));
        //var totalAmount =  parseFloat(icsRemoveComma(document.getElementById('lblTotalAmount').innerHTML));
        document.getElementById('lblCostingSubtotal').innerText =formatPrice(totalAmount-ttlsubAmount+ttladdAmount);
        document.getElementById('lblSubtotal').innerText =formatPrice(totalAmount-ttlsubAmount+ttladdAmount);
    }
    function endEditingCosting() {
        debugger;
        if (editCostingIndex == undefined) { return true }

        if ($('#tblCostingHead').datagrid('validateRow', editCostingIndex)) {
        
            $('#tblCostingHead').datagrid('endEdit', editCostingIndex);
            $('#tblCostingHead').datagrid('selectRow', editCostingIndex);
            var oCostingHead = $('#tblCostingHead').datagrid('getSelected');
      
            console.log(oCostingHead);
            console.log(_nAmountInPercent);
            console.log(_nAmountInDiscount);
            debugger;
            if(oCostingHead.CostHeadType==1|| oCostingHead.CostHeadType==2){
                if (parseFloat(oCostingHead.ValueInPercent).toFixed(2) != _nAmountInPercent)
                {
               
               
                    var txtDiscountinAmountPercentage = oCostingHead.ValueInPercent;
                    var totalAmount =  parseFloat(icsRemoveComma(document.getElementById('lblCostingTotalAmount').innerHTML));
                    if(txtDiscountinAmountPercentage>100 || totalAmount<=0){
                        oCostingHead.ValueInPercent=0;
                    }
                    else{

                        var DiscountinAmount = (totalAmount *txtDiscountinAmountPercentage)/100;
                        oCostingHead.ValueInAmount=DiscountinAmount;
                        //var subtotalAmount =  parseFloat(icsRemoveComma(document.getElementById('lblCostingSubtotal').innerHTML));
                        //if(subtotalAmount<=0){
                        //    subtotalAmount=totalAmount;
                        //}
                        //if(oCostingHead.CostHeadType==1)//Add
                        //    document.getElementById('lblCostingSubtotal').innerText =formatPrice(subtotalAmount+DiscountinAmount);
                        //if(oCostingHead.CostHeadType==2)//Substract
                        //    document.getElementById('lblCostingSubtotal').innerText =formatPrice(subtotalAmount-DiscountinAmount);
                        GetFinalSubTotalAmount();

                    }

                }
                else if (parseFloat(oCostingHead.ValueInAmount).toFixed(2) != _nAmountInDiscount)
                {
                    var txtDiscountinAmount = oCostingHead.ValueInAmount;
                    var totalAmount =  parseFloat(icsRemoveComma(document.getElementById('lblCostingTotalAmount').innerHTML));
                    if(txtDiscountinAmount>totalAmount || totalAmount<=0){
                        oCostingHead.ValueInAmount=0;
                    }
                    else{
                        var DiscountinAmountPercentage =parseFloat((txtDiscountinAmount *100)/totalAmount,2);
                        oCostingHead.ValueInPercent=DiscountinAmountPercentage;
                        //var subtotalAmount =  parseFloat(icsRemoveComma(document.getElementById('lblCostingSubtotal').innerHTML));
                        //if(subtotalAmount<=0){
                        //    subtotalAmount=totalAmount;
                        //}
                        //if(oCostingHead.CostHeadType==1)//Add
                        //    document.getElementById('lblCostingSubtotal').innerText =formatPrice(subtotalAmount+DiscountinAmount);
                        //if(oCostingHead.CostHeadType==2)//Substract
                        //    document.getElementById('lblCostingSubtotal').innerText =formatPrice(subtotalAmount-DiscountinAmount);
                        GetFinalSubTotalAmount();

                    }
             
                }
                $('#tblCostingHead').datagrid('updateRow', { index: editCostingIndex, row: oCostingHead });
            }
            
            _nAmountInPercent=0;
            _nAmountInDiscount=0;
            editCostingIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    function onClickRowCosting(index) {
     
        if (editCostingIndex != index) {
            if (endEditingCosting()) {
                debugger;
                $('#tblCostingHead').datagrid('selectRow', index).datagrid('beginEdit', index);
                var oPOCosting= $('#tblCostingHead').datagrid('getSelected');
                _nAmountInPercent = parseFloat(oPOCosting.ValueInPercent).toFixed(2);
                _nAmountInDiscount = parseFloat(oPOCosting.ValueInAmount).toFixed(2);
                editCostingIndex = index;
            }
            else {
                $('#tblCostingHead').datagrid('selectRow', editCostingIndex);
            }
        }
    }

    var editIndex = undefined;
    var _nUnitPrice=0;
    var _nAmount=0;
    function endEditing() {
        
        if (editIndex == undefined) { return true }
        if ($('#tblPODetail').datagrid('validateRow', editIndex)) {
            debugger;
            $('#tblPODetail').datagrid('endEdit', editIndex);
            $('#tblPODetail').datagrid('selectRow', editIndex);
            var oPODetail = $('#tblPODetail').datagrid('getSelected');
            if (oPODetail == null)
            {
                return;
            }
            if(parseInt($("#cboRefType").val())===3 || parseInt($("#cboRefType").val())===1)//Requisition
            {
                _nUnitPrice=oPODetail.UnitPrice_Entry; _nAmount=oPODetail.Amount_Entry;
            }
            oPODetail.Qty=parseFloat(oPODetail.Qty_Entry);
            if(parseFloat(oPODetail.UnitPrice)!=parseFloat(_nUnitPrice))
            {
                oPODetail.UnitPrice=parseFloat(oPODetail.UnitPrice_Entry);

                oPODetail.AmountST=formatPrice((parseFloat(oPODetail.UnitPrice_Entry)*parseFloat(oPODetail.Qty_Entry)));
                oPODetail.Amount_Entry = (parseFloat(oPODetail.UnitPrice_Entry)*parseFloat(oPODetail.Qty_Entry));
            }else if(parseFloat(icsRemoveComma(oPODetail.AmountST))!=parseFloat(_nAmount))
            {
                oPODetail.AmountST= formatPrice(parseFloat(oPODetail.Amount_Entry));
                if(parseFloat(oPODetail.Qty)>0)
                    oPODetail.UnitPrice=(parseFloat(oPODetail.Amount_Entry)/parseFloat(oPODetail.Qty));
            }
            $('#tblPODetail').datagrid('updateRow', { index: editIndex, row: oPODetail });
            RefreshSummery();
            editIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    function onClickRow(index) {
        debugger;
        if (editIndex != index) {
            if (endEditing()) {
                $('#tblPODetail').datagrid('selectRow', index).datagrid('beginEdit', index);
                var oPODetail= $('#tblPODetail').datagrid('getSelected');
                _nUnitPrice=oPODetail.UnitPrice; _nAmount=icsRemoveComma(oPODetail.AmountST);
              
                if(oPODetail.PODetailID<=0){
                    $('#btnAddSpecification').hide();
                }
                else{
                    $('#btnAddSpecification').show();
                }
                editIndex = index;
            }
            else {
                $('#tblPODetail').datagrid('selectRow', editIndex);
            }
        }
    }
    //end grid edit
    $("#txtPaymentTerm").keydown(function (e){
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            PickPaymentTerms();
        }else   if (code == 8) //backspace=8
        {
            $('#txtPaymentTerm').removeClass('fontColorOfPickItem');
            $('#divPurchaseOrder').data('PurchaseOrder').PaymentTermID=0;
        }
    });
    function PickPaymentTerms()
    {
        var oPaymentTerm = { TermText: $.trim($('#txtPaymentTerm').val()), BUID:sessionStorage.getItem('BUID')};
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oPaymentTerm,
            ControllerName: "PaymentTerm",
            ActionName: "GetPaymentTermsForInvoice",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].PaymentTermID> 0) {

                    var tblColums = []; var oColumn = { field: "FullTerm", title: "Name", width: 520, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winPaymentTerms',
                        winclass: 'clsPaymentTerm',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblPaymentTerms',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameDaysInString',
                        windowTittle: 'Payment Term List'

                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Fund");
                return;
            }
        });
    }

    //Delivery to
    $("#txtDeliveryToName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            //Open=1, NOA=2, & Requisition=3
            PickDeliveryTo($.trim($('#txtDeliveryToName').val()));
        }else  if (code == 8) //backspace=8
        {
            $("#txtDeliveryToName").removeClass("fontColorOfPickItem");
            $('#divPurchaseOrder').data('PurchaseOrder').DeliveryTo=0;
            $("#cboDeliveryToContactPerson").icsLoadCombo({ List: [], OptionValue: "ContactPersonnelID", DisplayText: "Name" });
        }

    })
    function PickDeliveryTo(sDeliveryToName)
    {
        var oContractor = { Params: 7 + '~' + sDeliveryToName+'~'+sessionStorage.getItem("BUID") };//internal contractor : 7
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        var $This=$(this);
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "ContractorID", title: "Code", width: 50, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorTypeInString", title: "Type", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 50, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winDeliveryTo',
                        winclass:'clsDeliveryTo',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblDeliveryTos',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Delivery To List',
                        TextBox:$This
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
    $('#btnPickDeliveryTo').click(function () {
        PickDeliveryTo("");
    });
    //BIll To
    $("#txtBillToName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            //Open=1, NOA=2, & Requisition=3
            PickBillTo($.trim($('#txtBillToName').val()));
        }else  if (code == 8) //backspace=8
        {
            $("#txtBillToName").removeClass("fontColorOfPickItem");
            $('#divPurchaseOrder').data('PurchaseOrder').BillTo=0;
            $("#cboBillToContactPerson").icsLoadCombo({ List: [], OptionValue: "ContactPersonnelID", DisplayText: "Name" });
        }

    })
    function PickBillTo(sBillToName)
    {
        var oContractor = { Params: 7 + '~' + sBillToName+'~'+sessionStorage.getItem("BUID") };//internal contractor : 7
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        var $This=$(this);
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "ContractorID", title: "Code", width: 50, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorTypeInString", title: "Type", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 50, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winBillTo',
                        winclass:'clsBillTo',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblBillTos',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Bill To List',
                        TextBox:$This
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
    $('#btnPickBillTo').click(function () {
        PickBillTo("");
    });

    //Start Ref No Pick
    $("#txtRefNo").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            //Open=1, NOA=2, & Requisition=3
            if(parseInt($("#cboRefType").val())===2)
            {
                var sRefNo= $.trim($('#txtRefNo').val());
                PickNOA(sRefNo);
            }
            else if(parseInt($("#cboRefType").val())===3)
            {
                var sRefNo= $.trim($('#txtRefNo').val());
                PickRequisition(sRefNo);
            }
        }
    });
    $("#btnRefPick").click(function () {
        //Open=1, NOA=2, & Requisition=3
        if(parseInt($("#cboRefType").val())===2)
        {
            var sRefNo= $.trim($('#txtRefNo').val());
            PickNOA(sRefNo);
        }
        else if(parseInt($("#cboRefType").val())===3)
        {
            var sRefNo= $.trim($('#txtRefNo').val());
            PickRequisition(sRefNo);
        }

    });
    $('#txtRefNo').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtRefNo").removeClass("fontColorOfPickItem");
            $('#divPurchaseOrder').data('PurchaseOrder').RefID=0;
            $("#txtRefDate,#txtRefBy").val("");
        }
    });
    function PickNOA(sRefNo)
    {
        var oNOA = {
            NOANo : sRefNo,
            BUID : sessionStorage.getItem('BUID')
        };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oNOA,
            ControllerName: "NOA",
            ActionName: "GetNOAFORPO",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].NOAID> 0) {
                    var tblColums = []; var oColumn = { field: "NOANo", title: "@ViewBag.NOAOperationType.Value", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "NOADateInString", title: "Date", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ApprovedByName", title: "Approved By", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winNOAs',
                        winclass: 'clsNOA',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblNOAs',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NOA',
                        windowTittle: '@ViewBag.NOAOperationType.Value List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Fund");
                return;
            }
        });
    }
    function PickRequisition(sRefNo)
    {
        var oPurchaseRequisition = {
            PRNo : sRefNo,
            BUID : sessionStorage.getItem('BUID')
        };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oPurchaseRequisition,
            ControllerName: "PurchaseRequisition",
            ActionName: "GetPurchaseRequsitionFORPO",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].PRID> 0) {
                    var tblColums = []; var oColumn = { field: "PRNo", title: "Req No", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "PRDateST", title: "Requisition Date", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "PrepareByName", title: "Requisition By", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winPurchaseRequsitions',
                        winclass: 'clsPurchaseRequsition',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblPurchaseRequsitions',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'PRNo',
                        windowTittle: 'Purchase Requsition List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Fund");
                return;
            }
        });
    }
    //end Ref No Pick

    //Start Supplier Picker
    $("#txtSupplierName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            //Open=1, NOA=2, & Requisition=3
            if(parseInt($("#cboRefType").val())===2)
            {
                PickSupplierForNOA($.trim($('#txtSupplierName').val()));
            }
            else
            {
                PickSupplier($.trim($('#txtSupplierName').val()));
            }
        }
    });
    $("#btnPickSupplier").click(function () {
        //Open=1, NOA=2, & Requisition=3
        if(parseInt($("#cboRefType").val())===2)
        {
            PickSupplierForNOA($.trim($('#txtSupplierName').val()));
        }
        else
        {
            PickSupplier($.trim($('#txtSupplierName').val()));
        }
    });
    $('#txtSupplierName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtSupplierName").removeClass("fontColorOfPickItem");
            $('#divPurchaseOrder').data('PurchaseOrder').ContractorID=0;
            $("#cboContactPerson").icsLoadCombo({ List: [], OptionValue: "ContactPersonnelID", DisplayText: "Name" });
        }
    });
    function PickSupplier(sSupplierName)
    {
        var oContractor = { Params: 1 + '~' + sSupplierName+'~'+sessionStorage.getItem("BUID") };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        var $This=$(this);
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "ContractorID", title: "Code", width: 50, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorTypeInString", title: "Type", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 50, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winContractor',
                        winclass:'clsContractor',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblContractors',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Contractor List',
                        TextBox:$This
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
    function PickSupplierForNOA(sSupplierName)
    {
        var nRefID = $('#divPurchaseOrder').data('PurchaseOrder').RefID;
        if(parseInt(nRefID)<=0)
        {
            alert("Please select an @ViewBag.NOAOperationType.Value!");
            return;
        }
        var oPurchaseOrder = { RefID : nRefID, RefTypeInt: 2 };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oPurchaseOrder,
            ControllerName: "PurchaseOrder",
            ActionName: "GetsVendors",
            IsWinClose: false
        };
        var $This=$(this);
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "ContractorID", title: "Code", width: 50, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorTypeInString", title: "Type", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 50, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winContractor',
                        winclass:'clsContractor',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblContractors',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Contractor List',
                        TextBox:$This
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
    //End Supplier Picker


    //Product Pick
    $("#txtProductName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtProductName').val()==null || $('#txtProductName').val()=="")
            {
                alert("Please Type Product and Press Enter.");
                $('#txtProductName').focus();
                return;
            }

            //Open=1, NOA=2, & Requisition=3
            if(parseInt($("#cboRefType").val())===1)
            {
                PickProduct();
            }
            else
            {
                var nContractorID=parseInt($('#divPurchaseOrder').data('PurchaseOrder').ContractorID);
                if(parseInt($("#cboRefType").val())===2)
                {
                    if(nContractorID<=0)
                    {
                        alert("Please select a supplier!");
                        return;
                    }
                }
                PickProductForPRAndNOA();
            }
        }
    });
    $("#btnPickProduct").click(function () {
        //Open=1, NOA=2, & Requisition=3
        if(parseInt($("#cboRefType").val())===1)
        {
            PickProduct();
        }
        else
        {
            var nContractorID=parseInt($('#divPurchaseOrder').data('PurchaseOrder').ContractorID);
            if(parseInt($("#cboRefType").val())===2)
            {
                if(nContractorID<=0)
                {
                    alert("Please select a supplier!");
                    return;
                }
            }
            PickProductForPRAndNOA(nContractorID);
        }
    });
    $('#txtProductName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtProductName").removeClass("fontColorOfPickItem");
            $('#txtProductName').data('Product', null);
        }
    });
    function PickProduct()
    {
        var nBUID = parseInt(sessionStorage.getItem("BUID"));
        var oProduct = { BUID: nBUID, ProductName: $.trim($('#txtProductName').val())};
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oProduct,
            ControllerName: "PurchaseOrder",
            ActionName: "GetProducts",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "ProductCode", title: "Product Code", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Product Name", width: 300, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductCategoryName", title: "Category", width: 100, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPicker',
                        winclass: 'clsProductPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }

    function PickProductForPRAndNOA(nSupplierID)
    {
        debugger;

        var nRefType = parseInt($("#cboRefType").val());
        var nRefID = $('#divPurchaseOrder').data('PurchaseOrder').RefID;
        if(parseInt(nRefID)<=0)
        {
            alert("Please select an @ViewBag.NOAOperationType.Value/Requisition!");
            return;
        }

        var oPurchaseOrder = { RefTypeInt : nRefType, RefID: parseInt(nRefID), ContractorID:nSupplierID };
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oPurchaseOrder,
            ControllerName: "PurchaseOrder",
            ActionName: "GetsProductsFromPRNOA",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = []; var oColumn =null;
                    debugger;
                    var oClientOperationSetting = $('#divPurchaseOrder').data('ClientOperationSetting');
                    if(parseInt(oClientOperationSetting.Value)!=0)//if not apply IsProcurementwithStyleNo
                    {
                        oColumn = { field: "StyleNo", title: "Style No", width:50, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "OrderRecapNo", title: "Recap No", width:60, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "BuyerName", title: "Buyer", width:70, align: "left" }; tblColums.push(oColumn);
                    }
                    oColumn = { field: "ProductCode", title: "Product Code", width:80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Product Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "UnitPriceSt", title: "Unit Price", width: 100, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "QtySt", title: "Qty", width: 50, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "MUName", title: "Unit", width: 50, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPRNOAPicker',
                        winclass: 'clsProductPRNOAPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProductPRNOAPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        //searchingbyfieldName: 'NameCode',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }
            }else{
                alert("Data Not Found.");
            }
        });
    }
    //End Product

    $('#btnOrderRecapPick').click(function()
    {
        GetOrderRecaps("");
    });
    $("#txtRecapNo").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);

        if (code == 13) // Enter Press
        {
            if($.trim($('#txtRecapNo').val())==null || $.trim($('#txtRecapNo').val())=="")
            {
                alert("Type Recap No and Press Enter");
                $('#txtRecapNo').focus();
                return;
            }
            GetOrderRecaps($.trim($('#txtRecapNo').val()));
        }else if(code==8)//Backspace
        {
            $("#txtRecapNo").removeClass('fontColorOfPickItem');
            $('#txtRecapNo').data('OrderRecap',null);
        }
    });
    function GetOrderRecaps(txtRecapNo)
    {
        var oOrderRecap =  {BUID: sessionStorage.getItem("BUID"), OrderRecapNo:txtRecapNo};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oOrderRecap,
            ControllerName: "OrderRecap",
            ActionName: "GetOrderRecapsByBU",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].OrderRecapID > 0) {
                    var tblColums = []; var oColumn = { field: "StyleNo", title: "Style No", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "OrderRecapNo", title: "Recap No", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BuyerName", title: "Buyer", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "DeptName", title: "Dept", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "SessionName", title: "Session", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Product Name", width:80, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winOrderRecaps',
                        winclass: 'clsOrderRecap',
                        winwidth: 800,
                        winheight: 500,
                        tableid: 'tblOrderRecaps',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'StyleNo',
                        searchingbyfieldCaption:'Search By Style No',
                        windowTittle: 'Order Recap List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
    
    //Start terms & Conditions
    $("#btnPickPOTandC").click(function () {
        var oPOTandCSetup = {BUID:sessionStorage.getItem('BUID') };
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oPOTandCSetup,
            ControllerName: "POTandCSetup",
            ActionName: "Gets",
            IsWinClose: false
        };
        //$("#progbar").progressbar({ value: 0 });
        //$("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            //clearInterval(intervalID);
            //$("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].POTandCSetupID > 0) {
                    var tblColums = []; var oColumn = { field: "ClauseAndType", title: "PO Term and Condition", width:500, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winPOTandCSetupPicker',
                        winclass: 'clsPOTandCSetupPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblPOTandCSetupPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'POTandCSetup List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiple return
                }
                else {
                    alert("Data not Found");
                }

            }
        });

    });

    $("#btnGetTermsAndCondition").click(function(){
        if($('#divPurchaseOrder').data('PurchaseOrder').ContractorID <= 0){
            alert("Please pick Supplier!");
            return;
        }
        $.ajax({
            type: "GET",
            dataType: "json",
            url : _sBaseAddress+"/PurchaseOrder/GetTermsAndCondition",
            traditional: true,
            data:  {nPOID: $('#divPurchaseOrder').data('PurchaseOrder').POID, nSupplierID: $('#divPurchaseOrder').data('PurchaseOrder').ContractorID},
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oTermsAndConditions = jQuery.parseJSON(data);
                if(oTermsAndConditions.length > 0){
                    if (oTermsAndConditions[0].ErrorMessage=="" || oTermsAndConditions[0].ErrorMessage==null) {
                        for(var i=0;i<oTermsAndConditions.length;i++){
                            oTermsAndConditions[i].POTandCClauseID=0;
                            oTermsAndConditions[i].POID=$('#divPurchaseOrder').data('PurchaseOrder').POID;
                            $('#tblPOTandCClauses').datagrid('appendRow', oTermsAndConditions[i]);
                        }
                    }
                    else {
                        alert(oTermsAndConditions[0].ErrorMessage);
                    }
                }else{
                    alert("No Data found!!");
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });
    //end terms & Conditions

    //Start PO Costing
    $("#btnPickPOCosting").click(function () {

        if($('#tblPODetail').datagrid('getRows')<=0){
            alert("No Purchase Detail Found");
            $('#tabPurchaseOrderTabs').tabs('select',0);
            return false;
        }
        var sCostHeadIDs="";
        var oPOCostings=$('#tblCostingHead').datagrid('getRows');
        for(var i=0; i<oPOCostings.length;i++){
            sCostHeadIDs+=oPOCostings[i].CostHeadID+',';
        }
        sCostHeadIDs=sCostHeadIDs.substring(0,sCostHeadIDs.length-1);
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: {Params:sCostHeadIDs},
            ControllerName: "CostHead",
            ActionName: "GetsCostHead",
            IsWinClose: false
        };
        
        $.icsDataGets(obj, function (response) {
           
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].CostHeadID > 0) { 
                    var tblColums = []; var oColumn = { field: "Name", title: "Name", width:"15%", align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "CostHeadTypeSt", title: "Type", width:"15%", align: "left" }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winPOCosting',
                        winclass: 'clsPOCosting',
                        winwidth: 500,
                        winheight: 400,
                        tableid: 'tblPOCosting',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Cost Head List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiple return
                }
                else {
                    alert("Data not Found");
                }

            }
        });

    });
    //end terms & Conditions

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }

    function SetPickerValueAssign(oPickerobj)
    {
        debugger;
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if(oPickerobj.winid=='winPurchaseRequsitions')
        {
            if(oreturnObj!=null && oreturnObj.PRID>0)
            {
                $('#txtRefNo').val(oreturnObj.PRNo);
                $('#txtRefNo').addClass('fontColorOfPickItem');
                $('#txtRefDate').val(oreturnObj.PRDateST);
                $('#txtRefBy').val(oreturnObj.PrepareByName);
                $('#divPurchaseOrder').data('PurchaseOrder').RefID=parseInt(oreturnObj.PRID);
            }
        }
        else if(oPickerobj.winid=='winNOAs')
        {
            if(oreturnObj!=null && oreturnObj.NOAID>0)
            {
                $('#txtRefNo').val(oreturnObj.NOANo);
                $('#txtRefNo').addClass('fontColorOfPickItem');
                $('#txtRefDate').val(oreturnObj.NOADateInString);
                $('#txtRefBy').val(oreturnObj.ApprovedByName);
                $('#divPurchaseOrder').data('PurchaseOrder').RefID=parseInt(oreturnObj.NOAID);
                NOAObj = oreturnObj;
            }
        }
        else if (oPickerobj.winid == 'winContractor')//Contractor region
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0)
            {
                $('#txtSupplierName').val(oreturnObj.Name);
                $('#txtSupplierName').addClass('fontColorOfPickItem');
                $('#divPurchaseOrder').data('PurchaseOrder').ContractorID = parseInt(oreturnObj.ContractorID);
                $('#txtSupplierName').focus();
                //Load contract Person 1:Supplier;2:Delivery To;3:Bill To
                LoadContactPerson(parseInt(oreturnObj.ContractorID),1);
            }
        }
        else if (oPickerobj.winid == 'winProductPicker')
        {
            //if (oreturnObj != null && parseInt(oreturnObj.ProductID) > 0)
            //{
            //    $('#txtProductName').val(oreturnObj.ProductName);
            //    $('#txtProductName').addClass('fontColorOfPickItem');
            //    $('#txtProductName').data('Product', oreturnObj);
            //    $('#txtProductName').focus();
            //    LoadMeasurementUnit(parseInt(oreturnObj.ProductID), oreturnObj);
            //    $('#txtQty').focus();
            //}
            if(oreturnobjs.length > 0){
                var oPODs= $('#tblPODetail').datagrid('getRows');
                for(var i=0;i<oreturnobjs.length;i++){
                    var isExist=false;
                    for(var k=0;k<oPODs.length;k++){
                        if(oPODs[k].ProductID == oreturnobjs[i].ProductID){
                            isExist=true;
                            break;
                        }
                    }
                    if(isExist == false){
                        var oPurchaseOrderDetail = {
                            PODetailID: 0,
                            POID: 0,
                            OrderRecapID:$('#txtRecapNo').data('OrderRecap')==null?0:$('#txtRecapNo').data('OrderRecap').OrderRecapID,
                            BuyerName:$('#txtRecapNo').data('OrderRecap')==null?"":$('#txtRecapNo').data('OrderRecap').BuyerName,
                            OrderRecapNo:$('#txtRecapNo').data('OrderRecap')==null?"":$('#txtRecapNo').data('OrderRecap').OrderRecapNo,
                            StyleNo :$('#txtRecapNo').data('OrderRecap')==null?"":$('#txtRecapNo').data('OrderRecap').StyleNo,
                            ProductID: oreturnobjs[i].ProductID,
                            MUnitID: oreturnobjs[i].MeasurementUnitID,
                            Qty: 0,
                            Qty_Entry: 0,
                            UnitPrice: 0,
                            UnitPrice_Entry: 0,
                            Amount_Entry: 0,
                            AmountST : formatPrice(0),
                            ProductCode : oreturnobjs[i].ProductCode,
                            ProductName : oreturnobjs[i].ProductName,
                            UnitSymbol : oreturnobjs[i].MUnit
                        };
                        $('#tblPODetail').datagrid('appendRow', oPurchaseOrderDetail);
                    }
                    
                }

                RefreshGrid();
            }
        }
        else if (oPickerobj.winid == 'winProductPRNOAPicker')
        {
            debugger;
            if (oreturnobjs!=null && oreturnobjs.length > 0)
            {
                var totalAmount =0;
                for(var i=0;i< oreturnobjs.length;i++)
                {
                    totalAmount =totalAmount+  parseFloat(icsRemoveComma(oreturnobjs[i].AmountST));
                }   
                document.getElementById('lblTotalAmount').innerText =formatPrice(totalAmount);
                document.getElementById('lblCostingTotalAmount').innerText =formatPrice(totalAmount);
                //console.log(NOAObj)
                if(NOAObj!=null)
                {
                    if(oreturnobjs.length == NOAObj.NOADetailCount)
                    {
                        $('#txtDiscountinAmount').val(formatPrice(NOAObj.DiscountInAmount));
                        $('#txtDiscountinAmountPercentage').val(NOAObj.DiscountInPercent);
                        document.getElementById('lblSubtotal').innerText =formatPrice(totalAmount-NOAObj.DiscountInAmount);
                    }
                }
                SaveDetail_PRNOA(oreturnobjs);
            }
        }
        else if (oPickerobj.winid == 'winPOTandCSetupPicker')
        {
            if (oreturnobjs!=null && oreturnobjs.length > 0) {
                SavePOTnC(oreturnobjs);
            }
        }
        else if (oPickerobj.winid == 'winPOCosting')
        {
            if (oreturnobjs!=null && oreturnobjs.length > 0) {
              
                for (var i = 0; i < oreturnobjs.length; i++)
                {
                    oreturnobjs[i].Sequence = ($('#tblCostingHead').datagrid('getRows').length + 1);
                    $('#tblCostingHead').datagrid('appendRow', oreturnobjs[i]);
                }
            }
        }
        else if (oPickerobj.winid=='winOrderRecaps')
        {
            if(parseInt(oreturnObj.OrderRecapID)>0)
            {
                $('#txtRecapNo').val(oreturnObj.StyleNo+'['+ oreturnObj.OrderRecapNo+']');
                $('#txtRecapNo').data('OrderRecap',oreturnObj);
                $("#txtRecapNo").addClass('fontColorOfPickItem');
                $("#txtRecapNo").focus();
            }
        }else if (oPickerobj.winid =='winPaymentTerms')
        {
            if (oreturnObj != null && parseInt(oreturnObj.PaymentTermID)> 0) {
                $('#txtPaymentTerm').val(oreturnObj.FullTerm);
                $('#txtPaymentTerm').addClass('fontColorOfPickItem');
                $('#divPurchaseOrder').data('PurchaseOrder').PaymentTermID=parseInt(oreturnObj.PaymentTermID);
                $('#txtBILLNo').focus();
            }
        }
        else if (oPickerobj.winid == 'winDeliveryTo')//Contractor region
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0)
            {
                $('#txtDeliveryToName').val(oreturnObj.Name);
                $('#txtDeliveryToName').addClass('fontColorOfPickItem');
                $('#divPurchaseOrder').data('PurchaseOrder').DeliveryTo = parseInt(oreturnObj.ContractorID);
                $('#txtDeliveryToName').focus();
                //Load contract Person 1:Supplier;2:Delivery To;3:Bill To
                LoadContactPerson(parseInt(oreturnObj.ContractorID),2);
            }
        }
        else if (oPickerobj.winid == 'winBillTo')//Contractor region
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0)
            {
                $('#txtBillToName').val(oreturnObj.Name);
                $('#txtBillToName').addClass('fontColorOfPickItem');
                $('#divPurchaseOrder').data('PurchaseOrder').BillTo = parseInt(oreturnObj.ContractorID);
                $('#txtBillToName').focus();
                //Load contract Person 1:Supplier;2:Delivery To;3:Bill To
                LoadContactPerson(parseInt(oreturnObj.ContractorID),3);
            }
        }
    }
    
    function SavePOTnC(oPOTandCSetups)
    {
        if (oPOTandCSetups != null && oPOTandCSetups.length > 0)
        {
            var oPOTandCClauses = $('#tblPOTandCClauses').datagrid('getRows');
            if (oPOTandCSetups.length > 0)
            {
                for (var i = 0; i < oPOTandCSetups.length; i++)
                {
                    if(!ExistTAndC(oPOTandCSetups[i].ClauseType, oPOTandCSetups[i].Clause,oPOTandCClauses))
                    {
                        var oPOTandCClausesTemp = {
                            POTandCClauseID: 0,
                            POID: 0,
                            ClauseType:oPOTandCSetups[i].ClauseType,
                            ClauseTypeSt:oPOTandCSetups[i].ClauseTypeSt,
                            TermsAndCondition: oPOTandCSetups[i].Clause
                        };
                        $('#tblPOTandCClauses').datagrid('appendRow', oPOTandCClausesTemp);
                    }

                }

            }

        }
    }
    

    function ExistTAndC(nClauseType,sClause, oPOTandCClauses )
    {
        if(oPOTandCClauses==null || oPOTandCClauses.length<0)
        {
            return false;
        }
        for(var i = 0;i<oPOTandCClauses.length;i++)
        {
            if(parseInt(oPOTandCClauses[i].ClauseType)== parseInt(nClauseType) && oPOTandCClauses[i].TermsAndCondition == sClause)
            {
                return true;
            }
        }
        return false;
    }

    function SaveDetail_PRNOA(oPurchaseOrderDetails)
    {
        if(parseInt($('#cboRefType').val()) ==2)
        {
            var oPriviousDetails = $('#tblPODetail').datagrid('getRows');
            for (i=0; i<oPurchaseOrderDetails.length;i++)
            {
                if(!ICS_IsExist(oPriviousDetails,'RefDetailID',oPurchaseOrderDetails[i].RefDetailID))
                {
                    $('#tblPODetail').datagrid('appendRow', oPurchaseOrderDetails[i]);
                }

            }
        }
        else{
            var oPriviousDetails = $('#tblPODetail').datagrid('getRows');
            for (i=0; i<oPurchaseOrderDetails.length;i++)
            {
                if(!ICS_IsExist(oPriviousDetails,'ProductID',oPurchaseOrderDetails[i].ProductID))
                {
                    $('#tblPODetail').datagrid('appendRow', oPurchaseOrderDetails[i]);
                }
            }
        }


    }

    function LoadMeasurementUnit(nProductID, oSelectedProduct) {
        var listItems = "";
        $("#cboMeasurementUnit").data('MeasurementUnits', []);
        $("#cboMeasurementUnit").empty();
        if (parseInt(nProductID) > 0) {
            var oProduct = {
                ProductID: nProductID
            };
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url: sessionStorage.getItem("BaseAddress") + "/MeasurementUnit/GetsMUnits",
                data: JSON.stringify(oProduct),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oMeasurementUnits = jQuery.parseJSON(data);
                    $("#cboMeasurementUnit").data('MeasurementUnits', oMeasurementUnits);
                    if (oMeasurementUnits.length > 0) {
                        for (var i = 0; i < oMeasurementUnits.length; i++) {
                            listItems += "<option value='" + oMeasurementUnits[i].MeasurementUnitID + "'>" + oMeasurementUnits[i].UnitName+'['+oMeasurementUnits[i].Symbol +"]</option>";
                        }
                        $("#cboMeasurementUnit").html(listItems);
                        $("#cboMeasurementUnit").val(oSelectedProduct.MeasurementUnitID);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
    }

    function GetUnitNameSymbol(nUnitID, bIsName) {
        var sUnitNameSymbol = "";
        var oMeasurementUnits = $("#cboMeasurementUnit").data('MeasurementUnits');
        for (var i = 0; i < oMeasurementUnits.length; i++) {
            if (parseInt(oMeasurementUnits[i].MeasurementUnitID) == parseInt(nUnitID)) {
                if (bIsName == true) {
                    return oMeasurementUnits[i].UnitName;
                }
                else {
                    return oMeasurementUnits[i].Symbol;
                }
            }
        }
        return sUnitNameSymbol;
    }

    function LoadContactPerson(nContractorID, nConType) {
        var listItems = "";
        debugger;
        //$("#cboContactPerson").empty();
        if(parseInt(nContractorID)<=0)
        {
            nContractorID = parseInt($('#divPurchaseOrder').data('PurchaseOrder').ContractorID);
        }

        if (parseInt(nContractorID) > 0)
        {
            var oContractor = {ContractorID: nContractorID};
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url: sessionStorage.getItem("BaseAddress")+"/Contractor/GetContactPersonnels",
                data: JSON.stringify(oContractor),
                contentType: "application/json; charset=utf-8",
                success: function (data)
                {
                    debugger;
                    var oContractorPersonals = jQuery.parseJSON(data);
                    if (oContractorPersonals.length > 0)
                    {
                        var sContractPerson = "cboContactPerson";
                        var nContactPersonnelID = parseInt($('#divPurchaseOrder').data('PurchaseOrder').ContactPersonnelID);
                        if(parseInt(nConType)==2)
                        {
                            sContractPerson="cboDeliveryToContactPerson";
                            nContactPersonnelID = parseInt($('#divPurchaseOrder').data('PurchaseOrder').DeliveryToContactPerson);
                        }else if(parseInt(nConType)==3)
                        {
                            sContractPerson="cboBIllToContactPerson";
                            nContactPersonnelID = parseInt($('#divPurchaseOrder').data('PurchaseOrder').BIllToContactPerson);
                        }
                        $("#"+sContractPerson).icsLoadCombo({List: oContractorPersonals,OptionValue: "ContactPersonnelID",DisplayText: "Name"});
                        $("#"+sContractPerson).val(nContactPersonnelID);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }

            });
        }
    }

    function ReLoadLoadContactPerson (nConType)
    {
        debugger;
        var nContractorID=parseInt($('#divPurchaseOrder').data('PurchaseOrder').ContractorID);
        if(parseInt(nConType)==2)
        {
            nContractorID=parseInt($('#divPurchaseOrder').data('PurchaseOrder').DeliveryTo);
        }else if(parseInt(nConType)==3)
        {
            nContractorID=parseInt($('#divPurchaseOrder').data('PurchaseOrder').BillTo);
        }
        if(nContractorID<=0)
        {
            if(parseInt(nConType)==1)
            {
                alert("Please Pick a Supplier!");
            }else if(parseInt(nConType)==2)
            {
                alert("Please Pick a Delivery To!");
            }if(parseInt(nConType)==3)
            {
                alert("Please Pick a Bill To!");
            }
            return;
        }
        LoadContactPerson(nContractorID,nConType);
    }

    function NewContactPerson(nConType)
    {
        var nContractorID=parseInt($('#divPurchaseOrder').data('PurchaseOrder').ContractorID);
        if(parseInt(nConType)==2)
        {
            nContractorID=parseInt($('#divPurchaseOrder').data('PurchaseOrder').DeliveryTo);
        }else if(parseInt(nConType)==3)
        {
            nContractorID=parseInt($('#divPurchaseOrder').data('PurchaseOrder').BillTo);
        }
        if(parseInt(nContractorID)<=0)
        {
            if(parseInt(nConType)==1)
            {
                alert("Please Pick a Supplier!");
            }else if(parseInt(nConType)==2)
            {
                alert("Please Pick a Delivery To!");
            }if(parseInt(nConType)==3)
            {
                alert("Please Pick a Bill To!");
            }
            return;
        }
        sessionStorage.setItem("ContractorBackTo", "");
        sessionStorage.setItem("SelectedRowIndex", 0);
        sessionStorage.setItem("ContractorHeader", "Add Contact Personnel");
        window.open(_sBaseAddress+"/Contractor/ViewContactPersonnel?id="+nContractorID+"&buid="+parseInt(sessionStorage.getItem('BUID')),"_blank");

        $('#btnReload').click(function(e){
            LoadContractPersonals(_oPurchaseQuotation.SupplierID);
        });


    }

    $("#btnAddSpecification").click(function () {
        var oPODetail= $('#tblPODetail').datagrid('getSelected');

        if(oPODetail==null || oPODetail.ProductID<=0)
        {
            alert("Please select a Item !");
            return false;
        }
        if(oPODetail.PurchaseOrderDetailID <=0){
            alert("Please Save Purchase Order Detail !");
            return false;

        }
        else
        {
            var obj = {
                PODetailID: oPODetail.PODetailID ,
                ProductID : oPODetail.ProductID

            }

            $.ajax
              ({
                  type: "POST",
                  dataType: "json",
                  url : _sBaseAddress+  "/PurchaseOrder/ProductSpecHeadFORPOByProduct",
                  data:  JSON.stringify(obj),
                  contentType: "application/json; charset=utf-8",
                  success: function (data) {
                      $("#winPOSpecification").icsWindow('open',"Procurement Specification For Product Name :" +getSelection.ProductName);
                      $('#tblPOSpec').datagrid('loadData',data);
                      if (data.length>0)
                      {
                          for(var i=0; i< data.length ;i++){
                              if(data[i].POSpecID > 0)
                                  $('#tblPOSpec').datagrid("checkRow", i);
                          }

                      }
                      //else
                      //{
                      //    alert("No specification found");
                      //}

                  },
                  error: function (xhr, status, error)
                  {
                      alert(error);
                  }
              });


        }

    });

    function ClosePOSpec()
    {
        $('#winPOSpecification').icsWindow('close');
    }
    function SavePOSpec()
    {
        endEditingPOSpec();
        var oPOSpecs=$('#tblPOSpec').datagrid('getChecked');
        var oPODetail= $('#tblPODetail').datagrid('getSelected');
        if(oPODetail==null || oPODetail.ProductID<=0)
        {
            alert("Please select a Detail Item !");
            return false;
        }

        for(var i=0; i<oPOSpecs.length; i++){
            if(oPOSpecs[i].PODescription == ""){
                alert("Description Can not empty");
                return;
            }
        }
        var oTempPODetail={
            PODetailID:oPODetail.PODetailID,
            POSpecs:oPOSpecs
        }
        debugger;
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/PurchaseOrder/IUDPOSpec",
            traditional: true,
            data:  JSON.stringify(oTempPODetail),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var result= jQuery.parseJSON(data);
                if(result.ErrorMessage ==""){
                    alert("Data Save Successfully ");
                    ClosePOSpec();
                }
                else{
                    alert(result.ErrorMessage);
                }

            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });

    }


    var editIndexPQSpec = undefined;
    function endEditingPOSpec(){
        if (editIndexPQSpec == undefined){return true}
        if ($('#tblPOSpec').datagrid('validateRow', editIndexPQSpec)){

            $('#tblPOSpec').datagrid('endEdit', editIndexPQSpec);
            editIndexPQSpec = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRowPOSpec(index){

        if (editIndexPQSpec != index)
        {
            if (endEditingPOSpec())
            {
                $('#tblPOSpec').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndexPQSpec = index;
            }
            else
            {
                $('#tblPOSpec').datagrid('selectRow', editIndexPQSpec);
            }
        }
    }

    function SetPickerValue_Spec(oPickerobj)
    {
        var oreturnobj = "", oreturnobjs = [] ;
        if(oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
        }else
        {
            oreturnobj = $('#'+oPickerobj.tableid).datagrid('getSelected');
        }

        $("#"+oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

        /*--Set Specification? ----*/
        if (oPickerobj.winclass == 'clsSpecHeadPicker')
        {
            if (oreturnobjs != null && oreturnobjs.length> 0)
            {

                var getSelection = $('#tblPODetail').datagrid('getSelected');
                var indexSeq=$('#tblPOSpec').datagrid("getRows").length  ;
                var ProductSpecHeads =[];
                for (i = 0; i < oreturnobjs.length; i++)
                {
                    ++indexSeq;
                    ProductSpecHeads.push({ProductSpecHeadID : 0 , ProductID:getSelection.ProductID,SpecHeadID:oreturnobjs[i].SpecHeadID ,Sequence:indexSeq});
                }
                var oSpecHead={
                    ProductSpecHeads:ProductSpecHeads
                }

                $.ajax
                  ({
                      type: "POST",
                      dataType: "json",
                      url : _sBaseAddress+  "/ProductSpecHead/Save",
                      data:  JSON.stringify(oSpecHead),
                      contentType: "application/json; charset=utf-8",
                      success: function (data) {
                          if (data.length>0)
                          {
                              var obj = {
                                  PODetailID: getSelection.PODetailID ,
                                  ProductID : getSelection.ProductID

                              }

                              $.ajax
                                ({
                                    type: "POST",
                                    dataType: "json",
                                    url : _sBaseAddress+  "/PurchaseOrder/ProductSpecHeadFORPOByProduct",
                                    data:  JSON.stringify(obj),
                                    contentType: "application/json; charset=utf-8",
                                    success: function (data) {

                                        $('#tblPOSpec').datagrid('loadData',data);
                                        if (data.length>0)
                                        {
                                            for(var i=0; i< data.length ;i++){
                                                if(data[i].POSpecID > 0)
                                                    $('#tblPOSpec').datagrid("checkRow", i);
                                            }

                                        }


                                    },
                                    error: function (xhr, status, error)
                                    {
                                        alert(error);
                                    }
                                });
                          }


                      },
                      error: function (xhr, status, error)
                      {
                          alert(error);
                      }
                  });

            }
        }
    }
    function IntializePickerbutton_Spec(oPickerobj)
    {

        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            SetPickerValue_Spec(oPickerobj);
        });
        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValue_Spec(oPickerobj);
            }
        });
    }
    $("#btnSpecPick").click(function () {
        debugger;
        var getSelection = $('#tblPODetail').datagrid('getSelected');
        var getSpecHeads ="";
        var gridData =$('#tblPOSpec').datagrid("getRows");
        if(gridData.length>0){
            for(var i=0; i<gridData.length; i++){
                getSpecHeads += gridData[i].SpecHeadID +" , ";
            }
        }

        var oSpecHead ={
            Params:getSpecHeads
        }

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oSpecHead,
            ControllerName: "ProductSpecHead",
            ActionName: "SpecHeadSearchByProduct",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                debugger;
                if (response.objs[0].SpecHeadID> 0) {
                    var tblColums = [], searcingField = "", windowTittle = "";
                    var oColumn = { field: 'SpecName', name: 'Head Name', width: '50%', enableSorting: false }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winSpecHeadPicker',
                        winclass: 'clsSpecHeadPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblSpecHeadPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        //searchingbyfieldName: 'SpecName',
                        windowTittle: 'Specification Head List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton_Spec(oPickerParam);//multiple return


                }
            }
        });
    });

    $('#btnUpPOCosting').click(function(){
        var oCostingHead = $('#tblCostingHead').datagrid('getSelected');
        if (oCostingHead == null) {
            alert("Please select Item");
            return;
        }
        var oTempCostingHeads = $('#tblCostingHead').datagrid('getRows');
        var SelectedRowIndex = $('#tblCostingHead').datagrid('getRowIndex', oCostingHead);
        if (SelectedRowIndex == 0) return;
        var oCostingHeads = [];
        oCostingHeads = oTempCostingHeads;
        oTempCostingHeads = [];
        for (var i = 0; i < oCostingHeads.length; i++) {
            if (i == (SelectedRowIndex - 1)) {
                oTempCostingHeads[i] = oCostingHeads[i + 1];
            }
            else if (i == SelectedRowIndex) {
                oTempCostingHeads[i] = oCostingHeads[i - 1];
            }
            else {
                oTempCostingHeads[i] = oCostingHeads[i];
            }
            oTempCostingHeads[i].Sequence = i + 1;
        }
        data = oTempCostingHeads;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblCostingHead').datagrid('loadData', data);
        var newSelectedRowIndex = SelectedRowIndex - 1;
        $('#tblCostingHead').datagrid('selectRow', newSelectedRowIndex);
    });

    $('#btnDownPOCosting').click(function(){
        var oCostingHead = $('#tblCostingHead').datagrid('getSelected');
        if (oCostingHead == null) {
            alert("Please select a item from list!");
            return;
        }
        var oTempCostingHeads = $('#tblCostingHead').datagrid('getRows');
        var SelectedRowIndex = $('#tblCostingHead').datagrid('getRowIndex', oCostingHead);
        if (SelectedRowIndex == (oTempCostingHeads.length - 1)) return;
        var oCostingHeads = [];
        oCostingHeads = oTempCostingHeads;
        oTempCostingHeads = [];
        for (var i = 0; i < oCostingHeads.length; i++) {
            if (i == (SelectedRowIndex + 1)) {
                oTempCostingHeads[i] = oCostingHeads[i - 1];
            }
            else if (i == SelectedRowIndex) {
                oTempCostingHeads[i] = oCostingHeads[i + 1];
            }
            else {
                oTempCostingHeads[i] = oCostingHeads[i];
            }
            oTempCostingHeads[i].Sequence = i + 1;
        }
        data = oTempCostingHeads;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblCostingHead').datagrid('loadData', data);

        var newSelectedRowIndex = SelectedRowIndex + 1;
        $('#tblCostingHead').datagrid('selectRow', newSelectedRowIndex);
    });

    function ResetSequence(){
        var oCostings = $('#tblCostingHead').datagrid('getRows');
        for(var i=0;i<oCostings.length;i++){
            oCostings[i].Sequence = i+1;
        }
        DynamicRefreshList(oCostings, 'tblCostingHead');
    }

</script>