@model IEnumerable<ESimSol.BusinessObjects.EmployeeSalary>
@{
    ViewBag.Title = "Employee Salary(MAMIYA)";
}
<div class="menuMainCollectionTable" style="margin-left:0px; height:500px">
    <table id="tblEmployeeSalary" title="Employee Salary  List" class="easyui-datagrid" style="width:100%;height:500px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" selectoncheck="false" checkonselect="false" toolbar="#toolbar">
        <thead>
            <tr>
                <th data-options="field:'Selected',checkbox:true"></th>
                <th field="EmployeeCode" width="10%" align="left">Code</th>
                <th field="EmployeeName" width="20%" align="left">Name</th>
                <th field="GrossAmount" width="12%" align="right" formatter="formatPrice">Gross Salary</th>
                <th field="DeriveNetAmount" width="12%" align="right" formatter="formatPrice">Net Salary</th>
                <th field="SalaryDateInString" width="12%" align="left">Process Date</th>
                <th field="SalaryForInString" width="25%" align="left">Salary For</th>
            </tr>
        </thead>
    </table>

    ​<table>
        <tr>
            <td>
                <input id="chkRange_Colection" type="checkbox" />Range
                <label id="lblRange1_Colection">
                    <input id="txtFrom_Colection" type="text" style="width:40px" />&nbsp; To &nbsp;
                </label>
                <label id="lblRange2_Colection">
                    <input id="txtTo_Colection" type="text" style="width:40px" />
                </label>
                &nbsp; &nbsp;
                <label id="lblcount_Colection"></label>
                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next_Collection()">Next</a>
            </td>
        </tr>
    </table>

    <div id="toolbar" style="height:auto">
        <input id="dtDateFrom" type="text" style="width: 100px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
        &nbsp; To &nbsp;<input id="dtDateTo" type="text" style="width: 100px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />

        <input id="txtEmployee_Collection" style="width:120px;" type="text" placeholder="Type Code & Enter" />
        <input id="btnEmployee" type="button" value="P" />
        <input id="btnCEmployee" type="button" value="C" />
        <input id="txtLocation_Colection" style="width:110px;" placeholder="Pick Location" type="text" />
        <input id="btnLocationPicker_Colection" type="button" value="P" />
        <input id="btnResetLocationPicker_Colection" type="button" value="C" />

        <input id="txtDepartment_Collection" style="width:110px;" type="text" placeholder="Pick Department" />
        <input id="btnDepartmentPicker_Collection" type="button" value="P" />
        <input id="btnResetDepartmentPicker_Collection" type="button" value="C" />

        <input id="txtDesignation_Collection" type="text" style="width:110px;" placeholder="Pick Designation" />
        <input id="btnDesignationPicker_Collection" value="P" type="button" />
        <input id="btnResetDesignationPicker_Collection" type="button" value="C" />

        <br />
        <input id="txtSalaryScheme" type="text" style="width:211px" placeholder="Type salary scheme name & enter" />
        <input id="btnSalaryScheme" type="button" value="P" />
        <input id="btnCSalaryScheme" type="button" value="C" style="margin-right:2px;" />
        <select id="cboPayType" style="width:100px;">
            <option value="0">None</option>
            <option value="1">Bank Pay</option>
            <option value="2">Cash Pay</option>
        </select>
        &nbsp;
        Salary Month:
        <select id="cboSalaryMonth" class="selection-search cboReset" style="width: 12%;"></select>
        &nbsp;
        <a id="btnSearchByDepartmentAndDateRange" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-search" onclick="SearchByDepartmentAndDateRangeWithPasignation()"></a>
        &nbsp; @*<input id="chkFromthelist" type="checkbox" />Print from the list*@
        &nbsp; <input id="chkBankPay" type="checkbox" />Bank Pay &nbsp;
        <br />
        Print Type:
        <select id="cboPrintType" style="width:150px;"></select>
        <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true"></a>
        <a id="btnPrintExcel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true"></a>

        @*<a id="btnSalarySummery_Summarized" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Salary Summary(Summarized)</a>*@
        <a id="btnRemoveFromGrid" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove from the list</a>

    </div>

    <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="locationtree" data-options="checkbox:false" singleselect="true"></ul>
            </div>
            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width: 100%; font-family: Tahoma;">
            <div style="width: 47%; float: left;">
                <table class="tbl-AdvSearch">
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Name :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Code :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Authentication No :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEnrollNo" class="txtReset" type="text" style="width:175px;" />
                            <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Attendance Scheme :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                            <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Location :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Dept./Section :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Designation :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Type :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeType" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Gender :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboGender" class="selection-search cboReset">
                                <option value="0">None</option>
                                <option value="1">Male</option>
                                <option value="2">Female</option>
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Current Shift :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboShift_EmpSearch" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Card Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Working Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Date Of Birth :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboDateType" style="width: 65px" class="cboReset">
                                <option value='0'>None</option>
                                <option value='1'>Equal</option>
                                <option value='2'>Between</option>
                            </select>
                            <span></span>
                            <select id="cboDayFrom" style="width: 45px" class="cboReset"></select>
                            <select id="cboMonthFrom" style="width: 50px" class="cboReset"></select>
                            <span id="regionDateTo">
                                <span>To</span>
                                <select id="cboDayTo" style="width: 45px" class="cboReset"> </select>
                                <select id="cboMonthTo" style="width: 50px" class="cboReset"> </select>
                            </span>

                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkActive" class="chkReset" /> Active
                            <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                            <input type="checkbox" id="chkUser" class="chkReset" /> User
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                            <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                        </td>
                    </tr>
                </table>
            </div>
            <div style="width: 52%; float: right;">
                <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 425px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                    <thead>
                        <tr>
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th field="Code" width="200"> Code</th>
                            <th field="Name" width="150">Employee Name</th>
                            <th field="DepartmentName" width="100">Department</th>
                            <th field="DesignationName" width="100">Designation</th>
                        </tr>
                    </thead>
                </table>
                <table style="width: 485px; font-size: 12px; font-weight: bold;">
                    <tr>
                        <td style="text-align: left">
                            <input id="chkRange" type="checkbox" />Range
                            <label id="lblRange1">
                                <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                            </label>
                            <label id="lblRange2">
                                <input id="txtTo" type="text" style="width:40px" />
                            </label>
                            <label id="lblcount"></label>
                        </td>
                        <td style="text-align: right">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                            <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                            <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: left"></td>
                        <td style="text-align: right"></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>

    <div id="winDepartmentPicker_Collection" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="departmenttree_Collection" data-options="checkbox:true" singleselect="false"></ul>
            </div>
            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnDepartmentPickerOk_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnDepartmentPickerClose_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winDepartmentPicker" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="departmenttree" data-options="checkbox:false" singleselect="true"></ul>
            </div>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnDepartmentPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnDepartmentPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

</div>
<style>
    .tbl-AdvSearch {
        width: 100%;
        font-size: 11px;
        font-weight: bold;
        text-align: left;
        margin-left: 3px;
    }

    .td-AdvSearch-Level {
        text-align: right;
    }

    .td-AdvSearch-Input {
        text-align: left;
    }

    .txtfield-search {
        width: 305px;
        text-align: left;
        font-size: 11px;
    }

    .txtfield-picker {
        width: 259px;
        text-align: left;
        font-size: 11px;
    }

    .selection-search {
        width: 310px;
        text-align: left;
        font-size: 11px;
    }

    .pick-btn {
        width: 20px;
        text-align: center;
        font-size: 11px;
    }
</style>
<script type="text/javascript">
    var _oEmployeeSalarys=null;
    var _sBaseAddress="";
    var _oEmployees=[];
    var _nLastEmployeeSalaryID = 0;
    var _oEmployeeSalarys = [];
    var _oEmployee = null;
    var _sSalarySchemeIDs = "";
    var _oMonths=[];
    var _sEmployeeIDs="";

    var _sDepartmentNames = "";
    var _sDepartmentIds = "";
    var _sDesignationNames = "";
    var _sDesignationIds = "";

    var _nLastEmployeeID = 0;
    var _bNext = false;
    var _nLoadRecords = 0;
    var _nRowLength = 0;

    var _oEmployeeTypes=[];
    var _oShifts=[];
    var _oEmployeeCSs=[];
    var _oEmployeeWSs=[];

    var _sLocationID = "";

    $(document).ready(function ()
    {
        _oEmployeeSalarys =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oMonths= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Months));

        _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
        _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
        _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
        _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));

        $('#dtDateFrom').datebox('setValue', icsdateformat(new Date()));
        $('#dtDateTo').datebox('setValue', icsdateformat(new Date()));

        $('#txtFrom_Colection').numberbox({min:0, precision:0 });
        $('#txtTo_Colection').numberbox({min:0, precision:0 });
        $('#txtFrom_Colection').numberbox('setValue',1);
        $('#txtTo_Colection').numberbox('setValue',50);
        document.getElementById("lblRange1_Colection").style.display = 'none';

        DynamicRefreshList(_oEmployeeSalarys, "tblEmployeeSalary");
        PrintTypeObject();
        $("#cboSalaryMonth").icsLoadCombo({
            List:_oMonths,
            OptionValue: "Value",
            DisplayText: "Text",
        });
        InitializeAdvSearch();
        $("#btnPrintExcel").hide();
    });

    /*---------------- emp Search Start click----------------*/

    function InitializeAdvSearch(){
        $("#cboEmployeeType").icsLoadCombo({
            List: _oEmployeeTypes,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name"
        });
        $("#cboShift_EmpSearch").icsLoadCombo({
            List: _oShifts,
            OptionValue: "ShiftID",
            DisplayText: "ShiftWithDuration"
        });
        $("#cboEmployeeCardStatus").icsLoadCombo({
            List: _oEmployeeCSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboEmployeeWorkigStatus").icsLoadCombo({
            List: _oEmployeeWSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });

        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();

        var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                    {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                    {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

        $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
            List: oMonths,
            OptionValue: "MonthID",
            DisplayText: "Name",
            InitialValue:''
        });

        LoadDaysInMonth();
    }

    function LoadDaysInMonth(){
        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom,#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    }

    $("#cboDateType").change(function(e){
        if($("#cboDateType").val()==1){
            $("#regionDateTo").hide();
        }
        else{
            $("#regionDateTo").show();
        }
    });

    $("#cboMonthFrom").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthFrom").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    $("#cboMonthTo").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthTo").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    function EmployeePickerReset(){
        _nLastEmployeeID = 0;
        _sEmployeeIDs = "";
        _bNext = false;
        _nLoadRecords = 0;
        _nRowLength = 0;
        _sAttendanceSchemeID="";
        _sLocationID = "";
        _sDepartmentIds = "";
        _sDesignationIds = "";
        $(".txtReset").val("");
        $(".cboReset").val(0);
        $(".chkReset").prop("checked",false);

        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        LoadDaysInMonth();

        DynamicRefreshList([], "tblEmployeesForPicker");
        $("#lblcount").html("");
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();
    }

    $("#btnEmployee").click(function () {

        EmployeePickerReset();
        $("#winEmployeePicker").icsWindow("open", " Employee Picker");
    });

    $('#chkRange').click(function()
    {
        if(document.getElementById("chkRange").checked == true)
        {
            $("#lblRange1").show();
        }
        else
        {
            $("#lblRange1").hide();
        }
    });

    $('#btnEmpPickerSearch').click(function () {
        _bNext = false;
        AdvSearch();
    });

    function Next() {
        debugger
        var oEmployees = [];
        oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
        if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
        _nRowLength = oEmployees.length;
        _bNext = true;
        AdvSearch();
    }

    function AdvSearch(){
        if (!_bNext) {
            _nRowLength = 0;
            _nLastEmployeeID = 0;
        }
        _nLoadRecords = document.getElementById("txtTo").value;
        debugger
        if ($("#chkRange").is(':checked')) {
            if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
            var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
            var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
            if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
            _nRowLength = nRangeFrom - 1;
            _nLoadRecords = nRangeTo - nRangeFrom + 1;
        }

        var sName = $.trim($("#txtEmployeeName").val());
        var sCode = $.trim($("#txtEmpCodeForSearch").val());
        var sEnrollNo = $.trim($("#txtEnrollNo").val());
        var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
        var nEmployeeTypeID=$("#cboEmployeeType").val();
        var nShiftID=$("#cboShift_EmpSearch").val();
        var nCardStatus=$("#cboEmployeeCardStatus").val();
        var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
        var nDateType=$("#cboDateType").val();
        var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
        var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
        var sGender= $("#cboGender option:selected").text();

        var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
        var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
        var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

        var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
        var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

        var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
        var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

        var bIsJoiningDate = false;
        var dtDateFrom = "1 jan 1900";
        var dtDateTo ="2 jan 1900";

        debugger;
        if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" &&
            nEmployeeTypeID==0 && sGender=="" && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
            bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0 && !bIsnotEnroll)
        {
            alert("Please enter you selection criteria."); return false;
        }

        var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentIds + '~' +_sDesignationIds + '~' +
                    sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                    bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                    sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo+"~"+sEnrollNo+"~"+bIsnotEnroll;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EmployeeSearch",
            traditional: true,
            data: JSON.stringify({ sParam: sParam }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmps = jQuery.parseJSON(data);
                if (oEmps != null) {
                    if (oEmps.length > 0) {
                        if(!_bNext){
                            DynamicRefreshList(oEmps,'tblEmployeesForPicker');
                        }
                        else{
                            var bAppend=false;
                            var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');
                            if(oTEmps.length>0){
                                for (var i = 0; i < oEmps.length; i++) {
                                    var IsAppend=true;
                                    for (var j = 0; j < oTEmps.length; j++) {

                                        if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                            IsAppend=false;
                                            break;
                                        }
                                    }
                                    if(IsAppend){
                                        bAppend=true;
                                        $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[i]);
                                    }
                                }
                            }
                            else{
                                for (var j = 0; j < oEmps.length; j++) {
                                    bAppend=true;
                                    $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[j]);
                                }
                            }
                            if(!bAppend){
                                alert("No more data found!");
                            }
                        }

                    }
                    else {
                        alert("No more data found!");
                    }
                    var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                    document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
                    _bNext = false;
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    $("#btnEmployeePickerOk").click(function () {
        var oEmployees = $('#tblEmployeesForPicker').datagrid('getChecked');
        if (oEmployees.length<=0) { alert("please select atleast one item");return; }
        var sEmpIDs="";
        var sEmpNames="";
        for(var i=0;i<oEmployees.length;i++)
        {
            sEmpIDs=sEmpIDs+oEmployees[i].EmployeeID+",";
            sEmpNames=sEmpNames+oEmployees[i].Name+",";
        }
        _sEmployeeIDs= sEmpIDs.substring(0,sEmpIDs.length-1);
        sEmpNames= sEmpNames.substring(0,sEmpNames.length-1);
        $("#txtEmployee_Collection").val(sEmpNames);
        SearchByDepartmentAndDateRangeWithPasignation();
        $("#winEmployeePicker").icsWindow('close');
    });

    $("#btnEmployeePickerClose").click(function () {
        $("#winEmployeePicker").icsWindow('close');
    });

    /*-------------Attendance Schema Picker----------------*/
    $("#btnAttScheme").click(function(e){
        var oAttendanceScheme={AttendanceSchemeID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oAttendanceScheme,
            ControllerName: "AttendanceScheme",
            ActionName: "GetsAttendanceSchemeCurrentSession",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AttendanceSchemeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "EmployeeType", title: "EmployeeType", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DayOff", title: "DayOff", width: 115, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winAttendanceScheme',
                        winclass:'clsAttendanceScheme',
                        winwidth: 420,
                        winheight: 460,
                        tableid: 'tblAttendanceSchemePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Attendance Scheme List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeAttendancePickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    function IntializeAttendancePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oAttendanceScheme = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winAttendanceScheme')
            {
                if(oAttendanceScheme!=null && oAttendanceScheme.AttendanceSchemeID>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    $('#txtAttendanceScheme').val(oAttendanceScheme.Name);
                    _sAttendanceSchemeID=oAttendanceScheme.AttendanceSchemeID;
                }
                else{
                    alert("Please select a schema.");
                }
            }
        });
    }

    $("#btnResetAttScheme").click(function(e){
        $('#txtAttendanceScheme').val("");
        _sAttendanceSchemeID="";
    });

    /*-------------Location Picker----------------*/
    var btnLocation="";
    $("#btnLocationPicker,#btnLocationPicker_Colection").click(function(e){
        btnLocation = $(this).attr("id");
        $("#winLocationPicker").icsWindow('open');
        var oLocation={LocationID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationMenuTree",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.TLocation.id > 0) {
                    $('#locationtree').tree({ data: [response.obj.TLocation] });
                }
            }
        });
    });

    $("#btnLocationPickerOk").click(function(e){
        var oLocation = $('#locationtree').tree('getSelected');
        if(oLocation!=null && oLocation.id>0){
            $("#winLocationPicker").icsWindow('close');
            if(btnLocation=="btnLocationPicker")
            { $('#txtLocation').val(oLocation.text);} else{$('#txtLocation_Colection').val(oLocation.text);}
            _sLocationID= oLocation.id;
        }
        else{
            alert("Please select a location.");
        }
    });

    $('#txtLocation_Colection').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            $("#winLocationPicker").icsWindow('open');
            var oLocation={LocationID:0};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oLocation,
                ControllerName: "Location",
                ActionName: "GetsLocationMenuTree",
                IsWinClose: false
            };
            $.icsDataGet(obj, function (response) {

                if (response.status && response.obj!=null) {
                    if (response.obj.TLocation.id > 0) {
                        $('#locationtree').tree({ data: [response.obj.TLocation] });
                    }
                }
            });
        }
    });

    $("#btnLocationPickerClose").click(function(e){
        $("#winLocationPicker").icsWindow('close');
    });

    $("#btnResetLocationPicker,#btnResetLocationPicker_Colection").click(function(e){
        $('#txtLocation').val("");
        $('#txtLocation_Colection').val("");
        _sLocationID="";
    });
    /*-------------Department Picker----------------*/

    $("#btnDepartmentPicker").click(function(e){
        $("#winDepartmentPicker").icsWindow('open');
        var oDepartment={DepartmentID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree').tree({ data: [response.obj] });
                }
            }
        });
    });

    $("#btnDepartmentPickerOk").click(function(e){
        var oDepartment = $('#departmenttree').tree('getSelected');
        if(oDepartment!=null && oDepartment.id>0){
            $("#winDepartmentPicker").icsWindow('close');
            $('#txtDepartment').val(oDepartment.text);
            _sDepartmentIds= oDepartment.id;
        }
        else{
            alert("Please select a department.");
        }
    });

    $("#btnDepartmentPickerClose,#btnDepartmentPickerClose_Collection").click(function(e){
        $("#winDepartmentPicker").icsWindow('close');
        $("#winDepartmentPicker_Collection").icsWindow('close');
    });

    $("#btnResetDepartmentPicker,#btnResetDepartmentPicker_Collection").click(function(e){
        $('#txtDepartment,#txtDepartment_Collection').val("");
        _sDepartmentIds="";
        _sDepartmentNames="";
    });

    /*-------------Designation Picker----------------*/
    var btnDesignation="";
    $("#btnDesignationPicker,#btnDesignationPicker_Collection").click(function(e){
        btnDesignation = $(this).attr("id");
        DesignationPicker();
    });

    $("#txtDesignation_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            btnDesignation ="btnDesignationPicker_Collection";
            DesignationPicker();
        }
    });

    function DesignationPicker()
    {
        var oDesignation={
            DesignationID:0,
            Params: ""+'~'+(($.trim(_sLocationID)=="")? 0:_sLocationID)+'~'+ (($.trim(_sDepartmentIds)=="")? "":_sDepartmentIds)
        };

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDesignation,
            ControllerName: "Designation",
            ActionName: "Gets",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DesignationID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=false;
                    if(btnDesignation=="btnDesignationPicker_Collection"){bmultiplereturn=true;}

                    var oPickerParam = {
                        winid: 'winDesignation',
                        winclass:'clsDesignation',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblDesignation',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Designation List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeDesignationPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oDesignations=[];
        
            if(btnDesignation=="btnDesignationPicker_Collection")
            {
                oDesignations = $('#'+oPickerobj.tableid).datagrid('getChecked');
            }
            else
            {
                var oDesignation = $('#'+oPickerobj.tableid).datagrid('getSelected');
                oDesignations.push(oDesignation);
            }

            if (oPickerobj.winid == 'winDesignation')
            {
                if(oDesignations!=null && oDesignations.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oDesignations.length; i++)
                    {
                        _sDesignationNames+=oDesignations[i].Name+",";
                        _sDesignationIds+=oDesignations[i].DesignationID+",";
                    }
                   
                    _sDesignationNames=_sDesignationNames.substring(0,_sDesignationNames.length-1);
                    _sDesignationIds=_sDesignationIds.substring(0,_sDesignationIds.length-1);
                    if(btnDesignation=="btnDesignationPicker_Collection")
                    {
                        $("#txtDesignation_Collection").val(_sDesignationNames);
                    }
                    else
                    {
                        $("#txtDesignation").val(_sDesignationNames);
                    }
                }
                else{
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetDesignationPicker,#btnResetDesignationPicker_Collection").click(function(e){
        $('#txtDesignation').val("");
        $('#txtDesignation_Collection').val("");
        _sDesignationIds="";
        _sDesignationNames = "";
    });

    /*---------------- emp Search End click ----------------*/

    /*---------------- emp Search Start keyprees----------------*/
    $('#txtEmployee_Collection').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sCodeName = $.trim($("#txtEmployee_Collection").val());
            if(sCodeName==''){alert("Please enter name or code to search.");$("#txtEmployee_Collection").focus(); return;}
            SearchEmployeeByText(sCodeName);
        }
    });

    function SearchEmployeeByText(sEmpNameCode){
        var oEmployee = { Params: sEmpNameCode +'~'+ 0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsByEmpCode",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {

                    var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winEmployeePickerTextSearch',
                        winclass:'clsEmployeePickerTextSearch',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblEmployeePickerTextSearch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee list'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerTextSearch(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeEmployeePickerTextSearch(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmployeePickerTextSearch')
            {
                if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                {
                    _sEmployeeIDs=oreturnObj.EmployeeID;
                    $("#txtEmployee_Collection").val(oreturnObj.Name);
                    SearchByDepartmentAndDateRangeWithPasignation();
                    $("#winEmployeePicker").icsWindow('close');
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
                {
                    if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                    {
                        _sEmployeeIDs=oreturnObj.EmployeeID;
                        $("#txtEmployee_Collection").val(oreturnObj.Name);
                        SearchByDepartmentAndDateRangeWithPasignation();
                        $("#winEmployeePicker").icsWindow('close');
                    }
                }
            }
        });
    }

    $('#btnCEmployee').click(function (e)
    {
        document.getElementById("txtEmployee_Collection").value = "" ;
        _sEmployeeIDs = "";
    });

    /*---------------- emp Search Start keyprees----------------*/

    /*-------------Department Picker start Collection----------------*/
    $("#btnDepartmentPicker_Collection").click(function(e){
        DepartmentPicker();
    });

    $("#txtDepartment_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            DepartmentPicker();
        }
    });

    function DepartmentPicker()
    {
        $("#winDepartmentPicker_Collection").icsWindow('open');
        var oDepartment={DepartmentID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree_Collection').tree({ data: [response.obj] });
                }
            }
        });
    }

    $("#btnDepartmentPickerOk_Collection").click(function(e){
        var oDepartments = $('#departmenttree_Collection').tree('getChecked');
        if(oDepartments!=null && oDepartments.length>0){
            $("#winDepartmentPicker_Collection").icsWindow('close');
            for(var i=0; i<oDepartments.length; i++)
            {
                _sDepartmentNames+=oDepartments[i].text+",";
                _sDepartmentIds+=oDepartments[i].id+",";
            }

            _sDepartmentNames=_sDepartmentNames.substring(0,_sDepartmentNames.length-1);
            _sDepartmentIds=_sDepartmentIds.substring(0,_sDepartmentIds.length-1);
            $("#txtDepartment_Collection").val(_sDepartmentNames);
        }
        else{
            alert("Please select a department.");
        }
    });

    /*-------------Department Picker start Collection----------------*/

    function SearchSalary()
    {
        var dtDateFrom= $('#dtDateFrom').datebox('getValue');
        var dtDateTo= $('#dtDateTo').datebox('getValue');
        var sIDs="";
        for(var i=0; i<_oEmployees.length; i++)
        {
            sIDs+=_oEmployees[i].EmployeeID+",";
        }
        sIDs=sIDs.substring(0,sIDs.length-1);
        var tsv = ((new Date()).getTime()) / 1000;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/EmployeeSalary/SearchSalary",
            data: JSON.stringify({ sIDs: sIDs,dtDateFrom:dtDateFrom,dtDateTo:dtDateTo,ts: tsv}),
            //data: { sIDs: sIDs,dtDateFrom:dtDateFrom,dtDateTo:dtDateTo,ts: tsv},
            contentType: "application/json; charset=utf-8",
            success: function(data)
            {
                var oEmployeeSalarys =[];
                oEmployeeSalarys = jQuery.parseJSON(data);
                if(oEmployeeSalarys.length>0 && oEmployeeSalarys[0].ErrorMessage=="")
                {
                    if(bEnterSearch == true)
                    {
                        $('#tblEmployeeSalary').datagrid('appendRow', oEmployeeSalarys[0]);
                    }
                    else
                    {
                        DynamicRefreshList(oEmployeeSalarys, "tblEmployeeSalary");
                    }
                    bEnterSearch= false;
                }
                else
                {
                    alert(oEmployeeSalarys[0].ErrorMessage);
                    oEmployeeSalarys =[];
                    DynamicRefreshList(oEmployeeSalarys, "tblEmployeeSalary");
                }
            }
        });
    }

    function SearchByDepartmentAndDateRangeWithPasignation()//department and date wise search
    {
        debugger;
        if(!_bNext)
        {
            _nRowLength = 0;
            _nLastEmployeeSalaryID = 0;
        }
        var dtDateFrom= $('#dtDateFrom').datebox('getValue');
        var dtDateTo= $('#dtDateTo').datebox('getValue');
        if(new Date(dtDateFrom)>new Date(dtDateTo))
        {
            alert("Invalid Date Range !");
            return;
        }
        _nLoadRecords = document.getElementById("txtTo").value;
        if(document.getElementById("chkRange").checked == true)
        {
            var RangeFrom = 0;
            var RangeTo = 0;
            RangeFrom = parseFloat(document.getElementById("txtFrom").value);
            RangeTo = parseFloat(document.getElementById("txtTo").value);

            if(RangeFrom > RangeTo)
            {
                alert("Invalid Range !");
                return;
            }
            _nRowLength = 0;
            _nLoadRecords = 0;
            _nRowLength = RangeFrom-1;
            _nLoadRecords = RangeTo - RangeFrom +1;
        }
        var nPayType= $('#cboPayType').val();
        var tsv = ((new Date()).getTime()) / 1000;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/EmployeeSalary_MAMIYA/SearchSalaryByDepartmentAndDateRange",
            data: JSON.stringify({ sEmployeeIDs:_sEmployeeIDs, nLocationID: parseInt(_sLocationID!=""?_sLocationID:0), sDepartmentIds: _sDepartmentIds,sDesignationIDs:_sDesignationIds,sSalarySchemeIDs:_sSalarySchemeIDs,dtDateFrom:dtDateFrom,dtDateTo:dtDateTo,nLoadRecords : _nLoadRecords, nRowLength : _nRowLength,nPayType:nPayType, ts: tsv}),
            contentType: "application/json; charset=utf-8",
            success: function(data)
            {
                var oEmployeeSalarys =[];
                oEmployeeSalarys = jQuery.parseJSON(data);
                if(oEmployeeSalarys.length>0 && oEmployeeSalarys[0].ErrorMessage=="")
                {
                    if(!_bNext)
                    {
                        _oEmployeeSalarys=[];
                        DynamicRefreshList(_oEmployeeSalarys, "tblEmployeeSalary");
                    }

                    for (var j = 0; j < oEmployeeSalarys.length; j++)
                    {
                        $('#tblEmployeeSalary').datagrid('appendRow',oEmployeeSalarys[j]);
                    }
                }
                else
                {
                    if(_bNext == false)
                    {
                        alert("Data not found !!");
                        _oEmployeeSalarys=[];
                        DynamicRefreshList(_oEmployeeSalarys, "tblEmployeeSalary");
                    }
                    else
                    {
                        alert("No more data found !");
                    }
                }
                var oEmployeeSalarys=$('#tblEmployeeSalary').datagrid('getRows');
                document.getElementById("lblcount_Colection").innerHTML = " | Count ="+ oEmployeeSalarys.length;
                _bNext = false;
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    }

    function Next_Collection()
    {
        var oEmployeeSalarys =[];
        oEmployeeSalarys=$('#tblEmployeeSalary').datagrid('getRows');
        _nRowLength = oEmployeeSalarys.length;
        _bNext = true;

        if (oEmployeeSalarys.length<=0)
        {
            alert('Please Select Criteria and click on "Search" to find information.!!');
            return;
        }
        var oEmployeeSalary = oEmployeeSalarys[oEmployeeSalarys.length-1];

        if (_nLastEmployeeSalaryID==oEmployeeSalary.EmployeeSalaryID)
        {
            alert('No more data found by this date range');
            return;
        }
        _nLastEmployeeSalaryID=oEmployeeSalary.EmployeeSalaryID;
        SearchByDepartmentAndDateRangeWithPasignation();
    }

    function PrintSalarySheet()
    {
        var S=ReturnConnectionStringForController();
        if(S=="" || S == null)
        {
            return;
        }
        else
        {
            window.open(_sBaseAddress+ "/EmployeeSalary_MAMIYA/PrintSalarySheet_MAMIYA"+S); 
        }

    }
   
    function PrintSalarySheet_OT()
    {
        var S=ReturnConnectionStringForController();
        if(S=="" || S == null)
        {
            return;
        }
        else
        {
            window.open(_sBaseAddress+ "/EmployeeSalary_MAMIYA/PrintSalarySheet_OT_MAMIYA"+S); 
        }
    }
    
    function PrintPaySlip()
    {
        var S=ReturnConnectionStringForController();
        if(S=="" || S == null)
        {
            return;
        }
        else
        {
            window.open(_sBaseAddress+ "/EmployeeSalary_MAMIYA/PrintMultiplePaySlip_MAMIYA"+S); 
        }

    }
   
    $('#btnRemoveFromGrid').click(function (e)
    {
        var oEmployeeSalarys= $('#tblEmployeeSalary').datagrid('getChecked');
        if(oEmployeeSalarys.length<=0)
        {
            alert("Please select at least onr item!");
            return;
        }
        for(var i=0; i<oEmployeeSalarys.length;i++)
        {
            var SelectedRowIndex = $('#tblEmployeeSalary').datagrid('getRowIndex', oEmployeeSalarys[i]);
            $('#tblEmployeeSalary').datagrid('deleteRow', SelectedRowIndex);
        }
    });

    /*-------------Location Picker----------------*/

    $("#btnLocationPicker").click(function(e){

        $("#winLocationPicker").icsWindow('open');
        var oLocation={LocationID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationMenuTree",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj!=null) {
                if (response.obj.TLocation.id > 0) {
                    $('#locationtree').tree({ data: [response.obj.TLocation] });
                }
            }
        });
    });

    $('#txtLocation').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            $("#winLocationPicker").icsWindow('open');
            var oLocation={LocationID:0};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oLocation,
                ControllerName: "Location",
                ActionName: "GetsLocationMenuTree",
                IsWinClose: false
            };

            $.icsDataGet(obj, function (response) {

                if (response.status && response.obj!=null) {
                    if (response.obj.TLocation.id > 0) {
                        $('#locationtree').tree({ data: [response.obj.TLocation] });
                    }
                }
            });
        }
    });

    $("#btnLocationPickerOk").click(function(e){
        var oLocation = $('#locationtree').tree('getSelected');
        if(oLocation!=null && oLocation.id>0){
            $("#winLocationPicker").icsWindow('close');
            $('#txtLocation').val(oLocation.text);
            _sLocationID= oLocation.id;
        }
        else{
            alert("Please select a location.");
        }
    });

    $("#btnLocationPickerClose").click(function(e){
        $("#winLocationPicker").icsWindow('close');
    });

    $("#btnResetLocationPicker").click(function(e){
        $('#txtLocation').val("");
        _sLocationID="";
    });
    
    function SalarySummary()
    {
        var S=ReturnConnectionStringForController();
        if(S=="" || S == null)
        {
            return;
        }
        else
        {
            window.open(_sBaseAddress+ "/EmployeeSalary_MAMIYA/PrintSalarySummery"+S); 
        }
    }

    $('#btnSalarySummery_Summarized').click(function (e)
    {
        var S=ReturnConnectionStringForController();
        if(S=="" || S == null)
        {
            return;
        }
        else
        {
            window.open(_sBaseAddress+ "/EmployeeSalary_MAMIYA/PrintSalarySummery"+S); 
        }

    });

    function PaySlip_B()
    {
        var S=ReturnConnectionStringForController();
        if(S=="" || S == null)
        {
            return;
        }
        else
        {
            var oParameter = new Object();
            var url = _sBaseAddress+ "/EmployeeSalary_MAMIYA/PrintPaySlip_MAMIYA_Bangla"+S;
            var oEmployees = window.showModalDialog(url, oParameter, 'dialogHeight:1050px;dialogWidth:1350px;dialogLeft:20;dialogRight:0;center:yes;resizable:yes;status:no;scroll:no');

            //window.open(_sBaseAddress+ "/EmployeeSalary_MAMIYA/PrintPaySlip_MAMIYA_Bangla"+S); 
        }
    }

    function PaySlip_B_XL()
    {
        var S=ReturnConnectionStringForController();
        if(S=="" || S == null)
        {
            return;
        }
        else
        {
            window.open(_sBaseAddress+ "/EmployeeSalary_MAMIYA/PrintPaySlip_MAMIYA_Bangla_XL"+S, "_blank"); 
        }
    }

    function PrintConsolidatedPFDeduction()
    {
        debugger
        var S=ReturnConnectionStringForController();
        if(S=="" || S == null)
        {
            return;
        }
        else
        {
            window.open(_sBaseAddress+ "/EmployeeSalary_MAMIYA/PrintConsolidatedPFDeduction"+S); 
        }
    }

    function PrintMiscDeductionReport()
    {
        var S=ReturnConnectionStringForController();
        if(S=="" || S == null)
        {
            return;
        }
        else
        {
            window.open(_sBaseAddress+ "/EmployeeSalary_MAMIYA/PrintMiscDeductionReport"+S); 
        }
    }

    function ConsolidatePay_XL()
    {
        debugger;
        var S=ReturnConnectionStringForController();
        if(S=="" || S == null)
        {
            return;
        }
        else
        {
            window.open(_sBaseAddress+ "/EmployeeSalary_MAMIYA/PrintConsolidatePayXL"+S); 
        }
    }

    function PrintConsolidatedPFDeduction_XL()
    {
        var S=ReturnConnectionStringForController();
        if(S=="" || S == null)
        {
            return;
        }
        else
        {
            window.open(_sBaseAddress+ "/EmployeeSalary_MAMIYA/PrintLoanPFAndInterestXL"+S); 
        }
    }

    function PrintSalarySheetXL()
    {
        var S=ReturnConnectionStringForController();
        if(S=="" || S == null)
        {
            return;
        }
        else
        {
            window.open(_sBaseAddress+ "/EmployeeSalary_MAMIYA/PrintSalarySheet_MAMIYA_XL"+S); 
        }
    }


    function ReturnConnectionStringForController()
    {
        var sString="";
        var sEmpID="";
        var oEmployeeSalarys= $('#tblEmployeeSalary').datagrid('getChecked');
        if(oEmployeeSalarys.length>0)
        {
            for(var i=0; i<oEmployeeSalarys.length; i++)
            {
                sEmpID+=oEmployeeSalarys[i].EmployeeID+",";
            }
            sEmpID=sEmpID.substring(0,sEmpID.length-1);
        }
        else
        {
            sEmpID=_sEmployeeIDs;
        }
        var dtStartDate= $('#dtDateFrom').datebox('getValue');
        var dtEndDate= $('#dtDateTo').datebox('getValue');
        if(new Date(dtStartDate)>new Date(dtEndDate))
        {
            alert("Invalid Date Range!");
            return;
        }
        var sDate=dtStartDate+","+dtEndDate;
        var nMonthID=$("#cboSalaryMonth").val();
        var nPayType= $('#cboPayType').val();
        var tsv = ((new Date()).getTime()) / 1000;
        sString="?sEmpIDs="+sEmpID+"&sDate="+sDate+"&nLocationID="+parseInt(_sLocationID!=""?_sLocationID:0) +"&sDepartmentIDs="+_sDepartmentIds+"&sDesignationIDs="+_sDesignationIds +"&sSalarySchemeIDs="+_sSalarySchemeIDs+"&nMonthID="+nMonthID+"&nPayType="+nPayType+"&ts="+tsv, "_blank";
        return sString;
    }

    function PrintTypeObject()
    {
        var oObj= new Object();
        var oItems=[];

        oObj= new Object();
        oObj.id=1;
        oObj.Item="Pay Slip";
        oItems.push(oObj);

        oObj= new Object();
        oObj.id=2;
        oObj.Item="Salary Sheet";
        oItems.push(oObj);

        oObj= new Object();
        oObj.id=3;
        oObj.Item="Salary Sheet(OT)";
        oItems.push(oObj);

        oObj= new Object();
        oObj.id=4;
        oObj.Item="Salary Summary";
        oItems.push(oObj);

        oObj= new Object();
        oObj.id=5;
        oObj.Item="Pay Slip (B)";
        oItems.push(oObj);

        oObj= new Object();
        oObj.id=6;
        oObj.Item="Consolidated PF Deduction";
        oItems.push(oObj);

        oObj= new Object();
        oObj.id=7;
        oObj.Item="Misc. Deduction Report";
        oItems.push(oObj);

        oObj= new Object();
        oObj.id=8;
        oObj.Item="Salary Sheet(XL)";
        oItems.push(oObj);

        oObj= new Object();
        oObj.id=9;
        oObj.Item="Pay Slip (B) XL";
        oItems.push(oObj);

        oObj= new Object();
        oObj.id=10;
        oObj.Item="Consolidate Pay";
        oItems.push(oObj);

        oObj= new Object();
        oObj.id=11;
        oObj.Item="Consolidated Loan & PF Deduction XL";
        oItems.push(oObj);

        $("#cboPrintType").icsLoadCombo({
            List: oItems,
            OptionValue: "id",
            DisplayText: "Item"
        });
    }

    $('#cboPrintType').change(function (e)
    {
        var nPType=$("#cboPrintType").val();
        if(nPType==9 || nPType==10 || nPType==11)
        {
            $("#btnPrintExcel").show();
            $("#btnPrint").hide();
        }
        else
        {
            $("#btnPrintExcel").hide();
            $("#btnPrint").show();
        }
    });

    $('#btnPrintExcel').click(function (e)
    {
        var nPType=$("#cboPrintType").val();
        if(nPType==0)
        {
            alert("Please select one type!");
            return;
        }
        else if(nPType==9)
        {
            PaySlip_B_XL();
        }
        else if(nPType==10)
        {
            ConsolidatePay_XL();
        }
        else if(nPType==11)
        {
            PrintConsolidatedPFDeduction_XL();
        }
    });

    $('#btnPrint').click(function (e)
    {
        var nPType=$("#cboPrintType").val();
        if(nPType==0)
        {
            alert("Please select one type!");
            return;
        }
        else if(nPType==1)
        {
            PrintPaySlip();
        }
        else if(nPType==2)
        {
            PrintSalarySheet();
        }
        else if(nPType==3)
        {
            PrintSalarySheet_OT();
        }
        else if(nPType==4)
        {
            SalarySummary();
        }

        else if(nPType==5)
        {
            PaySlip_B();
        }
        else if(nPType==6)
        {
            PrintConsolidatedPFDeduction();
        }
        else if(nPType==7)
        {
            PrintMiscDeductionReport();
        }
        else if(nPType==8)
        {
            PrintSalarySheetXL();
        }

    });

    /*----------- Salary Scheme Start-----------------------*/
    $('#txtSalaryScheme').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        var sSSName = document.getElementById("txtSalaryScheme").value;
        if (code == 13)//Enter key-13
        {
            PickerSalaryScheme(sSSName);
        }
    });

    $('#btnSalaryScheme').click(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        var sSSName ="";
        PickerSalaryScheme(sSSName);
    });

    function PickerSalaryScheme(sSSName)
    {
        var oSalaryScheme = { Name: sSSName};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oSalaryScheme,
            ControllerName: "SalaryScheme",
            ActionName: "GetsBySalarySchemeName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].SalarySchemeID > 0) {

                    var tblColums = [];var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "NatureOfEmployeeInString", title: "Nature Of Employee", width: 140, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "PaymentCycleInString", title: "Payment Cycle", width: 140, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winSalarySchemePicker',
                        winclass:'clsSalarySchemePicker',
                        winwidth: 520,
                        winheight: 460,
                        tableid: 'tblSalarySchemes',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Salary Scheme List'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeSalarySchemePickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeSalarySchemePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oreturnObjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winSalarySchemePicker')
            {
                if (oreturnObjs != null && oreturnObjs.length > 0)//oreturnObj.SalarySchemeID
                {
                    var sSalarySchemeNames = "";
                    _sSalarySchemeIDs = "";
                    for(var i=0; i<oreturnObjs.length; i++)
                    {
                        sSalarySchemeNames+=oreturnObjs[i].Name+",";
                        _sSalarySchemeIDs+=oreturnObjs[i].SalarySchemeID+",";
                    }

                    sSalarySchemeNames=sSalarySchemeNames.substring(0,sSalarySchemeNames.length-1);
                    _sSalarySchemeIDs=_sSalarySchemeIDs.substring(0,_sSalarySchemeIDs.length-1);
                    $("#txtSalaryScheme").val(sSalarySchemeNames);
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                }
                else
                {
                    alert("please check at least one item!");
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
                if (oPickerobj.winclass == 'clsSalarySchemePicker')
                {
                    if (oreturnObjs != null && oreturnObjs.length > 0)
                    {
                        var sSalarySchemeNames = "";
                        _sSalarySchemeIDs = "";
                        for(var i=0; i<oreturnObjs.length; i++)
                        {
                            sSalarySchemeNames+=oreturnObjs[i].Name+",";
                            _sSalarySchemeIDs+=oreturnObjs[i].SalarySchemeID+",";
                        }

                        sSalarySchemeNames=sSalarySchemeNames.substring(0,sSalarySchemeNames.length-1);
                        _sSalarySchemeIDs=_sSalarySchemeIDs.substring(0,_sSalarySchemeIDs.length-1);
                        $("#txtSalaryScheme").val(sSalarySchemeNames);
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();
                    }
                    else
                    {
                        alert("please check at least one item!");
                    }
                }
            }
        });
    }

    $('#btnCSalaryScheme').click(function (e)
    {
        $("#txtSalaryScheme").val("");
        _sSalarySchemeIDs = "";
    });
    /*----------- Salary Scheme End-----------------------*/
</script>
