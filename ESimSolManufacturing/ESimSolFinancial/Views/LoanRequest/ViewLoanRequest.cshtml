<html>
<head>
    <title>LoanRequest Order</title>
</head>
<body>

    @model ESimSol.BusinessObjects.LoanRequest
    <div class="menuMainCollectionTable">
        <fieldset>
            <legend style="font-weight:bold"> LoanRequest entry: </legend>
            <table style="width:100%">
                <tr>
                    <td class="td-col-2 align-right">
                        <label>Request No</label>
                    </td>
                    <td class="td-col-2">
                        <input id="txtRequestNo" class="reset-text txt-styler" disabled />
                    </td>
                    <td class="td-col-3" style="width:12%">
                       <input type="radio" id="btnPfLoan" class="cls-loan-on" name="LoanOn"/> <span>PF</span>
                        <input type="radio" id="btnSalaryLoan" class="cls-loan-on" name="LoanOn" /> <span>Salary</span>
                    </td>
                    <td class="td-col-2 align-right">
                        <label>Request Date</label>
                    </td>
                    <td class="td-col-2">
                        <input id="dtRequest" type="date" class="easyui-datebox" style="width:120px;" data-options="formatter:icsdateformat,parser:icsdateparser" />
                    </td>
                    <td class="td-col-2 align-right">
                        <label>Employee</label>
                    </td>
                    <td class="td-col-7" colspan="2">
                        <input id="txtEmployee" class="reset-text txt-styler-picker" placeholder="Search Employee" />
                        <a id="btnPickEmployee" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                        <a id="btnResetEmployee" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                    </td>
                </tr>
                <tr>
                    <td class="td-col-2 align-right">
                        <label>Official Info</label>
                    </td>
                    <td colspan="7" class="td-col-18">
                        <input id="txtOfficialInfo" class="reset-text txt-styler-span emp-info" placeholder="Employee Official Info" disabled />
                    </td>
                </tr>
                <tr id="regionSalaryInfo">
                    <td class="td-col-2 align-right">
                        <label>Salary Info</label>
                    </td>
                    <td colspan="7" class="td-col-18">
                        <input id="txtSalaryInfo" class="reset-text txt-styler-span emp-info" placeholder="Employee Salary Info" disabled />
                    </td>
                </tr>
                <tr id="regionPFInfo">
                    <td class="td-col-2 align-right">
                        <label>PF Info</label>
                    </td>
                    <td colspan="7" class="td-col-18">
                        <input id="txtPFInfo" class="reset-text txt-styler-span emp-info" placeholder="Employee PF Info" disabled />
                    </td>
                </tr>
                <tr>
                    <td class="td-col-2 align-right" valign="top">
                        <label>Last Loan Info</label>
                    </td>
                    <td colspan="7" class="td-col-18">
                        <textarea id="txtLastLoanInfo" class="reset-text txt-styler-span emp-info" placeholder="Employee Last Loan Info" disabled></textarea>
                    </td>
                </tr>
                <tr>
                    <td class="td-col-2 align-right">
                        <label>Loan Amount</label>
                    </td>
                    <td class="td-col-2">
                        <input id="txtLoanAmount" class="reset-text number txt-styler" />
                    </td>
                    <td class="td-col-2 region-adjustable">
                        <input id="txtTotalAmount" class="reset-text number txt-styler" disabled />
                    </td>
                    <td colspan="4" class="td-col-12 align-left region-in-words">
                        <input id="txtInWords" class="reset-text emp-info" placeholder="Amount in words" disabled />
                    </td>
                    <td class="td-col-2 align-right region-adjustable">
                        <label>Adjustable</label>
                        <span>
                            <input type="checkbox" id="chkAdjustable" />
                        </span>
                    </td>
                </tr>
                <tr>
                    <td class="td-col-2 align-right" valign="top">
                        <label>Purpose</label>
                    </td>
                    <td class="td-col-18" colspan="7">
                        <textarea id="txtLoanPurpose" class="reset-text"></textarea>
                    </td>
                </tr>
                <tr>
                    <td class="td-col-2 align-right">
                        <label>Loan Type</label>
                    </td>
                    <td class="td-col-2">
                        <select id="cboLoanType" class="cbo-styler"></select>
                    </td>
                    <td class="td-col-2 align-right">
                        <label>No of Instalment</label>
                    </td>
                    <td class="td-col-2">
                        <input id="txtNoOfInstalment" type="number" min="0" pattern="^[0-9]" step="1" class="reset-text only-number txt-styler" />
                    </td>
                    <td class="td-col-2 align-right">
                        <label>Instalment Amount</label>
                    </td>
                    <td class="td-col-2">
                        <input id="txtInstalmentAmount" class="reset-text number txt-styler" />
                    </td>
                    <td class="td-col-2 align-right">
                        <label>Interest Rate</label>
                    </td>
                    <td class="td-col-2">
                        <input id="txtInterestRate" class="reset-text number txt-styler" />
                    </td>
                </tr>
                <tr>
                    <td class="td-col-2 align-right">
                        <label id="lblLoanDate">Loan Disburse Date</label>
                    </td>
                    <td class="td-col-2">
                        <input id="dtExpect" type="text" style="width:120px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        @*<input id="dtExpect" type="date" class="easyui-datebox" style="width: 120px;" data-options="formatter:icsdateformat,parser:icsdateparser" />*@
                    </td>
                    <td class="td-col-2 align-right">
                        <label>Remarks</label>
                    </td>
                    <td class="td-col-14" colspan="5">
                        <input id="txtRemarks" class="reset-text txt-styler" />
                    </td>
                </tr>

            </table>
        </fieldset>

        <div style="padding-left:2px; padding-right:2px;">
            <table id="tblLoanRequestDetail" class="easyui-datagrid" style="height: 200px; width:100%;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar"
                   data-options="rowStyler: function(index,row){if (row.Type==0){return 'background-color:#6293BB;color:#fff;font-weight:bold;';}}">
                <thead>
                    <tr>
                        <th field="InstallmentDateStr" width="15%" align="left">Instalment Date</th>
                        <th field="InstallmentAmount" width="15%" align="right" formatter="formatPrice">Instalment</th>
                        <th field="InterestPerInstallment" width="15%" align="right" formatter="formatPrice">Interest</th>
                        <th field="TotalAmount" width="20%" align="right" formatter="formatPrice">Schedule Payment</th>
                        <th field="Balance" width="20%" align="right" formatter="formatPrice">Balance</th>
                        <th field="Encash" width="10%" align="center">Realized</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbar">
                <a id="btnInstallmentGenerate" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Generate Installment</a>
            </div>
        </div>
        <fieldset>
            <legend>Action</legend>
            <div class="align-right" style="float:right; width:100%;">
                <div id="region-approval" style=" float:left;  width:68%;" class="align-left">
                   <span><label><b>Approval Note</b></label></span>
                    <input id="txtApprovalNote" class="reset-text" style="width:80%;"/>
                </div>
                <div id="region-action" style=" float:left;  width:30%; ">
                    <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton initial-state" iconcls="icon-print" plain="true">Print</a>
                    <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                    <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Approve</a>
                    <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                </div>
            </div>
        </fieldset>
    </div>
</body>
</html>

<style type="text/css">
    .input,select {
        padding-left: 5px;
    }
    .txt-styler{
        width:89%;
    }
    .txt-styler-span{
        width:98.5%;
    }
    .cbo-styler{
        width:94%;
    }
    .txt-styler-picker{
        width:68%;
    }

    #txtLastLoanInfo, #txtLoanPurpose {
        width:98.5%;
        height:35px;
    }
    #txtInWords, #txtRemarks{
        width:98%;
    }
   .region-adjustable{
       padding-right:.9%;
   }

   .align-left{
       text-align:left;
   }
    .align-right{
       text-align:right;
   }
</style>

<script type="text/javascript">

    var _sBaseAddress = "";
    var _oLoanRequest=null;
    var _oLoanInstallments=[];
    $(document).ready(function () {

        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oLoanRequest =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oLoanTypes=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EnumLoanTypes));
        _oLoanInstallments=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.LoanInstallments));
        $("#txtInWords").data('CurrencySymbol',@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.CurrencySymbol)));
       
        $('#dtExpect').datebox('setValue',icsdateformat(new Date()));

        $('.number').icsCurrencyBox();
        $("#cboLoanType").icsLoadCombo({
            List: oLoanTypes,
            OptionValue: "Value",
            DisplayText: "Text",
            InitialValue:""
        });
        Initialization(_oLoanRequest,((sessionStorage.length>0)?sessionStorage.getItem('Operation'):'New'));


    });

    $(document).keydown(function (e) { if (e.keyCode == 27) { $('#winLoanRequestOrder').icsWindow('close'); } });

     
    function InstallmentSummary(oLoanInstallments){

        var nAmount=0, nInterest=0, nInstallment=0;
        if(oLoanInstallments.length>0){
            for(var i=0;i<oLoanInstallments.length;i++){
                if(oLoanInstallments[i].Type!=0){
                    nAmount += parseFloat(oLoanInstallments[i].InstallmentAmount);
                    nInterest += parseFloat(oLoanInstallments[i].InterestPerInstallment);
                    nInstallment += parseFloat(oLoanInstallments[i].TotalAmount);
                }
            }
            var oELI={
                Type:1,
                InstallmentDateStr : '<b>Installment Total</b>',
                InstallmentAmount : nAmount,
                InterestPerInstallment : nInterest,
                TotalAmount : nInstallment,
                Balance : 0
            };
            $('#tblLoanRequestDetail').datagrid('appendRow',oELI);
        }
    }

    function InstallmentCalculation(){
        var nLoanAmount = icsRemoveComma($('#txtLoanAmount').val());
        nLoanAmount=($('#chkAdjustable').is(':checked'))? parseFloat($('#txtLastLoanInfo').data('LoanBalance')) + parseFloat(nLoanAmount): nLoanAmount;
        $('#txtTotalAmount').val(formatPrice(nLoanAmount));
        if($('#txtNoOfInstalment').val()>0 && nLoanAmount>0){
            $('#txtInstalmentAmount').val(formatPrice(parseFloat(parseFloat(nLoanAmount)/ parseFloat($('#txtNoOfInstalment').val())).toFixed(5)));
        }
        else{
            $('#txtInstalmentAmount').val("0.00");
        }

    }

    function InWords(){
        if($('#chkAdjustable').is(':checked')){
            $('#txtInWords').val(AmountInWordConversion(parseFloat(icsRemoveComma($("#txtTotalAmount").val())),$("#txtInWords").data('CurrencySymbol')));
        }
        else{
            $('#txtInWords').val(AmountInWordConversion(parseFloat(icsRemoveComma($("#txtLoanAmount").val())),$("#txtInWords").data('CurrencySymbol')));
        }
    }

    function LoanAdjustment(sLastLoanInfo){
        debugger;
        $('#txtLastLoanInfo').data('LoanBalance',0);
        $('#txtLastLoanInfo').data('LastLoanInfo',sLastLoanInfo);
        $('#cboLoanType').data('LoanType',0);
        $('#txtInterestRate').data('InterestRate',0);
        $('#dtExpect').data('EncashDate',icsdateformat(new Date()));
        
        if(sLastLoanInfo=='N/A'){
            $('.region-adjustable').hide();
            $('.region-in-words').attr('colspan',6);
        }
        else{

            var nBalance= parseFloat(icsRemoveComma($.trim(sLastLoanInfo.split('~')[0].split(':')[8])));
            if(nBalance>0){
                var IsPFLoan = (parseInt(sLastLoanInfo.split('~')[4])==1)? true : false;
                if((IsPFLoan == $('#btnPfLoan').is(':checked')) || ( !IsPFLoan == $('#btnSalaryLoan').is(':checked'))){
                    $('#chkAdjustable').prop('checked',false);
                    $('.region-adjustable').show();
                    $('.region-in-words').attr('colspan',4);

                    $('#txtLastLoanInfo').data('LoanBalance', nBalance);
                    $('#cboLoanType').data('LoanType',sLastLoanInfo.split('~')[1]);
                    $('#txtInterestRate').data('InterestRate',sLastLoanInfo.split('~')[2]);
                    $('#dtExpect').data('EncashDate',sLastLoanInfo.split('~')[3]);
                }
                else{
                    $('.region-adjustable').hide();
                    $('.region-in-words').attr('colspan',6);
                }
            }
            else{
                $('.region-adjustable').hide();
                $('.region-in-words').attr('colspan',6);
            }
        }
        $('#txtLoanAmount').focus();
    }

    //$('#cboLoanType').change(function(e){

    //    if($('#cboLoanType').val()<=0){
    //        $('#txtNoOfInstalment').prop('disabled',false);
    //        $('#txtNoOfInstalment,#txtInstalmentAmount,#txtInterestRate').val("");
    //    }
    //    else if($('#cboLoanType').val()==1){
    //        $('#txtNoOfInstalment').prop('disabled',false);
    //    }
    //    else if($('#cboLoanType').val()==2){
    //        $('#txtNoOfInstalment').prop('disabled',true);
    //        $('#txtNoOfInstalment').val("");
    //    }
    //});

    $('#txtNoOfInstalment').change(function(e){
        InstallmentCalculation();
    });

    $("#txtNoOfInstalment").keyup(function (e) {
        InstallmentCalculation();
    });

    $("#txtLoanAmount").keyup(function (e) {
        InstallmentCalculation();
        InWords();
    });

    $("#txtInstalmentAmount").keyup(function (e) {
        var nLoanAmount = icsRemoveComma($('#txtLoanAmount').val());
        nLoanAmount=($('#chkAdjustable').is(':checked'))? parseFloat($('#txtLastLoanInfo').data('LoanBalance')) + parseFloat(nLoanAmount): nLoanAmount;

        var nInstallmentAmount = icsRemoveComma($('#txtInstalmentAmount').val());
        if(nInstallmentAmount>0 && nLoanAmount>0){
            $('#txtNoOfInstalment').val(Math.ceil(parseFloat(nLoanAmount)/parseFloat(nInstallmentAmount)));
        }
        else{
            $('#txtNoOfInstalment').val("0");
        }
    });



    function AdjustableUIControl(bIsAdjustable){
        debugger;
        if(bIsAdjustable){
            //$('#lblLoanDate').text("Installment Date");
            $('#cboLoanType, #txtInterestRate').prop('disabled',true);
            //$('#dtExpect').datebox({'disabled':true});

            $('#cboLoanType').val($('#cboLoanType').data('LoanType'));
            $('#txtInterestRate').val($('#txtInterestRate').data('InterestRate'));
            //$('#dtExpect').datebox('setValue',$('#dtExpect').data('EncashDate'));
        }
        else{
            $('#lblLoanDate').text("Loan Disburse Date");
            $('#cboLoanType, #txtInterestRate').prop('disabled',false);
            $('#dtExpect').datebox({'disabled':false});

            $('#cboLoanType').val(((_oLoanRequest!=null && _oLoanRequest.LoanRequestID>0)? _oLoanRequest.LoanType :0));
            $('#txtInterestRate').val(((_oLoanRequest!=null && _oLoanRequest.LoanRequestID>0)? _oLoanRequest.InterestRate :0));
            $('#dtExpect').datebox('setValue',((_oLoanRequest!=null && _oLoanRequest.LoanRequestID>0)? _oLoanRequest.ExpectDateStr :icsdateformat(new Date())));
            //$('#txtInterestRate').data('InterestRate', 0);
        }
    }

    $('#chkAdjustable').change(function(e){
        AdjustableUIControl($('#chkAdjustable').is(':checked'));
        InstallmentCalculation();
        InWords();
    });

    $('.cls-loan-on').change(function(e){
        if($('#btnPfLoan').is(':checked')){
            $('#regionSalaryInfo').hide();
            $('#regionPFInfo').show();
        }
        else{
            $('#regionSalaryInfo').show();
            $('#regionPFInfo').hide();
        }
        LoanAdjustment($('#txtLastLoanInfo').data('LastLoanInfo'));

        if($('#txtEmployee').data('EmployeeID')>0){
            GETEmployeeInfo($('#txtEmployee').data('EmployeeID'));
        }
        
    });
    
    function Initialization(oLoanRequest, sOperation){
        debugger;
        ResetControll();
        if(oLoanRequest.LoanRequestID>0){
            $('#btnPrint').show();
            RefreshControl(oLoanRequest);
            DynamicRefreshList(_oLoanInstallments, 'tblLoanRequestDetail');
            InstallmentSummary(_oLoanInstallments);
        }

        if(sOperation=="View")
        {
            $('#toolbar,#btnSave,.ics-pick,#region-approval, #btnApprove').hide();
            $('input,select,textarea').not('#txtRequestNo, .emp-info').prop('disabled',true);
            $('.td-col-7 input').css('width','94%');
            $('#region-action').css('width','100%');
        }
        else if(sOperation=="Approve"){
            $('#btnSave,.ics-pick').hide();
            $('#toolbar,#region-approval,#btnApprove').show();
            $('input,select,textarea').not('#txtRequestNo, #txtApprovalNote, .emp-info').prop('disabled',true);
            $('select,textarea,.only-number,.number,#txtRemarks,#dtExpect').prop('disabled',false);
            $('#txtTotalAmount').prop('disabled',true);
            $('#dtExpect').datebox({'disabled':false});
            $('#dtExpect').datebox('setValue', oLoanRequest.ExpectDateStr);
            $('.td-col-7 input').css('width','94%');
        }
        else{
            $('#region-approval, #btnApprove').hide();
            $('#toolbar,#btnSave,.ics-pick').show();
            $('input,select,textarea').not('#txtRequestNo, .emp-info').prop('disabled',false);
            $('#txtTotalAmount').prop('disabled',true);
            $('.td-col-7 input').not('#txtLastLoanInfo').css('width','68%');
            $('#region-action').css('width','100%');
        }
        AdjustableUIControl(oLoanRequest.IsAdjustable);
     
    }

    function ResetControll(){
        $('#btnPfLoan').prop('checked',true);
        $('#regionSalaryInfo').hide();

        $('.reset-text').val("");
        $('#dtRequest,#dtExpect').datebox('setValue', icsdateformat(new Date()));
        $('.number').val("0.00");
        $('#txtEmployee').data('EmployeeID',0);
        $('#txtLastLoanInfo').data('LoanBalance',0);
        $('#txtLastLoanInfo').data('LastLoanInfo','');
        $('#cboLoanType').data('LoanType',0);
        $('#txtInterestRate').data('InterestRate',0);
        $('#dtExpect').data('EncashDate',icsdateformat(new Date()));
        $('#chkAdjustable').data('EmployeeLoanID',0);
        $('.region-adjustable').hide();
        $('.region-in-words').attr('colspan',6);
        DynamicRefreshList([], 'tblLoanRequestDetail');
        $('#btnPrint').hide();
    }

    function RefreshControl(oLoanRequest){
        _oLoanRequest=oLoanRequest;
        $('#txtEmployee').data('EmployeeID',oLoanRequest.EmployeeID);
        $('#txtRequestNo').val(oLoanRequest.RequestNo);
        $('#dtRequest').datebox('setValue',oLoanRequest.RequestDateStr);
        $('#txtEmployee').val(oLoanRequest.EmployeeNameCode);

        $('#txtOfficialInfo').val(oLoanRequest.OfficialInfo);
        $('#txtSalaryInfo').val(oLoanRequest.SalaryInfo);
        $('#txtPFInfo').val(oLoanRequest.PFInfo);
        
        $('#txtLastLoanInfo').val(oLoanRequest.LastLoanInfo.split('~')[0]);
        $('#txtLoanAmount').val(formatPrice(oLoanRequest.LoanAmount));

        $('#cboLoanType').val(oLoanRequest.LoanType);
        $('#txtNoOfInstalment').val(oLoanRequest.NoOfInstallment);
        $('#txtInstalmentAmount').val(formatPrice(oLoanRequest.InstallmentAmount));
        $('#txtInterestRate').val(formatPrice(oLoanRequest.InterestRate));

        $('#dtExpect').datebox('setValue',oLoanRequest.ExpectDateStr);
        $('#txtLoanPurpose').val(oLoanRequest.Purpose);

        $('#txtRemarks').val(oLoanRequest.Remarks);

        if(oLoanRequest.IsPFLoan){
            $('#btnPfLoan').prop('checked',true);
        }
        else{
            $('#btnSalaryLoan').prop('checked',true);
        }

        //$('#txtInWords').val(AmountInWordConversion(parseFloat(oLoanRequest.LoanAmount),$("#txtInWords").data('CurrencySymbol')));


        LoanAdjustment(oLoanRequest.LastLoanInfo);
        $('#chkAdjustable').data('EmployeeLoanID',oLoanRequest.EmployeeLoanID);

        if(oLoanRequest.IsAdjustable){
            
            $('#chkAdjustable').prop('checked',true);
            $('#txtTotalAmount').val(formatPrice(parseFloat($('#txtLastLoanInfo').data('LoanBalance'))+ parseFloat(oLoanRequest.LoanAmount)));
            InWords();
        }
        else{
            $('#chkAdjustable').prop('checked',false);
            $('#txtTotalAmount').val(formatPrice(parseFloat(oLoanRequest.LoanAmount)));
            InWords();
        }
        $('#txtInterestRate').data('InterestRate',oLoanRequest.InterestRate);
        $('#cboLoanType').data('LoanType',oLoanRequest.LoanType);
        //DynamicRefreshList(oLoanRequest.LoanRequestDetails, 'tblLoanRequestDetail');
    }

    function Validation(bIsAll){

        if(bIsAll && parseInt($('#txtEmployee').data('EmployeeID'))<=0){
            $('#txtEmployee').focus();
            $('#txtEmployee').addClass("errorFieldBorder");
            alert('Employee required.');
            return false;
        }
        else{
            $('#txtEmployee').removeClass("errorFieldBorder");
        }

        if($.trim($('#txtLoanAmount').val())=='' || parseFloat(icsRemoveComma($('#txtLoanAmount').val()))<=0){
            $('#txtLoanAmount').focus();
            $('#txtLoanAmount').addClass("errorFieldBorder");
            alert('Loan amount required.');
            return false;
        }
        else{
            $('#txtLoanAmount').removeClass("errorFieldBorder");
        }

        if($('#cboLoanType').val()<=0){
            $('#cboLoanType').focus();
            $('#cboLoanType').addClass("errorFieldBorder");
            alert('Select loan type');
            return false;
        }
        else{
            $('#cboLoanType').removeClass("errorFieldBorder");
        }

        if(($.trim($('#txtNoOfInstalment').val())=='' || parseFloat(icsRemoveComma($('#txtNoOfInstalment').val()))<=0)){
            $('#txtNoOfInstalment').focus();
            $('#txtNoOfInstalment').addClass("errorFieldBorder");
            alert('Number of installment required.');
            return false;
        }
        else{
            $('#txtNoOfInstalment').removeClass("errorFieldBorder");
        }

        if($.trim($('#txtInstalmentAmount').val())=='' || parseFloat(icsRemoveComma($('#txtInstalmentAmount').val()))<=0){
            $('#txtInstalmentAmount').focus();
            $('#txtInstalmentAmount').addClass("errorFieldBorder");
            alert('Installment amount required.');
            return false;
        }
        else{
            $('#txtInstalmentAmount').removeClass("errorFieldBorder");
        }

        //if((parseFloat(icsRemoveComma($('#txtInstalmentAmount').val()))< (parseFloat(icsRemoveComma($('#txtLoanAmount').val())))*parseInt($('#txtNoOfInstalment').val())) || (parseFloat(icsRemoveComma($('#txtInstalmentAmount').val()))> (parseFloat(icsRemoveComma($('#txtLoanAmount').val())))*parseInt($('#txtNoOfInstalment').val())) ){
        //    $('#txtInstalmentAmount').focus();
        //    $('#txtInstalmentAmount').addClass("errorFieldBorder");
        //    alert("Installment amount * number of installment must be eauivalent to loan amount.");
        //    return false;
        //}
        //else{
        //    $('#txtInstalmentAmount').removeClass("errorFieldBorder");
        //}

        //if($.trim($('#txtInterestRate').val())=='' || parseFloat(icsRemoveComma($('#txtInterestRate').val()))<=0){
        //    $('#txtInterestRate').focus();
        //    $('#txtInterestRate').addClass("errorFieldBorder");
        //    alert('Interest rate required.');
        //    return false;
        //}
        //else{
        //    $('#txtInterestRate').removeClass("errorFieldBorder");
        //}

        if(!$('#chkAdjustable').is(':checked') && bIsAll && (new Date($('#dtRequest').datebox('getValue')) > new Date($('#dtExpect').datebox('getValue')))){

            alert('Loan expected date must be later than requested date.');
            return false;
        }
        return true;
    }

    function RefreshObject(IsApprove)
    {
        debugger;
        var oLoanRequest={
            LoanRequestID : (_oLoanRequest!=null && _oLoanRequest.LoanRequestID>0)? _oLoanRequest.LoanRequestID:0,
            RequestNo : (_oLoanRequest!=null && _oLoanRequest.LoanRequestID>0)? _oLoanRequest.RequestNo:"",
            EmployeeID : parseInt($('#txtEmployee').data('EmployeeID')),
            LoanType : $('#cboLoanType').val(),
            RequestDate : $('#dtRequest').datebox('getValue'),
            ExpectDate : $('#dtExpect').datebox('getValue'),
            Purpose : $.trim($('#txtLoanPurpose').val()),
            RequestStatus : _oLoanRequest.RequestStatus,
            LoanAmount : parseFloat(icsRemoveComma($('#txtLoanAmount').val())),
            NoOfInstallment : parseFloat(icsRemoveComma($('#txtNoOfInstalment').val())),
            InstallmentAmount : parseFloat(icsRemoveComma($('#txtInstalmentAmount').val())),
            InterestRate : parseFloat(icsRemoveComma($('#txtInterestRate').val())),
            Remarks : $.trim($('#txtRemarks').val()),
            EmployeeLoanID: ($('#chkAdjustable').is(':checked'))? $('#chkAdjustable').data('EmployeeLoanID'):0,
            IsPFLoan: ($('#btnPfLoan').is(':checked'))? true: false,
            Params: (IsApprove)? $.trim($('#txtApprovalNote').val()): ""
        };
        return oLoanRequest;
    }


    function SaveApprove(IsApprove){
        debugger;
        if(!Validation(true)) return false;

        var oLoanRequest=RefreshObject(IsApprove);
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLoanRequest,
            ObjectId: oLoanRequest.LoanRequestID,
            ControllerName: "LoanRequest",
            ActionName: (IsApprove)?"Approve":"Save",
            TableId: "",
            IsWinClose: false,
            Message: (IsApprove)? "Approved Successfully":((oLoanRequest.LoanRequestID>0)?"Update Successfully." : "Save Successfully.")
        };

        if(!Validation(false)) return false;
        var oInstallment=GenerateInstallMents();
        $.icsDataGets(oInstallment, function (response) {
            if (response.status && response.objs != null) {
                if (response.objs.length > 0 && response.objs[0].Type>=0) {
                    DynamicRefreshList(response.objs, "tblLoanRequestDetail");
                    InstallmentSummary(response.objs);

                    $.icsSave(obj, function (response) {
                        if (response.status && response.obj != null) {
                            if (response.obj.LoanRequestID > 0) {
                                //RefreshControl(response.obj);
                                _oLoanRequest=response.obj;
                                SetIntoSessionStorage();
                                if((IsApprove && response.obj.RequestStatus==2) || (!IsApprove && response.obj.RequestStatus==1))
                                    window.location.href = sessionStorage.getItem("BackLink");
                            }
                        }
                    });
                }
                else{
                    alert(response.objs[0].ErrorMessage);
                    DynamicRefreshList([], "tblLoanRequestDetail");
                }
            }
        });
        
    }

    $("#btnSave").click(function (e){
        SaveApprove(false);
    });

    $('#btnApprove').click(function(e){

        if(!confirm("Are you sure to approve this loan?"))
            return false;
        SaveApprove(true);
    });


    $("#btnResetEmployee").click(function () {
        $("#txtEmployee").val("");
        $('.emp-info').val("");
        $('#txtEmployee').data('EmployeeID',0);
    });

    $("#btnPickEmployee").click(function () {

        var sEmployeeName=$.trim($("#txtEmployee").val());
        if(sEmployeeName==""){ alert("Type employee name to search."); return false; }
        GetEmployees(sEmployeeName);
    });

    $("#txtEmployee").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){
            var sEmployeeName=$.trim($("#txtEmployee").val());
            if(sEmployeeName==""){ alert("Type employee name to search."); return false; }
            GetEmployees(sEmployeeName);
        }
        else if(nkeyCode==8){
            $("#txtEmployee").val("");
            $('.emp-info').val("");
            $('#txtEmployee').data('EmployeeID',0);
        }
    });

    function GetEmployees(sEmployeeName){

        var oEmployee = { Params:sEmployeeName+'~'+0 };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeForLoan",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "NameCode", title: "Name", width: 180, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 90, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 110, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winEmployeePicker',
                        winclass:'clsEmployeePicker',
                        winwidth: 450,
                        winheight: 400,
                        tableid: 'tblEmployeePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'NameCode',
                        windowTittle: 'Employee List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerbutton(oPickerParam);//multiplereturn, winclassName
                    $('#tblEmployeePicker').datagrid('selectRow',0);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("No employee found.");
            }
        });


    }

    function IntializeEmployeePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            EmployeeSelect(oPickerobj);
        });
        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                EmployeeSelect(oPickerobj);
            }
        });
    }

    function EmployeeSelect(oPickerobj){
        var oEmployee = $('#'+oPickerobj.tableid).datagrid('getSelected');
        if (oPickerobj.winid == 'winEmployeePicker')
        {
            debugger;
            if(oEmployee !=null  && oEmployee.EmployeeID>0){
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();
                $('#txtEmployee').val(oEmployee.NameCode);
                $('#txtEmployee').data('EmployeeID',oEmployee.EmployeeID);
                GETEmployeeInfo(oEmployee.EmployeeID);
            }
            else{
                alert("Please select employee.");
            }
        }
    }

    function GETEmployeeInfo(nEmployeeID)
    {
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: {EmployeeID:nEmployeeID, IsPFLoan: $('#btnPfLoan').is(':checked')},
            ControllerName: "LoanRequest",
            ActionName: "GetEmployeeInfo",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj != null) {
                $('#txtOfficialInfo').val(response.obj.OfficialInfo);
                $('#txtSalaryInfo').val(response.obj.SalaryInfo);
                $('#txtPFInfo').val(response.obj.PFInfo);
                //$('#txtLastLoanInfo').val(response.obj.LastLoanInfo.split('~')[0] +';'+ ((response.obj.LastLoanInfo.split('~')[0]!="N/A")? ' Adjustable With: '+ (((parseInt(response.obj.LastLoanInfo.split('~')[4])) == 1)? "PF Loan" : "Salary Loan") : ''));
                $('#txtLastLoanInfo').val(response.obj.LastLoanInfo.split('~')[0]);
                $('#chkAdjustable').data('EmployeeLoanID', response.obj.EmployeeLoanID);
                LoanAdjustment(response.obj.LastLoanInfo);
                $('#txtLoanAmount').focus().select();
            }
            else{
                $('.emp-info').val("");
            }
        });
    }


    function GenerateInstallMents(){
        
        var oLoanRequest={
            LoanType : $('#cboLoanType').val(),
            LoanAmount : ($('#chkAdjustable').is(':checked'))? parseFloat($('#txtLastLoanInfo').data('LoanBalance')) + parseFloat(icsRemoveComma($('#txtLoanAmount').val()))   :   parseFloat(icsRemoveComma($('#txtLoanAmount').val())),
            NoOfInstallment : parseFloat(icsRemoveComma($('#txtNoOfInstalment').val())),
            InstallmentAmount : parseFloat(icsRemoveComma($('#txtInstalmentAmount').val())),
            InterestRate : parseFloat(icsRemoveComma($('#txtInterestRate').val())),
            ExpectDate : $('#dtExpect').datebox('getValue'),
            EmployeeLoanID : ($('#chkAdjustable').is(':checked'))? $('#chkAdjustable').data('EmployeeLoanID'):0,
            EmployeeID : $('#txtEmployee').data('EmployeeID'),
            IsAdjustable:$('#chkAdjustable').is(':checked'),
            Params : parseFloat(icsRemoveComma($('#txtLoanAmount').val()))  //txtLoanAmount
        };

        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oLoanRequest,
            ControllerName: "LoanRequest",
            ActionName: "GetsInstallment",
            IsWinClose: false
        };

        return obj;
    }


    $('#btnInstallmentGenerate').click(function(e){

        if(!Validation(false)) return false;
        var obj=GenerateInstallMents();
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs != null) {
                if (response.objs.length > 0 && response.objs[0].Type>=0) {
                    DynamicRefreshList(response.objs, "tblLoanRequestDetail");
                    InstallmentSummary(response.objs);
                }
                else{
                    alert(response.objs[0].ErrorMessage);
                    DynamicRefreshList([], "tblLoanRequestDetail");
                }
            }
        });
    });


    
    $('#btnPrint').click(function (e)
    {
        if (_oLoanRequest ==null || _oLoanRequest.LoanRequestID <=0 ) { alert("No loan request found to print."); return ; }
        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/LoanRequest/PrintLoanRequest?nId="+_oLoanRequest.LoanRequestID+"&nts="+tsv, "_blank");
    });

    $('#btnClose').click(function(e){
        window.location.href = sessionStorage.getItem("BackLink");
    });


    function SetIntoSessionStorage(){

        debugger;
        var sBackLink=sessionStorage.getItem('BackLink');
        var nIndex=sessionStorage.getItem('SelectedRowIndex');
        var oLoanRequests= (sessionStorage.getItem('LoanRequests').length>0)? jQuery.parseJSON(sessionStorage.getItem('LoanRequests')):[] ;
        if(_oLoanRequest!=null && _oLoanRequest.LoanRequestID>0){

            if(nIndex>=0){
                oLoanRequests[nIndex]=_oLoanRequest;
            }
            else{
                oLoanRequests.push(_oLoanRequest);
                nIndex=oLoanRequests.length-1;
            }
        }
        sessionStorage.clear();
        sessionStorage.setItem("BackLink", sBackLink);
        sessionStorage.setItem("SelectedRowIndex", nIndex);
        sessionStorage.setItem("LoanRequests", JSON.stringify(oLoanRequests));
    }

    $('.only-number').keydown(function (e) {

        if ((e.which >= 48 && e.which <= 57) || (e.which >= 96 && e.which <= 105)|| e.which==9 || e.which==38 || e.which==40 || e.which==8 || e.which==37 || e.which==39 || e.which==46) {
            return true;
        }
        else {
            return false
        }
    });


</script>