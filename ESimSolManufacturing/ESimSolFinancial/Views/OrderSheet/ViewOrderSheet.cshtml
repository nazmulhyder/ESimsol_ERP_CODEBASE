<html>
<head>
    @{ViewBag.Title = "Order Sheet";}
</head>
<body>
    @model ESimSol.BusinessObjects.OrderSheet
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>

    <div id="winMeasurement" class="easyui-window" title="Poly Measurement List" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div>
            <table id="tblPolyMeasurements" class="easyui-datagrid" rownumbers="true" pagination="false" singleselect="true" width="450px" height="350px" toolbar="#toolbarMeasurement">
                <thead>
                    <tr>
                        <th field="PolyMeasurementTypeSt" width="120">Measurement Type</th>
                        <th field="Measurement" width="300">Measurement</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbarMeasurement">
                <select style="width: 200px;height:21px" id="cboPolyMeasurementType"></select>
                <input type="text" id="txtPolyMeasurement" style="width:200px" placeholder="Search By Measurement" />
            </div>
        </div>
        <fieldset style="width:98%;height:8%; vertical-align:top;">
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;">
                <tr>
                    <td style="width:8%;text-align:right;">
                        <a id="btnokMeasureement" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="SelectMeasurement()">Ok</a>
                        <a id="btnCloseMeasurement" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="CloseMeasurementPick()">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>

    <div id="winChangeColor" class="easyui-window" title="Cahange Color Size" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div>
            <fieldset>
                <legend style="font-weight:bold">Update Info : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:125px; text-align:right">
                            Color :
                        </td>
                        <td style="width:250px">
                            <input type="text" style="width:190px;" id="txtChangeColorName" /><input type="button" id="btnChangColorPick" value="Pick" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:125px; text-align:right">
                            Product :
                        </td>
                        <td style="width:250px">
                            <input type="text" style="width:190px;" id="txtChangeProductName" /><input type="button" id="btnChangProductPick" value="Pick" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:125px; text-align:right">
                            Measurement :
                        </td>
                        <td style="width:250px">
                            <input type="text" placeholder="Measurement" id="txtChangeMeasurement" style="width:100%" />
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
        <fieldset style="width:95%;height:8%; vertical-align:top;">
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;">
                <tr>
                    <td style="width:7%;text-align:right;">
                        <a id="btnAddUpdteInfo" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="UpdateInfo()">Update</a>
                        <a id="btnCloseUpdaeInfo" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="CloseUpdateInfo()">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
    <div id="winContactPersonnel" class="easyui-window" title="Add Contact Personeel" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div>
            <fieldset>
                <legend style="font-weight:bold"> Contact Personnel Informations : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:125px; text-align:right">
                            Name :
                        </td>

                        <td style="width:200px">
                            <input type="text" style="width: 200px;" id="txtName" />
                        </td>
                        <td style="width:50px"> </td>
                        <td style="width:125px; text-align:right">
                            Address :
                        </td>
                        <td style="width:300px">
                            <input type="text" style="width: 300px;" id="txtAddress" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:125px; text-align:right">
                            Phone :
                        </td>

                        <td style="width:200px">
                            <input type="text" style="width: 200px;" id="txtPhone" />
                        </td>
                        <td style="width:50px"> </td>
                        <td style="width:125px; text-align:right">
                            Email :
                        </td>
                        <td style="width:300px">
                            <input type="text" style="width: 300px;" id="txtEmail" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:125px; text-align:right">
                            Note :
                        </td>
                        <td colspan="4">
                            <input type="text" style="width: 690px;" id="txtNote" />
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
        <fieldset style="width:97%;height:8%; vertical-align:top;">
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;">
                <tr>
                    <td style="width:7%;text-align:right;">
                        <a id="btnAddContactPersonnel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="AddContactPersonnel()">Save</a>
                        <a id="btnCloseContactPersonnel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="CloseContactPersonnel()">Close</a>
                    </td>

                </tr>
            </table>
        </fieldset>
    </div>
    <div class="menuMainCollectionTable">
        <div class="easyui-panel" title="Order Sheet" style="font-family:Tahoma; text-align:center; height:89%;">
            <div style="width:100%;">
                <fieldset>
                    <legend style="font-weight:bold">Order Sheet info: </legend>
                    <table style="width:100%" cellpadding="1" cellspacing="1">
                        <tr>
                            <td style="width: 10%; text-align: right">
                                PO No:
                            </td>
                            <td style="width: 25%; text-align: left">
                                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                    <tr>
                                        <td style="width:30%">@Html.TextBoxFor(model => model.PONo, new { style = "width: 100%;", id = "txtPONo", disabled = "disabled" })</td>
                                        <td style="width:30%; text-align:right;">Order Date:</td>
                                        <td style="width:40%"><input id="txtOrderDate" type="text" class="easyui-datebox" style="width: 100%;" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                                    </tr>
                                </table>

                            </td>
                            <td style="width: 10%; text-align:right;">
                                Party PO No:
                            </td>
                            <td style="width:20%; text-align:left;">
                                @Html.TextBoxFor(model => model.PartyPONo, new { style = "width:97%;", id = "txtPartyPONo" })
                            </td>
                            <td style="width:10%; text-align: right">
                                Payment Type:
                            </td>
                            <td style="width: 25%; text-align: right">
                                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                    <tr>
                                        <td style="width:50%"><select id="cboPaymentType" style="width:100%"></select></td>
                                        <td style="width:50%; text-align:right;">Currency:<select id="cboCurrency" style="width:50%" class="ChangeCurrency"></select></td>
                                    </tr>
                                </table>
                            </td>
                        </tr>

                        <tr>
                            <td style="width: 10%; text-align: right">
                                Buyer:
                            </td>
                            <td style="width: 25%; text-align: left">
                                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                    <tr>
                                        <td style="width:85%;">@Html.TextBoxFor(model => model.BuyerName, new { style = "width: 100%;", id = "txtBuyerName" })</td>
                                        <td style="width:15%; text-align:right;"><input type="button" style="width:100%" value="Pick" id="btnPickBuyer" /></td>
                                    </tr>
                                </table>

                            </td>
                            <td style="width: 10%; text-align: right">
                                E.Delivery:
                            </td>
                            <td style="width: 20%; text-align: left">
                                <input id="txtExpectedDeliveryDate" type="text" class="easyui-datebox" style="width: 100%;" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            </td>
                            <td style="width:10%; text-align: right">
                                Concern Person:
                            </td>
                            <td style="width: 25%; text-align: right">
                                <select id="cboMktPerson" style="width: 100%"></select>
                            </td>

                        </tr>

                        <tr>
                            <td style="width: 10%; text-align: right">
                                Customer:
                            </td>
                            <td style="width: 25%; text-align: left">
                                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                    <tr>
                                        <td style="width:85%;">@Html.TextBoxFor(model => model.ContractorName, new { style = "width: 100%;", id = "txtContractorName" })</td>
                                        <td style="width:15%; text-align:right;"><input type="button" style="width:100%" value="Pick" id="btnPickContractor" /></td>
                                    </tr>
                                </table>

                            </td>
                            <td style="width: 10%; text-align: right">
                                Contact Person:
                            </td>
                            <td style="width: 20%; text-align: left">
                                <table border="0" cellpadding="0" cellspacing="0" style="width:100%;padding:0px;">
                                    <tr>
                                        <td style="width:88%;"><select id="cboContactorContactPerson" style="width:100%"></select></td>
                                        <td style="width:12%; text-align:right;"><input type="button" style="width:100%; text-align:right;" value="New" id="btnAddContactPerson" onclick="AddContactPerson(true)" /></td>
                                    </tr>
                                </table>
                            </td>
                            <td style="width:10%; text-align: right">
                                Priority:
                            </td>
                            <td style="width: 25%; text-align: right">
                                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                    <tr>
                                        <td style="width:50%"><select id="cboPriorityLevel" style="width:100%"></select></td>
                                        <td style="width:50%; text-align:right;">Rate On: <input type="number" style="width:50%;text-align:right;" id="txtRateUnit" /></td>
                                    </tr>
                                </table>
                            </td>


                        </tr>
                        <tr>
                            <td style="width: 10%; text-align: right">
                                Delivery To:
                            </td>
                            <td style="width: 25%; text-align: left">
                                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                    <tr>
                                        <td style="width:85%">@Html.TextBoxFor(model => model.DeliveryToName, new { style = "width: 100%;", id = "txtDeliveryToName" })</td>
                                        <td style="width:15%; text-align:right;"><input type="button" style="width:100%" value="Pick" id="btnPickDeliveryTo" /></td>
                                    </tr>
                                </table>

                            </td>
                            <td style="width: 10%; text-align: right">
                                Delivery C. P.:
                            </td>
                            <td style="width: 20%; text-align: left">
                                <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                    <tr>
                                        <td style="width:88%"><select id="cboDeliveryContactPerson" style="width:100%"></select></td>
                                        <td style="width:12%; text-align:right;"><input type="button" style="width:100%;text-align:right;" value="New" id="btnAddDeliveryContactPerson" onclick="AddContactPerson(false)" /></td>
                                    </tr>
                                </table>
                            </td>
                            <td style="width: 10%; text-align: right">
                                Note:
                            </td>
                            <td style="width: 25%; text-align: right">@Html.TextBoxFor(model => model.Note, new { style = "width:99%;", id = "txtNote" })</td>
                        </tr>
                    </table>
                </fieldset>
            </div>

            <table id="tblOrderSheetDetail" title="Order Sheet Details" class="easyui-datagrid" style="height:300px; width:100%;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar" data-options="onClickRow: onClickRow">
                <thead data-options="frozen:true">
                    <tr>
                        <th field="ProductName" width="13%" align="left">Product</th>
                        <th field="SizeName" width="6%" align="left">Size</th>
                        <th field="ColorName" width="8%" align="left">Color</th>
                        <th field="UnitSymbol" width="5%" align="left">Unit</th>
                        <th width="7%" align="right" data-options="field:'Qty',editor:{type:'numberbox',options:{precision:2}}">Qty</th>
                        <th width="7%" align="right" data-options="field:'UnitPrice',editor:{type:'numberbox',options:{precision:4}}">Rate</th>
                        <th field="Amount" width="10%" formatter="formatPrice" align="right">Amount</th>
                        <th field="RecipeName" width="10%" align="right">Recipe</th>
                    </tr>
                </thead>
                <thead>
                    <tr>
                        <th width="10%" align="left" data-options="field:'ProductDescription',editor:{type:'text',options:{precision:0}}">Product Description</th>
                        <th width="12%" align="left" field="Measurement">Measurement</th>
                        <th width="20%" align="left" data-options="field:'StyleDescription',editor:{type:'text',options:{precision:0}}">Style Description</th>
                        <th width="10%" align="left" data-options="field:'BuyerRef',editor:{type:'text',options:{precision:0}}">Buyer Ref</th>
                        <th width="7%" align="right" data-options="field:'ColorQty',editor:{type:'numberbox',options:{precision:0}}">Color Qty</th>
                        <th width="10%" align="left" data-options="field:'Note',editor:{type:'text',options:{precision:0}}">Remarks</th>
                        <th field="ModelReferenceName" width="10%" align="left">Model Ref</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbar">
                <table border="0" cellpadding="0" cellspacing="1" style="width:100%;">
                    <tr>
                        <td style="width:20%"><input type="text" placeholder="Type Product & Press Enter" id="txtProductName" style="width:78%" /><input type="button" style="width:19%;" id="btnProductPiker" value="Pick" /></td>
                        <td style="width:20%;"><select id="cboUnit" style="width:100%;"></select></td>
                        <td style="width:20%"><input type="text" placeholder="Product Description" id="txtProductDescription" style="width:100%" /></td>
                        <td style="width:20%;text-align:right;"><input type="text" placeholder="Type Buyer Reference" id="txtBuyerRef" style="width:86%" /></td>
                        <td style="width:20%;text-align:right;">
                            Recipe: <select id="cboRecipe" style="width:77%"><option>----select recipe----</option></select>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:20%"><input type="text" placeholder="Type Color & Press Enter" id="txtColorName" style="width:50%" /><input type="button" style="width:7%; text-align:left;" id="btnColorPick" value="P" />&nbsp;<label id="lblColorQtyCaption">C.Qty:</label><input type="text" id="txtColorQty" style="width:15%" /> </td>
                        <td style="width:20%"><input type="text" placeholder="Type Style Description" id="txtStyleDescription" style="width:100%" /></td>
                        <td style="width:20%"><input type="text" placeholder="Measurement" id="txtMeasurement" style="width:100%" /></td>
                        <td style="width:20%;text-align:right;"><input type="text" id="txtQty" placeholder="Type Qty" style="width:42%" />&nbsp;<input type="text" id="txtRate" placeholder="Type Price" style="width:42%" /></td>
                        <td style="width:20%;text-align:right;"><a id="btnAddDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a><a id="btnRemoveDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a><a id="btnUpdateColor" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true"></a><a id="btnRefreshDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true"></a></td>
                    </tr>
                </table>
            </div>
            <table border="0" cellpadding="0" cellspacing="0" style="width:100%;">
                <tr>
                    <td style="width:28%;  text-align:right;font-weight:bold;">Total:</td>
                    <td style="width:10%;  text-align:right;font-weight:bold;"><label id="lblTotalQty">0</label> </td>
                    <td style="width:3%;  text-align:right;font-weight:bold;"> </td>
                    <td style="width:13%; text-align:right; font-weight:bold;"><label id="lblCurrencySymbol"></label>&nbsp;<label id="lblTotalAmount">0.00</label> </td>
                    <td style="width:41%;  text-align:right;font-weight:bold;"> </td>
                </tr>
            </table>

        </div>
        <fieldset style="height:8%">
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                <tr>
                    <td style="width:83%; text-align:right"></td>
                    <td style="width:17%;text-align:right;">
                        <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true">Approve</a>
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" onclick="Close()" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>
<script type="text/javascript">
    var _sBaseAddress = "";
    var _oOrderSheet=null;
    var _oPaymentTypes=[];
    var _oPriorityLevels=[];
    var _oMktPersons = [];
    var _nBUID = 0;
    var _oProduct = null;
    var _oPolyMeasurement = null;
    var _oColorCategory = null;
    var _oSizeCategory =  null;
    var _lBackLink = "";
    var _nORSType = 0;
    var _sOrderSheetHeader = "";
    var _bIsBuyer= true;
    var _oCurrencyList = [];
    var _oRecipies = [];
    var _oPolyMeasurementTyps = [];
    var _oPolyMeasurement = null;
    $(document).ready(function () {
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oOrderSheet =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oPriorityLevels =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.PriorityLebels));
        _oPaymentTypes =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.PaymentTypes));
        _oMktPersons = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.MktPersons));
        _oCurrencyList = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.CurrencyList));
        _oRecipies = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Recipes));
        _oPolyMeasurementTyps =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PolyMeasurementTypes));
        debugger;
        _nBUID  = sessionStorage.getItem("BUID");
        _lBackLink = sessionStorage.getItem("BackLink");
        _nORSType = sessionStorage.getItem("ORSType");
        _sOrderSheetHeader = sessionStorage.getItem("OrderSheetHeader");
        $('#txtRate').icsCurrencyBox(null, null,4);
        $('#txtQty').icsCurrencyBox(null, null,2);
        $('#txtColorQty').icsCurrencyBox(null, null,0);
        $('#txtRateUnit').val(_oOrderSheet.RateUnit);
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();
        $("#cboCurrency").icsLoadCombo({List: _oCurrencyList,OptionValue: "CurrencyID",DisplayText: "CurrencyName"});
        $("#cboPriorityLevel").icsLoadCombo({List: _oPriorityLevels,OptionValue: "id",DisplayText: "Value"});
        $("#cboPaymentType").icsLoadCombo({List: _oPaymentTypes,OptionValue: "id",DisplayText: "Value"});
        $("#cboMktPerson").icsLoadCombo({List: _oMktPersons,OptionValue: "MarketingAccountID",DisplayText: "Name"});
        $("#cboRecipe").icsLoadCombo({List: _oRecipies,OptionValue: "RecipeID",DisplayText: "RecipeName"});
        $('#txtOrderDate').datebox('setValue',_oOrderSheet.OrderDateInString);
        $('#txtExpectedDeliveryDate').datebox('setValue',_oOrderSheet.ExpectedDeliveryDateInString);
        $('#btnApprove').hide();
        if(parseInt(_oOrderSheet.OrderSheetID)>0)
        {
            RefreshControl(_oOrderSheet);
        }
    });
    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }

    $('.ChangeCurrency').change(function(){
        SetCurrency();
    });
    function SetCurrency()
    {
        if(parseInt($('#cboCurrency').val())!=0)
        {
            for(var i=0;i<_oCurrencyList.length;i++)
            {
                if(parseInt(_oCurrencyList[i].CurrencyID)== parseInt($('#cboCurrency').val()))
                {
                    $('#lblCurrencySymbol').html(_oCurrencyList[i].Symbol);
                    return;
                }
            }

        }
    }

    function RefreshControl(oOrderSheet){
        debugger;

        $("#txtContractorName,#txtDeliveryToName,#txtBuyerName ").addClass("fontColorOfPickItem");
        GetContactPerson(oOrderSheet.ContractorID,true);
        $('#cboPriorityLevel').val(oOrderSheet.Priority);
        $('#cboPaymentType').val(oOrderSheet.PaymentType);
        $('#cboCurrency').val(oOrderSheet.CurrencyID);
        GetContactPerson(oOrderSheet.DeliveryTo,false);
        $('#cboMktPerson').val(oOrderSheet.MKTEmpID);
        RefreshDetailList(oOrderSheet.OrderSheetDetails);
        SetCurrency();
        SetTotal();
        if(_sOrderSheetHeader=="View Order Sheet")
        {
            $('#btnSave,#btnAddDetail,#btnUpdateColor,#btnRemoveDetail').hide();
            $("#btnPickContractor,#btnPickDeliveryTo,#btnProductPiker,#btnColorPick,#txtProductName,#txtColorName,#txtColorQty,#txtProductDescription,#txtRateUnit").prop('disabled', true);
        }
        if(_sOrderSheetHeader=="Approved Order Sheet")
        {
            $('#btnSave,#btnAddDetail,#btnUpdateColor,#btnRemoveDetail').hide();
            $('#btnApprove').show();
        }
    }

    function RefreshDetailList(oOrderDetailList)
    {
        var data=oOrderDetailList;
        data={"total":""+data.length+"","rows":data};
        $('#tblOrderSheetDetail').datagrid('loadData',data);
    }
    $('#txtRateUnit').change(function(){
        debugger;
        SetTotal();
    });

    function Validation(){

        if($('#txtPartyPONo').val()=="" || $('#txtPartyPONo').val()==null)
        {
            $('#txtPartyPONo').focus();
            $('#txtPartyPONo').addClass("errorFieldBorder");
            alert('Please Type Party PO No.');
            return false;
        }else{
            $('#txtPartyPONo').removeClass("errorFieldBorder");
        }

        if($('#cboPaymentType').val()<=0){
            $('#cboPaymentType').focus();
            $('#cboPaymentType').addClass("errorFieldBorder");
            alert('Select Payment Type.');
            return false;
        }
        else{
            $('#cboPaymentType').removeClass("errorFieldBorder");
        }

        if($('#cboCurrency').val()<=0){
            $('#cboCurrency').focus();
            $('#cboCurrency').addClass("errorFieldBorder");
            alert('Select Currency');
            return false;
        }
        else{
            $('#cboCurrency').removeClass("errorFieldBorder");
        }

        if(parseInt(_oOrderSheet.BuyerID)<=0){
            $('#txtBuyerName').focus();
            $('#txtBuyerName').addClass("errorFieldBorder");
            alert('Please Pick Buyer.');
            return false;
        }
        else{
            $('#txtBuyerName').removeClass("errorFieldBorder");
        }
        if(parseInt(_oOrderSheet.ContractorID)<=0){
            $('#txtContractorName').focus();
            $('#txtContractorName').addClass("errorFieldBorder");
            alert('Please Pick Customer.');
            return false;
        }
        else{
            $('#txtContractorName').removeClass("errorFieldBorder");
        }

        if(parseInt($('#cboContactorContactPerson').val())<=0){
            $('#cboContactorContactPerson').focus();
            $('#cboContactorContactPerson').addClass("errorFieldBorder");
            alert('Select Buyer Contact Person.');
            return false;
        }
        else{
            $('#cboContactorContactPerson').removeClass("errorFieldBorder");
        }

        if($('#cboPriorityLevel').val()<=0){
            $('#cboPriorityLevel').focus();
            $('#cboPriorityLevel').addClass("errorFieldBorder");
            alert('Select priority level.');
            return false;
        }
        else{
            $('#cboPriorityLevel').removeClass("errorFieldBorder");
        }
        if($('#txtRateUnit').val()<=0){
            $('#txtRateUnit').focus();
            $('#txtRateUnit').addClass("errorFieldBorder");
            alert('Rate Should be Greater than 0.');
            return false;
        }
        else{
            $('#txtRateUnit').removeClass("errorFieldBorder");
        }

        if($('#cboMktPerson').val()<=0){
            $('#cboMktPerson').focus();
            $('#cboMktPerson').addClass("errorFieldBorder");
            alert('Select Market Person.');
            return false;
        }
        else{
            $('#cboMktPerson').removeClass("errorFieldBorder");
        }
        if(parseInt(_oOrderSheet.DeliveryTo)<=0){
            $('#txtDeliveryToName').focus();
            $('#txtDeliveryToName').addClass("errorFieldBorder");
            alert('Please Pick Delivery To.');
            return false;
        }
        else{
            $('#txtDeliveryToName').removeClass("errorFieldBorder");
        }

        if(parseInt($('#cboDeliveryContactPerson').val())<=0){
            $('#cboDeliveryContactPerson').focus();
            $('#cboDeliveryContactPerson').addClass("errorFieldBorder");
            alert('Select Delivery To Contact Person.');
            return false;
        }
        else{
            $('#cboDeliveryContactPerson').removeClass("errorFieldBorder");
        }

        return true;
    }

    function RefreshObject()
    {
        var oOrderSheet={
            OrderSheetID: (_oOrderSheet!=null && _oOrderSheet.OrderSheetID>0)? _oOrderSheet.OrderSheetID:0,
            PONo:$('#txtPONo').val(),
            OrderDate:$('#txtOrderDate').datebox('getValue'),
            ExpectedDeliveryDate:$('#txtExpectedDeliveryDate').datebox('getValue'),
            BUID:_nBUID,
            OrderSheetStatusInInt:1,
            OrderSheetType:_nORSType,
            BuyerID:_oOrderSheet.BuyerID,
            ContractorID:_oOrderSheet.ContractorID,
            ContactPersonnelID:$('#cboContactorContactPerson').val(),
            Priority:$('#cboPriorityLevel').val(),
            Note:$('#txtNote').val(),
            MKTEmpID:$('#cboMktPerson').val(),
            PartyPONo:$('#txtPartyPONo').val(),
            PaymentType:$('#cboPaymentType').val(),
            DeliveryTo:_oOrderSheet.DeliveryTo,
            CurrencyID:$('#cboCurrency').val(),
            RateUnit:$('#txtRateUnit').val(),
            ProductNature:sessionStorage.getItem("ProductNature"),
            DeliveryContactPerson:$('#cboDeliveryContactPerson').val(),
            OrderSheetDetails:$('#tblOrderSheetDetail').datagrid('getRows')
        };
        return oOrderSheet;
    }

    $("#btnSave").click(function (){
        debugger;
        endEditing();
        if(!Validation()) return false;
        var oOrderSheet=RefreshObject();
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/OrderSheet/Save",
            traditional: true,
            data:  JSON.stringify(oOrderSheet),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                oOrderSheet = jQuery.parseJSON(data);
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (oOrderSheet.ErrorMessage==null || oOrderSheet.ErrorMessage=="") {
                    alert("Data Saved successfully");
                    var oOrderSheets = sessionStorage.getItem("OrderSheets");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oOrderSheets != null) {
                        oOrderSheets = jQuery.parseJSON(oOrderSheets);
                    }
                    else {
                        oOrderSheets = [];
                    }
                    if (nIndex != -1) {
                        oOrderSheets[nIndex] = oOrderSheet;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oOrderSheets.length);
                        oOrderSheets.push(oOrderSheet);
                    }
                    sessionStorage.setItem("OrderSheets", JSON.stringify(oOrderSheets));
                    window.location.href = _lBackLink;
                }
                else {
                    alert(oOrderSheet.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });

    $("#btnApprove").click(function (){
        debugger;
        if(!Validation()) return false;
        if (!confirm("Confirm to Approve?")) return false;
        var oOrderSheet=RefreshObject();
        oOrderSheet.ActionTypeExtra = "Approve";
        oOrderSheet.OrderSheetStatusInInt = 2;//
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/OrderSheet/ChangeStatus",
            traditional: true,
            data:  JSON.stringify(oOrderSheet),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                oOrderSheet = jQuery.parseJSON(data);
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (oOrderSheet.ErrorMessage==null || oOrderSheet.ErrorMessage=="") {
                    alert("Approved successfully");
                    var oOrderSheets = sessionStorage.getItem("OrderSheets");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oOrderSheets != null) {
                        oOrderSheets = jQuery.parseJSON(oOrderSheets);
                    }
                    else {
                        oOrderSheets = [];
                    }
                    if (nIndex != -1) {
                        oOrderSheets[nIndex] = oOrderSheet;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oOrderSheets.length);
                        oOrderSheets.push(oOrderSheet);
                    }
                    sessionStorage.setItem("OrderSheets", JSON.stringify(oOrderSheets));
                    window.location.href = _lBackLink;
                }
                else {
                    alert(oOrderSheet.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    ///Buyer Pick
    $("#txtBuyerName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var oContractor = { Params: 6 + '~' + $('#txtBuyerName').val()+'~'+_nBUID };//here 6 is Mother Buyer
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oContractor,
                ControllerName: "Contractor",
                ActionName: "ContractorSearchByNameType",
                IsWinClose: false
            };
            $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").show();
            var intervalID = setInterval(updateProgress, 250);
            $.icsDataGets(obj, function (response) {
                debugger;
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ContractorID > 0) {
                        debugger;
                        var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winBuyers',
                            winclass: 'clsBuyer',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblBuyers',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'Name',
                            windowTittle: 'Buyer List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Found.");
                    return;
                }
            });
        }
    });
    $("#btnPickBuyer").click(function () {
        var oContractor = { Params: "6~~"+_nBUID };//here 6 Is Contractor
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            debugger;
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winBuyers',
                        winclass: 'clsBuyer',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblBuyers',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Buyer List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });

    });
    $('#txtBuyerName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtBuyerName").removeClass("fontColorOfPickItem");
            _oOrderSheet.BuyerID = 0;

        }
    });
    //Delivery to pick


    ///Contractor Pick
    $("#txtContractorName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var oContractor = { Params: 2 + '~' + $('#txtContractorName').val()+'~'+_nBUID };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oContractor,
                ControllerName: "Contractor",
                ActionName: "ContractorSearchByNameType",
                IsWinClose: false
            };
            $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").show();
            var intervalID = setInterval(updateProgress, 250);
            $.icsDataGets(obj, function (response) {
                debugger;
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ContractorID > 0) {
                        debugger;
                        var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winContractors',
                            winclass: 'clsContractor',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblContractors',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'Name',
                            windowTittle: 'Contractor List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Found.");
                    return;
                }
            });
        }
    });
    $("#btnPickContractor").click(function () {
        var oContractor = { Params: "2~~"+_nBUID };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            debugger;
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winContractors',
                        winclass: 'clsContractor',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblContractors',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Buyer List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });

    });
    $('#txtContractorName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtContractorName").removeClass("fontColorOfPickItem");
            _oOrderSheet.ContractorID = 0;
            GetBuyerContactPerson(0);
        }
    });
    //Delivery to pick

    $("#txtDeliveryToName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var oContractor = { Params: '2,3~' + $('#txtDeliveryToName').val()+'~'+_nBUID };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oContractor,
                ControllerName: "Contractor",
                ActionName: "ContractorSearchByNameType",
                IsWinClose: false
            };
            $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").show();
            var intervalID = setInterval(updateProgress, 250);
            $.icsDataGets(obj, function (response) {
                debugger;
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ContractorID > 0) {
                        debugger;
                        var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winDeliveryTos',
                            winclass: 'clsDeliveryTo',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblDeliveryTos',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'Name',
                            windowTittle: 'Delivery To List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Found.");
                }
            });
        }
    });
    $("#btnPickDeliveryTo").click(function () {
        var oContractor = { Params: "2,3~"+'~'+_nBUID };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            debugger;
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winDeliveryTos',
                        winclass: 'clsDeliveryTo',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblDeliveryTos',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Buyer List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });

    });
    $('#txtDeliveryToName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtDeliveryToName").removeClass("fontColorOfPickItem");
            _oOrderSheet.DeliveryToID = 0;
            GetContactPerson(0,false);
        }
    });

    //Product Pick
    $("#txtProductName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtProductName').val()==null || $('#txtProductName').val()=="")
            {
                alert("Please Type Product and Press Enter.");
                $('#txtProductName').focus();
                return;
            }
            var oProduct = { BUID: _nBUID,ProductName:$('#txtProductName').val()};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oProduct,
                ControllerName: "Product",
                ActionName: "SearchByProductBUWise",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ProductID > 0) {
                        var tblColums = []; var oColumn = { field: "NameCode", title: "Product Name", width: 300, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winProductPicker',
                            winclass: 'clsProductPicker',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblProductPicker',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'NameCode',
                            windowTittle: 'Product List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }

                }else{
                    alert("Data Not Found.");
                }
            });
        }
    });
    $("#btnProductPiker").click(function () {
        var oProduct = { BUID: _nBUID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProduct,
            ControllerName: "Product",
            ActionName: "SearchByProductBUWise",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = []; var oColumn = { field: "NameCode", title: "Product Name", width: 300, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPicker',
                        winclass: 'clsProductPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });

    });
    $('#txtProductName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtProductName").removeClass("fontColorOfPickItem");
            _oProduct = null;
        }
    });

    //Color Name
    $("#txtColorName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtColorName').val()==null || $('#txtColorName').val()=="")
            {
                alert("Please Type Color Name and Press Enter.");
                $('#txtColorName').focus();
                return;
            }
            ColorSearch($.trim($('#txtColorName').val()));
        }
    });
    $("#btnColorPick").click(function ()
    {
        ColorSearch("");
    });
    function ColorSearch(sColorName)
    {
        var oColorCategory = {Param:sColorName};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oColorCategory,
            ControllerName:"ColorCategory",
            ActionName: "SearchColor",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ColorCategoryID > 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "ColorName", title: "Color Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Note", title: "Note", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winColorCategory',
                        winclass: 'clsColorCategory',
                        winwidth: 500,
                        winheight: 400,
                        tableid: 'tblColorCategory',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ColorName',
                        windowTittle: 'Color Category List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });
    }
    $('#txtColorName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtColorName").removeClass("fontColorOfPickItem");
            _oColorCategory
        }
    });
    //Measurement
    $("#txtMeasurement").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            _oPolyMeasurement =null;
            $("#cboPolyMeasurementType").icsLoadCombo({List: _oPolyMeasurementTyps, OptionValue: "id", DisplayText: "Value" });
            $("#cboPolyMeasurementType").val(0);  $('#txtPolyMeasurement').val('');
            DynamicRefreshList([],'tblPolyMeasurements');
            $("#winMeasurement").data('MeasurementWindow', 'Add');
            $("#winMeasurement").icsWindow('open', "Poly Measurement List");
        }else if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtMeasurement").removeClass("fontColorOfPickItem");
            _oPolyMeasurement =null;
        }
    });

    $("#txtChangeMeasurement").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            $("#cboPolyMeasurementType").icsLoadCombo({List: _oPolyMeasurementTyps, OptionValue: "id", DisplayText: "Value" });
            $("#cboPolyMeasurementType").val(0);  $('#txtPolyMeasurement').val('');
            DynamicRefreshList([],'tblPolyMeasurements');
            $("#winMeasurement").data('MeasurementWindow', 'Edit');
            $("#winMeasurement").icsWindow('open', "Poly Measurement List");
        }
        else if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtMeasurement").removeClass("fontColorOfPickItem");
            _oPolyMeasurement =null;
        }
    });

    $('#txtPolyMeasurement').keypress(function (e){
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)
        {
            var oPolyMeasurement = {
                Measurement : $('#txtPolyMeasurement').val(),
                PolyMeasurementTypeInt : parseInt($('#cboPolyMeasurementType').val())
            };
            $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+"/PolyMeasurement/SearchByMeasurement",
                data: JSON.stringify(oPolyMeasurement),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oPolyMeasurements = jQuery.parseJSON(data);
                    if (oPolyMeasurements.length>0)
                    {
                        //RefreshList(oPolyMeasurements);
                        DynamicRefreshList(oPolyMeasurements,'tblPolyMeasurements');
                    }
                    else
                    {
                        alert("Data Not found");
                        RefreshList([]);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
        }
    });

    function SelectMeasurement()
    {
        var oMeasurement= $('#tblPolyMeasurements').datagrid('getSelected');
        if(oMeasurement==null || oMeasurement.PolyMeasurementID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if($("#winMeasurement").data('MeasurementWindow')=='Add')
        {
            $('#txtMeasurement').val(oMeasurement.Measurement);
            $('#txtMeasurement').addClass('fontColorOfPickItem');
            _oPolyMeasurement = oMeasurement;
            $('#txtMeasurement').focus();
        }
        else
        {
            $('#txtChangeMeasurement').val(oMeasurement.Measurement);
            $('#txtChangeMeasurement').addClass('fontColorOfPickItem');
            _oPolyMeasurement = oMeasurement;
            $('#txtChangeMeasurement').focus();
        }
        $("#winMeasurement").icsWindow('close');
    }
    function CloseMeasurementPick()
    {
        $("#winMeasurement").icsWindow('close');
    }

    $("#btnRefreshDetail").click(function (){
        endEditing();
    });

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }

    function SetPickerValueAssign(oPickerobj) {
        debugger;
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid == 'winContractors')
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0) {
                $('#txtContractorName').val(oreturnObj.Name);
                $('#txtContractorName').addClass('fontColorOfPickItem');
                _oOrderSheet.ContractorID = oreturnObj.ContractorID;
                GetContactPerson(_oOrderSheet.ContractorID,true);
                $('#txtContractorName').focus();
            }
        }else  if (oPickerobj.winid == 'winBuyers')
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0) {
                $('#txtBuyerName').val(oreturnObj.Name);
                $('#txtBuyerName').addClass('fontColorOfPickItem');
                _oOrderSheet.BuyerID = oreturnObj.ContractorID;
                $('#txtBuyerName').focus();
            }
        }
        else if (oPickerobj.winid == 'winDeliveryTos')
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0) {
                $('#txtDeliveryToName').val(oreturnObj.Name);
                $('#txtDeliveryToName').addClass('fontColorOfPickItem');
                _oOrderSheet.DeliveryTo = oreturnObj.ContractorID;
                GetContactPerson(_oOrderSheet.DeliveryTo,false);
                $('#txtDeliveryToName').focus();
            }
        }
        else if (oPickerobj.winid == 'winProductPicker')
        {
            if (oreturnObj != null && oreturnObj.ProductID > 0)
            {
                $('#txtProductName').val(oreturnObj.ProductName);
                $('#txtProductDescription').val(oreturnObj.ProductDescription);
                $('#txtProductName').addClass('fontColorOfPickItem');
                _oProduct = oreturnObj;
                GetMeasurementUnitByType(oreturnObj.UnitTypeInInt);
                if(_oProduct.IsApplyColor){$('#txtColorName,#btnColorPick').show();}else{$('#txtColorName,#btnColorPick').hide();}
                if(_oProduct.IsApplyMeasurement){$('#txtMeasurement').show();}else{$('#txtMeasurement').hide();}
                $('#txtProductName').focus();
            }
        }
        else if (oPickerobj.winid=='winColorCategory')
        {
            if (oreturnObj != null && oreturnObj.ColorCategoryID > 0)
            {
                $('#txtColorName').val(oreturnObj.ColorName);
                $('#txtColorName').addClass('fontColorOfPickItem');
                _oColorCategory = oreturnObj;
                $('#txtColorName').focus();
            }
        } else if (oPickerobj.winid=='winChangeColorCategory')
        {
            if (oreturnObj != null && oreturnObj.ColorCategoryID > 0)
            {
                $('#txtChangeColorName').val(oreturnObj.ColorName);
                $('#txtChangeColorName').addClass('fontColorOfPickItem');
                sessionStorage.setItem('ColorID',oreturnObj.ColorCategoryID);
                sessionStorage.setItem('ColorName',oreturnObj.ColorName);
                $('#txtChangeColorName').focus();
            }
        }else if (oPickerobj.winid=='winChangeProductPicker')
        {
            if (oreturnObj != null && oreturnObj.ProductID > 0)
            {
                debugger;
                $('#txtChangeProductName').val(oreturnObj.ProductName);
                $('#txtChangeProductName').addClass('fontColorOfPickItem');
                sessionStorage.setItem('ProductID',oreturnObj.ProductID);
                sessionStorage.setItem('ProductName',oreturnObj.ProductName);
                sessionStorage.setItem('SizeName',oreturnObj.AddTwo);
                $('#txtChangeProductName').focus();
            }
        }

    }

    function GetContactPerson(nContractorID, bIsBuyer) {
        debugger;
        var oContractor = {ContractorID:nContractorID};
        $.ajax
           ({
               type: "POST",
               dataType: "json",
               url: _sBaseAddress + "/Contractor/GetContactPersonnels",
               traditional: true,
               data:  JSON.stringify(oContractor),
               contentType: "application/json; charset=utf-8",
               success: function (data) {
                   //debugger;
                   var _oContactPersonnels = jQuery.parseJSON(data);
                   if (_oContactPersonnels != null)
                   {
                       if(bIsBuyer)
                       {
                           $("#cboContactorContactPerson").icsLoadCombo({List: _oContactPersonnels,OptionValue: "ContactPersonnelID",DisplayText: "Name"});
                           $('#cboContactorContactPerson').val(_oOrderSheet.ContactPersonnelID);
                       }else{
                           $("#cboDeliveryContactPerson").icsLoadCombo({List: _oContactPersonnels,OptionValue: "ContactPersonnelID",DisplayText: "Name"});
                           $('#cboDeliveryContactPerson').val(_oOrderSheet.DeliveryContactPerson);
                       }

                   }
                   else {
                       if(bIsBuyer)
                       {
                           $("#cboContactorContactPerson").icsLoadCombo({List: _oContactPersonnels,OptionValue: "ContactPersonnelID",DisplayText: "Name"});
                       }else{
                           $("#cboDeliveryContactPerson").icsLoadCombo({List: _oContactPersonnels,OptionValue: "ContactPersonnelID",DisplayText: "Name"});
                       }
                   }
               },
               error: function (xhr, status, error) {
                   alert(error);
               }

           });

    }
    function GetMeasurementUnitByType(nUnitTypeInt)
    {
        //debugger;
        var oMeasurementUnit={
            UnitTypeInInt : nUnitTypeInt
        };
        $.ajax ({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/MeasurementUnit/GetbyUnitType",
            data:  JSON.stringify(oMeasurementUnit),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                var  oUnits = jQuery.parseJSON(data);
                if (oUnits!=null)
                {
                    if(oUnits.length>0)
                    {
                        $("#cboUnit").icsLoadCombo({List: oUnits,OptionValue: "MeasurementUnitID",DisplayText: "Symbol"});
                    }
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }

    function ValidateInputDetail()
    {
        if(_oProduct==null || $('#txtProductName').val()=="")
        {
            $('#txtProductName').focus();
            $('#txtProductName').addClass("errorFieldBorder");
            alert('Select Product');
            return false;
        }
        if(_oProduct.IsApplyColor)
        {
            if(parseInt(_oColorCategory.ColorCategoryID)<=0)
            {
                $('#txtColorName').focus();
                $('#txtColorName').addClass("errorFieldBorder");
                alert('Select Color');
                return false;
            }
        }


        if($('#cboUnit').val()<=0)
        {
            $('#cboUnit').focus();
            alert('Select Unit.');
            return false;
        }
        if($('#cboRecipe').val()<=0)
        {
            $('#cboRecipe').focus();
            alert('Select Recipe.');
            return false;
        }
        if(_oProduct.IsApplyMeasurement)
        {
            if( _oPolyMeasurement==null)
            {
                $('#txtMeasurement').focus();
                $('#txtMeasurement').addClass("errorFieldBorder");
                alert('Select Measurement');
                return false;
            }
        }
        if(parseInt(icsRemoveComma($('#txtQty').val()))<=0)
        {
            $('#txtQty').focus();
            $('#txtQty').addClass("errorFieldBorder");
            alert('Qty Should be Greater than 0');
            return false;
        }
        if(parseFloat(icsRemoveComma($('#txtRate').val()))<=0)
        {
            $('#txtRate').focus();
            $('#txtRate').addClass("errorFieldBorder");
            alert('Rate Should be Greater than 0');
            return false;
        }
        return true;
    }

    function ResetDetail(){
        _oProduct = null;_oColorCategory = null;_oSizeCategory = null;_oPolyMeasurement = null;
        $('#txtQty,#txtRate').val(0);
        $('#txtColorQty').val(0);
        $('#txtProductName,#txtColorName,#txtProductDescription,#txtMeasurement,#txtStyleDescription,#txtBuyerRef').removeClass("fontColorOfPickItem");
        $('#txtProductName,#txtColorName,#txtProductDescription,#txtMeasurement,#txtStyleDescription,#txtBuyerRef').val("");

        var oUnits = [];
        $("#cboUnit").icsLoadCombo({List: oUnits,OptionValue: "MeasurementUnitID",DisplayText: "Symbol"});
        $('#txtProductName').focus();
    }


    $("#btnAddDetail").click(function () {
        debugger;
        if(!ValidateInputDetail())return;
      
        var oOrderSheetDetail= {
            OrderSheetDetailID : 0,
            OrderSheetID: _oOrderSheet.OrderSheetID,
            ProductID: _oProduct.ProductID,
            ColorID: _oColorCategory ==null?0: _oColorCategory.ColorCategoryID,
            StyleDescription :$('#txtStyleDescription').val(),
            ProductDescription : $('#txtProductDescription').val(),
            Measurement:$('#txtMeasurement').val(),
            PolyMUnitID: _oPolyMeasurement==null || _oPolyMeasurement == "" ? 0: _oPolyMeasurement.PolyMeasurementID,
            Qty :icsRemoveComma($('#txtQty').val()),
            UnitPrice:icsRemoveComma($('#txtRate').val()),
            BuyerRef:$('#txtBuyerRef').val(),
            ColorQty:icsRemoveComma($('#txtColorQty').val()),
            Note :'',
            ModelReferenceID :_oProduct.ModelReferenceID,
            UnitID:$('#cboUnit').val(),
            UnitSymbol:$("#cboUnit option:selected").text(),
            RecipeID:$('#cboRecipe').val(),
            RecipeName:$("#cboRecipe option:selected").text(),
            ProductName :_oProduct.ProductName,
            ModelReferenceName : _oProduct.ModelReferenceName,
            ColorName :_oColorCategory==null?'': _oColorCategory.ColorName,
            SizeName :_oProduct.AddTwo,
            Amount:parseFloat(parseFloat(icsRemoveComma($('#txtQty').val())) * parseFloat(icsRemoveComma($('#txtRate').val())))
        };
        $('#tblOrderSheetDetail').datagrid('appendRow',oOrderSheetDetail);
        SetTotal();
        ResetDetail();
    });

    function SetTotal()
    {
        debugger;
        if(parseInt($('#txtRateUnit').val())>0)
        {
            var oDetails = $('#tblOrderSheetDetail').datagrid('getRows');
            for(var i = 0;i<oDetails.length;i++)
            {
                oDetails[i].Amount = parseFloat(parseFloat(oDetails[i].Qty)/ parseInt($('#txtRateUnit').val())) * parseFloat(oDetails[i].UnitPrice);
            }
            RefreshDetailList(oDetails);
        }else{
            alert("Price Unit Should be Greater than 0");
            $('#txtRateUnit').val(1);
        }

        var oOrderSheetDetails = $('#tblOrderSheetDetail').datagrid('getRows');
        var nTotalValue = 0;
        var nTotalQty = 0;
        for(var i = 0;i<oOrderSheetDetails.length;i++)
        {
            nTotalValue+=parseFloat(oOrderSheetDetails[i].Amount);
            nTotalQty+=parseInt(oOrderSheetDetails[i].Qty);
            nTotalValue = parseFloat(nTotalValue);
            nTotalQty = parseInt(nTotalQty);
        }
        $("#lblTotalQty").html(nTotalQty);
        $("#lblTotalAmount").html(formatPrice(nTotalValue,0));
    }

    $('#btnClose').click(function(e){
        window.location.href = _lBackLink;
    });

    $("#btnRemoveDetail").click(function () {

        var oOrderSheetDetail = $("#tblOrderSheetDetail").datagrid("getSelected");
        if (oOrderSheetDetail == null || parseInt(oOrderSheetDetail.ProductID) <= 0) { alert("Please select an item from list!"); return false; }
        if (!confirm("Confirm to Delete?")) return false;
        var SelectedRowIndex=$('#tblOrderSheetDetail').datagrid('getRowIndex',oOrderSheetDetail);
        alert("Data Delete Successfully.");
        $('#tblOrderSheetDetail').datagrid('deleteRow',SelectedRowIndex);
        SetTotal();
    });

    var editIndex = undefined;
    function endEditing(){
        if (editIndex == undefined){return true}
        if ($('#tblOrderSheetDetail').datagrid('validateRow', editIndex)){
            $('#tblOrderSheetDetail').datagrid('endEdit', editIndex);
            $('#tblOrderSheetDetail').datagrid('selectRow',editIndex);
            var oORSDetail=$('#tblOrderSheetDetail').datagrid('getSelected');
            if(oORSDetail!=null)
            {
                oORSDetail.Amount = parseFloat(parseInt(oORSDetail.Qty)*parseFloat(oORSDetail.UnitPrice));
                $('#tblOrderSheetDetail').datagrid('updateRow',{index: editIndex,	row: oORSDetail});
            }
            SetTotal();
            editIndex = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRow(index){
        if (editIndex != index){
            if (endEditing())
            {
                $('#tblOrderSheetDetail').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndex = index;
            }
            else
            {
                $('#tblOrderSheetDetail').datagrid('selectRow', editIndex);
            }
        }
    }


    //update color
    $('#btnUpdateColor').click(function(e)
    {
        var oOrderSheetDetail = $("#tblOrderSheetDetail").datagrid("getSelected");
        if (oOrderSheetDetail == null || parseInt(oOrderSheetDetail.ProductID) <= 0) { alert("Please select an item from list!"); return false; }
        $("#winChangeColor input").not("input[type='button']").val("");
        $('#txtChangeColorName').val(oOrderSheetDetail.ColorName);
        $('#txtChangeProductName').val(oOrderSheetDetail.ProductName);
        $('#txtChangeMeasurement').val(oOrderSheetDetail.Measurement);
        $('#txtChangeColorName,#txtChangeProductName,#txtChangeMeasurement').addClass('fontColorOfPickItem');
        sessionStorage.setItem('ColorID',oOrderSheetDetail.ColorID);
        sessionStorage.setItem('ColorName',oOrderSheetDetail.ColorName);
        sessionStorage.setItem('ProductID',oOrderSheetDetail.ProductID);
        sessionStorage.setItem('ProductName',oOrderSheetDetail.ProductName);
        _oPolyMeasurement = {            
            PolyMeasurementID : parseInt(oOrderSheetDetail.PolyMUnitID)
        };
        $("#winChangeColor").icsWindow('open', "Update Info");
    });
    function UpdateInfo()
    {
        var oOrderSheetDetail = $("#tblOrderSheetDetail").datagrid("getSelected");
        var SelectedRowIndex=$('#tblOrderSheetDetail').datagrid('getRowIndex',oOrderSheetDetail);
        //if(parseInt(sessionStorage.getItem('ColorID'))<=0)
        //{
        //    alert("Please Select Color.");
        //    return;
        //}
        oOrderSheetDetail.ColorID = sessionStorage.getItem('ColorID');
        oOrderSheetDetail.ColorName = sessionStorage.getItem('ColorName');
        oOrderSheetDetail.ProductID = sessionStorage.getItem('ProductID');
        oOrderSheetDetail.ProductName = sessionStorage.getItem('ProductName');
        oOrderSheetDetail.SizeName = sessionStorage.getItem('SizeName');
        oOrderSheetDetail.PolyMUnitID =  _oPolyMeasurement==null || _oPolyMeasurement == "" ? 0: parseInt(_oPolyMeasurement.PolyMeasurementID);
        oOrderSheetDetail.Measurement  =  $('#txtChangeMeasurement').val();
        $('#tblOrderSheetDetail').datagrid('updateRow',{index: SelectedRowIndex,	row: oOrderSheetDetail});
        alert("Data Saved Succesfully");
        $("#winChangeColor").icsWindow('close');
    }

    $("#txtChangeColorName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtChangeColorName').val()==null || $('#txtChangeColorName').val()=="")
            {
                alert("Please Type Color Name and Press Enter.");
                $('#txtChangeColorName').focus();
                return;
            }
            ChangeColorSearch($.trim($('#txtChangeColorName').val()));
        }else  if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtChangeColorName").removeClass("fontColorOfPickItem");
            sessionStorage.setItem('ColorID',0);
            sessionStorage.setItem('ColorName','');
        }
    });
    $("#btnChangColorPick").click(function ()
    {
        ChangeColorSearch("");
    });
    function ChangeColorSearch(sColorName)
    {
        var oColorCategory = {Param:sColorName};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oColorCategory,
            ControllerName:"ColorCategory",
            ActionName: "SearchColor",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ColorCategoryID > 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "ColorName", title: "Color Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Note", title: "Note", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winChangeColorCategory',
                        winclass: 'clsChangeColorCategory',
                        winwidth: 500,
                        winheight: 400,
                        tableid: 'tblColorCategory',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ColorName',
                        windowTittle: 'Color Category List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });
    }


    //Change product
    $("#txtChangeProductName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtChangeProductName').val()==null || $('#txtChangeProductName').val()=="")
            {
                alert("Please Type Product and Press Enter.");
                $('#txtChangeProductName').focus();
                return;
            }
            ChangeProduct($('#txtChangeProductName').val());
        }else if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtChangeProductName").removeClass("fontColorOfPickItem");
            sessionStorage.setItem('ProductID',0);
            sessionStorage.setItem('ProductName','');
            sessionStorage.setItem('SizeName','');
        }
    });
    $("#btnChangProductPick").click(function () {
        ChangeProduct("");
    });
    function ChangeProduct(sProductName)
    {
        var oProduct = { BUID:sessionStorage.getItem("BUID"),ProductName:sProductName};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProduct,
            ControllerName: "Product",
            ActionName: "SearchByProductBUWise",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "ProductCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Name", width: 300, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "MUnit", title: "Unit", width: 70, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winChangeProductPicker',
                        winclass: 'clsChangeProductPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    function CloseUpdateInfo()
    {
        $("#winChangeColor").icsWindow('close');
    }

    //Contact Person
    function AddContactPerson(bIsBuyer) {
        _bIsBuyer = bIsBuyer;
        if(bIsBuyer)
        {
            if (parseInt(_oOrderSheet.ContractorID) <= 0)
            {
                alert("Please select Buyer!");
                $('#txtContractorName').focus();
                return;
            }
        }else{
            if (parseInt(_oOrderSheet.DeliveryTo) <= 0)
            {
                alert("Please select Delivery To!");
                $('#txtDeliveryToName').focus();
                return;
            }
        }
        $("#winContactPersonnel").icsWindow('open', "Add Contact Person");
        $("#winContactPersonnel input").not("input[type='button']").val("");
    }

    function ValidateInputContactPersonnel()
    {
        if(document.getElementById("txtName").value==null || document.getElementById("txtName").value=="")
        {
            alert("Please enter name!");
            $('#txtName').focus();
            return false;
        }

        if(document.getElementById("txtPhone").value==null || document.getElementById("txtPhone").value=="")
        {
            alert("Please enter phone number!");
            $('#txtPhone').focus();
            return false;
        }
        return true;
    }

    function RefreshObjectCP()
    {
        debugger;
        var oContactPersonnel= {
            ContactPersonnelID : 0,
            ContractorID : (_bIsBuyer==true)? _oOrderSheet.ContractorID:_oOrderSheet.DeliveryTo,
            Name : $("#txtName").val(),
            Address : $("#txtAddress").val(),
            Phone :$("#txtPhone").val(),
            Email : $("#txtEmail").val(),
            Note : $("#txtNote").val()
        };
        return oContactPersonnel;
    }

    function AddContactPersonnel()
    {
        debugger;
        if(!ValidateInputContactPersonnel()) return;
        var oContactPersonnel=RefreshObjectCP();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/Contractor/SaveContactPersonnel",
            traditional: true,
            data:  JSON.stringify(oContactPersonnel),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                _oContactPersonnel = jQuery.parseJSON(data);
                if(parseInt(_oContactPersonnel.ContactPersonnelID)>0)
                {
                    alert("Data Saved sucessfully");
                    document.getElementById("txtName").value="";
                    document.getElementById("txtAddress").value="";
                    document.getElementById("txtPhone").value="";
                    document.getElementById("txtEmail").value="";
                    document.getElementById("txtNote").value="";
                    $("#winContactPersonnel").icsWindow('close');
                    if(_bIsBuyer)
                    {
                        GetContactPerson(_oOrderSheet.ContractorID,true);//load Buyer Contact peron
                    }else
                    {
                        GetContactPerson(_oOrderSheet.DeliveryTo,false);//load Delivery contactperson
                    }
                }
                else {
                    alert(_oContactPersonnel.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function CloseContactPersonnel()
    {
        $("#winContactPersonnel").icsWindow('close');
    }


    $('#txtQty').tooltip({
        position: 'bottom',
        content: '<span style="color:#fff">Type Qty.</span>',
        onShow: function(){$(this).tooltip('tip').css({backgroundColor: '#666',borderColor: '#666'});}
    });

    $('#txtRate').tooltip({
        position: 'bottom',
        content: '<span style="color:#fff">Type Price.</span>',
        onShow: function(){$(this).tooltip('tip').css({backgroundColor: '#666',borderColor: '#666'});}
    });
</script>