<html>
<head>

    <link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/icon.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/easyui.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/Pikerstyle.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/mainstyle.css")" rel="stylesheet" type="text/css" />
    
    <script src="@Url.Content("~/Scripts/jquery-2.2.4.min.js")" type="text/javascript"></script>    
    <script src="@Url.Content("~/Scripts/jquery.easyui.min.js")" type="text/javascript"></script>

    <script src="@Url.Content("~/Scripts/jquery-ui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/json2.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.ics.customize.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.ics.plugins.js")" type="text/javascript"></script>
</head>
<body>

@model ESimSol.BusinessObjects.ProductionExecutionPlanDetail
    <div style="font-family:Tahoma" class="menuMainCollectionTable">
        <table border="0" cellspacing="2" cellpadding="2">
            <tr>
                <td style="background-color:#CFB53B; text-align:center; width:843px; color:White">
                    <label id="lblHeaderName" style="font-size:15px; font-weight:bold; text-decoration:UnderFactory; width:740px">View Production Execution Plan Detail</label>
                </td>
            </tr>
        </table>
        <div style="margin-left:2px;">
            <table id="tblBreakDown" title="Detail Break Down List" class="easyui-datagrid" style="width:845px; height:380px" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar">
                <thead>
                    <tr>
                        <th field="WorkingDateInString" width="170">Date</th>
                        @*<th align="right" formatter="formatPrice" data-options="field:'RegularTime',editor:{type:'numberbox',options:{precision:1}}" width="100">Reguler Time</th>
                        <th align="right" formatter="formatPrice" data-options="field:'OverTime',editor:{type:'numberbox',options:{precision:1}}" width="100">Over Time</th>
                        <th align="right" formatter="formatPrice" data-options="field:'EfficencyInParcent',editor:{type:'numberbox',options:{precision:2}}" width="80">Efficency(%)</th>*@
                        <th align="right" field="DailyProduction" width="100">Daily Production</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbar">
                <table border="0" cellpadding="2" cellspacing="2" style="font-size:12px;">
                    <tr>
                        <td style="text-align:left; width:365px;">
                            PU Line:<select id="cboPLineConfigure" style="width:280px"></select>
                        </td>
                        <td style="width:200px; text-align:center; font-weight:bolder">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Qty: &nbsp;<input type="text" id="txtTotalOrderQty" style="width:80px; text-align:center; font-weight:bolder; padding-left:5px" disabled="disabled" /></td>
                        <td style="text-align:left; width:150px;font-weight:bolder">
                            M. Qty:<input type="text" id="txtMachineQty" style=" width:70px; text-align:right;" />
                        </td>
                        <td style="width:200px; text-align:center; font-weight:bolder">
                            P/H:<input type="text" id="txtPPHQty" style=" width:105px; text-align:right;" />
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align:left; width:565px;" colspan="2">
                            Start Date:<input id="txtStartDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:110px" />
                            &nbsp;End Date: <input id="txtEndDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:110px" />
                            &nbsp;Target Qty: <input type="text" id="txtTargetQty" style=" width:58px; text-align:right;" disabled />
                        </td>
                        <td style="width:150px; text-align:center;font-weight:bolder">
                            R/T:<input type="text" id="txtRegularTime" style=" width:70px; text-align:right;" />
                        </td>
                        <td style=" text-align:center; width:200px;font-weight:bolder">
                            O/T:<input type="text" id="txtOverTime" style=" width:50px; text-align:right;" />
                            <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="Add()"></a>
                            <a id="btnRemove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="Remove()"></a>
                        </td>
                    </tr>
                </table>
            </div>
            <table style=" font-size:12px;">
                <tr>
                    <td style=" width:260px;text-align:right">Total:</td>
                    
                    <td style=" width:570px;text-align:right"><label id="lblTotalProduction">0</label> </td>
                </tr>
            </table>
        </div>
        <fieldset style="font-size:11px;width:830px; font-weight:bold">
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px;width:830px; font-weight:bold">
                <tr>

                    <td style="width:100px; text-align:left">
                        <a id="btnDateAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="DateAdd()">Extra Date</a>
                    </td>
                    <td style="width:600px; text-align:right"></td>
                    <td style="width:50px">
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Save</a>
                    </td>
                    <td style="width:50px">
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>

    </div>
</body>
</html>

<script type="text/javascript">
    var _oProductionExecutionPlanDetail = null;
    var _oDetailBreakDowns= [];
    var _oPLineConfigures;
    var _sBaseAddress="";
    var   _nTotalMachineQty = 0;
    var _nTotalCapcity = 0;
    var _aweekday = new Array(7);
    var _nTotalDailyProduction = 0;
    var _oProductionTimeSetup = null;
    $(document).ready(function ()
    {
        debugger;
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oProductionExecutionPlanDetail =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oPLineConfigures =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PLineConfigures));
        _oProductionTimeSetup = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ProductionTimeSetup));
        if(_oProductionTimeSetup!=null)
        {
            $('#txtRegularTime').val(_oProductionTimeSetup.RegularTime);
            $('#txtOverTime').val(_oProductionTimeSetup.OverTime);
        }
        var obj = JSON.parse(sessionStorage.getItem('Parameter'));
        document.getElementById('lblHeaderName').innerHTML = obj.Name;
        _oProductionExecutionPlanDetail.PLineConfigureID = obj.ProductionExecutionDetail.PLineConfigureID;
        _oDetailBreakDowns=obj.DetailBreakDowns;
        if(obj.Name=='View Production Execution Plan Detail')
        {
            _oProductionExecutionPlanDetail = obj.ProductionExecutionDetail;
          
            RefreshControl();
        }
        if(obj.Name=='Edit Production Execution Plan Detail')
        {
            _oProductionExecutionPlanDetail = obj.ProductionExecutionDetail;
           
        }
        $('#txtMachineQty').val(_oProductionExecutionPlanDetail.MachineQty);
        $('#txtPPHQty').val(_oProductionExecutionPlanDetail.ProductionPerHour);
        $('#txtStartDate').datebox('setValue', _oProductionExecutionPlanDetail.StartDateInString);
        $('#txtEndDate').datebox('setValue', _oProductionExecutionPlanDetail.EndDateInString);

        //txtMachineQty,txtPPHQty,txtOverTime,txtRegularTime
        $("#txtMachineQty,#txtPPHQty,#txtOverTime,#txtRegularTime").icsNumberField({ min: 0,precision: 2});
        $("#txtTargetQty").icsNumberField({ min: 0,precision:0});        

        if(_oDetailBreakDowns.length>0)
        {
            RefreshList(_oDetailBreakDowns);
            SetTotal();
        }
        SetDay();        
        $('#txtTotalOrderQty').val(obj.TotalOrderQty);
        $("#txtTargetQty").val(Math.ceil(parseFloat(obj.TotalOrderQty)*0.05+parseFloat(obj.TotalOrderQty)));
        CalculateEndDate();
        $("#cboPLineConfigure").icsLoadCombo({ List: _oPLineConfigures, OptionValue: "PLineConfigureID", DisplayText: "PULineNo" });
        $("#cboPLineConfigure").val(_oProductionExecutionPlanDetail.PLineConfigureID);
    });

    $('#txtPPHQty,#txtRegularTime,#txtOverTime').change(function(){
        if(parseInt($('#txtPPHQty').val())>0)
        {
            CalculateEndDate();
        }
    });

    function CalculateEndDate(){
        debugger;
        if(parseInt($("#txtTargetQty").val())>0)
        {
            var dStartDate = new Date($('#txtStartDate').datebox('getValue'));
            var nDailyProduction = parseInt($('#txtPPHQty').val())* parseInt((parseInt($('#txtRegularTime').val())+parseInt($('#txtOverTime').val())));
            var nRequiredDays = Math.ceil(parseInt($("#txtTargetQty").val())/parseInt(nDailyProduction))+parseInt(2);//Extra day's add
            for(var nDay=1; nDay <=parseInt(nRequiredDays); nDay++ )
            {
                if(_oProductionTimeSetup==null)
                {
                    alert("Please Set Production Time in your System.");
                    break;
                }

                if(_oProductionTimeSetup.OffDay === _aweekday[dStartDate.getDay()])
                {
                    nDay--;                    
                }    
                if(nDay != parseInt(nRequiredDays))
                {
                    dStartDate.setDate(dStartDate.getDate() + 1);
                }
            }
            $('#txtEndDate').datebox('setValue',icsdateformat(dStartDate));
            
        }
    }

    function RefreshControl()
    {
        document.getElementById('btnAdd').style.display = 'none';
        document.getElementById('btnSave').style.display = 'none';

        document.getElementById('txtMachineQty').disabled = true;
        document.getElementById('txtStartDate').disabled = true;
        document.getElementById('txtEndDate').disabled = true;
        document.getElementById('txtOverTime').disabled = true;
        document.getElementById('txtRegularTime').disabled = true;
    }
    function RefreshList(oDetailBreakDowns)
    {
        data=oDetailBreakDowns;
        data={"total":""+data.length+"","rows":data};
        $('#tblBreakDown').datagrid('loadData',data);
    }
    function SetDay()
    {

        _aweekday[0]=  "SunDay";
        _aweekday[1] = "MonDay";
        _aweekday[2] = "TuesDay";
        _aweekday[3] = "WednesDay";
        _aweekday[4] = "ThursDay";
        _aweekday[5] = "FriDay";
        _aweekday[6] = "SuterDay";
    }
    function Add()
    {
        debugger;
        if(!ValidateBrekDownInput())return;
        RefreshList([]);
        var nTotalDailyProduction = 0;
        var dStartDate = new Date($('#txtStartDate').datebox('getValue'));
        var dEndDate = new Date($('#txtEndDate').datebox('getValue'));
        var nRegularTime = $('#txtRegularTime').val();
        var nOverTime = $('#txtOverTime').val();
        var nEfficencyInParcent = 100;
        while(dStartDate<=dEndDate)
        {
            var nTempDailyProduction = 0;
           
            if(_oProductionTimeSetup!=null && _oProductionTimeSetup.OffDay===_aweekday[dStartDate.getDay()])
            {
                nRegularTime = nOverTime=nEfficencyInParcent = 0;nTempDailyProduction = 0;
            }else{
                nRegularTime = $('#txtRegularTime').val();
                nOverTime = $('#txtOverTime').val();
                nEfficencyInParcent = 100;

                if(parseFloat($("#txtTargetQty").val())-parseFloat(nTotalDailyProduction)>parseFloat(parseFloat($('#txtPPHQty').val())*( parseFloat(nRegularTime) + parseFloat(nOverTime))))
                {
                    nTempDailyProduction = parseFloat(parseFloat($('#txtPPHQty').val())*( parseFloat(nRegularTime) + parseFloat(nOverTime)));
                }else
                {
                    if(parseFloat($("#txtTargetQty").val())-parseFloat(nTotalDailyProduction)>0)
                    {
                        nTempDailyProduction = (parseFloat($("#txtTargetQty").val())-parseFloat(nTotalDailyProduction));
                        var nTargetQtyInFullEfficency = parseFloat(parseFloat($('#txtPPHQty').val())*( parseFloat(nRegularTime) + parseFloat(nOverTime)));
                        nEfficencyInParcent = ((nTempDailyProduction * 100) /  nTargetQtyInFullEfficency);
                    }
                    else
                    {
                        nEfficencyInParcent = 0;
                    }
                }
            }
           
            var oPEDBreakDown = {
                ProductionExecutionPlanDetailBreakdownID:0,
                ProductionExecutionPlanDetailID:_oProductionExecutionPlanDetail.ProductionExecutionPlanDetailID,
                WorkingDate:icsdateformat(dStartDate),
                WorkingDateInString: icsdateformat(dStartDate)+'('+_aweekday[dStartDate.getDay()]+')',
                MachineQty:$('#txtMachineQty').val(),
                ProductionPerHour:$('#txtPPHQty').val(),
                RegularTime: nRegularTime,
                OverTime: nOverTime,
                EfficencyInParcent:nEfficencyInParcent,
                DailyProduction :nTempDailyProduction
            };
            nTotalDailyProduction += parseFloat(parseFloat($('#txtPPHQty').val())*( parseFloat(nRegularTime) + parseFloat(nOverTime)));
            $('#tblBreakDown').datagrid('appendRow',oPEDBreakDown);
            dStartDate.setDate(dStartDate.getDate() + 1);
        }
        //$("#txtTargetQty").val(0);
        SetTotal();
    }
    function Remove()
    {
        var oPEPDetailBreakDown = $('#tblBreakDown').datagrid('getSelected');
        if(oPEPDetailBreakDown== null )
        {
            alert("Please select Item From List");
            return;
        }
        var SelectedRowIndex=$('#tblBreakDown').datagrid('getRowIndex',oPEPDetailBreakDown);
        if (!confirm("Confirm to Delete?")) return ;
        alert("Delete sucessfully");
        $('#tblBreakDown').datagrid('deleteRow',SelectedRowIndex);
        endEditing();
        //SetTotal();
    }

    function  DateAdd()
    {
        debugger;
        var nRegularTime = $('#txtRegularTime').val();
        var nOverTime = $('#txtOverTime').val();
        var nEfficencyInParcent = 100;

        var oExistingList = $('#tblBreakDown').datagrid('getRows');
        var oLastItem = oExistingList[oExistingList.length-1];
        var dNewDate = new Date(oLastItem.WorkingDateInString.split('(')[0]);
        dNewDate.setDate(dNewDate.getDate()+1);
        if(_oProductionTimeSetup!=null && _oProductionTimeSetup.OffDay==_aweekday[dNewDate.getDay()])
        {
            nRegularTime = nOverTime=nEfficencyInParcent = 0;
        }
        var oPEDBreakDown = {
            ProductionExecutionPlanDetailBreakdownID:0,
            ProductionExecutionPlanDetailID:_oProductionExecutionPlanDetail.ProductionExecutionPlanDetailID,
            WorkingDate:icsdateformat(dNewDate),
            WorkingDateInString: icsdateformat(dNewDate)+'('+_aweekday[dNewDate.getDay()]+')',
            MachineQty : $('#txtMachineQty').val(),
            ProductionPerHour:$('#txtPPHQty').val(),
            RegularTime: nRegularTime,
            OverTime: nOverTime,
            EfficencyInParcent:nEfficencyInParcent,
            DailyProduction :parseFloat(parseFloat($('#txtPPHQty').val())*( parseFloat(nRegularTime) + parseFloat(nOverTime)))
        };
        $('#tblBreakDown').datagrid('appendRow',oPEDBreakDown);
        $('#txtEndDate').datebox('setValue', icsdateformat(dNewDate));
        ReSetPlan();
        SetTotal();
    }
    function ValidateBrekDownInput()
    {
        debugger;
        if(parseInt($('#cboPLineConfigure').val())<=0){alert("Please Select Line No.");$('#cboPLineConfigure').focus();return false;}
        if(parseFloat($('#txtMachineQty').val())<=0 ){ alert("Machine Qty should be greater than 0");$('#txtMachineQty').focus();return false;}
        if(parseFloat($('#txtRegularTime').val())<=0 ){ alert("Reguler Time should be greater than 0");$('#txtMachineQty').focus();return false;}
        var dStartDate = new Date($('#txtStartDate').datebox('getValue'));
        var dEndDate = new Date($('#txtEndDate').datebox('getValue'));
        if(dEndDate<dStartDate)
        {
            $('#txtEndDate').focus();
            alert("End Date Should be Greater than Start Date");
            return false;
        }
        if( parseInt($('#txtRegularTime').val())<=0 || isNaN(parseInt($('#txtRegularTime').val()))){ alert("Reguler Time should be greater than 0");$('#txtRegularTime').focus();return false;}
        return true;
    }
    var editIndex = undefined;
    function endEditing()
    {
        if (editIndex == undefined){return true}
        if ($('#tblBreakDown').datagrid('validateRow', editIndex))
        {
            $('#tblBreakDown').datagrid('endEdit', editIndex);
            debugger;
            $('#tblBreakDown').datagrid('selectRow',editIndex);
            var oPEDBreakDown=$('#tblBreakDown').datagrid('getSelected');
            if(oPEDBreakDown!=null)
            {
                oPEDBreakDown.ProductionPerHour=$('#txtPPHQty').val();
                if(parseFloat(oPEDBreakDown.ProductionPerHour)<=0)
                {
                    alert("Productio Per Houre Shoudl Be greater Than Zero!!");
                }
                oPEDBreakDown.DailyProduction = (parseFloat(oPEDBreakDown.EfficencyInParcent)/100)* parseFloat(oPEDBreakDown.ProductionPerHour)* (parseFloat(oPEDBreakDown.RegularTime)+parseFloat(oPEDBreakDown.OverTime));
                $('#tblBreakDown').datagrid('updateRow',{index: editIndex,	row: oPEDBreakDown});
            }
            ReSetPlan();
            SetTotal();
            editIndex = undefined;
            return true;
        }
        else {
            return false;
        }    
    }


    function ReSetPlan()
    {  
        var nPlanQty = 0; 
        var nTotalPlanQty = 0; 
        var nYetToPlanQty = 0;
        var nIncreaseEfficency=0;        
        var nRegularTime = $('#txtRegularTime').val();
        var nOverTime = $('#txtOverTime').val();
        var nTargetQty = parseFloat($("#txtTargetQty").val());
        var oPEDBreakDowns=$('#tblBreakDown').datagrid('getRows');
        var nTargetQtyInFullEfficency = parseFloat(parseFloat($('#txtPPHQty').val())*( parseFloat(nRegularTime) + parseFloat(nOverTime)));
        if(oPEDBreakDowns.length>0)
        {
            for(var i=0; i<oPEDBreakDowns.length; i++)
            {
                nTargetQtyInFullEfficency = parseFloat(parseFloat($('#txtPPHQty').val())*(parseFloat(oPEDBreakDowns[i].RegularTime)+ parseFloat(oPEDBreakDowns[i].OverTime)));
                if((parseFloat(oPEDBreakDowns[i].RegularTime)+ parseFloat(oPEDBreakDowns[i].OverTime)) >0)
                {
                    nYetToPlanQty = (nTargetQty - nTotalPlanQty);
                    if(nIncreaseEfficency<100)
                    {
                        nIncreaseEfficency = parseFloat(oPEDBreakDowns[i].EfficencyInParcent);
                    }
                    else
                    {
                        if(nYetToPlanQty > nTargetQtyInFullEfficency)
                        {
                            oPEDBreakDowns[i].EfficencyInParcent = 100;
                            oPEDBreakDowns[i].DailyProduction  = nTargetQtyInFullEfficency;
                        } 
                        else
                        {
                            if(nYetToPlanQty>0)
                            {
                                oPEDBreakDowns[i].EfficencyInParcent = ((nYetToPlanQty * 100) /  nTargetQtyInFullEfficency);
                                oPEDBreakDowns[i].DailyProduction  = nYetToPlanQty;
                            }
                            else
                            {
                                oPEDBreakDowns[i].EfficencyInParcent = 0;
                                oPEDBreakDowns[i].DailyProduction  = 0;
                            }
                        }
                    }                
                    nTotalPlanQty = nTotalPlanQty + parseFloat(oPEDBreakDowns[i].DailyProduction);
                    $('#tblBreakDown').datagrid('updateRow',{index: i,	row: oPEDBreakDowns[i]});
                }
            }
        }
    }

    function onClickRow(index){
        //debugger;
        if (editIndex != index){
            if (endEditing()){
                $('#tblBreakDown').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndex = index;
            } else {
                $('#tblBreakDown').datagrid('selectRow', editIndex);
            }
        }
    }
    function SetTotal()
    {
        var oPEDBreakDowns=$('#tblBreakDown').datagrid('getRows');
        _nTotalMachineQty = 0;
        _nTotalDailyProduction = 0;
        for(var i =0;i<oPEDBreakDowns.length;i++)
        {
            _nTotalMachineQty+=parseFloat(oPEDBreakDowns[i].MachineQty);
            _nTotalDailyProduction+=parseFloat(oPEDBreakDowns[i].DailyProduction);
        }
        document.getElementById('lblTotalProduction').innerHTML = formatPrice(_nTotalDailyProduction,0);
    }
    function ValidateInput()
    {
        var oPEDBreakDowns=$('#tblBreakDown').datagrid('getRows');
        if(oPEDBreakDowns.length<=0)
        {
            alert("Please Insert at least one Break Down");
            return false;
        }
        return true;
    }
    function RefreshObject()
    {
        var dEndDate = new Date($('#txtEndDate').datebox('getValue'));
        var dStartDate = new Date($('#txtStartDate').datebox('getValue'));
        var yearDiff=dEndDate.getFullYear()-dStartDate.getFullYear();// for year difference
        var y1=dEndDate.getFullYear();
        var y2=dStartDate.getFullYear();
        var monthDiff=(dEndDate.getMonth() + y1*12)-(dStartDate.getMonth() +y2*12);
        var day1=parseInt(dEndDate.getDate());
        var day2=parseInt(dStartDate.getDate());
        var dayDiff= (day1-day2)+ (monthDiff * 30)+1; // here 1 increse because we calculate with start date
        var nAvgCapacity = parseFloat(parseFloat(_nTotalDailyProduction)/parseFloat(_nTotalMachineQty));
        var oPLineConfigure = ICS_FindObject(_oPLineConfigures, "PLineConfigureID", parseInt($('#cboPLineConfigure').val()));
        var oPEPDetail = {
            ProductionExecutionPlanDetailID: parseInt(_oProductionExecutionPlanDetail.ProductionExecutionPlanDetailID),
            ProductionExecutionPlanID : parseInt(_oProductionExecutionPlanDetail.ProductionExecutionPlanID),
            ProductionUnitID : parseInt(_oProductionExecutionPlanDetail.ProductionUnitID),
            StartDate:$('#txtStartDate').datebox('getValue'),
            StartDateInString:$('#txtStartDate').datebox('getValue'),
            EndDate :$('#txtEndDate').datebox('getValue'),
            EndDateInString:$('#txtEndDate').datebox('getValue'),
            WorkingDays : parseInt(dayDiff),
            AvgMachineQty :parseFloat(parseFloat(_nTotalMachineQty)/ parseInt(dayDiff)),
            AvgCapacityPerMachine :parseFloat(nAvgCapacity),
            AvgDailyProduction:parseFloat(parseFloat(_nTotalDailyProduction)/parseInt(dayDiff)),
            TotalProduction :parseFloat(_nTotalDailyProduction),
            ProductionExecutionPlanDetailBreakdowns:$('#tblBreakDown').datagrid('getRows'),
            PLineConfigureID:$('#cboPLineConfigure').val(),            
            LineNo: oPLineConfigure.LineNo,
            PUShortName : oPLineConfigure.PUShortName,
            ProductionPerHour:$('#txtPPHQty').val(),
            MachineQty :      $('#txtMachineQty').val()
        };
        debugger;
        return oPEPDetail;
    }
    function Save()
    {
        endEditing();
        // if(!ValidateBrekDownInput())return;
        if(!ValidateInput()) return;
        var oPEPDetail = RefreshObject();
        window.opener.ReturnValue_ForDetail(oPEPDetail);
        window.close();
    }

    //txtMachineQty
    $('#cboPLineConfigure').change(function(){
        if(parseInt($('#cboPLineConfigure').val())>0)
        {
            var oPLineConfigure = ICS_FindObject(_oPLineConfigures, "PLineConfigureID", parseInt($('#cboPLineConfigure').val()));
            $('#txtMachineQty').val(oPLineConfigure.MachineQty);   
            $('#txtStartDate').datebox('setValue', oPLineConfigure.PlanStartDateSt);
            _oProductionExecutionPlanDetail.ProductionUnitID = parseInt(oPLineConfigure.ProductionUnitID);
        }
    });

    function Print()
    {
        if(_oProductionExecutionPlanDetailHistories.length<=0)
        {
            alert("Without History Can't Print !");
            return;
        }
        window.open(_sBaseAddress + '/ProductionExecutionPlanDetail/ProductionExecutionPlanDetailHistoryPreview?id='+_oProductionExecutionPlanDetailHistories[0].ProductionExecutionPlanDetailID);
        window.close();
    }
    function Close()
    {
        window.close();
    }
    $(document).keydown(function(e) {
        //debugger;
        if(e.which == 27)//escape=27
        {
            //debugger;
            window.close();
        }
    });
</script>