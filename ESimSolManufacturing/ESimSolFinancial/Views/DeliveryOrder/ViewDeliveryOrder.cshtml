<html>
<head>
    @{
        ViewBag.Title = "Delivery Order";
    }
</head>
<body>
    @model ESimSol.BusinessObjects.DeliveryOrder
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div class="menuMainCollectionTable">
        <fieldset style="width:100%;">
            <legend>Delivery Order</legend>
            <table style="width:100%;">
                <tr>
                    <td class="td-col-2 align-right">DO No</td>
                    <td class="td-col-4">
                        @Html.TextBoxFor(model => model.DONo, new { style = "width: 97%;", id = "txtDONo", disabled="true" })
                    </td>
                    <td class="td-col-2 align-right">DO Date</td>
                    <td class="td-col-2">
                        <input id="dtDODate" type="text" class="easyui-datebox" style="width: 100%;" data-options="formatter:icsdateformat,parser:icsdateparser" />
                    </td>
                    <td class="td-col-2 align-right">Ref Type</td>
                    <td class="td-col-2">
                        <select id="cboRefType" class="cls-cbo"></select>
                    </td>
                    <td class="td-col-2 align-right"> <label id="lblRefType">Export PI</label> </td>
                    <td class="td-col-4">
                        @Html.TextBoxFor(model => model.RefNo, new { style = "width: 70%;", id = "txtRefNo", @class="cls-txt"})
                        <input type="button" id="btnPickRef" style="width:24%" value="Pick"/>
                    </td>
                </tr>
                <tr>
                    <td class="td-col-2 align-right">Buyer</td>
                    <td class="td-col-4">
                        @Html.TextBoxFor(model => model.ContractorName, new { style = "width: 70%;", id = "txtContractorName", @placeholder = "Search Buyer", @class = "cls-txt" })
                        <input type="button" id="btnPickContractor" style="width:24%" value="Pick" />
                    </td>
                    <td class="td-col-2 align-right">Delivery Date</td>
                    <td class="td-col-2">
                        <input id="dtDeliveryDate" type="text" class="easyui-datebox" style="width: 100%;" data-options="formatter:icsdateformat,parser:icsdateparser" />
                    </td>
                    <td class="td-col-2 align-right">Status</td>
                    <td class="td-col-2">
                        @Html.TextBoxFor(model => model.DOStatusStr, new { style = "width: 95%;", id = "txtDOStatus", disabled = "true", @class = "cls-txt" })
                    </td>
                    <td class="td-col-2 align-right"> Delivery Point </td>
                    <td class="td-col-4">
                        @Html.TextBoxFor(model => model.DeliveryPoint, new { style = "width: 97%;", id = "txtDeliveryPoint", @placeholder = "Delivery Point", @class = "cls-txt" })
                    </td>
                </tr>
                <tr>
                    <td class="td-col-2 align-right">Note</td>
                    <td colspan="7" class="td-col-18">
                        @Html.TextBoxFor(model => model.Note, new { style = "width: 99.4%;", id = "txtNote", @placeholder = "Note", @class = "cls-txt" })
                    </td>
                </tr>
            </table>
        </fieldset>
        <table id="tblDeliveryOrderDetail" title="Delivery Order Details" class="easyui-datagrid" style="height:380px; width:100%;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar" data-options="onClickRow: onClickRow">
            <thead>
                <tr>
                    <th field="ProductName" width="20%" align="left">Product</th>
                    <th width="10%" align="left" field="SizeName">Size</th>
                    <th width="10%" align="left" field="Measurement">Measurement</th>
                    <th width="10%" align="right" data-options="field:'Qty',editor:{type:'numberbox',options:{precision:2}}">Qty</th>
                    <th field="MUnit" width="10%" align="left">Unit</th>                    
                    <th width="20%" align="left" data-options="field:'Note',editor:{type:'textbox'}">Note</th>
                    <th field="YetToDeliveryOrderQty" width="17%" align="right" formatter="formatPrice"> Yet To Delivery Qty</th>
                </tr>
            </thead>
        </table>
        <div id="toolbar">
            <a id="btnPickItemDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Pick Item</a>
            <a id="btnRefreshDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
            <a id="btnRemoveDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
        </div>
    
        <fieldset style="height:35px;">
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                <tr>
                    <td style="width:60%; text-align:right"></td>
                    <td style="width:40%;text-align:right;">
                        <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true">Approve</a>
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" onclick="Close()" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>
<style type="text/css">
    .td-col-2 select{
        width:100%;
    }

</style>
<script type="text/javascript">
    var _sBaseAddress = "";
    var _oDeliveryOrder=null;
    $(document).ready(function () {
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oDeliveryOrder =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oEnumRefTypes =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.EnumRefTypes));
        $('#txtDONo').data('DeliveryOrderID',_oDeliveryOrder.DeliveryOrderID);
        $('#txtDONo').data('DOStatus',_oDeliveryOrder.DOStatus);
        $('#txtDONo').data('ApproveBy',_oDeliveryOrder.ApproveBy);
        $('#txtRefNo').data('RefID',_oDeliveryOrder.RefID);
        $('#txtContractorName').data('ContractorID',_oDeliveryOrder.ContractorID);
        $('#tblDeliveryOrderDetail').data("GridEditable",false);
        if(parseInt(sessionStorage.getItem("ProductNature"))==2)//Poly
        {
            $('#tblDeliveryOrderDetail').datagrid('hideColumn', 'SizeName');
        }else{ //Hanger
            $('#tblDeliveryOrderDetail').datagrid('hideColumn', 'Measurement');
        }

        if(sessionStorage.getItem('Action')=='Add' || sessionStorage.getItem('Action')=='Edit')
        {
            $('#tblDeliveryOrderDetail').data("GridEditable",true);
            $('.cls-txt').prop('disabled',false);
            $('.cls-cbo').prop('disabled',false);
            $('#btnApprove').hide();
            $('#btnSave, #toolbar').show();
        }
        else if(sessionStorage.getItem('Action')=='Approve')
        {
            $('#tblDeliveryOrderDetail').data("GridEditable",false);
            $('.cls-txt').prop('disabled',true);
            $('.cls-cbo').prop('disabled',true);
            $('#btnSave, #toolbar').hide();
            $('#btnApprove').show();
        } 
        else if(sessionStorage.getItem('Action')=='View')
        {
            $('#tblDeliveryOrderDetail').data("GridEditable",false);
            $('.cls-txt').prop('disabled',true);
            $('.cls-cbo').prop('disabled',true);
            $('#btnApprove,#btnSave, #toolbar').hide();
        }
        $('#dtDODate').datebox('setValue',_oDeliveryOrder.DODateStr);
        $('#dtDeliveryDate').datebox('setValue',_oDeliveryOrder.DeliveryDateStr);
        $("#cboRefType").icsLoadCombo({
            List: oEnumRefTypes,
            OptionValue: "Value",
            DisplayText: "Text",
            InitialValue:""
        });
        $("#cboRefType").val(_oDeliveryOrder.RefType);
        DynamicRefreshList(_oDeliveryOrder.DeliveryOrderDetails,'tblDeliveryOrderDetail');
        $("#progressbar").progressbar({ value:0});
        $("#progressbarParent").hide();
    });

    //Sizer Break Down End

    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
  
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }

    $('#cboRefType').change(function(e){

        if($('#cboRefType').val()==1){
            $('#lblRefType').text("Export PI");
        }
        else if($('#cboRefType').val()==2){
            $('#lblRefType').text("Order Shit");
        }
    });


    function Validation(){

        if(parseInt(sessionStorage.getItem("BUID"))<=0)
        {
            alert('No business unit found.');
            return false;
        }

        if(parseInt($('#cboRefType').val())<=0){
            $('#cboRefType').focus();
            $('#cboRefType').addClass("errorFieldBorder");
            alert('Please select reference type.');
            return false;
        }
        else{
            $('#cboRefType').removeClass("errorFieldBorder");
        }

        if(parseInt($('#txtContractorName').data('ContractorID'))<=0){
            $('#txtContractorName').focus();
            $('#txtContractorName').addClass("errorFieldBorder");
            alert('Contractor required.');
            return false;
        }
        else{
            $('#txtContractorName').removeClass("errorFieldBorder");
        }

        if(parseInt($('#txtRefNo').data('RefID'))<=0){
            $('#txtRefNo').focus();
            $('#txtRefNo').addClass("errorFieldBorder");
            alert((($('#cboRefType').val()==1) ? 'Export PI required.':' Order shit required.'));
            return false;
        }
        else{
            $('#txtRefNo').removeClass("errorFieldBorder");
        }

        var oRows=$('#tblDeliveryOrderDetail').datagrid('getRows');


        if(oRows.length<=0){
            alert("Delivery order detail required.");
        }

        for(var i=0; i<oRows.length;i++){
            if(parseFloat(oRows[i].Qty)<=0){
                alert("Quantity required for product "+ oRows[i].ProductName);
                onClickRow(i);
                return false;
            }
            if(parseInt(parseFloat(oRows[i].Qty).toFixed(2))> parseInt(parseFloat(oRows[i].YetToDeliveryOrderQty).toFixed(2))){
                alert("Maximum quantity "+ formatPrice(oRows[i].YetToDeliveryOrderQty) +" allowed for "+ oRows[i].ProductName);
                onClickRow(i)
                return false;
            }
           
        }

        return true;
    }

    function RefreshObject()
    {
        var oDeliveryOrder={
            DeliveryOrderID : parseInt($('#txtDONo').data('DeliveryOrderID')),
            BUID : parseInt(sessionStorage.getItem("BUID")),
            DONo : $.trim($('#txtDONo').val()),
            DODate : $('#dtDODate').datebox('getValue'),
            DOStatus : $('#txtDONo').data('DOStatus'),
            RefType : $('#cboRefType').val(),
            RefID : parseInt($('#txtRefNo').data('RefID')),
            ContractorID : parseInt($('#txtContractorName').data('ContractorID')),
            DeliveryDate : $('#dtDeliveryDate').datebox('getValue'),
            DeliveryPoint : $.trim($('#txtDeliveryPoint').val()),
            Note : $.trim($('#txtNote').val()),
            DeliveryOrderDetails: $('#tblDeliveryOrderDetail').datagrid('getRows')
        };
        return oDeliveryOrder;
    }

    $("#btnSave").click(function (){
        debugger;
        endEditing();
        if(!Validation()) return false;
        var oDeliveryOrder=RefreshObject();
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        $('#btnSave').hide();
        var intervalID = setInterval(updateProgress, 250);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/DeliveryOrder/Save",
            traditional: true,
            data:  JSON.stringify(oDeliveryOrder),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                oDeliveryOrder = jQuery.parseJSON(data);
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                $('#btnSave').show();
                if (oDeliveryOrder.ErrorMessage==null || oDeliveryOrder.ErrorMessage=="") {
                    alert("Data Saved successfully");
                    var oDeliveryOrders = sessionStorage.getItem("DeliveryOrders");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oDeliveryOrders != null) {
                        oDeliveryOrders = jQuery.parseJSON(oDeliveryOrders);
                    }
                    else
                    {
                        oDeliveryOrders = [];
                    }
                    if (nIndex != -1)
                    {
                        oDeliveryOrders[nIndex] = oDeliveryOrder;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oDeliveryOrders.length);
                        oDeliveryOrders.push(oDeliveryOrder);
                    }
                    sessionStorage.setItem("DeliveryOrders", JSON.stringify(oDeliveryOrders));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oDeliveryOrder.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });
    ///Buyer Pick

    function PickContractor(){
        var oContractor = { Params: "2~~"+sessionStorage.getItem("BUID") };//here 6 Is Contractor
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            debugger;
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winContractor',
                        winclass: 'clsContractor',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblContractors',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Contractor List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });
    }

    $("#btnPickContractor").click(function () {
        PickContractor();
    });

    $('#txtContractorName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if(code == 13)// Enter
        {
            PickContractor();
        }
        if (code == 8) //backspace=8
        {
            $("#txtContractorName").removeClass("fontColorOfPickItem");
            $('#txtContractorName').data('ContractorID',0);
        }
    });

    //ExportPI Pick

    function GetExportSC()
    {
        var sPINo = $.trim($('#txtRefNo').val());

        if(sPINo==""){
            alert("Enter Export PI No to Search.");
            return false;
        }

        var oExportSC = { PINo:sPINo, BUID: sessionStorage.getItem("BUID"),ProductNatureInInt:sessionStorage.getItem("ProductNature"),ContractorID:$('#txtContractorName').data('ContractorID')};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oExportSC,
            ControllerName: "ExportSC_Common",
            ActionName: "SearchByExportSCBUWise",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ExportSCID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "PINo", title: "PI No", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorName", title: "Contractor", width: 150, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winExportSCPicker',
                        winclass: 'clsExportSCPicker',
                        winwidth: 370,
                        winheight: 460,
                        tableid: 'tblExportSCPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'PINo',
                        windowTittle: 'ExportPI List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }

    $("#btnPickRef").click(function () {
        GetExportSC();

    });

    $('#txtRefNo').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) //Enter
        {
            GetExportSC();
        }
        if (code == 8) //backspace=8
        {
            $('#txtRefNo').removeClass('fontColorOfPickItem');
            $('#txtRefNo').data('RefID',0);
        }
    });


    //ExportPI Detail

    
    $("#btnPickItemDetail").click(function () {

        if(parseInt($('#txtRefNo').data('RefID'))<=0){
            $('#txtRefNo').focus();
            $('#txtRefNo').addClass("errorFieldBorder");
            alert((($('#cboRefType').val()==1) ? 'Export PI required.':' Order shit required.'));
            return false;
        }
        else{
            $('#txtRefNo').removeClass("errorFieldBorder");
        }

        if($('#cboRefType').val()==1){
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: {ExportSCID: $('#txtRefNo').data('RefID')},
                ControllerName: "ExportSC_Common",
                ActionName: "GetsSCDetails",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ExportSCDetailID > 0) {
                        var tblColums = [];
                        var oColumn = { field: "ProductName", title: "Product Name", width: 150, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ProductCode", title: "Product Code", width: 80, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ColorName", title: "Color", width: 120, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "MUName", title: "Unit", width: 40, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "YetToDeliveryOrderQty", title: "Qty", width: 90, align: "right", formatter: formatPrice }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winExportSCDetailPicker',
                            winclass: 'clsExportSCDetailPicker',
                            winwidth: 630,
                            winheight: 460,
                            tableid: 'tblExportSCDetailPicker',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName: 'ProductName',
                            windowTittle: 'ExportPI Detail List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }

                }else{
                    alert("Data Not Found.");
                }
            });
        }
    
    });

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }

    function SetPickerValueAssign(oPickerobj) {

        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

        if (oPickerobj.winid == 'winContractor')
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0) {
                $('#txtContractorName').addClass('fontColorOfPickItem');
                $('#txtContractorName').val(oreturnObj.Name);
                $('#txtContractorName').data('ContractorID',oreturnObj.ContractorID);
                $('#txtContractorName').focus();
            }
        }
        else if (oPickerobj.winid == 'winExportSCPicker')
        {
            if (oreturnObj != null && oreturnObj.ExportSCID > 0)
            {
                $('#txtRefNo, #txtContractorName').addClass('fontColorOfPickItem');
                $('#txtRefNo').data('RefID',oreturnObj.ExportSCID);
                $('#txtRefNo').val(oreturnObj.PINo);

                $('#txtContractorName').data('ContractorID',oreturnObj.ContractorID);
                $('#txtContractorName').val(oreturnObj.ContractorName);
                $('#txtDeliveryPoint').val(oreturnObj.DeliveryToAddress);
                $('#txtDeliveryPoint').focus();
            }
        }
        else if(oPickerobj.winid =='winExportSCDetailPicker')
        {
            debugger;
            if (oreturnobjs.length>0 && parseInt(oreturnobjs[0].ExportSCDetailID)> 0)
            {
                var oRows=$('#tblDeliveryOrderDetail').datagrid('getRows');
                for(var i = 0;i<oreturnobjs.length;i++)
                {
                    var hasExportPIDetail=false;
                    for(var j=0;j<oRows.length;j++)
                    {
                        if(parseFloat(oRows[j].RefDetailID) == parseInt(oreturnobjs[i].ExportSCDetailID))
                        {
                            hasExportPIDetail=true;
                            break;
                        }
                    }
                    if(!hasExportPIDetail){
                        var oDeliveryOrderDetail= {
                            DeliveryOrderDetailID : 0,
                            DeliveryOrderID : 0,
                            ProductID : oreturnobjs[i].ProductID,
                            RefDetailID : oreturnobjs[i].ExportSCDetailID,
                            Qty : oreturnobjs[i].YetToDeliveryOrderQty,
                            Note : '',
                            ProductName:oreturnobjs[i].ProductName,
                            MUnit:oreturnobjs[i].MUName,
                            YetToDeliveryOrderQty:oreturnobjs[i].YetToDeliveryOrderQty
                        };
                        $('#tblDeliveryOrderDetail').datagrid('appendRow',oDeliveryOrderDetail);
                    }
                }
            }
        }
    }

    $("#btnRefreshDetail").click(function (){
        endEditing();
    });

    $('#btnClose').click(function(e){
        window.location.href = sessionStorage.getItem("BackLink");
    });

    $("#btnRemoveDetail").click(function () {

        var oDODetail=$('#tblDeliveryOrderDetail').datagrid('getSelected');
        if(oDODetail.RefDetailID<=0){
            alert("Please select a valid item from list.");
            return false;
        }
        if (!confirm("Confirm to Delete?")) return false;
        var nIndex= $('#tblDeliveryOrderDetail').datagrid('getRowIndex',oDODetail);
        $('#tblDeliveryOrderDetail').datagrid('deleteRow',nIndex);

    });

    var editIndex = undefined;

    function endEditing(){
        debugger;
        if (editIndex == undefined){return true}
        if ($('#tblDeliveryOrderDetail').datagrid('validateRow', editIndex)){
            $('#tblDeliveryOrderDetail').datagrid('endEdit', editIndex);
            $('#tblDeliveryOrderDetail').datagrid('selectRow',editIndex);
            var oDeliveryOrderDetail=$('#tblDeliveryOrderDetail').datagrid('getSelected');
            if(oDeliveryOrderDetail!=null)
            {
                $('#tblDeliveryOrderDetail').datagrid('updateRow',{index: editIndex,	row: oDeliveryOrderDetail});
            }
            editIndex = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }

    function onClickRow(index){
        if (editIndex != index && $('#tblDeliveryOrderDetail').data("GridEditable")){
            if (endEditing())
            {
                $('#tblDeliveryOrderDetail').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndex = index;
            }
            else
            {
                $('#tblDeliveryOrderDetail').datagrid('selectRow', editIndex);
            }
        }
    }
        
    $("#btnApprove").click(function ()
    {   
        if(!Validation()) return false;
        if (!confirm("Confirm to Approve?")) return false;
        var oDeliveryOrder=RefreshObject();
        oDeliveryOrder.ActionTypeExtra = "Approve";
        oDeliveryOrder.DOStatusInInt = 2;//
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/DeliveryOrder/ChangeStatus",
            traditional: true,
            data:  JSON.stringify(oDeliveryOrder),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                oDeliveryOrder = jQuery.parseJSON(data);
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (oDeliveryOrder.DeliveryOrderID>0 && oDeliveryOrder.ApproveBy!=0) 
                {
                    alert("Approved successfully");
                    var oDeliveryOrders = sessionStorage.getItem("DeliveryOrders");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oDeliveryOrders != null) {
                        oDeliveryOrders = jQuery.parseJSON(oDeliveryOrders);
                    }
                    else {
                        oDeliveryOrders = [];
                    }
                    if (nIndex != -1) {
                        oDeliveryOrders[nIndex] = oDeliveryOrder;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oDeliveryOrders.length);
                        oDeliveryOrders.push(oDeliveryOrder);
                    }
                    sessionStorage.setItem("DeliveryOrders", JSON.stringify(oDeliveryOrders));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oDeliveryOrder.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });
    
 
</script>