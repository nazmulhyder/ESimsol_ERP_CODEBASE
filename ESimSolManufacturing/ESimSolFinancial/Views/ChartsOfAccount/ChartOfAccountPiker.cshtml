<html>
    <head>
        <link href="@Url.Content("~/Content/CSS/icon.css")" rel="stylesheet" type="text/css" />
        <link href="@Url.Content("~/Content/CSS/easyui.css")" rel="stylesheet" type="text/css" />
        <link href="@Url.Content("~/Content/CSS/Pikerstyle.css")" rel="stylesheet" type="text/css" />

        <script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Scripts/jquery.ics.customize.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Scripts/jquery.easyui.min.js")" type="text/javascript"></script>

        <script src="@Url.Content("~/Scripts/jquery-ui.min.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Scripts/json2.js")" type="text/javascript"></script>
    </head>
 @model ESimSol.BusinessObjects.COA_ChartsOfAccount    
    <body>
        <table border="0" cellpadding="0" cellspacing="0">
            <tr>
                <td colspan="2" style="width:700px">
                    <table border="0" cellpadding="0" cellspacing="0">
                        <tr>
                            <td style="width:250px; font-size:13px">
                               <u>Search By Code(Press Enter):</u> 
                            </td>
                            <td style="width:450px; font-size:13px">
                                <u>Search By Head Name(Press Enter):</u> 
                            </td>
                        </tr>
                        <tr>
                            <td style="width:250px">
                               <input type="text" id="txtAccountCode" style="width:250px" onfocus="AccountCodeFocus()"/>
                            </td>
                            <td style="width:450px">
                                <input type="text" id="txtAccountHeadName" style="width:450px" onfocus="AccountNameFocus()"/>
                            </td>
                        </tr>
                    </table>   
                </td>
            </tr>
            <tr style="height:450px">
                <td style="width:450px">
                        <div style="margin-left:0px; height:450px">
                            <table id="tblLedgerHead" title="Ledger List"  class="easyui-datagrid" style="width:450px;height:450px" fitColumns="false" rownumbers="true" pagination="false" singleSelect="true" autoRowHeight="false">
                                <thead>  
                                    <tr>
                                        <th field="AccountCode" width="150">Account Code</th>  
                                        <th field="AccountHeadName" width="350">Account Head Name </th>
                                    </tr>  
                                </thead> 
                            </table>​                                          
                        </div>
                </td>
                <td style="width:250px">
                   <div style="margin-left:0px; height:450px">
                       <table id="tblComponent" title="Ledger List"  class="easyui-datagrid" style="width:250px;height:450px" fitColumns="false" rownumbers="true" pagination="false" singleSelect="true", autoRowHeight="false">
                           <thead>  
                               <tr>                           
                                   <th field="AccountHeadNameType" width="250">Component Name</th>
                               </tr>  
                           </thead> 
                       </table>​                                          
                   </div>
                </td>
            </tr>
            <tr>
                <td style="width:450px">                    
                </td>
                 <td style="width:250px; text-align:right; vertical-align:middle">
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-reload" plain="true" onclick="Refresh()">Refresh</a>
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-cancel" plain="true" onclick="Close()">Close</a>

                </td>
            </tr>
        </table>
    </body>
</html>

<script type="text/javascript">
    var _oChartOfAccounts = [];
    var _oComponentHeads = [];
    var _oLedgerHeads = [];
    var _oGlobalAccountHeads=[];
    var _bFlag = false;
    $(document).ready(function () {
        //debugger;
        var oChartOfAccounts=[];
        oChartOfAccounts=[];
        oChartOfAccounts=@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.ChartsOfAccounts));
        _oGlobalAccountHeads=oChartOfAccounts;
        RefreshControl(oChartOfAccounts);
    });
    
    function Refresh() {
        RefreshControl(_oGlobalAccountHeads);
    }

    $(document).keydown(function (e) {
        //debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (_bFlag) {
            if (code == 8)//Back arrow   
            {
                var oChartOfAccount = $('#tblComponent').datagrid('getSelected');
                if (oChartOfAccount.AccountType == 1) return;
                oChartOfAccount = GetAccountHeadByID(oChartOfAccount.ParentHeadID);
                var nParentHeadID = oChartOfAccount.ParentHeadID;
                _oComponentHeads = [];
                for (var i = 0; i < _oChartOfAccounts.length; i++) {
                    if (_oChartOfAccounts[i].ParentHeadID == nParentHeadID) {
                        _oComponentHeads.push(_oChartOfAccounts[i]);
                    }
                }

                //Load Component List
                data = _oComponentHeads;
                data = { "total": "" + data.length + "", "rows": data };
                $('#tblComponent').datagrid('loadData', data);
                $('#tblComponent').datagrid('selectRow', 0);
                $('#tblComponent').datagrid({ onSelect: function (rowIndex, rowData) { SelectionChanged(rowIndex, rowData); } });
                $('#tblComponent').datagrid({ onDblClickRow: function (rowIndex, rowData) { RowDoubleClickEvent(rowIndex, rowData); } });
                //alert('Hello world!!!!!!!');
            }
        }
    });



 $('#txtAccountHeadName').keydown(function (e) { 
    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 13)//Enter key
    {
         //debugger;
        var txtSearchByName = document.getElementById('txtAccountHeadName').value;
        var sAccountHeadName="";    
        var oAccountHeads=[];
        var n=0;
        for(i=0;i<_oGlobalAccountHeads.length;++i){
            if (_oGlobalAccountHeads[i].AccountType==4){
                sAccountHeadName=_oGlobalAccountHeads[i].AccountHeadName;
                n=0;
                //n=sAccountHeadName.match("/"+txtSearchByName+"/");
                n=sAccountHeadName.toUpperCase().indexOf(txtSearchByName.toUpperCase())
                if(n!=-1)
                {
                    oAccountHeads.push(_oGlobalAccountHeads[i]); 
                }
            }
        }    
        RefreshList(oAccountHeads);
    }
});

$('#txtAccountCode').keydown(function (e) { 
    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 13)//Enter key
    {
         //debugger;
        var txtSearchByName = document.getElementById('txtAccountCode').value;
        var sAccountHeadName="";    
        var oAccountHeads=[];
        var n=0;
        for(i=0;i<_oGlobalAccountHeads.length;++i){
            if (_oGlobalAccountHeads[i].AccountType==4){
                sAccountHeadName=_oGlobalAccountHeads[i].AccountCode;
                n=0;
                //n=sAccountHeadName.match("/"+txtSearchByName+"/");
                n=sAccountHeadName.indexOf(txtSearchByName)
                if(n!=-1)
                {
                    oAccountHeads.push(_oGlobalAccountHeads[i]); 
                }
            }
        }    
        RefreshList(oAccountHeads);
    }
});

function RefreshList(oLedgerHeads)
{
    //Load Ledger List
    _oLedgerHeads=oLedgerHeads;
    data = _oLedgerHeads.sort(compare);
    data = { "total": "" + data.length + "", "rows": data };
    $('#tblLedgerHead').datagrid('loadData', data);
    $('#tblLedgerHead').datagrid({ onDblClickRow: function (rowIndex, rowData) { RowDoubleClickEventForLedgerHead(rowIndex, rowData); } });
}


function compare(a,b) {
  if (a.AccountHeadName < b.AccountHeadName)
     return -1;
  if (a.AccountHeadName > b.AccountHeadName)
    return 1;
  return 0;
}


function sortByKey(array, key) {
    return array.sort(function(a, b) {
        var x = a[key]; var y = b[key];
        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
    });
}





//   function AccountHeadNameShort(a,b){  
//   debugger;
//        a = a.split('/');  
//		b = b.split('/');  
//		if (a[2] == b[2]){  
//			if (a[0] == b[0]){  
//				return (a[1]>b[1]?1:-1);  
//			} else {  
//				return (a[0]>b[0]?1:-1);  
//			}  
//		} else {  
//			return (a[2]>b[2]?1:-1);  
//		}       
//    } 


//  $('#tblLedgerHead').datagrid({
//	remoteSort: false,
//	columns: [[
//             {field:'AccountCode',title:'Account Code',width:150},
//		     {field:'AccountHeadName',title:'Account Head Name',width:350,sortable:true,
//			    sorter:function(a,b){  
//				    a = a.split('/');  
//				    b = b.split('/');  
//				    if (a[2] == b[2]){  
//					    if (a[0] == b[0]){  
//						    return (a[1]>b[1]?1:-1);  
//					    } else {  
//						    return (a[0]>b[0]?1:-1);  
//					    }  
//				    } else {  
//					    return (a[2]>b[2]?1:-1);  
//				    }  
//			    }  
//		    }
//	    ]]
//    });


    function Close() {
        window.close();
    }


    //ledger list double click events
    function RowDoubleClickEventForLedgerHead(rowIndex, rowData) {
        //debugger;
        if (rowData == null) {
            alert('Please select a account head');
            return;
        }
        if (rowData.AccountHeadID <= 0) {
            alert('Please select a account head');
            return;
        }
        window.returnValue = rowData;
        window.close();
    }


    //component list selection change events
    function SelectionChanged(rowIndex, rowData) {
        //debugger;
        if (rowData == null) return;
        _bFlag = true;
        _oLedgerHeads = [];
        MakeLeagerList(rowData.AccountHeadID);
        
        //Load Ledger List
        data = _oLedgerHeads.sort(compare);
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblLedgerHead').datagrid('loadData', data);

    }
    
    function RowDoubleClickEvent(rowIndex, rowData) {
        //debugger;
        if (rowData.AccountType >= 3) return;//if selected chart of account is ledger then return
        _bFlag=true;
        _oComponentHeads = [];
        for (var i = 0; i < _oChartOfAccounts.length; i++) {
            if (_oChartOfAccounts[i].ParentHeadID == rowData.AccountHeadID) {
                _oComponentHeads.push(_oChartOfAccounts[i]);
            }
        }
        _oLedgerHeads = [];
        MakeLeagerList(rowData.AccountHeadID);

        //Load Ledger List
        data = _oLedgerHeads.sort(compare);
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblLedgerHead').datagrid('loadData', data);
        $('#tblLedgerHead').datagrid({ onDblClickRow: function (rowIndex, rowData) { RowDoubleClickEventForLedgerHead(rowIndex, rowData); } });

        //Load Component List
        data = _oComponentHeads;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblComponent').datagrid('loadData', data);
        $('#tblComponent').datagrid('selectRow', 0);        
        $('#tblComponent').datagrid({ onSelect: function (rowIndex, rowData) { SelectionChanged(rowIndex, rowData); } });
        $('#tblComponent').datagrid({ onDblClickRow: function (rowIndex, rowData) { RowDoubleClickEvent(rowIndex, rowData); } });
    }
    
      
        
    function RefreshControl(oChartOfAccounts) {
        _oChartOfAccounts=oChartOfAccounts;
        _oComponentHeads=[];
         if (_oChartOfAccounts != null) {
            if (_oChartOfAccounts.length > 0) {
                for (var i = 0; i < _oChartOfAccounts.length; i++) {
                    if (_oChartOfAccounts[i].ParentHeadID == 1) {
                        _oComponentHeads.push(_oChartOfAccounts[i]);
                    }
                }
                _oLedgerHeads = [];
                MakeLeagerList(2); //By deafult set assets ledger list
                
                //debugger;
                //Load Ledger List
                data = _oLedgerHeads.sort(compare);
                data = { "total": "" + data.length + "", "rows": data };
                $('#tblLedgerHead').datagrid('loadData', data);
                $('#tblLedgerHead').datagrid({ onDblClickRow: function (rowIndex, rowData) { RowDoubleClickEventForLedgerHead(rowIndex, rowData); } });

                //Load Component List
                data = _oComponentHeads;
                data = { "total": "" + data.length + "", "rows": data };
                $('#tblComponent').datagrid('loadData', data);
                $('#tblComponent').datagrid('selectRow', 0);
                $('#tblComponent').datagrid({ onSelect: function (rowIndex, rowData) { SelectionChanged(rowIndex, rowData); } });
                $('#tblComponent').datagrid({ onDblClickRow: function (rowIndex, rowData) { RowDoubleClickEvent(rowIndex, rowData); } });
            }
        }
     }


     function MakeLeagerList(nAccountHeadID) {
         //debugger;
         var oAccountHeadObj = GetAccountHeadByID(nAccountHeadID)      
         if (oAccountHeadObj.AccountType==4){
             _oLedgerHeads.push(oAccountHeadObj);
         }
         oAccountHeadObj.ChildHead = GetChildHead(nAccountHeadID);

         for (var i = 0; i < oAccountHeadObj.ChildHead.length; i++) {
             MakeLeagerList(oAccountHeadObj.ChildHead[i].AccountHeadID)
         }
     }

     function GetChildHead(nAccountHead) {
         var oTempAccountHeadList = [];
         for (var i = 0; i < _oChartOfAccounts.length; i++) {
             if (_oChartOfAccounts[i].ParentHeadID == nAccountHead) {
                 oTempAccountHeadList.push(_oChartOfAccounts[i]);
             }
         }
        return oTempAccountHeadList;
     } 

     function GetAccountHeadByID(id) {
         var oAccountHead = null;
         for (var i = 0; i < _oChartOfAccounts.length; i++) {
             if (_oChartOfAccounts[i].AccountHeadID == id) {
                 oAccountHead = _oChartOfAccounts[i];
                 break;
             }
         }
         return oAccountHead;
     }


//     function SearchByAccountCode() {
//         var sAccountHeadCode = $("#txtAccountCode")[0].value;
//         if (sAccountHeadCode.length < 3) return;
//         //debugger; 
//         var rows = $('#tblLedgerHead').datagrid('getRows');
//         for (i = 0; i < rows.length; ++i) {
//             if (rows[i]['AccountCode'].toUpperCase() == sAccountHeadCode.toUpperCase()) { break; }
//         }
//         $('#tblLedgerHead').datagrid('selectRow', i);
//     }


//     function SearchByAccountHeadName() {
//         //debugger; 
//         var sAccountHeadName = $("#txtAccountHeadName")[0].value;
//         if (sAccountHeadName.length < 2) return;
//        
//         var rows = $('#tblLedgerHead').datagrid('getRows');
//         for (i = 0; i < rows.length; ++i) {
//             if (rows[i]['AccountHeadName'].toUpperCase() == sAccountHeadName.toUpperCase()) { break; }
//         }
//         $('#tblLedgerHead').datagrid('selectRow', i);
//     }

     function AccountCodeFocus() {
         _bFlag = false;
     }

     function AccountNameFocus() {
         _bFlag = false;
     }
</script>