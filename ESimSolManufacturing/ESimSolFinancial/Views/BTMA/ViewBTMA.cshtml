@{
    ViewBag.Title = "BTMA";
}
@model ESimSol.BusinessObjects.BTMA
<div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
    <div class="panel-heading" style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
        <label style="font-size:18px;">Please wait</label>
        <div id="progressbar" style="width:100%;height:37px;"></div>
    </div>
</div>
<div style="padding-top:1px" ng-app="BTMAAPP" class="form-horizontal regionBTMA">
    <div ng-controller="BTMACtrl">     
        <fieldset>
            <legend>Order Info</legend>
            <div class="row col-md-12">
                <div class="col-md-2 text-right"><label class="control-label">Export LC No:</label></div>
                <div class="col-md-3 text-left">
                    <div class="input-group">
                        <input ng-model="BTMA.ExportLCNo" ng-keyup="searchExportLCByKeyUp($event)" class="form-control" placeholder="Search By Export LC No...." ng-disabled="disabled" required />
                        <span class="input-group-btn">
                            <button type="button" class="btn btn-primary btn-sm" aria-label="Left Align" ng-disabled="disabled" ng-click="searchExportLC()"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                        </span>
                    </div>
                </div>
                <div class="col-md-2 text-right"><label class="control-label">LC Value:</label></div>
                <div class="col-md-3 text-left">
                    <input class="form-control number" ng-model="BTMA.Amount | number:2" disabled />
                </div>
                <div class="col-md-2 text-right"><label class="control-label">LC Date:</label></div>
                <div class="col-md-3 text-left">
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" ng-model="BTMA.LCDateST" ng-disabled=" disabled"><span class="input-group-addon"><i class="glyphicon glyphicon-time" ng-disabled="disabled"></i></span>
                    </div>
                </div>
            
            </div>
            <div class="row col-md-12">
                <div class="col-md-2 text-right"><label class="control-label">Export Bill No:</label></div>
                <div class="col-md-3 text-left">
                    <div class="input-group">
                        <input ng-model="BTMA.ExportBillNo" ng-keyup="searchExportBillByKeyUp($event)" class="form-control" placeholder="Type Bill No & Press Enter...." ng-disabled="disabled" required />
                        <span class="input-group-btn">
                            <button type="button" class="btn btn-primary btn-sm" aria-label="Left Align" ng-disabled="disabled" ng-click="searchExportBill()"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                        </span>
                    </div>
                </div>
               
                <div class="col-md-2 text-right"><label class="control-label">Garments Qty:</label></div>
                <div class="col-md-3 text-left">
                    <input class="form-control" ng-model="BTMA.GarmentsQty" placeholder="Type Garments Qty...." ng-disabled=" disabled" />
                </div>
                <div class="col-md-2 text-right"><label class="control-label">LC Expire Date:</label></div>
                <div class="col-md-3 text-left">
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" ng-model="BTMA.LCExpireDateST" ng-disabled=" disabled"><span class="input-group-addon"><i class="glyphicon glyphicon-time" ng-disabled="disabled"></i></span>
                    </div>
                </div>
            </div>
            <div class="row col-md-12">
                <div class="col-md-2 text-right"><label class="control-label">Bank Name:</label></div>
                <div class="col-md-3 text-left">
                    <div class="input-group">
                        <input ng-model="BTMA.BankName" ng-keyup="searchBankByKeyUp($event)" class="form-control" placeholder="Type Bank Name & Press Enter...." ng-disabled="disabled" required />
                        <span class="input-group-btn">
                            <button type="button" class="btn btn-primary btn-sm" aria-label="Left Align" ng-disabled="disabled" ng-click="searchBank()"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                        </span>
                    </div>
                </div>
                <div class="col-md-2 text-right"><label class="control-label">Branch:</label></div>
                <div class="col-md-3 text-left">
                    <input class="form-control" ng-model="BTMA.BranchName" placeholder="Type Branch Name ...." ng-disabled="disabled" />
                </div>
               
                <div class="col-md-2 text-right"><label class="control-label">Delivery Date:</label></div>
                <div class="col-md-3 text-left">
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" id="BTMA.DeliveryDateST" ng-disabled=" disabled"><span class="input-group-addon"><i class="glyphicon glyphicon-time" ng-disabled="disabled"></i></span>
                    </div>
                </div>
            </div>
            <div class="row col-md-12">
                <div class="col-md-2 text-right"><label class="control-label">Master LC No(s):</label></div>
                <div class="col-md-3 text-left">
                    <input class="form-control" ng-model="BTMA.MasterLCNos" placeholder="Master LC No(s)...." ng-disabled="disabled" />
                </div>
                <div class="col-md-2 text-right"><label class="control-label">Master LC Date:</label></div>
                <div class="col-md-3 text-left">
                    <input class="form-control" ng-model="BTMA.MasterLCDates" placeholder="Master LC Date(s)...." ng-disabled="disabled" />
                </div>
                <div class="col-md-2 text-right"><label class="control-label">Invoice Date:</label></div>
                <div class="col-md-3 text-left">
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" ng-model="BTMA.InvoiceDateST" ng-disabled=" disabled"><span class="input-group-addon"><i class="glyphicon glyphicon-time" ng-disabled="disabled"></i></span>
                    </div>
                </div>

            </div>
            <div class="row col-md-12">
                <div class="col-md-2 text-right"><label class="control-label">Import LC No:</label></div>
                <div class="col-md-3 text-left">
                    <input class="form-control" ng-model="BTMA.ImportLCNo" placeholder="Import LC No...." ng-disabled=" disabled" />
                </div>
                <div class="col-md-2 text-right"><label class="control-label">Imp. LC Value:</label></div>
                <div class="col-md-3 text-left">
                    <input class="form-control number" ng-model="BTMA.Amount_ImportLC" placeholder="Import LC Value.." ng-disabled=" disabled" />
                </div>
                <div class="col-md-2 text-right"><label class="control-label">Import LC Date:</label></div>
                <div class="col-md-3 text-left">
                    <div class="input-group date date-container">
                        <input type="text" class="form-control datebox" ng-model="BTMA.ImportLCDateST" ng-disabled=" disabled"><span class="input-group-addon"><i class="glyphicon glyphicon-time " ng-disabled="disabled"></i></span>
                    </div>
                </div>
            </div>
            <div class="row col-md-12">
                <div class="col-md-2 text-right"><label class="control-label">Supplier:</label></div>
                <div class="col-md-3 text-left">
                    <div class="input-group">
                        <input ng-model="BTMA.SupplierName" ng-keyup="searchContractorByKeyUp($event)" class="form-control" placeholder="Search By Supplier Name...." ng-disabled="disabled" required />
                        <span class="input-group-btn">
                        <button type="button" class="btn btn-primary btn-sm" aria-label="Left Align" ng-disabled="disabled" ng-click="searchContractor()"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                        </span>
                    </div>
                </div>
                <div class="col-md-2 text-right"><label class="control-label">Supplier Address:</label></div>
                <div class="col-md-3 text-left">
                    <input class="form-control" ng-model="BTMA.SupplierAddress" placeholder=" Supplier Address...." disabled />
                </div>
                <div class="col-md-2 text-right"><label class="control-label">Gate Pass No:</label></div>
                <div class="col-md-3 text-left">
                    <input class="form-control" ng-model="BTMA.GatePassNo" placeholder="Type Gate Pass No...." ng-disabled="disabled" />
                </div>
               
            </div>
            <div class="row col-md-12">
                <div class="col-md-2 text-right"><label class="control-label">Mushak No:</label></div>
                <div class="col-md-3 text-left">
                    <div class="input-group">
                        <input ng-model="BTMA.MushakNo" ng-keyup="searchMushakByKeyUp($event)" class="form-control" placeholder="Search By Mushak No...." ng-disabled="disabled" required />
                        <span class="input-group-btn">
                            <button type="button" class="btn btn-primary btn-sm" aria-label="Left Align" ng-disabled="disabled" ng-click="searchMushak()"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                        </span>
                    </div>
                </div>
                <div class="col-md-2 text-right"><label class="control-label">Mushak Date:</label></div>
                <div class="col-md-3 text-left">
                    <div class="input-group date date-container">
                        <input type="text" class="form-control datebox" ng-model="BTMA.MushakDateST" ng-disabled=" disabled"><span class="input-group-addon"><i class="glyphicon glyphicon-time " ng-disabled="disabled"></i></span>
                    </div>
                </div>
                <div class="col-md-2 text-right"><label class="control-label">Gate Pass Date:</label></div>
                <div class="col-md-3 text-left">
                    <div class="input-group date date-container">
                        <input type="text" class="form-control datebox" ng-model="BTMA.GatePassDateST" ng-disabled=" disabled"><span class="input-group-addon"><i class="glyphicon glyphicon-time " ng-disabled="disabled"></i></span>
                    </div>
                </div>
            </div>
        </fieldset>
        @*DETAILS TABLE*@
        <fieldset>
            <legend>Details : </legend>
            <div class="ui-grid-panel">
                <div class="container col-md-12">
                    <div class="form-inline">
                        <input ng-model="SearchString_Product" class="form-control" ng-keydown="searchProductByKeyUp($event)" placeholder="Type Product Name & Press Enter" style="width:24%" required />
                        <button type="button" class="btn btn-primary btn-sm" aria-label="Left Align" ng-click="searchProduct()"> <span class="glyphicon glyphicon-plus" aria-hidden="true"> Add</span> </button>
                        <button type="button" style="float:right; margin-right:40px" class="btn btn-danger btn-sm" aria-label="Left Align" ng-click="deleteDetail()" ng-hide="hide"> <span class="glyphicon glyphicon-trash" aria-hidden="true"> Remove</span> </button>
                    </div>
                </div>
            </div>
            <div class="row col-md-12">
                <div ui-grid="gridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-edit class="grid ui-grid-selectable"></div>
            </div>
        </fieldset>
        <fieldset>
            <legend>Action</legend>
            <div class="row col-md-12 text-right">
                @*<button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="save_Revise()" ng-hide="hide_Revise"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"> Save(Revise)</span> </button>
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="Approve()" ng-hide="hide_Approve"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"> Approve</span> </button>*@
                <button type="button" class="btn btn-success btn-sm" aria-label="Left Align" ng-click="save()" ng-hide="hide_Save"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true">Save</span> </button>
                <button type="button" class="btn btn-danger btn-sm" aria-label="Left Align" ng-click="close()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"> Close</span> </button>
            </div>
        </fieldset>
    </div>
</div>

<style type="text/css">
    .grid {
        width: 100%;
        height: 180px;
    }

    .regionBTMA .form-horizontal .control-label {
        padding-top: 3px;
    }

    .regionBTMA .form-control {
        height: 26px;
        padding: 0px 6px;
        font-size: 12px;
    }

    .regionBTMA .col-md-12 {
        width: 100%;
        padding-right: 5px;
        padding-left: 5px;
        margin-bottom: 5px;
    }

    .regionBTMA .col-md-2 {
        width: 11%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionBTMA .col-md-3 {
        width: 22%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionBTMA .col-md-4 {
        width: 35%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionBTMA .col-md-5 {
        width: 40%;
        padding-right: 5px;
        padding-left: 0px;
    }

    .regionBTMA .col-md-10 {
        width: 86%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionBTMA .btn-sm {
        padding: 3px 10px;
    }

    .regionBTMA .input-group-addon {
        padding: 4px 8px;
    }

     #progressbarParent {
        opacity: 0.8;
        background-color: #ffffff  /*#DCD9D4*/;
        position: fixed;
        width: 100%;
        height: 100%;
        top: 0px;
        left: 0px;
        z-index: 1000;
    }
</style>

<script type="text/javascript">
    $("#progressbar").progressbar({ value: 0 });
    $("#progressbarParent").hide();

    var _nBUID=0;
    var oBTMADetails=[];
    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oBTMA =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));

    _nBUID =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
    var BTMAModule = angular.module('BTMAAPP', ['ngAnimate', 'ui.bootstrap', 'ui.bootstrap.datetimepicker','ui.grid', 'ui.grid.selection','ui.grid.resizeColumns', 'ui.grid.edit','ms.service']);
    BTMAModule.controller('BTMACtrl', function ($scope, $http, $uibModal, $log, uiGridConstants, msModal, userSession) {

        $('.date-container').datepicker({
            format: "dd M yyyy",
            calendarWeeks: true,
            autoclose: true,
            todayHighlight: true
        });
      
        debugger;
        $scope.PickerResults=null;

     
        var viewType = sessionStorage.getItem("Operation");
        if (viewType == 'View')
        {
            $scope.disabledType=true;
            $scope.disabled= true;
            $scope.hide=true;

            $scope.hide_Revise=true;
            $scope.hide_Approve=true;
            $scope.hide_Save=true;
        }
        

        $scope.BTMA=oBTMA;
        oBTMADetails=oBTMA.BTMADetails;
        $("#ChallanDateInStr").val($scope.BTMA.ChallanDateInStr);
        $("#DisburseDateInStr").val($scope.BTMA.DisburseDateInStr);

        $scope.MakeDetailsTable= function(){
        
            var oDetailColumns = [];
            var oColumn = null;
            oColumn = {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false};oDetailColumns.push(oColumn);
            oColumn ={ field: 'ProductName', name:'ProductName', width:'30%',enableCellEdit:false };oDetailColumns.push(oColumn);
            oColumn ={ field: 'MUName', name:'MUnit', width:'8%',enableCellEdit:false };oDetailColumns.push(oColumn);
            oColumn ={ field: 'Qty', name: 'Qty', cellClass: 'text-right',width: '10%' , cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true,  type: 'number', enableCellEdit:true,footerCellClass: 'text-right' ,footerCellFilter: 'number:0'};oDetailColumns.push(oColumn);
            oColumn ={ field: 'UnitPrice', name:'UnitPrice', width:'10%',enableCellEdit:true };oDetailColumns.push(oColumn);
            oColumn ={ field: 'Amount', name: 'Value', cellClass: 'text-right',width: '10%' , cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true,  type: 'number', enableCellEdit:false,footerCellClass: 'text-right' ,footerCellFilter: 'number:0'};oDetailColumns.push(oColumn);
            oColumn ={ field: 'Remarks', name:'Remarks', width:'10%',enableCellEdit:true };oDetailColumns.push(oColumn);
            oColumn ={ field: 'OPT', name:'Operation', width:'10%',enableCellEdit:false, cellClass:"text-center", //ng-show="row.entity.OPTShow"
                cellTemplate:'<div>' +'<button style="align:right" class="btn btn-success btn-sm" ng-show="row.entity.OPTShow"  ng-click="grid.appScope.SaveDetail(row.entity)">{{row.entity.OPT}} </button>' +'</div>'};oDetailColumns.push(oColumn);
                $scope.gridOptions = {
                enableRowHeaderSelection: false,
                enableRowSelection: true,
                showColumnFooter: true,
                enableFullRowSelection: true,
                enableColumnResizing: true,
                enableSelectAll: false,
                multiSelect:false,
                enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,
                columnDefs:oDetailColumns,
                data:oBTMADetails,
                onRegisterApi: function (gridApi) {
                    $scope.gridDetailApi = gridApi;
                    gridApi.edit.on.afterCellEdit($scope,
                        function (rowEntity, colDef, newValue, oldValue)
                        {
                            debugger;
                            if($scope.BTMA.BTMAID>0)
                            {
                                if($scope.BTMA.BTMADetailID>0)
                                    rowEntity.OPT="Save";
                                else
                                    rowEntity.OPT="Update";
                                rowEntity.OPTShow=true;
                            }
                                
                    
                            rowEntity.Amount=rowEntity.Qty*rowEntity.UnitPrice;
                            //$scope.SetTotal();
                            return rowEntity;
                        });
                }
            };
        }
        $scope.MakeDetailsTable();
       
        $scope.Validation=function()
        {
            debugger;
            if($scope.BTMA.ExportLCID==0 || $scope.BTMA.ExportBillID==0 )
            {
                alert("Please Select Export LC Or Bill And Try Again!"); return false;
            }
            if($scope.BTMA.SupplierID==0)
            {
                alert("Please Select Supplier And Try Again!"); return false;
            }
            if($scope.BTMA.BankName=="")
            {
                alert("Please Type Bank Name And Try Again!"); return false;
            }
            if($scope.BTMA.BTMAID!=0)
            {
                for(var i=0;i<$scope.gridOptions.data.length;i++)
                {
                    if($scope.gridOptions.data[i].BTMADetailID<=0)
                    {
                        alert("Please Add Product: "+$scope.gridOptions.data[i].ProductName+"And Try Again!"); return false;
                    }
                }
            }
            return true;
        }
        $scope.ConvertDate=function(oItem,oDateList)
        {
            for(var i=0;i<oDateList.length;i++)
            {
                oItem[oDateList[i]]= new Date(oItem[oDateList[i]+"ST"]);
            }
            return oItem;
        }
        $scope.save = function () {

            if(!$scope.Validation())return;
           
            var Dates=["LCDate", "LCExpireDate","InvoiceDate","DeliveryDate","MushakDate","GatePassDate","ImportLCDate"];
            $scope.BTMA=$scope.ConvertDate($scope.BTMA,Dates);

            $scope.BTMA.BTMADetails = $scope.gridOptions.data;

            console.log($scope.BTMA); debugger;
            $http.post(_sBaseAddress+'/BTMA/Save',JSON.stringify($scope.BTMA)).then(
                                function (response) {
                                    var result=jQuery.parseJSON(response.data);
                                    console.log(result);
                                    if(result.BTMAID>0  && result.ErrorMessage=="")
                                    {
                                        debugger;
                                        $scope.BTMA=result;
                                        userSession.setData('BTMAs',$scope.BTMA);
                                        //userSession.previousPage();
                                        msModal.Message({headerTitle : '', bodyText:'Save Successfully.', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                                    }
                                    else
                                    {
                                        alert(result.ErrorMessage);
                                        return;
                                    }

                                },
                                function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                        );
        };
        $scope.SaveDetail = function (rowEntity) {
            debugger;
            rowEntity.BTMAID=$scope.BTMA.BTMAID;
            if(rowEntity.BTMAID<=0)
            {
                alert("Sorry, First Try To Save BTMA !!");return;
            }
            if(rowEntity.ProductID<=0)
            {
                alert("Invalid Product ID.");return;
            }
            if(rowEntity.Qty<=0)
            {
                alert("Qty Should Be Greater Than Zero, For "+rowEntity.ProductName+" !!");return;
            }

            console.log(rowEntity); debugger;
            $http.post(_sBaseAddress+'/BTMA/SaveDetail',JSON.stringify(rowEntity)).then(
                                function (response) {
                                    var result=jQuery.parseJSON(response.data);
                                    console.log(result);
                                    if(result.BTMADetailID>0  && result.ErrorMessage=="")
                                    {
                                        debugger;
                                        msModal.Message({headerTitle : '', bodyText:'Save Successfully. ('+rowEntity.ProductName+')', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                                        var Index=$scope.gridOptions.data.indexOf(rowEntity);
                                        result.OPTShow=false;
                                        $scope.gridOptions.data[Index]=result;
                                        $scope.gridDetailApi.core.notifyDataChange(uiGridConstants.dataChange.COLUMN);
                                    }
                                    else
                                    {
                                        alert(result.ErrorMessage);
                                        return;
                                    }

                                },
                                function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                        );
        };
       

        $scope.deleteDetail = function () {
            debugger;
            var data=$scope.gridDetailApi.selection.getSelectedRows();

            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'No item found to delete.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }

            if($scope.BTMA.PrintBy!=0)
            {
                alert("Already  Printed");
                //msModal.Message({headerTitle : '', bodyText:'Already approved.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }

            if (!confirm("Confirm to Delete?")) return ;
            if(data[0].BTMADetailID<=0)
            {
                angular.forEach($scope.gridOptions.data,function(value,index){
                    if(value.ProductID==data[0].ProductID){
                        $scope.gridOptions.data.splice(index,1);
                    }
                },$scope.gridOptions.data);
                alert("Delete Successfully."); return;
            }

            $http.post(_sBaseAddress+'/BTMA/DeleteDetail',JSON.stringify(data[0])).then(
                            function (response) {
                                if(jQuery.parseJSON(response.data)=='Data delete successfully'){
                                    angular.forEach($scope.gridOptions.data,function(value,index){
                                        if(value.BTMADetailID==data[0].BTMADetailID){
                                            $scope.gridOptions.data.splice(index,1);
                                        }
                                    },$scope.gridOptions.data);
                                    alert("Delete Successfully.");
                                }
                                else{
                                    alert(jQuery.parseJSON(response.data));
                                }
                            },
                            function (response) {alert(jQuery.parseJSON(response.data));}
                        );

        };
        $scope.getMasterLCInfo=function(){
            var obj={
                ExportLCID: (($scope.BTMA.ExportLCID==undefined)?0:$scope.BTMA.ExportLCID)
            }
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/BTMA/GetMasterLC',$.param(obj), config).then(
                    function (response)
                    {
                        $scope.BTMA.MasterLCNos=response.data[0];
                        $scope.BTMA.MasterLCDates=response.data[1];
                    },
                    function (response) 
                    { 
                        console.log(response.statusText);
                    }
            );
        }
        //Supplier
        $scope.searchContractorByKeyUp=function(keyEvent){
            if(keyEvent.which==13){
                $scope.searchContractor();
            }
            else if(keyEvent.which==8){
                $scope.BTMA.ContractorID=0;
            }
        };
        $scope.searchContractor=function(){
            var obj={
                Params: '1' + '~' + (($scope.BTMA.SupplierName==undefined)?"":$scope.BTMA.SupplierName)
            }

            $scope.SetContractor=function(result)
            {
                $scope.BTMA.SupplierID=0;
                $scope.BTMA.SupplierName="";
                if(result.ContractorID>0){
                    $scope.BTMA.SupplierName=result.Name;
                    $scope.BTMA.SupplierID=result.ContractorID;
                    $scope.BTMA.SupplierAddress=result.Address;
                }
            }

            var paramObj={
                obj:obj,
                url:_sBaseAddress+'/Contractor/ContractorSearchByNameType',
                title:'Product List',
                multiSelect:false,
                callBack:$scope.SetContractor,
                columns:[{ field: 'Name', name: 'Contractor Name' }]
            }
            $scope.GetsPickerValue(paramObj);                      
        };
        //Product
        $scope.searchProductByKeyUp=function(keyEvent)
        {
            if(keyEvent.which==13){
                $scope.searchProduct();
            }
            else if(keyEvent.which==8){
                $scope.BTMA.ProductID=0;
            }
        };
        $scope.searchProduct=function(){
        
            if(($scope.BTMA.ExportBillID==undefined ?0:$scope.BTMA.ExportBillID)==0)
            {
                alert("Please select Export Bill First !!");return;
            }
            var obj={
                ErrorMessage: (($scope.SearchString_Product==undefined)?"":$scope.SearchString_Product),
                ExportBillID:$scope.BTMA.ExportBillID,
            }

            $scope.SetProduct=function(result)
            {
                if(result!=undefined && result.length>0)
                {
                    //var oProducts=[];
                    for(var i=0;i<result.length;i++)
                    {
                        if(!chkDuplicate(result[i].ProductID))
                        {
                            var oProduct=result[i];
                            oProduct.MUnitID=result[i].MUnitID;
                            oProduct.Qty=result[i].Qty;
                            oProduct.UnitPrice=result[i].UnitPrice;
                            oProduct.MUName=result[i].MUName;
                            oProduct.BTMAID=$scope.BTMA.BTMAID;
                            oProduct.BTMADetailID=0;
                            oProduct.OPT="Save";oProduct.OPTShow=true;
                            $scope.gridOptions.data.push(oProduct);
                        }
                    }
                }
            }
            var paramObj={
                obj:obj,
                url:_sBaseAddress+'/BTMA/GetsProduct',
                title:'Product List',
                multiSelect:true,
                callBack:$scope.SetProduct,
                columns:[{ field: "ProductName", name: "Name" },
                         { field: "Qty", name: "Qty", cellClass:'number', cellFilter:'number:2'  },
                         { field: "MUName", name: "MUnit", width:'10%'},
                         { field: "UnitPrice", name: "UnitPrice",cellClass:'number', cellFilter:'number:2'}]
            }
            $scope.GetsPickerValue(paramObj);
        };
        //Bank
        $scope.searchBankByKeyUp=function(keyEvent)
        {
            if(keyEvent.which==13){
                $scope.searchBank();
            }
            else if(keyEvent.which==8){
                $scope.BTMA.BankID=0;
            }
        };
        $scope.searchBank=function(){
            $scope.SetBank=function(result)
            {
                $scope.BTMA.BankID=0;
                $scope.BTMA.SupplierName="";
                if(result.BankID>0){
                    $scope.BTMA.BankName=result.Name;
                }
            }
            var paramObj={
                obj:{Name:$scope.BTMA.BankName},
                url:_sBaseAddress+'/Bank/Gets',
                title:'Bank List',
                multiSelect:false,
                callBack:$scope.SetBank,
                columns:[{ field: "Name", name: "Name" },
                         { field: "ShortName", name: "Short Name"  }]
            }
            $scope.GetsPickerValue(paramObj);
        };
        //Mushak
        $scope.searchMushakByKeyUp_OFF=function(keyEvent)
        {
            if(keyEvent.which==13){
                $scope.searchMushak();
            }
            else if(keyEvent.which==8){
                $scope.BTMA.MushakID=0;
            }
        };
        $scope.searchMushak_OFF=function(){
        
            var obj={
                MushakName: (($scope.SearchString_Mushak==undefined)?"":$scope.SearchString_Mushak)
            }

            $scope.SetMushak=function(result)
            {
                if(result!=undefined && result.length>0)
                {
                    //var oMushaks=[];
                    for(var i=0;i<result.length;i++)
                    {
                        if(!chkDuplicate(result[i].MushakID))
                        {
                            var oMushak=result[i];
                            oMushak.MUnitID=result[i].MeasurementUnitID;
                            oMushak.Qty=0;
                            oMushak.UnitPrice=0;
                            oMushak.MUnit=result[i].MUName;
                            $scope.gridOptions.data.push(oMushak);
                        }
                    }
                }
            }
            var paramObj={
                obj:obj,
                url:_sBaseAddress+'/Mushak/SearchByMushakName',
                title:'Mushak List',
                multiSelect:true,
                callBack:$scope.SetMushak,
                columns:[{ field: "MushakName", name: "Name" },
                         { field: "ShortName", name: "Short Name"  },
                         { field: "MushakCategoryName", name: "Category"}]
            }
            $scope.GetsPickerValue(paramObj);
        };
        //ExportLC
        $scope.searchExportLCByKeyUp=function(keyEvent)
        {
            if(keyEvent.which==13){
                $scope.searchExportLC();
            }
            else if(keyEvent.which==8){
                $scope.BTMA.ExportLCID=0;
                $scope.BTMA.ExportLCID=0; debugger;
                $scope.BTMA.ExportLCNo="";
                $scope.BTMA.Qty_LC=0;$scope.BTMA.Amount=0;
                $scope.BTMA.LCDateST=$scope.BTMA.LCExpireDateST="";
            }
        };
        $scope.searchExportLC=function(){
        
            $scope.SetExportLC=function(result)
            {
                $scope.BTMA.ExportLCID=0; debugger;
                $scope.BTMA.ExportLCNo="";
                $scope.BTMA.Qty_LC=0;$scope.BTMA.Amount=0;
                $scope.BTMA.LCDateST=$scope.BTMA.LCExpireDateST="";
                if(result.ExportLCID>0)
                {
                    $scope.BTMA.BankName=result.BankName_Issue; $scope.BTMA.BranchName= result.BBranchName_Issue;
                    $scope.BTMA.ExportLCID=result.ExportLCID;   $scope.BTMA.ExportLCNo=result.ExportLCNo;
                    $scope.BTMA.Qty_LC=result.Qty;              $scope.BTMA.Amount=result.Amount;;
                    $scope.BTMA.LCDateST=result.OpeningDateST;  $scope.BTMA.LCExpireDateST=result.ExpiryDateST;
                    $scope.BTMA.GarmentsQty=result.GarmentsQty; $scope.getMasterLCInfo();
                }
            }
            var paramObj={
                obj:{ExportLCNo: (($scope.BTMA.ExportLCNo==undefined)?"":$scope.BTMA.ExportLCNo)},
                url:_sBaseAddress+'/ExportLC/GetbyLCNo',
                title:'ExportLC List',
                multiSelect:false,
                callBack:$scope.SetExportLC,
                columns:[{ field: "ExportLCNo", name: "Name" },
                         { field: "Amount", name: "Amount", cellClass:'number' , cellFilter:'number:2'},
                         { field: "OpeningDateST", name: "LC Date"  },
                         { field: "BankName_Issue", name: "Bank Name"  }]
            }
            $scope.GetsPickerValue(paramObj);
        };
        //ExportBill
        $scope.searchExportBillByKeyUp=function(keyEvent)
        {
            if(keyEvent.which==13){
                $scope.searchExportBill();
            }
            else if(keyEvent.which==8){
                $scope.BTMA.ExportBillID=0;
            }
        };
        $scope.searchExportBill=function(){
        
            var obj={
                ExportBillNo: (($scope.BTMA.ExportBillNo==undefined)?"":$scope.BTMA.ExportBillNo),
                ExportLCID: (($scope.BTMA.ExportLCID==undefined)?0:$scope.BTMA.ExportLCID)
            }

            $scope.SetExportBill=function(result)
            {
                $scope.BTMA.ExportBillID=0;
                if(result.ExportBillID>0)
                {
                    $scope.BTMA.ExportBillID=result.ExportBillID;
                    $scope.BTMA.ExportBillNo=result.ExportBillNo;

                    if($scope.BTMA.ExportLCID<=0)
                        $scope.SetExportLC(result);
                }
            }
            var paramObj={
                obj:obj,
                url:_sBaseAddress+'/BTMA/GetsBill',
                title:'Export Bill List',
                multiSelect:false,
                callBack:$scope.SetExportBill,
                columns:[{ field: "ExportBillNo", name: "Bill No" },
                         { field: "Amount", name: "Amount" , cellClass:'number' , cellFilter:'number:2'},
                         { field: "StartDateSt", name: "Date"}]
            }
            $scope.GetsPickerValue(paramObj);
        };
        //ImportLC
        $scope.searchImportLCByKeyUp_OFF=function(keyEvent)
        {
            if(keyEvent.which==13){
                $scope.searchImportLC();
            }
            else if(keyEvent.which==8){
                $scope.BTMA.ImportLCID=0;
            }
        };
        $scope.searchImportLC_OFF=function(){
        
            var obj={
                ImportLCName: (($scope.SearchString_ImportLC==undefined)?"":$scope.SearchString_ImportLC)
            }

            $scope.SetImportLC=function(result)
            {
                if(result!=undefined && result.length>0)
                {
                    //var oImportLCs=[];
                    for(var i=0;i<result.length;i++)
                    {
                        if(!chkDuplicate(result[i].ImportLCID))
                        {
                            var oImportLC=result[i];
                            oImportLC.MUnitID=result[i].MeasurementUnitID;
                            oImportLC.Qty=0;
                            oImportLC.UnitPrice=0;
                            oImportLC.MUnit=result[i].MUName;
                            $scope.gridOptions.data.push(oImportLC);
                        }
                    }
                }
            }
            var paramObj={
                obj:obj,
                url:_sBaseAddress+'/ImportLC/SearchByImportLCName',
                title:'ImportLC List',
                multiSelect:true,
                callBack:$scope.SetImportLC,
                columns:[{ field: "ImportLCName", name: "Name" },
                         { field: "ShortName", name: "Short Name"  },
                         { field: "ImportLCCategoryName", name: "Category"}]
            }
            $scope.GetsPickerValue(paramObj);
        };

        $scope.GetsPickerValue=function(paramObj){
            $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").show();
            setInterval(updateProgress,250);
       
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(paramObj.url,$.param(paramObj.obj), config).then(
                    function (response)
                    {
                        $("#progressbar").progressbar({ value: 0 });//hide
                        $("#progressbarParent").hide();
                        debugger;
                        if( response.data==null ||  response.data.length<=0){
                            alert("No Data Found!!"); return;
                        }
                        console.log(typeof(response.data[0])==="object");
                        var _results= (typeof(response.data[0])==="object" ? response.data: JSON.parse(response.data));
                 
                        console.log(_results);
                        if (_results[0].ErrorMessage!=null && _results[0].ErrorMessage!=""){
                            alert(_results[0].ErrorMessage); return;
                        }

                        var modalObj={
                            size:'md',
                            title:paramObj.title,
                            url:_sBaseAddress+'/Home/Modal',
                            modalController:'ContractorModalCtrl',
                            appController:'BTMACtrl',
                            objs:_results,
                            multiSelect:paramObj.multiSelect,
                            columns:paramObj.columns
                        }
                        var modalInstance=msModal.Instance(modalObj);
                        modalInstance.result.then(function (result) 
                        {
                            paramObj.callBack(result);
                        }, function () 
                        {
                            $log.info('Modal dismissed at: ' + new Date());
                        });
                    },
                    function (response) 
                    { 
                        $("#progressbar").progressbar({ value: 0 });//hide
                        $("#progressbarParent").hide();
                        alert(response.statusText);
                    }
            );
        };
        $scope.close = function () 
        {
            for(var i=0;i<$scope.gridOptions.data.length;i++)
            {
                if($scope.gridOptions.data[i].BTMADetailID<=0 || $scope.gridOptions.data[i].OPTShow)
                {
                    if(
                        !confirm("Product: '"+$scope.gridOptions.data[i].ProductName+"' Is Not "+($scope.gridOptions.data[i].OPT=="Update"?"Updated":"Added")+" !! Confirm To Back?")
                       )return;
                }
            }
            userSession.previousPage();
        };
        function chkDuplicate(nPID)
        {
            if(nPID<=0)
                return false;

            for(var i=0;i<$scope.gridOptions.data.length;i++)
            {
                if($scope.gridOptions.data[i].ProductID==nPID)
                {
                    return true;
                }else false;
            }
        }
        function updateProgress() {
            var value =$('#progressbar').progressbar('getValue');
            if (value < 90){
                value += Math.floor(Math.random() * 10);
                $('#progressbar').progressbar('setValue', value);
            }
        }
        function hideShow(miliseconds) {
            $("#progressbarParent").hide();
        }
    });


</script>


