
@{
    ViewBag.Title = "FN Requisition";
}

@model ESimSol.BusinessObjects.FNRequisition

<div class="menuMainCollectionTable" ng-app="FNRequisitionApp" ng-controller="FNRequisitionController as CS" id="divRC" style="">
    <div style="font-family:Tahoma;text-align:center;height:100%;" class="regionFNR">
            <div style="overflow-y: scroll;height:89%;" ng-disabled="diFNRequisition">
                <fieldset style="width:auto">
                    <legend>Requisition Info :</legend>
                    <div class="col-md-12">
                        <div class="col-md-2 text-right"><label class="control-label">Treatment:</label></div>
                        <div class="col-md-3 text-left">
                            <select class="form-control" ng-model="FNRequisition.TreatmentID" id="cboTreatment" ng-change="ChangeTreatment()" ng-disabled="diasbledTreatment" ng-options="item.id as item.Value for item in FNTreatments"></select>    
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">Machine:</label></div>
                        <div class="col-md-3 text-left">
                            <div class="input-group">
                                <input ng-model="FNRequisition.MachineName" id="txtMachineName" class="form-control" ng-keydown="SearchKeyDownMachineName($event)" placeholder="Type Machine Name & Press Enter"/>
                                <span class="input-group-btn">
                                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="PickMachine()"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                                </span>
                            </div>
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label" style="font-size:11px;">Request Date:</label></div>
                        <div class="col-md-3 text-left">
                            <div class="input-group date date-container">
                                <input type="text" class="form-control" ng-model="FNRequisition.RequestDateInString"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                            </div>
                        </div>
                            
                    </div>
                    @*<div class="  col-md-12">
                        <div class="col-md-2 text-right"><label class="control-label">Order:</label></div>
                        <div class="col-md-3 text-left">
                            <div class="input-group">
                                <input ng-model="FNRequisition.ScNoFull" id="txtScNoFull" class="form-control" ng-keydown="SearchKeyDownOrderNo($event)" placeholder="Type Order & Press Enter" required />
                                <span class="input-group-btn">
                                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="PickOrder()"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                                </span>
                            </div>
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">Customer:</label></div>
                        <div class="col-md-3 text-left">
                            <input ng-model="FNRequisition.BuyerName" id="txtBuyerName" class="form-control" disabled />
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">Qty:</label></div>
                        <div class="col-md-3 text-left">
                            <div class="col-md-12 text-left QtyRegion">
                                <div class="col-md-5 text-left QtyRegion">
                                    <input ng-model="FNRequisition.Qty" id="txtQty" class="form-control" disabled />
                                </div>
                                <div class="col-md-1 text-left QtyRegion"><label class="control-label">(Y)</label></div>
                                <div class="col-md-5 text-left QtyRegion">
                                    <input ng-model="FNRequisition.QtyInMeter" id="txtQtyInMeter" class="form-control" disabled />
                                </div>
                                <div class="col-md-1 text-left QtyRegion"><label class="control-label">(M)</label></div>
                                </div>
                        </div>
                    </div>*@
                      
                    <div class="col-md-12">
                        <div class="col-md-2 text-right"><label class="control-label">Store:</label></div>
                        <div class="col-md-3 text-left">
                            <select class="form-control" ng-model="FNRequisition.WorkingUnitID" id="cboWorkingUnit" ng-change="ChangeWorkingUnit()" ng-options="item.WorkingUnitID as item.OperationUnitName for item in WorkingUnits"></select>
                        </div>

                        <div class="col-md-2 text-right"><label class="control-label">R. Store:</label></div>
                        <div class="col-md-3 text-left">
                            <select class="form-control" ng-model="FNRequisition.WorkingUnitReceiveID" id="cboWorkingUnitReceive" ng-change="ChangeWorkingUnitReceive()" ng-options="item.WorkingUnitID as item.OperationUnitName for item in WorkingUnitReceives"></select>
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">Shade:</label></div>
                        <div class="col-md-3 text-left">
                            <select class="form-control" ng-model="FNRequisition.Shade" id="cboShade" ng-options="item.id as item.Value for item in Shades"></select>
                        </div>

                    </div>
                    <div class="col-md-12">
                        <div class="col-md-2 text-right"><label class="control-label">Shift:</label></div>
                        <div class="col-md-3 text-left">
                            <select class="form-control" ng-model="FNRequisition.ShiftID" id="cboShift" ng-options="item.id as item.Value for item in Shifts"></select>
                        </div>

                        <div class="col-md-2 text-right"><label class="control-label">Remarks:</label></div>
                        <div class="col-md-8 text-left">
                            <input ng-model="FNRequisition.Remarks" id="txtRemarks" class="form-control" />
                        </div>
                    </div>
                </fieldset>
                <div class="col-md-12">
                    <div class="ui-grid-top-panel" style="text-align:left; padding:5px">
                        Product:<input type="text" ng-model="ProductName" id="txtProductName" style="width:180px;" ng-keydown="SearchKeyProduct($event)" placeholder="Type Product Name & press Enter" />
                        <button type="button" class="btn btn-sm btn-primary" aria-label="right Align" ng-click="SearchProduct()"><span class="glyphicon glyphicon-download" aria-hidden="true"> Pick</span></button>
                            
                        @*Lot:*@
                        @*<input type="text" ng-model="LotNo" id="txtLotNo" style="width:150px;" ng-keydown="SearchLot($event)" placeholder="Type lot No & press Enter" />*@
                        @*<select style="width:120px;" ng-model="cboLot" ng-change="ChangeLot()" ng-options="item.LotID as item.LotNo for item in Lots"></select>*@
                        @*Lot Qty:<input type="text" ng-model="LotQty" class="number-box" style="width:80px;" disabled />*@
                        @*Qty:<input type="text" ng-model="txtQty" class="number-box" style="width:80px;" />*@
                        @*<button type="button" id="btnAddDetail" class="btn btn-default btn-sm" aria-label="right Align" ng-click="AddDetail()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Add</span></button>*@
                        <button type="button" id="btnRemoveDetail" class="btn btn-sm btn-danger" aria-label="right Align" ng-mousemove="Delete" ng-click="RemoveDetail()"><span class="glyphicon glyphicon-minus" aria-hidden="true"> Remove</span></button>
                        <button type="button" id="btnRefreshFNPDetail" class="btn btn-sm btn-success" aria-label="right Align" ng-click="RefreshDetail()"><span class="glyphicon glyphicon-refresh" aria-hidden="true"> Refresh</span></button>
                    </div>
                    <div style="width: 100%; height:333px;" ui-grid="gridOptionsDetail" external-scopes="clickHandler" ui-grid-selection ui-grid-edit ui-grid-resize-columns ui-grid-key-nav class="ui-grid-selectable"></div>
                </div>
            </div>
            <fieldset style="height:10%;">
                <legend>Action</legend>
                <div class="col-md-12 text-right">
                    <button type="button" id="btnPrint" class="btn btn-sm btn-primary" aria-label="Left Align" style="float:left" ng-click="Print()"> <span class="glyphicon glyphicon-print"></span> Print</button>
                    <button type="button" ng-hide="btnDisburse" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="Disburse()"> <span class="glyphicon glyphicon-circle-arrow-right" aria-hidden="true"></span> Disburse</button>
                    <button type="button" ng-hide="btnReceive" class="btn btn-sm btn-success" aria-label="Left Align" ng-click="Receive()"> <span class="glyphicon glyphicon-circle-arrow-left" aria-hidden="true"></span> Receive</button>
                    <button type="button" ng-hide="btnApprove" class="btn btn-sm btn-success" aria-label="Left Align" ng-click="Approve()"> <span class="glyphicon glyphicon-ok-circle" aria-hidden="true"></span> Approve</button>
                    <button type="button" ng-hide="btnSave" class="btn btn-sm btn-success" aria-label="Left Align" ng-click="Save()"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true" ></span> Save</button>
                    <button type="button" id="btnclose" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="Close()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"> Close</span> </button>
                </div>
            </fieldset>
    </div>
</div>

<style type="text/css">
    .regionFNR .form-horizontal .control-label {
        padding-top: 1px;
        font-size: 11px;
    }

    .regionFNR .form-control {
        height: 22px;
        padding: 2px 4px;
        font-size: 12px;
    }

   .QtyRegion.regionFNR .col-md-12 {
        width: 100%;
        padding-right: 5px;
        padding-left: 5px;
        padding-top: 5px;
    }

    
    .QtyRegion .col-md-12 {
        width: 100%;
        padding-right:2px;
        padding-left: 2px;
        margin-top:5px;
    }
    .regionFNR .col-md-2 {
        width: 10%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionFNR .col-md-3 {
        width: 23%;
        padding-right: 5px;
        padding-left: 5px;
    }
      .regionFNR .col-md-8 {
        width: 56%;
        padding-right: 5px;
        padding-left: 5px;
    }


    .rigionDate .col-md-9 {
        width:72%;
        padding-right: 2px;
        padding-left:2px;
    }

      .rigionDate .col-md-3 {
        width:28%;
        padding-right: 2px;
        padding-left:2px;
    }

      .QtyRegion.col-md-1 {
        width:8%;
        padding-right: 2px;
        padding-left:2px;
    }
       .QtyRegion.col-md-5 {
        width:42%;
        padding-right: 2px;
        padding-left:2px;
    }
    .regionFNR .btn-sm {
        padding: 2px 7px;
    }

    .regionFNR .input-group-addon {
        padding: 3px 6px;
    }
     .ui-grid-cell.lightGreen {
        background-color:  #B5DA69!important ;  /*90EE90*/ /*8ab92d*/
        color: #000 !important;
        font-size:12px;
        font-weight:bold;
    }
        .ui-grid-cell.blue {
        background-color:  #f1c40f!important ;  /*90EE90*/ /*8ab92d*/
        color: #000 !important;
        font-size:12px;
        font-weight:bold;
    }
    /*.ui-grid-cell {
     background-color: #3498db !important;
  }*/

    .ui-grid-cell.ui-grid-disable-selection.ui-grid-row-header-cell {
        pointer-events: auto;
    }
</style>

<script type="text/javascript">
    var nTempFSCDID = 0;
    var tempParentID = 0;
    var _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oFNRequisition =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oFNRequisitionDetails = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.FNRequisitionDetails));
    var oFNTreatments= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FNTreatments));
    var oShades = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Shades));
    var oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Shifts));
    var oWorkingUnits = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.WorkingUnits));
    var oWorkingUnitReceives = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.WorkingUnitReceives));
    var oSelectedTreatmentProcess = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.TreatmentProcess));
    var _nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
    var _tempProductID = 0;
    tempParentID = oFNRequisition.FNRID;
    debugger;

    var FNRequisitionApp = angular.module('FNRequisitionApp', ['ngAnimate', 'ui.bootstrap','ui.grid','ui.grid.selection','ui.grid.edit', 'ui.grid.rowEdit','ui.grid.cellNav','ui.grid.resizeColumns','ms.service','uiKeyUpDown']);
    FNRequisitionApp.controller('FNRequisitionController', function ($scope,uiGridConstants, $http, $filter, $uibModal,$log,msModal,icsMethod,userSession,msGridControl) {
        $('.date-container').datepicker({
            format: "dd M yyyy",
            calendarWeeks: true,
            autoclose: true,
            todayHighlight: true
        });

        $('.number-box').icsCurrencyBox();
        oFNTreatments[0].id=0;oFNTreatments[0].Value='--Select One--';
        oShifts[0].id=0;oShifts[0].Value='--Select One--';
        oWorkingUnits.push({WorkingUnitID:0,OperationUnitName:'--Select One--'});
        //oWorkingUnitReceives.push({WorkingUnitReceiveID:0,OperationUnitNameReceive:'--Select One--'});
        oWorkingUnitReceives.push({WorkingUnitID:0,OperationUnitName:'--Select One--'});

        $scope.btnDisburse = $scope.btnReceive = $scope.btnApprove = $scope.btnSave = true;
        if(sessionStorage.getItem("FNRequisitionHeader")=="Add FN Requisition" || sessionStorage.getItem("FNRequisitionHeader")=="Edit FN Requisition")
        {
            $scope.btnSave = false;
        }
        if(sessionStorage.getItem("FNRequisitionHeader")=="Approve FN Requisition")
        {
            $scope.btnApprove = false;
        }
        if(sessionStorage.getItem("FNRequisitionHeader")=="Disburse FN Requisition")
        {
            if(oFNRequisitionDetails.length>0)
            {
                for(var i=0; i<oFNRequisitionDetails.length;i++)
                {
                    if(oFNRequisitionDetails[i].DisburseQty<=0)oFNRequisitionDetails[i].DisburseQty=oFNRequisitionDetails[i].RequiredQty;
                }
            }
            $scope.btnDisburse = false;
        }
        if(sessionStorage.getItem("FNRequisitionHeader")=="Receive FN Requisition")
        {
            $scope.btnReceive = false;
        }
        if(sessionStorage.getItem("FNRequisitionHeader")=="View FN Requisition")
        {
            $("#divRC :input").prop('disabled', true);
            $('#btnclose').prop('disabled', false);
            $('#btnPrint').prop('disabled', false);
        }
        if(sessionStorage.getItem("FNRequisitionHeader")!="Add FN Requisition")
        {

        }
        $scope.Shades = oShades;
        $scope.FNRequisition=oFNRequisition;
        $scope.FNRequisitionDetails=oFNRequisitionDetails;
        $scope.Shifts= oShifts;
        $scope.WorkingUnits= oWorkingUnits;
        $scope.WorkingUnitReceives= oWorkingUnitReceives;

        $scope.FNTreatments = oFNTreatments;
        $scope.FNRequisitionDetail =null;
        $scope.diasbledTreatment=true;

        debugger;
        if(oSelectedTreatmentProcess==0)
            $scope.diasbledTreatment=false;
        
        if($scope.FNRequisition.FNRID<=0)
            $scope.FNRequisition.TreatmentID=oSelectedTreatmentProcess;

        $scope.ChangeTreatment = function()
        {
            debugger;
            if(parseInt($scope.FNRequisition.FNTPID)>0)
            {
                $scope.FNRequisition.FNProcessSt = ICS_FindObject($scope.Shades,'FNTPID',$scope.FNRequisition.FNTPID).FNProcessSt;
            }
        }
        $scope.ChangeLot = function()
        {
            debugger;
            if(parseInt($scope.cboLot)>0)
            {
                $scope.LotQty= ICS_FindObject( $scope.Lots,'LotID',$scope.cboLot).Balance;
            }
        }
        $scope.FNRDetailIndex =-1; $scope.bIsCellEdit = false;

        var oTableColumns = [];
        var oTableColumn={ field: 'ProductCode', name:'Code', width:'10%',cellClass: 'text-left',enableCellEdit:false };oTableColumns.push(oTableColumn);
        oTableColumn={ field: 'ProductName', name:'Material Name', width:'18%',cellClass: 'text-left',enableCellEdit:false };oTableColumns.push(oTableColumn);
        oTableColumn={ field: 'LotNo', name: 'Lot No', width: '18%',align:'left', cellClass: 'text-left',enableSorting: false,enableCellEdit:false};oTableColumns.push(oTableColumn);
        oTableColumn={ field: 'LotBalance', name: 'Lot Qty', width: '15%',  cellFilter: 'number:4', cellClass: 'text-right',  enableSorting: false,enableCellEdit:false};oTableColumns.push(oTableColumn);
      
        if(sessionStorage.getItem("FNRequisitionHeader")=="Disburse FN Requisition")
        {
            oTableColumn={ field: 'RequiredQty', name: 'Request Qty', width: '15%',  cellFilter: 'number:4', cellClass: 'text-right',  enableSorting: false,enableCellEdit:false };oTableColumns.push(oTableColumn);
            oTableColumn={ field: 'DisburseQty', name: 'Disburse Qty', width: '15%',  cellFilter: 'number:4', cellClass: 'text-right',  enableSorting: false,enableCellEdit:true };oTableColumns.push(oTableColumn);
        }
        else if(sessionStorage.getItem("FNRequisitionHeader")=="Receive FN Requisition" || sessionStorage.getItem("FNRequisitionHeader")=="View FN Requisition")
        {
            oTableColumn={ field: 'RequiredQty', name: 'Request Qty', width: '15%',  cellFilter: 'number:4', cellClass: 'text-right',  enableSorting: false,enableCellEdit:false };oTableColumns.push(oTableColumn);
            oTableColumn={ field: 'DisburseQty', name: 'Disburse Qty', width: '15%',  cellFilter: 'number:4', cellClass: 'text-right',  enableSorting: false,enableCellEdit:false };oTableColumns.push(oTableColumn);
        }
        else
        {
            oTableColumn={ field: 'RequiredQty', name: 'Request Qty', width: '15%',  cellFilter: 'number:4', cellClass: 'text-right',  enableSorting: false,enableCellEdit:true };oTableColumns.push(oTableColumn);
        }

        oTableColumn={name:'Action',enableCellEdit:false, cellTemplate: '<div><button ng-click="grid.appScope.AddLot(row.entity)">Add Lot</button></div>'};oTableColumns.push(oTableColumn);
        $scope.gridOptionsDetail = {
            enableFullRowSelection: true,
            enableHighlighting : true,
            multiSelect: false,
            enableCellEditOnFocus: true,
            enableRowSelection: true,
            enableSelectAll: false,
            columnDefs: oTableColumns,
            data:oFNRequisitionDetails,
            onRegisterApi: function (gridApi) {

                $scope.gridApiFNPDetails = gridApi;

                gridApi.edit.on.afterCellEdit($scope,
                 function (rowEntity, colDef, newValue, oldValue)
                 {
                     debugger;
                     rowEntity.Qty =rowEntity.Qty==null?0:rowEntity.Qty;
                     $scope.FNRDetailIndex = $scope.gridOptionsDetail.data.indexOf(rowEntity);

                     if(parseFloat(rowEntity.RequiredQty)<=0)
                     { 
                         rowEntity.RequiredQty=oldValue; 
                         alert("Requ. Qty Can Not Be Equal Or Less Then Zero!!");  return rowEntity;
                     }
                     $scope.SaveFNRDetail(rowEntity,true);
                     return rowEntity;
                     $scope.gridApiFNPDetails.selection.on.rowSelectionChanged($scope, function (row) {$scope.RowSelect(row.entity );
                     });
                 }
                )}
        };
        $scope.Print = function()
        {
            if(oFNRequisition==null || oFNRequisition.FNRID<=0)
            {
                alert("Invalid Operation!");
                return;
            }
            window.open(_sBaseAddress+'/FNRequisition/Print?FNRID='+ oFNRequisition.FNRID);
        }
        $scope.AddLot = function (oFNRequisitionDetail) {
            debugger;
            var a = _sBaseAddress;

            if(oFNRequisitionDetail==null || oFNRequisitionDetail.FNRequisitionDetailID<=0)
            {
                alert("Please Select an Chemical from list");
                return;
            }
            var obj = {
                ErrorMessage: $scope.FNRequisition.WorkingUnitID + '~' + oFNRequisitionDetail.ProductID
            };
            $http.post(_sBaseAddress+'/FNRequisition/GetLotsOrder',JSON.stringify(obj)).then(
                                function (response)
                                {
                                    debugger;
                                    var oColumns = [];
                                    var oColumn = { field: 'ProductCode', name: 'Order No',width: '15%'};oColumns.push(oColumn);
                                    oColumn = { field: 'ProductName', name: 'Product Name',width: '20%',enableSorting: false};oColumns.push(oColumn);
                                    oColumn = { field: 'LotNo', name: 'LotNo',width: '15%',enableSorting: false};oColumns.push(oColumn);
                                    oColumn = { field: 'Balance', name: 'Balance',width: '20%',enableSorting: false};oColumns.push(oColumn);
                                    oColumn = { field: 'MUName', name: 'Unit',width: '20%',enableSorting: false};oColumns.push(oColumn);

                                    var results=jQuery.parseJSON(response.data);
                                    var modalObj={
                                        size:'lg',
                                        url:_sBaseAddress+'/Home/Modal',
                                        modalcontroller:'EODModalCtrl',
                                        appcontroller:'mainController',
                                        objs:results,
                                        multiSelect:false,
                                        pickertitle:'Lot List',
                                        searchingbyfieldName:'ProductName',
                                        columns:oColumns
                                    }
                                    var modalInstance=msModal.Instance(modalObj);
                                    modalInstance.result.then(function (result)
                                    {
                                        debugger;
                                        var data = result;
                                        var nIndex = $scope.gridOptionsDetail.data.indexOf(oFNRequisitionDetail);
                                        $scope.gridOptionsDetail.data[nIndex].LotID = data.LotID;
                                        $scope.gridOptionsDetail.data[nIndex].LotNo = data.LotNo;
                                        $scope.gridOptionsDetail.data[nIndex].LotBalance = data.Balance;
                                        //$scope.RefreshDetail();
                                        //$scope.gr

                                    }, function () {
                                        $log.info('Modal dismissed at: ' + new Date());
                                    });
                                },
                                  function (response) { alert(response.statusText);}
                            );

        };


        // add , edit & Delete Detail
        $scope.AddDetail = function()
        {
            debugger;
            if(!$scope.ValidateInput()) return;
            if($scope.FNRequisitionDetail==null || parseInt($scope.FNRequisitionDetail.ProductID)<=0 )
            {
                alert("Please Pick Raw Material ");
                return;
            }
            if(ICS_IsExist($scope.gridOptionsDetail.data,'ProductID', $scope.FNRequisitionDetail.ProductID))
            {
                alert("Already Exist");
                return;
            }

            if($scope.cboLot<=0)
            {
                alert("Please Select Lot.");
                return;
            }

            if(parseFloat($scope.txtQty)<=0)
            {
                alert("Qty Should be Greater than 0.");
                return;
            }

            if(parseFloat($scope.LotQty)<parseFloat($scope.txtQty))
            {
                alert("Qty Should be less than or equal Lot Qty.");
                return;
            }
            $scope.FNRequisitionDetail.LotID = $scope.cboLot;
            $scope.FNRequisitionDetail.RequiredQty = $scope.txtQty;
            var oFNRequisitionDetail = $scope.FNRequisitionDetail;
            oFNRequisitionDetail.FNRequisition = $scope.FNRequisitionRefreshObject();
            $scope.SaveFNRDetail(oFNRequisitionDetail,false);
        }
        $scope.SaveParentFirst = function(e)
        {
            debugger;
            //if(!$scope.ValidateInput()) return;
            var oFNRequisition = $scope.FNRequisitionRefreshObject();
            //oFNRequisition.FNRequisitionDetails = $scope.gridOptionsDetail.data;
            $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+"/FNRequisition/Save",
                traditional: true,
                data:  JSON.stringify(oFNRequisition),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var objData= jQuery.parseJSON(data);
                    debugger;

                    $scope.FNRequisition = objData;
                    tempParentID = objData.FNRID;
                    oFNRequisition = objData;
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
        }
        $scope.SaveFNRDetail = function(oFNRequisitionDetail, bIsEdit)
        {
            //$scope.SaveParentFirst();

            debugger;
            if(sessionStorage.getItem("FNRequisitionHeader")=="View FN Requisition")
            {
                return;
            }
            if(sessionStorage.getItem("FNRequisitionHeader")=="Disburse FN Requisition")
            {
                if(parseFloat(oFNRequisitionDetail.DisburseQty)<=0)
                {
                    alert("Disburse Qty Should be Grater than 0.!");
                    return;
                }
            }
            if(!bIsEdit)
            {
                $.icsProgressBar(true);
            }
            debugger;

            oFNRequisitionDetail.FNRID = oFNRequisition.FNRID;
            if(tempParentID>0)
            {
                oFNRequisitionDetail.FNRID = tempParentID;
            }
            if(oFNRequisitionDetail.FNRID == 0)
            {
                ///alert("Save First");
                return;
            }
            if(oFNRequisitionDetail.RequiredQty<=0 || oFNRequisitionDetail.RequiredQty == 'undefined')
            {
                return;
            }
            //oFNRequisitionDetail.FNRequisition = oFNRequisition;
            $http.post(_sBaseAddress+'/FNRequisition/SaveFNRDetail',JSON.stringify(oFNRequisitionDetail)).then(
                function (response)
                {
                    if(!bIsEdit)
                    {
                        $.icsProgressBar(false);
                    }
                    var oFNRequisitionDetail= jQuery.parseJSON(response.data);
                    if (parseInt(oFNRequisitionDetail.FNRDetailID)>0 && (oFNRequisitionDetail.ErrorMessage==null || oFNRequisitionDetail.ErrorMessage==""))
                    {
                        if(!bIsEdit)
                        {
                            //$scope.gridOptionsDetail.data.push(oFNRequisitionDetail);
                            alert("Data Save Successfully!!");
                            $scope.ProductName = "";
                            $scope.cboLot=$scope.txtQty=$scope.LotQty = 0;
                            $scope.FNRequisitionDetail = null;$scope.ProductUnits = [];
                            $scope.FNRequisition = oFNRequisitionDetail.FNRequisition;
                            $('#txtProductName').focus();
                        }else
                        {
                            $scope.gridOptionsDetail.data[$scope.FNRDetailIndex]=oFNRequisitionDetail;
                        }
                    }
                    else
                    {
                        alert(oFNRequisitionDetail.ErrorMessage);
                    }
                },
                    function (response) { alert(jQuery.parseJSON(response.data).Message);}
            );
        }
        $scope.RemoveDetail =function ()
        {
            var oFNPC = $scope.gridApiFNPDetails.selection.getSelectedRows()[0];
            if(oFNPC==null || oFNPC.ProductID<=0)
            {
                alert("Select At least One item !");
                return;
            }
            var SelectedRowIndex=$scope.gridOptionsDetail.data.indexOf(oFNPC);
            if (!confirm("Confirm to Delete?")) return ;
            debugger;
            if(oFNPC==null || oFNPC.FNRDetailID>0)
            {
                var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                $http.post(_sBaseAddress+'/FNRequisition/DeleteFNRDetail',$.param(oFNPC), config).then(
                                    function (response)
                                    {
                                        debugger;
                                        var sMessage= jQuery.parseJSON(response.data).toLowerCase();
                                        if(sMessage=='deleted')
                                        {
                                            alert("Successfully Removed.");
                                            $scope.gridOptionsDetail.data.splice(SelectedRowIndex,1);
                                        }
                                    },
                                      function (response) { alert(jQuery.parseJSON(response.data).Message);}
                                );
            }
            else
            {
                alert("Successfully Removed.");
                $scope.gridOptionsDetail.data.splice(SelectedRowIndex,1);
            }
        }
        $scope.RefreshDetail = function ()
        {
            var oFNPDetails = $scope.gridOptionsDetail.data;
            if(oFNPDetails !=null)
            {
                $scope.gridOptionsDetail.data = oFNPDetails;
            }
        }
        $scope.SearchProduct = function(e)
        {
            //$scope.SaveParentFirst();
            var oProduct = {
                ErrorMessage: $.trim($scope.ProductName) + '~' + $scope.FNRequisition.FNExODetailID + '~' + $scope.FNRequisition.TreatmentID + '~' + tempParentID
            };

            $.icsProgressBar(true);
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/FNRequisition/GetProductsFSCD',$.param(oProduct), config).then(
                                function (response)
                                {
                                    var oColumns = [];
                                    var oColumn = { field: 'ProductCode', name: 'Code',width: '15%'  };oColumns.push(oColumn);
                                    oColumn = { field: 'ProductName', name: 'Product',width: '30%', enableSorting: false  };oColumns.push(oColumn);
                                    oColumn = { field: 'Qty', name: 'Qty',width: '13%', cellClass:'number', cellFilter:'number:2', enableSorting: false  };oColumns.push(oColumn);
                                    oColumn = { field: 'DisburseQty', name: 'DisburseQty',width: '13%', cellClass:'number',cellFilter:'number:2', enableSorting: false  };oColumns.push(oColumn);
                                    oColumn = { field: 'RequiredQty', name: 'RequiredQty',width: '13%', cellClass:'number',cellFilter:'number:2',enableSorting: false  };oColumns.push(oColumn);
                                    var results=response.data;
                                    var modalObj={
                                        size:'lg',
                                        modalcontroller:'ModalCommonListCtrl',
                                        appcontroller:'FNRequisitionController',
                                        objs:results,
                                        multiSelect:true,
                                        pickertitle:'RawProduct List',
                                        searchingbyfieldName:'ProductName',
                                        columns:oColumns
                                    }

                                    $.icsProgressBar(false);

                                    var modalInstance=msModal.Instance(modalObj);
                                    modalInstance.result.then(function (result)
                                    {
                                        debugger;
                                        var tempObjList = result;
                                        for(var i = 0; i<result.length; i++)
                                        {
                                            if(parseInt(tempObjList[i].ProductID)>0)
                                            {
                                                debugger;
                                                //var oDuplicateDate = $filter('filter')($scope.gridOptionsDetail.data, {ProductID: tempObjList[i].ProductID});
                                                //if(oDuplicateDate.length>0) {alert("Duplicate Product Entry Is Not Possible!"); return;};

                                                //$scope.ProductName  = tempObjList[i].ProductName;
                                                //var oFNRequisitionDetail = {
                                                //    FNRDetailID: 0,
                                                //    FNRID : $scope.FNRequisition.FNRID,
                                                //    ProductID:tempObjList[i].ProductID,
                                                //    LotID:0,
                                                //    LotBalance:0,
                                                //    RequiredQty:tempObjList[i].Qty,
                                                //    DisburseQty:0,
                                                //    ProductCode:tempObjList[i].ProductCode,
                                                //    Remarks:'',
                                                //    //ProductCode :tempObjList[i].ProductCode,
                                                //    ProductName :tempObjList[i].ProductName,
                                                //    LotNo : "",
                                                //    MUName : "",
                                                //    FNRequisition:null
                                                //};

                                                if(parseFloat(tempObjList[i].RequiredQty)<0)tempObjList[i].RequiredQty=0;

                                                $scope.FNRequisitionDetail =tempObjList[i];
                                                $scope.gridOptionsDetail.data.push(tempObjList[i]);
                                                //$scope.LoadUnits(result.ProductID, result.MeasurementUnitID);
                                                _tempProductID = result.ProductID;
                                                //$scope.LoadLots(result.ProductID);
                                                $scope.ProductName = '';
                                            }
                                        }
                                    }, function () {
                                        $log.info('Modal dismissed at: ' + new Date());
                                    });
                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message);}
                            );



        }
        $scope.SearchKeyProduct =  function(e)
        {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                debugger;
                if($.trim($scope.ProductName)!="")
                {
                    var oProduct = 
                        {
                        ProductName:$.trim($scope.ProductName) ,
                        BUID: _nBUID,
                        ErrorMessage: $.trim($scope.ProductName) + '~' + $scope.FNRequisition.FNExODetailID + '~' + $scope.FNRequisition.TreatmentID + '~' + tempParentID
                    };

                    $.icsProgressBar(true);
                    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                    $http.post(_sBaseAddress+'/FNRequisition/GetProducts_All',$.param(oProduct), config).then(
                                        function (response)
                                        {
                                            var oColumns = [];
                                            var oColumn = { field: 'ProductCode', name: 'Code',width: '30%'  };oColumns.push(oColumn);
                                            oColumn = { field: 'ProductName', name: 'Product',width: '70%', enableSorting: false  };oColumns.push(oColumn);
                                            var results=response.data;
                                            var modalObj={
                                                size:'md',
                                                modalcontroller:'ModalCommonListCtrl',
                                                appcontroller:'FNRequisitionController',
                                                objs:results,
                                                multiSelect:true,
                                                pickertitle:'RawProduct List',
                                                searchingbyfieldName:'ProductName',
                                                columns:oColumns
                                            }

                                            $.icsProgressBar(false);

                                            var modalInstance=msModal.Instance(modalObj);
                                            modalInstance.result.then(function (result)
                                            {
                                                debugger;
                                                var tempObjList = result;
                                                for(var i = 0; i<result.length; i++)
                                                {
                                                    if(parseInt(tempObjList[i].ProductID)>0)
                                                    {
                                                        debugger;
                                                        //var oDuplicateDate = $filter('filter')($scope.gridOptionsDetail.data, {ProductID: tempObjList[i].ProductID});
                                                        //if(oDuplicateDate.length>0) {alert("Duplicate Product Entry Is Not Possible!"); return;};

                                                        $scope.FNRequisitionDetail =tempObjList[i];
                                                        $scope.gridOptionsDetail.data.push(tempObjList[i]);
                                                        _tempProductID = result.ProductID;
                                                        $scope.ProductName = '';
                                                    }
                                                }
                                            }, function () {
                                                $log.info('Modal dismissed at: ' + new Date());
                                            });
                                        },
                                          function (response) { alert(jQuery.parseJSON(response.data).Message);}
                                    );
                }
                else
                {
                    alert("Please Type Any produt Name");
                }
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.FNRequisitionDetail =null;
                $scope.cboLot=$scope.txtQty =$scope.LotQty = 0;$scope.ProductUnits = [];
                $scope.LoadUnits(0, 0);
            }
        };
        $scope.SearchLot =  function(e)
        {
            if(!$scope.ValidateInput()) return;
            var obFNRequisition = $scope.FNRequisitionRefreshObject();
            obFNRequisition.FNRequisitionDetails = $scope.gridOptionsDetail.data;
            $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+"/FNRequisition/Save",
                traditional: true,
                data:  JSON.stringify(obFNRequisition),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var objFNRequisition= jQuery.parseJSON(data);
                    if (objFNRequisition.ErrorMessage=="" || objFNRequisition.ErrorMessage==null)
                    {
                        oFNRequisition.FNRID = objFNRequisition.FNRID;
                    }
                    else
                    {
                        alert(objFNRequisition.ErrorMessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                debugger;
                if($scope.FNRequisition.WorkingUnitID<=0)
                {
                    alert("Please Select Store.");
                    return;
                }
                if($scope.FNRequisition.ProductName=="" || $scope.FNRequisition.ProductName=='undefined')
                {
                    alert("Please Select Product.");
                    return;
                }
                $scope.LoadLots(_tempProductID);
            }
        };
        $scope.LoadLots = function (nProductID)
        {
            debugger;
            $scope.Lots = [];
            if (parseInt(nProductID)>0)
            {

                var oLot = {ProductID:nProductID, WorkingUnitID:$scope.FNRequisition.WorkingUnitID, LotNo:$scope.LotNo};
                var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                $http.post(_sBaseAddress+'/Lot/GetsLotForBalnce',$.param(oLot), config).then(
                                    function (response)
                                    {
                                        var oLots=jQuery.parseJSON(response.data);
                                        if(oLots.length>0)
                                        {
                                            var oColumns = [];
                                            var oColumn = { field: 'LotNo', name: 'Lot No',width: '30%'  };oColumns.push(oColumn);
                                            var oColumn = { field: 'BalanceSt', name: 'Balance',width: '30%'  };oColumns.push(oColumn);
                                            var oColumn = { field: 'ReportingBalanceSt', name: 'Reporting Balance',width: '30%'  };
                                            oColumns.push(oColumn);

                                            var results=response.data;
                                            var modalObj={
                                                size:'md',
                                                modalcontroller:'ModalCommonListCtrl',
                                                appcontroller:'FNRequisitionController',
                                                objs:oLots,
                                                multiSelect:true,
                                                pickertitle:'Lot No List',
                                                searchingbyfieldName:'LotNo',
                                                columns:oColumns
                                            }
                                            var modalInstance=msModal.Instance(modalObj);

                                            modalInstance.result.then(function (result)
                                            {
                                                debugger;
                                                if(parseInt(result.length)>0)
                                                {
                                                    debugger;

                                                    var nMaxSequence=  $scope.gridOptionsDetail.data.length;
                                                    for(var i =0;i<result.length;i++)
                                                    {
                                                        var isExists=false;
                                                        for(var j=0;j<nMaxSequence;j++)
                                                        {
                                                            if(result[i].LotID == $scope.gridOptionsDetail.data[j].LotID)
                                                                isExists=true;
                                                        }
                                                        if(!isExists)
                                                            $scope.gridOptionsDetail.data.push(result[i]);
                                                    }
                                                }
                                                debugger;

                                            }, function () {
                                                $log.info('Modal dismissed at: ' + new Date());
                                            });
                                        }
                                    },
                                      function (response) { alert(jQuery.parseJSON(response.data).Message);}
                                );
            }
        }
        //Search Order
        $scope.SearchKeyDownOrderNo=function (e)
        {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var OrderNo = $.trim($scope.FNRequisition.ScNoFull);
                if(OrderNo==""||OrderNo==null)
                {
                    alert("Type Order NO and Press Enter");
                    return;
                }
                $scope.PickOrder();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.FNRequisition.ScNoFull='';
                $scope.FNRequisition.FNExODetailID = 0;
                $scope.FNRequisition.BuyerName= '';
                $scope.FNRequisition.ColorName= '';
                $scope.FNRequisition.LDNo= '';
                $scope.FNRequisition.Qty= 0;
            }
        };
        $scope.PickOrder= function () {
            $.icsProgressBar(true);
            var oFNEXOD = {ScNoFull:$.trim($scope.FNRequisition.ScNoFull)};
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/FNExecutionOrder/GetsFNExODetailsForRequisition',oFNEXOD).then(
                                function (response)
                                {
                                    debugger;
                                    $.icsProgressBar(false);
                                    var oColumns = [];
                                    var oColumn = { field: 'SCNoFull', name: 'Order No',width: '20%'};oColumns.push(oColumn);
                                    oColumn = { field: 'ExeNo', name: 'Dispo',width: '20%',enableSorting: false};oColumns.push(oColumn);
                                    oColumn = { field: 'ColorInfo', name: 'Color Info',width: '40%',enableSorting: false};oColumns.push(oColumn);
                                    oColumn = { field: 'Qty', name: 'Qty',width: '20%',enableSorting: false};oColumns.push(oColumn);
                                    var results=jQuery.parseJSON(response.data);
                                    var modalObj={
                                        size:'lg',
                                        url:_sBaseAddress+'/Home/Modal',
                                        modalcontroller:'EODModalCtrl',
                                        appcontroller:'mainController',
                                        objs:results,
                                        multiSelect:false,
                                        pickertitle:'Fabric List',
                                        searchingbyfieldName:'ScNoFull',
                                        columns:oColumns
                                    }
                                    var modalInstance=msModal.Instance(modalObj);
                                    modalInstance.result.then(function (result)
                                    {
                                        debugger;
                                        $scope.FNRequisition.ScNoFull=result.SCNoFull;
                                        $scope.FNRequisition.FNExODetailID=result.FabricSalesContractDetailID;
                                        $scope.FNRequisition.Qty = result.Qty;
                                        $scope.FNRequisition.QtyInMeter= result.QtyInMeter;
                                        $scope.FNRequisition.BuyerName = result.BuyerName;
                                        $scope.FNRequisition.ColorName= result.ColorInfo;
                                        $scope.FNRequisition.LDNo= result.LDNo;
                                        $scope.FNRequisition.Shade = result.ShadeID;
                                        $scope.FNRequisition.ExeNo = result.ExeNo;

                                    }, function () {
                                        $log.info('Modal dismissed at: ' + new Date());
                                    });
                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message);}
                            );
        };
        // Search Machine
        $scope.SearchKeyDownMachineName=function (e)
        {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var MachineName = $.trim($scope.FNRequisition.MachineName);
                if(MachineName==""||MachineName==null)
                {
                    alert("Type Machine Name and Press Enter");
                    return;
                }
                $scope.PickMachine();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.FNRequisition.MachineName='';
                $scope.FNRequisition.MachineID = 0;
            }
        };
        $scope.PickMachine= function () {
            $.icsProgressBar(true);
            var oFNMachine = {
                Name:$.trim($scope.FNRequisition.MachineName),
                FNMachineID:$scope.FNRequisition.MachineID
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/FNMachine/GetsFNMachinesForRequisition',oFNMachine).then(
                                function (response)
                                {
                                    debugger;
                                    $.icsProgressBar(false);
                                    var oColumns = [];
                                    var oColumn = { field: 'Name', name: 'Order No',width: '50%'};oColumns.push(oColumn);
                                    oColumn = { field: 'Code', name: 'Dispo',width: '40%',enableSorting: false};oColumns.push(oColumn);
                                    var results=jQuery.parseJSON(response.data);
                                    var modalObj={
                                        size:'md',
                                        url:_sBaseAddress+'/Home/Modal',
                                        modalcontroller:'EODModalCtrl',
                                        appcontroller:'mainController',
                                        objs:results,
                                        multiSelect:false,
                                        pickertitle:'Machine List',
                                        searchingbyfieldName:'Name',
                                        columns:oColumns
                                    }
                                    var modalInstance=msModal.Instance(modalObj);
                                    modalInstance.result.then(function (result)
                                    {
                                        debugger;
                                        $scope.FNRequisition.MachineID=result.FNMachineID;
                                        $scope.FNRequisition.MachineName=result.Name;
                                    }, function () {
                                        $log.info('Modal dismissed at: ' + new Date());
                                    });
                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message);}
                            );
        };
        //Search Dispo
        $scope.SearchKeyDownDispo=function (e)
        {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var ExeNo = $.trim($scope.FNRequisition.ExeNo);
                if(ExeNo == ""||ExeNo == null)
                {
                    alert("Type Dispo NO and Press Enter");
                    return;
                }
                $scope.PickDispo();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.FNRequisition.ExeNo='';
            }
        };
        $scope.PickDispo= function () {
            $.icsProgressBar(true);
            var oFNEXOD = {ExeNo:$.trim($scope.FNRequisition.ExeNo)};
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/FNExecutionOrder/GetsFNExODetailsForRequisitionFromDispo',oFNEXOD).then(
                                function (response)
                                {
                                    debugger;
                                    $.icsProgressBar(false);
                                    var oColumns = [];
                                    var oColumn = { field: 'SCNoFull', name: 'Order No',width: '20%'};oColumns.push(oColumn);
                                    oColumn = { field: 'ExeNo', name: 'Dispo',width: '20%',enableSorting: false};oColumns.push(oColumn);
                                    oColumn = { field: 'ColorInfo', name: 'Color Info',width: '40%',enableSorting: false};oColumns.push(oColumn);
                                    oColumn = { field: 'Qty', name: 'Qty',width: '20%',enableSorting: false};oColumns.push(oColumn);
                                    var results=jQuery.parseJSON(response.data);
                                    var modalObj={
                                        size:'lg',
                                        url:_sBaseAddress+'/Home/Modal',
                                        modalcontroller:'EODModalCtrl',
                                        appcontroller:'mainController',
                                        objs:results,
                                        multiSelect:false,
                                        pickertitle:'Fabric List',
                                        searchingbyfieldName:'ScNoFull',
                                        columns:oColumns
                                    }
                                    var modalInstance=msModal.Instance(modalObj);
                                    modalInstance.result.then(function (result)
                                    {
                                        debugger;
                                        nTempFSCDID = result.FabricSalesContractDetailID;
                                        $scope.FNRequisition.ExeNo = result.ExeNo;
                                        //$scope.GetDyesFromDispo(result.FabricSalesContractDetailID);
                                        $scope.FNRequisition.ScNoFull=result.SCNoFull;
                                        $scope.FNRequisition.FNExODetailID=result.FabricSalesContractDetailID;
                                        $scope.FNRequisition.Qty = result.Qty;
                                        $scope.FNRequisition.QtyInMeter= result.QtyInMeter;
                                        $scope.FNRequisition.BuyerName = result.BuyerName;
                                        $scope.FNRequisition.ColorName= result.ColorInfo;
                                        $scope.FNRequisition.LDNo= result.LDNo;
                                        $scope.FNRequisition.Shade = result.ShadeID;
                                        $scope.FNRequisition.ExeNo = result.ExeNo;

                                    }, function () {
                                        $log.info('Modal dismissed at: ' + new Date());
                                    });
                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message);}
                            );
        };
        //$scope.GetDyesFromDispo = function(FabricSalesContractDetailID)
        //{
        //    debugger;
        //    var oFSCD = {ErrorMessage:FabricSalesContractDetailID+'~'+ $scope.FNRequisition.TreatmentID}
        //    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
        //    $http.post(_sBaseAddress+'/FNExecutionOrder/LoadFromDispo',oFSCD).then(
        //                        function (response)
        //                        {
        //                            debugger;
        //                        },
        //                        function (response) { alert(jQuery.parseJSON(response.data).Message);}
        //                    );
        //}
        $scope.Save = function ()
        {
            debugger;
            if(!$scope.ValidateInput()) return;
            //var oFNRequisition = $scope.FNRequisitionRefreshObject();
            var oFNRequisition = $scope.FNRequisition;

            //if(tempParentID>0)
            //{
            //    oFNRequisition.FNRID = tempParentID;
            //}
            oFNRequisition.FNRequisitionDetails = $scope.gridOptionsDetail.data;
            if(oFNRequisition.FNRequisitionDetails.length<1)
            {
                alert("Can't Save. Because There is no Details");
                return;
            }
            $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+"/FNRequisition/Save",
                traditional: true,
                data:  JSON.stringify(oFNRequisition),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    var oFNRequisition= jQuery.parseJSON(data);
                    if (oFNRequisition.ErrorMessage=="" || oFNRequisition.ErrorMessage==null)
                    {
                        alert("Data Save Successfully!!");
                        var oFNRequisitions = sessionStorage.getItem("FNRequisitions");
                        var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                        if (oFNRequisitions != null)
                        {
                            oFNRequisitions = jQuery.parseJSON(oFNRequisitions);
                        }
                        else 
                        {
                            oFNRequisitions = [];
                        }
                        if (nIndex != -1)
                        {
                            oFNRequisitions[nIndex] = oFNRequisition;
                        }
                        else 
                        {
                            sessionStorage.setItem("SelectedRowIndex", oFNRequisitions.length);
                            oFNRequisitions.push(oFNRequisition);
                        }
                        sessionStorage.setItem("FNRequisitions", JSON.stringify(oFNRequisitions));
                        window.location.href = sessionStorage.getItem("BackLink");
                    }
                    else
                    {
                        alert(oFNRequisition.ErrorMessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });

        }
        $scope.Approve = function ()
        {
            //debugger;
            if (!confirm("Confirm to Approve?")) return ;
            var oFNRequisition = $scope.FNRequisition;
            $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+"/FNRequisition/Approve",
                traditional: true,
                data:  JSON.stringify(oFNRequisition),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //debugger;
                    var oFNRequisition= jQuery.parseJSON(data);
                    if (oFNRequisition.ErrorMessage=="" || oFNRequisition.ErrorMessage==null)
                    {
                        alert("Successfully Approved.");
                        var oFNRequisitions = sessionStorage.getItem("FNRequisitions");
                        var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                        if (oFNRequisitions != null)
                        {
                            oFNRequisitions = jQuery.parseJSON(oFNRequisitions);
                        }
                        else {
                            oFNRequisitions = [];
                        }
                        if (nIndex != -1)
                        {
                            oFNRequisitions[nIndex] = oFNRequisition;
                        }
                        else {
                            sessionStorage.setItem("SelectedRowIndex", oFNRequisitions.length);
                            oFNRequisitions.push(oFNRequisition);
                        }
                        sessionStorage.setItem("FNRequisitions", JSON.stringify(oFNRequisitions));
                        window.location.href = sessionStorage.getItem("BackLink");
                    }
                    else
                    {
                        alert(oFNRequisition.ErrorMessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });

        }
        $scope.Disburse = function ()
        {
            debugger;

            if(!$scope.LotBalanceVerification())return; 

            if (!confirm("Confirm to Disburse?")) return ;
            var oFNRequisition = $scope.FNRequisition;
            $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+"/FNRequisition/Disburse",
                traditional: true,
                data:  JSON.stringify(oFNRequisition),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //debugger;
                    var oFNRequisition= jQuery.parseJSON(data);
                    if (oFNRequisition.ErrorMessage=="" || oFNRequisition.ErrorMessage==null)
                    {
                        alert("Successfully Disburse.");
                        var oFNRequisitions = sessionStorage.getItem("FNRequisitions");
                        var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                        if (oFNRequisitions != null)
                        {
                            oFNRequisitions = jQuery.parseJSON(oFNRequisitions);
                        }
                        else {
                            oFNRequisitions = [];
                        }
                        if (nIndex != -1)
                        {
                            oFNRequisitions[nIndex] = oFNRequisition;
                        }
                        else {
                            sessionStorage.setItem("SelectedRowIndex", oFNRequisitions.length);
                            oFNRequisitions.push(oFNRequisition);
                        }
                        sessionStorage.setItem("FNRequisitions", JSON.stringify(oFNRequisitions));
                        window.location.href = sessionStorage.getItem("BackLink");
                    }
                    else
                    {
                        alert(oFNRequisition.ErrorMessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });

        }
        $scope.Receive = function ()
        {
            //debugger;
            if(!$scope.LotBalanceVerification()) return; 

            if (!confirm("Confirm to Receive?")) return ;
            var oFNRequisition = $scope.FNRequisition;
            $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+"/FNRequisition/Receive",
                traditional: true,
                data:  JSON.stringify(oFNRequisition),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //debugger;
                    var oFNRequisition= jQuery.parseJSON(data);
                    if (oFNRequisition.ErrorMessage=="" || oFNRequisition.ErrorMessage==null)
                    {
                        alert("Successfully Received.");
                        var oFNRequisitions = sessionStorage.getItem("FNRequisitions");
                        var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                        if (oFNRequisitions != null)
                        {
                            oFNRequisitions = jQuery.parseJSON(oFNRequisitions);
                        }
                        else {
                            oFNRequisitions = [];
                        }
                        if (nIndex != -1)
                        {
                            oFNRequisitions[nIndex] = oFNRequisition;
                        }
                        else {
                            sessionStorage.setItem("SelectedRowIndex", oFNRequisitions.length);
                            oFNRequisitions.push(oFNRequisition);
                        }
                        sessionStorage.setItem("FNRequisitions", JSON.stringify(oFNRequisitions));
                        window.location.href = sessionStorage.getItem("BackLink");
                    }
                    else
                    {
                        alert(oFNRequisition.ErrorMessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
        }

        $scope.LotBalanceVerification = function()
        {
            //if(sessionStorage.getItem("FNRequisitionHeader")=="Receive FN Requisition"|| sessionStorage.getItem("FNRequisitionHeader")=="Disburse FN Requisition" || sessionStorage.getItem("FNRequisitionHeader")=="View FN Requisition")
            var data = $scope.gridOptionsDetail.data;
            for(var i=0;i<data.length; i++)
            {
                if(parseFloat(data[i].LotBalance)<parseFloat(data[i].DisburseQty)){
                    alert("Insufficient Lot Balance For:"+ data[i].ProductName+ " ["+i+"]" +" !");     
                    return false;
                }
            }
            return true;
        }

        $scope.ValidateInput = function ()
        {
            //debugger;
            if($scope.FNRequisition.TreatmentID<=0)
            {
                alert("Please Select Treatment.");
                return false;
            }
            if($scope.FNRequisition.WorkingUnitID<=0)
            {
                alert("Please Select Store.");
                return false;
            }
            return true;
        }
        $scope.FNRequisitionRefreshObject = function ()
        {
            debugger;
            var oFNRequisition = $scope.FNRequisition;
            oFNRequisition.RequestDate = new Date($scope.FNRequisition.RequestDateInString);
            return oFNRequisition;
        }
        $scope.Close=function ()
        {
            window.location.href = sessionStorage.getItem("BackLink");
        };
    });


</script>
