@{
    ViewBag.Title = "Warping";
}
<html>
<head>
    <title>Warping</title>
</head>
<body>
    @model ESimSol.BusinessObjects.FabricBatchProduction
    <div id="winTotalBreakageInformation" class="easyui-window" title="Total Breakage Information" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width:915px; margin-left:2px;">
            <table id="tblFBPBreakage" class="easyui-datagrid" style="height:250px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarBreakage" data-options="onClickRow: onClickRowBreakage">
                <thead>
                    <tr>
                        <th field="FabricBreakageName" width="250">Break Description</th>
                        <th data-options="field:'DurationInMin',align:'center',editor:{type:'numberbox',options:{precision:2}}" width="150" align="right">Duration(Min)</th>
                        <th data-options="field:'NoOfBreakage',align:'center',editor:{type:'numberbox',options:{precision:2}}" width="150" align="right">No Of Breakage</th>
                        <th data-options="field:'Note',align:'left',editor:{type:'text'}" width="100">Remark</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbarBreakage">
                Break :<select id="cboBreakage" style="width:250px;"></select>&nbsp;
                Duration :<input type="text" id="txtDuration" class="easyui-numberbox" data-options="min:0,precision:0" style="width:100px" />(Min)&nbsp;
                No Of Breakage :<input type="text" id="txtNumberOfBreakage" class="easyui-numberbox" data-options="min:0,precision:0" style="width:100px" />&nbsp;
                <a id="btnAddBreakage" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                <a id="btnDeleteBreakage" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                <a id="btnRefreshBreakage" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
            </div>
            <table>
                <tr>
                    <td style="width:702px;"></td>
                    <td>Total : <label id="lblTotalNoOfBreakage">0</label></td>
                </tr>
            </table>
            <fieldset>
                <legend>Actions : </legend>
                <div style="float:right;">
                    <a id="btnOkTotalBreakageInformation" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                    <a id="btnCloseTotalBreakageInformation" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                </div>
            </fieldset>
        </div>
    </div>
    <div id="winColorBreakDown" class="easyui-window" title="Color Break Down" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width:915px; margin-left:2px;">
            <table id="tblFBPColor" class="easyui-datagrid" style="height:250px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarColor" data-options="onClickRow: onClickRowColor">
                <thead>
                    <tr>
                        <th field="Name" width="150">Color</th>
                        <th data-options="field:'Qty',align:'center',editor:{type:'numberbox',options:{precision:2}}" width="100" align="right">Len(Y)</th>
                        <th field="QtyInM" width="100" align="right">Len(M)</th>
                        <th data-options="field:'Note',align:'left',editor:{type:'text'}" width="100">Remark</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbarColor">
                Color:<input type="text" id="txtColorName" style="width:250px" />&nbsp;
                Finish Length :<input type="text" id="txtFinishLengthColorWiseY" style="width:100px" class="number" />&nbsp;(Y)&nbsp;<input type="text" id="txtFinishLengthColorWiseM" style="width:100px" class="number" />&nbsp;(M)
                <a id="btnAddColor" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                <a id="btnDeleteColor" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                <a id="btnRefreshColor" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
            </div>
            <table>
                <tr>
                    <td style="width:313px;text-align:right;">Total :</td>
                    <td style="width:300px;text-align:right;"><label id="lblTotalQtyColor">0</label></td>
                    <td style="width:227px;text-align:right;"><label id="lblTotalQtyInMColor">0</label></td>
                    <td style="width:267px;text-align:right;"></td>
                </tr>
            </table>
            <fieldset>
                <legend>Actions : </legend>
                <div style="float:right;">
                    <a id="btnOkColorBreakDown" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                    <a id="btnCloseColorBreakDown" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                </div>
            </fieldset>
        </div>
    </div>
    <div class="menuMainCollectionTable">
        <div class="easyui-panel" title="Fabric Batch Warping" style="font-family:Tahoma;text-align:center; width:100%;height:100%;">
            <div id="divFBInfo" >
                <fieldset>
                    <legend>Fabric Batch Info </legend>
                        <div style="margin:0 auto;width:98%;">
                            <table border="0" cellpadding="1" cellspacing="1">
                                <tr>
                                    <td style="width:10%; text-align:right;">Program No:</td>
                                    <td style="width:25%;text-align:left;">
                                        <input type="text" style="width:100px;" id="txtBatchNo" />
                                        @*<a id="btnSearchBatch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true"></a>*@
                                        <input type="text" style="width:100px;" id="txtDispoNo" placeholder="Type Dispo" />
                                        @*<a id="btnSearchFEONo" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true"></a>*@
                                        <a id="btnBatchCardPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true"></a>
                                    </td>
                                    <td style="width:10%; text-align:right;">Buyer :</td>
                                    <td style="width:25%;text-align:left;">
                                        <input type="text" style="width:100%; text-align:left;" id="txtBuyer" disabled />
                                       
                                    </td>
                                    <td style="width:10%; text-align:right;">Construction :</td>
                                    <td style="width:20%;text-align:left;">
                                        <input type="text" style="width:100%; text-align:left;" id="txtConstruction" disabled />
                                    </td>
                                    
                                </tr>
                               
                                <tr>
                                    <td style="width:10%; text-align:right;">Machine Name:</td>
                                    <td style="width:25%;text-align:left;">
                                        <select style="width:264px;" id="cboMachineName"></select>
                                    </td>
                                    <td style="width:10%; text-align:right;" title="Req Warp Length">Warp Length :</td>
                                    <td style="width:25%;text-align:left;">
                                        <input type="text" style="width:100px;" id="txtWarpingLengthY" class="number" disabled /> &nbsp;(Y) &nbsp;
                                        <input type="text" style="width:90px;" id="txtWarpingLengthM" class="number" disabled />&nbsp;(M)
                                    </td>
                                    <td style="width:10%; text-align:right;">Total Ends :</td>
                                    <td style="width:20%;text-align:left;">
                                        <input type="text" style="width:100%; text-align:left;" id="txtTotalEnds" disabled />

                                    </td>
                                   
                                </tr>
                                <tr>
                                    <td style="width:10%; text-align:right;">Start Time :</td>
                                    <td style="width:25%;text-align:left;">
                                        <input id="txtStartDate" style="width:120px;" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                        <input id="tpStartTime" class="easyui-timespinner" style="width:60px;" required="required" />
                                        <a id="btnRun" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Run()">Run</a>
                                    </td>
                                    <td style="width:1%; text-align:right;">Yet To Warp :</td>
                                    <td style="width:25%;text-align:left;">
                                        <input type="text" style="width:100px;" id="txtYetToWarpLengthY" class="number" disabled /> &nbsp;(Y) &nbsp;
                                        <input type="text" style="width:90px;" id="txtYetToWarpLengthM" class="number" disabled />&nbsp;(M)
                                    </td>
                                    <td style="width:10%; text-align:right;">Sec/Beam No :</td>
                                    <td style="width:20%;text-align:left;">
                                        <input style="float:left;width:76px;" id="txtNoOfSection" type="text" class="number" disabled />

                                    </td>
                                </tr>
                                <tr>
                                    <td style="width:10%; text-align:right;">End Time:</td>
                                    <td style="width:25%;text-align:left;">
                                        <input id="txtEndDate" style="width:120px;" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                        <input id="tpEndTime" class="easyui-timespinner" style="width:60px;" required="required" />
                                        <a id="btnRunOut" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="RunOut()">Out</a>
                                    </td>
                                    <td style="width:1%; text-align:right;">Finish Length :</td>
                                    <td style="width:25%;text-align:left;">
                                        <input type="text" style="width:100px;" id="txtTotalFinishLengthY" class="number" /> &nbsp;(Y) &nbsp;
                                        <input type="text" style="width:90px;" id="txtTotalFinishLengthM" class="number" />&nbsp;(M)
                                    </td>
                                    <td style="width:10%; text-align:right;">Order No :</td>
                                    <td style="width:20%;text-align:left;">
                                        <input type="text" style="width:100%; text-align:left;" id="txtOrderNo" disabled />
                                       
                                    </td>
                                </tr>
                                <tr>
                                    <td style="width:10%; text-align:right;">Shift:</td>
                                    <td style="width:25%;text-align:left;">
                                        <select id="cboFBPShift"></select>
                                    </td>
                                    <td style="width:10%; text-align:right;">Duration :</td>
                                    <td style="width:25%;text-align:left;">
                                        <input type="text" style="width:258px;" id="txtWarpingDuration" disabled />
                                    </td>
                                    <td style="width:10%; text-align:right;">Status :</td>
                                    <td style="width:20%;text-align:left;">
                                        <input type="text" style="width:100%; text-align:left;" id="txtStatus" disabled />
                                       
                                    </td>
                                </tr>
                              
                            </table>
                        </div>
                </fieldset>
            </div>
            <div class="easyui-accordion" style="height:58%" data-options="selected:false">
                <div title="Add Beams">
                    <table id="tblBeams" class="easyui-datagrid" style="height:100%;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarBeam">
                        <thead>
                            <tr>
                                <th field="BeamCode" width="18%">Beam No</th>
                                <th field="Qty" width="18%" align="right" formatter="formatPrice">Qty(Y)</th>
                                <th field="QtyInMtr" width="18%" align="right" formatter="formatPrice">Qty(M)</th>
                            </tr>
                        </thead>
                    </table>
                    <div id="toolbarBeam">
                        Beam No :
                        <select id="cboBeams" style="width:170px;margin-right:10px;"></select>
                        Qty : 
                        <input id="txtBeamQty" type="text" style="width:60px;" class="number"/>(Y)
                        <input id="txtBeamQtyMeter" type="text" style="width:60px;" class="number" />(M)
                        <a id="btnAddBeam" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                        <a id="btnRemoveBeam" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                    </div>
                </div>

                <div title="Fabric Batch Yarn">
                    <table id="tblFabricBatchRawMaterial" class="easyui-datagrid" style="height:100%;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarYarn" data-options="onClickRow: onClickRow">
                        <thead>
                            <tr>
                                <th field="ProductName" width="250">Yarn</th>
                                <th field="LotNo" width="150">Lot No</th>
                                <th formatter="formatPrice" data-options="field:'Qty',align:'center',editor:{type:'numberbox',options:{precision:2}}" width="150" align="right">Qty</th>
                                <th field="ReceiveByDateInString" width="100">Out Date</th>
                            </tr>
                        </thead>
                    </table>
                    <div id="toolbarYarn">
                        <a id="btnYarnPickByThisOrder" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Yarn Pick By Order</a>&nbsp;
                        Store :<select id="cboStore"></select>
                        <input type="text" id="txtProductName" placeholder="Type Yarn Name" style="width:170px" /><a id="btnPickProduct" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" >Pick</a>
                        <select id="cboLot" style="width:150px;"></select><a id="btnLotRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="RefreshLot()"></a>
                        Qty: <input type="text" id="txtQty" style="width:60px;" value="0" class="number" />
                        <a id="btnAddYarn" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddYarnDetail()">Add</a>
                        <a id="btnDeleteYarn" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="DeleteYarnDetail()">Remove</a>
                        <a id="btnOutMaterials" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Out()">Out</a>
                    </div>
                </div>
                <div title="Batch Wise Production Entry">
                    <table id="tblFBPBatchMan" class="easyui-datagrid" style="height:100%;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarBatchMan" data-options="onClickRow: onClickRowBatchMan">
                        <thead>
                            <tr>
                                <th field="EmployeeName" width="20%">Batch Man</th>
                                <th field="ShiftNameWithDuration" width="10%">Shift</th>
                                <th field="TotalColor" width="12%" align="right">No of Color</th>
                                <th field="Qty" width="10%" align="right">Len(Y)</th>
                                <th field="QtyInM" width="10%" align="right">Len(M)</th>
                                <th field="FinishDateInString" width="10%">Date</th>
                                <th field="TotalFBPBreakage" width="10%" align="right">Breakage Type</th>
                                <th field="TotalNoOfBreakage" width="12%" align="right">No of Breakage</th>
                                <th data-options="field:'Note',align:'left',editor:{type:'text'}" width="15%">Remark</th>
                            </tr>
                        </thead>
                    </table>
                    <div id="toolbarBatchMan">
                        Batch Man :<select id="cboBatchMan" style="width:180px;"></select>&nbsp;
                        Shift :<select id="cboShift"></select>&nbsp;
                        Date :<input id="txtFinishDate" style="width:120px" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp;
                        Qty(Y): <input type="text" id="txtQtyYard" style="width:60px;" value="0" class="number" />&nbsp;
                        Qty(M): <input type="text" id="txtQtyMeter" style="width:60px;" value="0" class="number" />&nbsp;
                        <a id="btnAddBatchMan" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddBatchMan()">Add</a>
                       
                        <a id="btnDeleteBatchMan" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="DeleteBatchMan()">Remove</a>

                        <a id="btnTotalBreakageInformation" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Stoppage/Delay</a>
                        <a id="btnColorBreakDown" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Color Break Down</a>
                    </div>
                </div>
            </div>
            <fieldset>
                <legend>Action</legend>
                <div style="width:100%;height:10%">
                    <table border="0" cellpadding="2" cellspacing="2" style="width:100%;">
                        <tr>
                            <td style="width: 20%; text-align: right"></td>

                            <td style="width: 65px; font-size:13px"></td>
                            <td style="width: 15%;text-align: right;  font-size:13px">
                                <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>

                        </tr>
                    </table>
                </div>

            </fieldset>
        </div>
        
    </div>
</body>
</html>


<script type="text/javascript">
    var _oFabricBatchProduction=null;
    var _sBaseAddress="";
    var _objName = "";
    var _oStores = [];
    var _lBackLink = "";
    var _oProduct = "";
    var _oFabricBreakages = [];
    var _oFabricMachines =[];
    var _oBatchMans = [];
    var _oHRMShifts = [];
    var _oBeams=[];
    var _nFBID =0 ;
    var _nBUID=0;
    var _oFB = null;
    $(document).ready(function () {
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oFabricBatchProduction =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oFabricMachines = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.FabricMachines));
        _oFabricBreakages = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.FabricBreakages));
        _oBatchMans = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.BatchMans));
        _oHRMShifts = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.HRMShifts));
        _oStores = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Stores));
        _oBeams = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Beams));
        _nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.BUID));
        var oFabricBatch = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.FabricBatch));
        debugger;
        SetDefaultValue();
        SetFabricBatchInfo(oFabricBatch);
        HideToolbarBeamSizing(_oFabricBatchProduction.FabricBatchStatus);
    });

    $(document).keydown(function (e) { if (e.keyCode == 27) { $('div').icsWindow('close'); } });

     $("#txtQtyYard").keyup(function(e){
         $("#txtQtyMeter").val(GetMeter(parseFloat($(this).val()),2));
    });

     $("#txtQtyMeter").keyup(function(e){
        $("#txtQtyYard").val(GetYard(parseFloat($(this).val()),2));
    });
    function HideToolbarBeamSizing(nStatus)
    {
        debugger;
        if(nStatus == 3) //warping_Finish
        {
            $("#toolbarBeam").hide();
        }
        else
        {
            $("#toolbarBeam").show();
        }
    }

    function SetDefaultValue()
    {
        $(".number").val(0);
        $("#txtBeamQty,#txtBeamQtyMeter").val("");
        $("#cboStore").icsLoadCombo({List: _oStores,OptionValue: "WorkingUnitID",DisplayText: "WorkingUnitName"});
        $("#cboBreakage").icsLoadCombo({List: _oFabricBreakages,OptionValue: "FBreakageID",DisplayText: "Name"});
        $("#cboShift").icsLoadCombo({List: _oHRMShifts,OptionValue: "ShiftID",DisplayText: "ShiftWithDuration"});
        $("#cboBatchMan").icsLoadCombo({List: _oBatchMans,OptionValue: "EmployeeID",DisplayText: "Name"});
        $("#cboMachineName").icsLoadCombo({List: _oFabricMachines,OptionValue: "FMID",DisplayText: "Name"});
        $("#cboFBPShift").icsLoadCombo({List: _oHRMShifts,OptionValue: "ShiftID",DisplayText: "ShiftWithDuration"});
        $("#cboBeams").icsLoadCombo({List: _oBeams,OptionValue: "FMID",DisplayText: "Code"});

        $('#tpStartTime,#tpEndTime').timespinner('setValue', "00:00");
        $('#txtStartDate,#txtEndDate').datebox('setValue', icsdateformat(new Date));
        //$('#btnRun').hide();
        //$('#btnRunOut').hide();
        $('#btnBatchCardPrint').hide();
    }

    function ConvertToFixed2(nVal)
    {
        return parseFloat(nVal.toFixed(2));
    }

    $("#txtBeamQty").keyup(function(e){
        $("#txtBeamQtyMeter").val(GetMeter(parseFloat($(this).val()),2));
    });
    $("#txtBeamQtyMeter").keyup(function(e){
        $("#txtBeamQty").val(GetYard(parseFloat($(this).val()),2));
    });

    $("#btnRemoveBeam").click(function(){
        debugger;
        var oBeam = $("#tblBeams").datagrid("getSelected");
        if(oBeam == null)
        {
            alert("Please select an item from list.");
            return false;
        }
        if(oBeam.FBPBeamID > 0)
        {
            if (!confirm("Confirm to Delete?")) return false;
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oBeam,
                ControllerName: "FabricBatchProductionBeam",
                ActionName: "Delete",
                TableId: "tblBeams",
                IsWinClose: false
            };

            $.icsDelete(obj);

        }
        else
        {
            var nRowIndex = $("#tblBeams").datagrid("getRowIndex", oBeam);
            $("#tblBeams").datagrid("deleteRow", nRowIndex);
            var time = 0;
        }
       setTimeout(function(){
            var oBeams = $("#tblBeams").datagrid("getRows");
            SetYetToWarp(oBeams);

        }, 2000);



    });

    function AddWarpingBeam()
    {
        debugger;
        var nBeamId = parseInt($("#cboBeams").val());
        if(nBeamId <= 0)
        {
            alert("Select Beam.");
            $("#cboBeams").focus();
            return false;
        }

        var oBeams = $("#tblBeams").datagrid("getRows");
        var nLength = oBeams.length;
        for(var i=0;i<nLength;i++)
        {
            if(parseInt(oBeams[i].BeamID) == nBeamId)
            {
                alert("Selected Beam already in list.");
                $("#cboBeams").focus();
                return false;
            }
        }

        var oFBPBeam = {
            FBPBeamID:0,
            FBPID:_oFabricBatchProduction.FBPID,
            BeamID:nBeamId,
            Qty: parseFloat($("#txtBeamQty").val()),
            BeamCode : $('#cboBeams option:selected').text(),
            QtyInMtr : parseFloat(GetMeter(parseFloat($("#txtBeamQty").val()),2))
        };

        if(_oFabricBatchProduction.FBPID <= 0)
        {
            var nIndex = $("#tblBeams").datagrid("getRows").length;
            $("#tblBeams").datagrid("appendRow", oFBPBeam);
            $("#tblBeams").datagrid("selectRow", nIndex);

        }
        else
        {
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oFBPBeam,
                ObjectId: oFBPBeam.FBPBeamID,
                ControllerName: "FabricBatchProductionBeam",
                ActionName: "Save",
                TableId: "tblBeams",
                IsWinClose: true,
                Message:""
            };


            $.icsSave(obj);

        }

        $("#cboBeams").val(0);
        $("#cboBeams").focus();
        $("#txtBeamQty,#txtBeamQtyMeter").val("");
        var oBeams = $("#tblBeams").datagrid("getRows");
        if(oBeams.length>0){

            setTimeout(function(){
                SetYetToWarp(oBeams);
            }, 2000);
        }

    }

    $("#txtBeamQty,#txtBeamQtyMeter").keydown(function(e){
        if(e.keyCode===13)
        {
            AddWarpingBeam();
        }
    });

    $("#btnAddBeam").click(function(){
        AddWarpingBeam();
    });

    $("#btnColorBreakDown").click(function(){
        DynamicRefreshList([],"tblFBPColor");
        var oFBPBatchMan = $("#tblFBPBatchMan").datagrid("getSelected");
        if(oFBPBatchMan == null || oFBPBatchMan.FBPBID <=0)
        {
            alert("Please select an item from list.");
            return false;
        }

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oFBPBatchMan,
            ControllerName: "FabricBatchProduction",
            ActionName: "GetsColorBreakDown",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if($.trim(response.objs[0].ErrorMessage) == "")
                {
                    DynamicRefreshList(response.objs,"tblFBPColor");
                }
                else
                {
                    alert(response.objs[0].ErrorMessage);
                    return false;
                }
            }
            TotalCalculationForColor();
            $("#winColorBreakDown").icsWindow("open","Color Break Down");
        });
    });

    $("#btnCloseColorBreakDown").click(function(){
        $("#winColorBreakDown").icsWindow("close");
    });

    $("#btnOkColorBreakDown").click(function(){
        var oFabricBatchProductionColors =$("#tblFBPColor").datagrid("getRows");
        if(oFabricBatchProductionColors.length == 0)
        {
            alert("Add minimum one item.");
            return false;
        }
        endEditingColor();
        $("#winColorBreakDown").icsWindow("close");
    });

    $("#btnRefreshColor").click(function(){
        endEditingColor();
    });

    function TotalCalculationForColor()
    {
        var nTotalQty=0;
        var nTotalQtyInM=0;
        var oFBPColors = $("#tblFBPColor").datagrid("getRows");
        if(oFBPColors.length>0)
        {
            for(var i=0;i<oFBPColors.length;i++)
            {
                nTotalQty = parseFloat(oFBPColors[i].Qty) + parseFloat(nTotalQty);
                nTotalQtyInM = parseFloat(oFBPColors[i].QtyInM) + parseFloat(nTotalQtyInM);
            }
        }
        $("#lblTotalQtyColor").text(nTotalQty.toFixed(2));
        $("#lblTotalQtyInMColor").text(nTotalQtyInM.toFixed(2));
    }

    function TotalNoOfBreakage()
    {
        var nTotalNoOfBreakage=0;
        var oFBPBreakages = $("#tblFBPBreakage").datagrid("getRows");
        if(oFBPBreakages.length>0)
        {
            for(var i=0;i<oFBPBreakages.length;i++)
            {
                nTotalNoOfBreakage = parseInt(oFBPBreakages[i].NoOfBreakage) + parseInt(nTotalNoOfBreakage);
            }
        }
        $("#lblTotalNoOfBreakage").text(nTotalNoOfBreakage);
    }

    $("#btnRefreshBreakage").click(function(){
        endEditingBreakage();
    });

    $("#btnOkTotalBreakageInformation").click(function(){
        var oFBPBreakages=$("#tblFBPBreakage").datagrid("getRows");
        if(oFBPBreakages.length == 0)
        {
            alert("Add minimum one item.");
            return false;
        }
        endEditingBreakage();
        $("#winTotalBreakageInformation").icsWindow("close");
    });

    $("#btnTotalBreakageInformation").click(function(){
        DynamicRefreshList([],"tblFBPBreakage");
        var oFBPBatchMan = $("#tblFBPBatchMan").datagrid("getSelected");
        if(oFBPBatchMan == null || oFBPBatchMan.FBPBID <=0)
        {
            alert("Please select an item from list.");
            return false;
        }

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oFBPBatchMan,
            ControllerName: "FabricBatchProduction",
            ActionName: "GetsTotalBreakageInformation",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if($.trim(response.objs[0].ErrorMessage) == "")
                {
                    DynamicRefreshList(response.objs,"tblFBPBreakage");
                }
                else
                {
                    alert(response.objs[0].ErrorMessage);
                    return false;
                }
            }
            TotalNoOfBreakage();
            $("#winTotalBreakageInformation").icsWindow("open","Total Breakage Information");
        });
    });

    $("#btnCloseTotalBreakageInformation").click(function(){
        $("#winTotalBreakageInformation").icsWindow("close");
    });

    //for Warping
    $("#txtTotalFinishLengthY").keyup(function (e) {
        var nVal =  $(this).val();
        $('#txtTotalFinishLengthM').val(GetMeter(nVal,2));
        if (nVal == "" || nVal == null) {
            $(this).val(0);
        }
    });

    $("#txtTotalFinishLengthM").keyup(function (e) {
        var nVal = $(this).val();
        $('#txtTotalFinishLengthY').val(GetYard(nVal,2));
        if (nVal == "" || nVal == null) {
            $(this).val(0);
        }
    });


    //for Color
    $("#txtFinishLengthColorWiseY").keyup(function (e) {

        var nVal =  $(this).val();
        $('#txtFinishLengthColorWiseM').val(GetMeter(nVal,2));
        if (nVal == "" || nVal == null) {
            $(this).val(0);
        }
    });

    $("#txtFinishLengthColorWiseM").keyup(function (e) {
        var nVal = $(this).val();
        $('#txtFinishLengthColorWiseY').val(GetYard(nVal,2));
        if (nVal == "" || nVal == null) {
            $(this).val(0);
        }
    });

    $("#btnSearchFEONo").click(function(){
        $(this).prop("disabled", true);
        EFOPicker();
    });

    function EFOPicker()
    {
        $('#btnBatchCardPrint').hide();
        $('#btnRunOut').hide();
        _nFBID=0;
        var oFabricBatch={
            FEONo : $.trim($("#txtDispoNo").val()),
            IsNotWarpDone:true
        };

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oFabricBatch,
            ControllerName: "FabricBatch",
            ActionName: "Search",
            IsWinClose: false
        };
        $.icsMaxDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].FBID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "FEONo", title: "Dispo No", width: "20%", align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BatchNo", title: "Program No", width: "14%", align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "QtySt", title: "Qty (Y)", width: "15%", align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "QtyInMeterSt", title: "Qty (M)", width: "18%", align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "WarpingMachineCode", title: "Machine Code", width: "18%", align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "WarpingMachineStatusStr", title: "Status", width: "12%", align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winFabricBatchs',
                        winclass: 'clsFabricBatch',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblFabricBatchs',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'BatchNo',
                        windowTittle: 'Fabric Batch List',
                        placeholder : "Search By Program No"
                    };
                    $(this).prop("disabled", false);
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);

                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }
            }
            else
            {
                alert("Sorry, No Dispo Found.");
            }
        });
    }

    $("#txtDispoNo").keydown(function(e){
        $('#btnBatchCardPrint').hide();
        _nFBID=0;
        if(e.keyCode === 13)
        {
            EFOPicker();
        }
    });

    $("#btnSearchBatch").click(function () {
        SelectBatch();
    });

    function SelectBatch()
    {
        $('#btnBatchCardPrint,#btnRunOut').hide();
        _nFBID=0;
        if($("#txtBatchNo").val()==null || $("#txtBatchNo").val()=="")
        {
            alert("Please type program no.");
            return false;
        }
        var oFabricBatch={
            BatchNo:$("#txtBatchNo").val(),
            WeavingProcessTypeTemp : 0
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oFabricBatch,
            ControllerName: "FabricBatch",
            ActionName: "SearchByBatchNo",
            IsWinClose: false
        };
        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (parseInt(response.obj.FBID) > 0) {
                    SetFabricBatchInfo(response.obj);
                }
                else {  alert("Data Not Found"); }
            }
        });
    }

    function ResetBeamInfo()
    {
        $("#txtBeamQty,#txtBeamQtyMeter").val("");
        $("#cboBeams").val(0);
        $("#cboBeams").focus();
        DynamicRefreshList([],"tblBeams");
    }

    $("#txtBatchNo").keydown(function (e){
        if (e.keyCode === 13) // Enter Press
        {
            SelectBatch();
        }
        else if (e.keyCode === 8 || e.keyCode==27) // Back space
        {
            ResetBeamInfo();
            $("#txtBatchNo").removeClass("fontColorOfPickItem");
            _oFabricBatch = "";
            $('#divFBInfo').find('input').not("#txtBatchNo").val('');//all field will be empty
            $('#divFBInfo').find('select').val(0);
            $("#cboMachineName,#txtTotalFinishLengthY,#txtTotalFinishLengthM,#cboFBPShift" ).prop( "disabled", false );
            $('#btnRun,#btnRunOut').hide();
            $('#txtProductName,#cboLot,#cboStore, #btnYarnPickByThisOrder,#btnPickProduct,#btnLotRefresh,#btnAddYarn,#btnDeleteYarn,#btnOutMaterials').show();
            $('#btnAddBreakage,#btnDeleteBreakage,#btnAddBatchMan,#btnDeleteBatchMan,#btnTotalBreakageInformation,#btnColorBreakDown,#btnAddColor,#btnDeleteColor').show();
            $('#tpStartTime,#tpEndTime').timespinner({disabled:false});
            $('#txtStartDate,#txtEndDate').datebox({disabled:false});
            $('#tpStartTime,#tpEndTime').timespinner('setValue', "00:00");
            $('#txtStartDate,#txtEndDate').datebox('setValue', icsdateformat(new Date));
            MachineRefresh();
            ResetAllTables("tblFabricBatchRawMaterial","tblFBPBreakage","tblFBPBatchMan","tblFBPColor");
            $('#txtBatchNo').focus();
            GetFreeBeams();
        }
    });

    function MachineRefresh()
    {
        $.ajax
        ({
            type: "GET",
            dataType: "json",
            url : _sBaseAddress+  "/FabricMachine/GetMachines",
            data: { nWeavingProcess: 0, nMachineStatus: 3},
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                _oFabricMachines = jQuery.parseJSON(data);
                if (_oFabricMachines.length>0 )
                {
                    $("#cboMachineName").icsLoadCombo({List: _oFabricMachines,OptionValue: "FMID",DisplayText: "Name"});
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }

        });
    }

    function SetFabricBatchInfo(oFabricBatch)
    {
        debugger;
        _oFB =null;
        $("#txtBatchNo").val(oFabricBatch.BatchNo);
        $("#txtBatchNo").addClass("fontColorOfPickItem");
        $("#txtDispoNo").val(oFabricBatch.OrderNo);
        
        $("#txtStatus").val(oFabricBatch.StatusSt);
        $("#txtConstruction").val(oFabricBatch.Construction);
        $("#txtBuyer").val(oFabricBatch.BuyerName);
        $("#txtWarpingLengthY").val(ConvertToFixed2(oFabricBatch.Qty));
        $("#txtWarpingLengthM").val(GetMeter(oFabricBatch.Qty,2));
        $("#txtTotalFinishLengthY").val(ConvertToFixed2(0));
        $("#txtTotalFinishLengthM").val(GetMeter(0.00,2));
        $("#txtYetToWarpLengthY").val(ConvertToFixed2(oFabricBatch.Qty));
        $("#txtYetToWarpLengthM").val(GetMeter(oFabricBatch.Qty,2));
        $('#txtTotalEnds').val(oFabricBatch.TotalEnds);
        $('#txtNoOfSection').val(oFabricBatch.NoOfSection);
        $("#cboMachineName").val(oFabricBatch.FMID);
        $("#cboFBPShift").val(oFabricBatch.ShiftID);
        $('#btnBatchCardPrint').show();

        /*--- Beam Qty ----*/

        $("#txtBeamQty").val(ConvertToFixed2(oFabricBatch.Qty));
        $("#txtBeamQtyMeter").val(GetMeter(oFabricBatch.Qty,2));
        ResetAllTables("tblBeams","tblFabricBatchRawMaterial","tblFBPBatchMan");
        _oFB =oFabricBatch;

        HideToolbarBeamSizing(oFabricBatch.Status);

        _oFabricBatchProduction.FEOID = oFabricBatch.FEOID;
        _oFabricBatchProduction.FBID = oFabricBatch.FBID;
        _oFabricBatchProduction.FabricBatchStatusInInt = oFabricBatch.StatusInInt;
        _nFBID =oFabricBatch.FBID;
        //GetWarpingInformation(oFabricBatch.FBID);
        //if (parseInt(_oFabricBatchProduction.FabricBatchRawMaterials.length)>0)
        //{
           
            RefreshList(_oFabricBatchProduction.FabricBatchRawMaterials,0)//rawmaterial refresh
            RefreshList(_oFabricBatchProduction.FabricBatchProductionBreakages,1)//Breakage refresh
            RefreshList(_oFabricBatchProduction.FabricBatchProductionBatchMans,2)//Batchman refresh
            RefreshList(_oFabricBatchProduction.FabricBatchProductionColors,3)//Colors refresh
            DynamicRefreshList(_oFabricBatchProduction.FBPBs,"tblBeams");
            if(_oFabricBatchProduction.FBPBs.length>0){
                SetYetToWarp(_oFabricBatchProduction.FBPBs);
            }
        //}
        if(parseInt(_oFabricBatchProduction.FBPID)>0)
        {
            RefreshControl(_oFabricBatchProduction);
        }


     

        if(parseInt(oFabricBatch.StatusInInt)==1)//In Floor
        {
            $('#btnRun').show();
            GetWarpingPlanStartTime(oFabricBatch);
        }
        else if(parseInt(oFabricBatch.StatusInInt)==2)//warping
        {
            $('#btnRunOut').show();
        }
        else if(parseInt(oFabricBatch.StatusInInt)>2)//Warping Finish
        {
            $('#txtProductName,#cboLot,#cboStore, #btnYarnPickByThisOrder,#btnPickProduct,#btnLotRefresh,#btnAddYarn,#btnDeleteYarn,#btnOutMaterials').hide();
            $('#btnAddBreakage').hide();
            $('#btnDeleteBreakage').hide();
            $('#btnAddBatchMan').hide();
            $('#btnDeleteBatchMan').hide();
            $('#btnTotalBreakageInformation').hide();
            $('#btnColorBreakDown').hide();
            $('#btnAddColor').hide();
            $('#btnDeleteColor').hide();
            $( "#cboMachineName,#txtTotalFinishLengthY,#txtTotalFinishLengthM,#cboFBPShift" ).prop( "disabled", true );
            $('#tpStartTime,#tpEndTime').timespinner({disabled:true});
            $('#txtStartDate,#txtEndDate').datebox({disabled:true});
        }
        else
        {
            $("#cboMachineName,#txtTotalFinishLengthY,#txtTotalFinishLengthM,#cboFBPShift").prop( "disabled", false );
            $('#tpStartTime,#tpEndTime').timespinner({disabled:false});
            $('#txtStartDate,#txtEndDate').datebox({disabled:false});
            $("#txtStartDate,#txtEndDate").datebox("setValue", icsdateformat(new Date()));
            GetFreeBeams();
            GetWarpingPlanStartTime(oFabricBatch);
        }
        $('#txtBatchNo').focus();
    }

    function GetWarpingPlanStartTime(oFabricBatch)
    {
        if(oFabricBatch!=null && oFabricBatch.FBID > 0)
        {
            oFabricBatch.FabricExecutionOrders = null;
            oFabricBatch.FabricBatchRawMaterials = null;
            oFabricBatch.FabricBatchHistorys = null;
            oFabricBatch.Beams = null;
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oFabricBatch,
                ControllerName: "FabricWarpingPlan",
                ActionName: "GetWarpingPlanDetailStartDate",
                IsWinClose: false
            };
            $.icsDataGet(obj, function (response) {
                if (response.status && response.obj!=null) {
                    if (parseInt(response.obj.FWPDID) > 0) {
                        $("#txtStartDate").datebox("setValue", response.obj.StartDateSt);
                        $('#tpStartTime').timespinner('setValue', response.obj.StartDateStForTimeSpan);
                        $("#txtEndDate").datebox("setValue", response.obj.EndDateSt);
                        $('#tpEndTime').timespinner('setValue', response.obj.EndDateStForTimeSpan);
                    }
                }
            });
        }
    }

    var editIndex = undefined;
    function endEditing(){
        debugger;
        if (editIndex == undefined)
        {
            return true;
        }
        if ($('#tblFabricBatchRawMaterial').datagrid('validateRow', editIndex)){
            $('#tblFabricBatchRawMaterial').datagrid('endEdit', editIndex);
            $('#tblFabricBatchRawMaterial').datagrid('selectRow',editIndex);
            var oFabricBatchRawMaterial=$('#tblFabricBatchRawMaterial').datagrid('getSelected');
            if(parseInt(oFabricBatchRawMaterial.ReceiveBy)<=0)
            {
                var oFBRMS =[];
                oFBRMS.push(oFabricBatchRawMaterial);
                Out(oFBRMS, true,editIndex,true);
            }
            else
            {
                $('#tblFabricBatchRawMaterial').datagrid('updateRow',{index: editIndex,	row: oFabricBatchRawMaterial});
            }
            editIndex = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }

    function onClickRow(index){
        if (editIndex != index){

            var oRow = $("#tblFabricBatchRawMaterial").datagrid("getSelected");
            if(oRow.ReceiveBy > 0)
            {
                $('#tblFabricBatchRawMaterial').datagrid('endEdit', editIndex);
                editIndex = undefined;
                endEditing();
                return true;
            }

            if (endEditing())
            {
                $('#tblFabricBatchRawMaterial').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndex = index;
            }
            else
            {
                $('#tblFabricBatchRawMaterial').datagrid('selectRow', editIndex);
            }
        }
    }

    $("#btnYarnPickByThisOrder").click(function () {
        debugger;
        if(parseInt(_oFabricBatchProduction.FEOID)<=0)
        {
            alert("Sorry, there is no Fabric Batch");
            return;
        }

        var oFabricBatch = {
            FabricSalesContractDetailID:_oFabricBatchProduction.FEOID
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oFabricBatch,
            ControllerName: "FabricBatch",
            ActionName: "GetsFabricExecutionOrderYarnReceive",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if ($.trim(response.objs[0].ErrorMessage) == "") {
                    var tblColums = [];
                    var oColumn = { field: "ProductName", title: "ProductName", width: "20%", align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "ColorName", title: "Color", width: "15%", align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "LotNo", title: "Lot No", width: "15%", align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "LotBalance", title: "Lot Balance", width: "14%", align: "right" };tblColums.push(oColumn);
                    oColumn = { field: "Qty", title: "Qty", width: "14%", align: "right" };tblColums.push(oColumn);
                    //oColumn = { field: "UnitName", title: "Store", width: "18%", align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winFEOReReceiveYarn',
                        winclass:'clsFEOReReceiveYarn',
                        winwidth: 750,
                        winheight: 460,
                        tableid: 'tblFEOReReceiveYarns',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'ProductName',
                        windowTittle: 'Yarn List Of Production Execution Order'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else
                {
                    alert(response.objs[0].ErrorMessage);
                }
            }else{
                alert("Data Not Found");
            }
        });
    });
    $("#btnPickProduct").click(function () {
        PickProductWarping();
    });

    function PickProductWarping()
    {
        if(parseInt($('#cboStore').val())<=0)
        {
            alert("Please select store.");
            return false;
        }


        var sProductName = $("#txtProductName").val();


        var oLot= { ProductName:$.trim(sProductName), BUID: _nBUID, WorkingUnitID : parseInt($('#cboStore').val())  };

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLot,
            ControllerName: "FabricBatch",
            ActionName: "GetProducts",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = [];var oColumn = { field: "ProductCode", title: "Product Code", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "ProductName", width: 200, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProduct',
                        winclass:'clsProduct',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProducts',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'ProductName',
                        windowTittle: 'Product List '
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else
                {
                    alert(response.objs[0].ErrorMessage);
                }
            }
            else
            {
                alert("Data not found.");
            }
        });
    }

    $("#txtProductName").keydown(function (e){
        if (e.keyCode === 13) // Enter Press
        {
            PickProductWarping();
        }
        else if (e.keyCode === 8 || e.keyCode==27) // Back spce
        {
            $("#txtProductName").removeClass("fontColorOfPickItem");
            _oProduct = null;
            $('#cboLot').empty();
            sessionStorage.setItem("Lots",[])//reset lots session storage
        }
    });

    function IntializePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            ButtonEvents(oPickerobj);
        });
        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                ButtonEvents(oPickerobj);
            }
        });
    }
    function ButtonEvents(oPickerobj)
    {
        var oreturnobj = "";var oreturnobjs = [];
        if(oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
        }else{
            oreturnobj = $('#'+oPickerobj.tableid).datagrid('getSelected');
        }
        if (oPickerobj.winclass == 'clsFEOReReceiveYarn')
        {
            if (oreturnobjs != null && oreturnobjs.length > 0)
            {
                debugger;
                var oNewFBRMaterials = [];
                for(var i=0;i<oreturnobjs.length;i++)
                {
                    var oFBRMaterial = {
                        FBID :_oFabricBatchProduction.FBID,
                        FBRMID :0,
                        ProductID :oreturnobjs[i].ProductID,
                        LotID:oreturnobjs[i].LotID,
                        LotNo :oreturnobjs[i].LotNo,
                        Qty:(oreturnobjs[i].Value==0)?0:((_oFB.TotalEnds * _oFB.Qty/oreturnobjs[i].Value * 1693.33)),
                        WeavingProcess :0
                    };
                    oNewFBRMaterials.push(oFBRMaterial);
                }
                Out(oNewFBRMaterials, false,-1, false);
                $('#cboStore').focus();

            }
            else
            {
                alert("Please select an item from list.");
                return false;
            }
        }
        else if(oPickerobj.winclass == 'clsProduct')
        {
            if (oreturnobj != null && oreturnobj.ProductID> 0)
            {
                _oProduct = oreturnobj;
                $("#txtProductName").val(oreturnobj.ProductName);
                $("#txtProductName").addClass("fontColorOfPickItem");
                $('#txtProductName').focus();
            }
            else
            {
                alert("Please select an item from list.");
                return false;
            }
        }
        else if(oPickerobj.winclass == 'clsFabricBatch')
        {
            if (oreturnobj != null && oreturnobj.FBID> 0)
            {
                debugger;
                $("#txtDispoNo").val(oreturnobj.FEONo);
                SetFabricBatchInfo(oreturnobj);
            }
            else
            {
                alert("Please select an item from list.");
                return false;
            }
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
    }
    function GetWarpingInformation(nFBID)
    {
        if (parseInt(nFBID) > 0)
        {
            $.ajax
            ({
                type: "GET",
                dataType: "json",
                url : _sBaseAddress+  "/FabricBatchProduction/GetFabricBatchProduction",
                data: { nFBID:nFBID},
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oFabricBatchProduction = jQuery.parseJSON(data);
                    if (parseInt(oFabricBatchProduction.FabricBatchRawMaterials.length)>0)
                    {
                        if(parseInt(oFabricBatchProduction.FBPID)>0)
                        {
                            _oFabricBatchProduction = oFabricBatchProduction;
                        }
                        RefreshList(oFabricBatchProduction.FabricBatchRawMaterials,0)//rawmaterial refresh
                        RefreshList(oFabricBatchProduction.FabricBatchProductionBreakages,1)//Breakage refresh
                        RefreshList(oFabricBatchProduction.FabricBatchProductionBatchMans,2)//Batchman refresh
                        RefreshList(oFabricBatchProduction.FabricBatchProductionColors,3)//Colors refresh
                        DynamicRefreshList(oFabricBatchProduction.FBPBs,"tblBeams");
                        if(oFabricBatchProduction.FBPBs.length>0){
                            SetYetToWarp(oFabricBatchProduction.FBPBs);
                        }
                    }
                    if(parseInt(oFabricBatchProduction.FBPID)>0)
                    {
                        RefreshControl(oFabricBatchProduction);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });
        }
    }
    function SetYetToWarp(FBPBs){
        debugger;
        var value =0;
        for(var i=0; i<FBPBs.length;i++){
            value += FBPBs[i].Qty;
        }
        $("#txtYetToWarpLengthY").val(ConvertToFixed2(parseFloat($('#txtWarpingLengthY').val()) - parseFloat(value)));
        $("#txtYetToWarpLengthM").val(GetMeter((ConvertToFixed2(parseFloat($('#txtWarpingLengthY').val()) - parseFloat(value))),2));

        $("#txtBeamQty").val(ConvertToFixed2(parseFloat($('#txtYetToWarpLengthY').val())));
        $("#txtBeamQtyMeter").val(GetMeter((ConvertToFixed2(parseFloat($('#txtYetToWarpLengthY').val()))),2));

        $("#txtTotalFinishLengthY").val(ConvertToFixed2(parseFloat(value)));
        $("#txtTotalFinishLengthM").val(GetMeter((ConvertToFixed2(parseFloat(value))),2));


    }
    function RefreshControl(oFabricBatchProduction)
    {
        if(parseInt(oFabricBatchProduction.FabricBatchStatusInInt)==2)
        {
            $('#btnRunOut').show();
            $( "#cboMachineName" ).prop( "disabled", true);
            $('#tpStartTime').timespinner({disabled:true});
            $('#txtStartDate').datebox({disabled:true});
        }

        if(parseInt(oFabricBatchProduction.FMID)>0)
        {

            var oFM = {FMID:oFabricBatchProduction.FMID, Name:oFabricBatchProduction.FabricMachineName};
            _oFabricMachines.push(oFM);
            $("#cboMachineName").icsLoadCombo({List: _oFabricMachines,OptionValue: "FMID",DisplayText: "Name"});
            $("#cboMachineName").val(oFabricBatchProduction.FMID);
        }
        //$("#txtTotalFinishLengthY").val(ConvertToFixed2(oFabricBatchProduction.Qty));
        //$("#txtTotalFinishLengthM").val(GetMeter(ConvertToFixed2(oFabricBatchProduction.Qty),2));

        $('#tpStartTime').timespinner('setValue', oFabricBatchProduction.StartDateStForTimeSpan);
        $('#txtStartDate').datebox('setValue', oFabricBatchProduction.StartDateSt);

        //$("#txtYetToWarpLengthY").val(ConvertToFixed2(parseFloat($('#txtWarpingLengthY').val()) - parseFloat(oFabricBatchProduction.Qty)));
        //$("#txtYetToWarpLengthM").val(GetMeter((ConvertToFixed2(parseFloat($('#txtWarpingLengthY').val()) - parseFloat(oFabricBatchProduction.Qty))),2));

        $('#txtWarpingDuration').val(oFabricBatchProduction.BatchDuration);
        $('#txtTotalEnds').val(oFabricBatchProduction.TotalEnds);
        $('#txtNoOfSection').val(oFabricBatchProduction.NoOfSection);

        $('#txtEndDate').datebox('setValue',oFabricBatchProduction.EndDateSt);
        $('#tpEndTime').timespinner('setValue', oFabricBatchProduction.EndDateStForTimeSpan);
        $("#cboFBPShift").val(oFabricBatchProduction.ShiftID);
    }


    function GetFreeBeams()
    {
        var oFabricMachine={
            WeavingProcess:0, // Warping
            MachineStatus:3 //Free
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oFabricMachine,
            ControllerName: "FabricMachine",
            ActionName: "GetsMachine",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if($.trim(response.objs[0].ErrorMessage) == "")
                {
                    $("#cboBeams").icsLoadCombo({
                        List: response.objs,
                        OptionValue: "FMID",
                        DisplayText: "Code"
                    });
                }
                else
                {
                    $("#cboBeams").empty();
                }
            }
        });
    }


    //Raw Material Start
    function  AddYarnDetail()
    {
        if (parseInt($("#cboStore").val()) == 0) {
            alert("Please select a store");
            $("#cboStore").focus();
            $("#cboStore").addClass("errorFieldBorder");
            return false;
        } else {
            $("#cboStore").removeClass("errorFieldBorder");
        }
        if ( _oProduct ==null || _oProduct.ProductID <= 0) {
            alert("Please select a product.");
            $("#txtProductName").focus();
            $("#txtProductName").addClass("errorFieldBorder");
            return false;
        } else {
            $("#txtProductName").removeClass("errorFieldBorder");
        }
        if (parseInt($("#cboLot").val()) == 0) {
            alert("Please select a Lot");
            $("#cboLot").focus();
            $("#cboLot").addClass("errorFieldBorder");
            return false;
        } else {
            $("#cboLot").removeClass("errorFieldBorder");
        }
        if($('#txtQty').val()<=0)
        {
            alert("Qty Should be Greater than 0");
            $("#txtQty").focus();
            $("#txtQty").addClass("errorFieldBorder");
            return false;
        }else{
            $("#txtQty").removeClass("errorFieldBorder");
        }
        //var nLotQty = GetLotQty($("#cboLot").val());
        //if($('#txtQty').val()>nLotQty)
        //{
        //    alert("Qty Should Less than or Equal Lot Qty");
        //    $("#txtQty").focus();
        //    $("#txtQty").addClass("errorFieldBorder");
        //    return false;
        //}else{
        //    $("#txtQty").removeClass("errorFieldBorder");
        //}

        var oNewFBRMaterials = [];
        var oFBRMaterial = {
            FBID :_oFabricBatchProduction.FBID,
            FBRMID :0,
            ProductID :_oProduct.ProductID,
            LotID:$("#cboLot").val(),
            Qty:$('#txtQty').val(),
            WeavingProcess :0
        };
        if(parseFloat(oFBRMaterial.Qty)<=0)
        {
            alert("Sorry, Lot Qty should be greater than 0.");
            return;
        }
        oNewFBRMaterials.push(oFBRMaterial);
        $("#txtProductName").removeClass("fontColorOfPickItem");
        $("#txtProductName").val("");
        _oProduct = "";
        $('#cboLot').empty();
        $('#cboStore').val(0);
        sessionStorage.setItem("Lots",[])//reset lots session storage
        $('#cboStore').focus();
        $("#txtQty").val(0);
        Out(oNewFBRMaterials, false,-1, false);
    }
    function DeleteYarnDetail()
    {
        var oFBRM= $("#tblFabricBatchRawMaterial").datagrid("getSelected");
        if (oFBRM == null || parseInt(oFBRM.FBRMID) <= 0) {
            alert("Please select an item from list!");
            return false;
        }
        if (parseInt(oFBRM.ReceiveBy)!=0) {
            alert("Sorry, This item already received!");
            return false;
        }

        if (!confirm("Confirm to Delete?")) return false;
        var nRowIndex = $("#tblFabricBatchRawMaterial").datagrid("getRowIndex", oFBRM);
        if (parseInt(oFBRM.FBRMID) > 0)
        {
            $.ajax
            ({
                type: "GET",
                dataType: "json",
                url : _sBaseAddress+  "/FabricBatch/DeleteRowMaterial",
                data: { id: oFBRM.FBRMID},
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Deleted")
                    {
                        alert("Delete sucessfully");
                        $("#tblFabricBatchRawMaterial").datagrid("deleteRow", nRowIndex);
                        editIndex = undefined
                        endEditing();
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });
        }
    }

    function GetLotQty(nLotID)
    {
        var oLots =  jQuery.parseJSON(sessionStorage.getItem("Lots"));
        for(var i=0;i<oLots.length;i++)
        {
            if(parseInt(oLots[i].LotID)== parseInt(nLotID))
            {
                return oLots[i].Balance;
            }
        }
        return 0;
    }

    function RefreshLot()
    {

        if (parseInt($("#cboStore").val()) == 0) {
            alert("Please select a store");
            $("#cboStore").focus();
            $("#cboStore").addClass("errorFieldBorder");
            return false;
        } else {
            $("#cboStore").removeClass("errorFieldBorder");
        }

        if ( _oProduct ==null || _oProduct.ProductID <= 0) {
            alert("Please select a product.");
            $("#txtProductName").focus();
            $("#txtProductName").addClass("errorFieldBorder");
            return false;
        } else {
            $("#txtProductName").removeClass("errorFieldBorder");
        }

        var oLot = {
            ProductID: _oProduct.ProductID,
            WorkingUnitID: parseInt($("#cboStore").val())
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Lot/GetsLot",
            traditional: true,
            data: JSON.stringify(oLot),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oLots =  jQuery.parseJSON(data);
                if (oLots != null) {
                    if (oLots.length > 0) {
                        sessionStorage.setItem("Lots",oLots);
                        $("#cboLot").icsLoadCombo({
                            List: oLots,
                            OptionValue: "LotID",
                            DisplayText: "LotWithBalance"
                        });
                    }
                    else {
                        alert("No Lot Found.");
                    }
                }
                else {
                    alert("No Lot Found");
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

    }

    function ValidateInputRM(bIsCheckList)
    {
        if(parseInt(_oFabricBatchProduction.FBID)<=0)
        {
            alert("Sorry, there is no Fabric Batch!");
            return false;
        }

        if(parseInt(_oFabricBatchProduction.FEOID)<=0)
        {
            alert("Sorry, there is no Fabric Execution Order!");
            return false;
        }

        if(bIsCheckList)
        {
            var oRows = $("#tblFabricBatchRawMaterial").datagrid("getRows");
            var nLength = oRows.length;
            var bIsNotReceivedItemFound = false;
            if(nLength>0)
            {
                for(var i=0;i<nLength;i++)
                {
                    if(oRows[i].ReceiveBy == 0)
                    {
                        bIsNotReceivedItemFound = true;
                        break;
                    }
                }
            }
            else
            {
                alert("No item list.");
                return false;
            }

            if(!bIsNotReceivedItemFound)
            {
                alert("All items in the list already received.");
                return false;
            }
        }


        return true;
    }

    function RefreshObjectRawMaterial()
    {
        var oFabricBatch= {
            FBID:_oFabricBatchProduction.FBID,
            IsRawMaterialOut:true,
            FabricBatchRawMaterials:$('#tblFabricBatchRawMaterial').datagrid('getRows'),
            WeavingProcess:0// for wraping

        };
        return oFabricBatch;
    }


    function Out(oFabricBatchRawMaterials, bIsEdit,nSelectedIndex, bIsCheckList)
    {

        debugger;

        if(parseInt(_oFabricBatchProduction.FabricBatchStatusInInt)>2)
        {
            return false;
        }
        if(!ValidateInputRM(bIsCheckList)) return;
        var oFabricBatch = {FabricBatchRawMaterials:[], FBID:0};
        if(oFabricBatchRawMaterials!=null && oFabricBatchRawMaterials.length>0)
        {
            //for add, edit
            oFabricBatch.FabricBatchRawMaterials = oFabricBatchRawMaterials;
        }else{
            //for out

            endEditing();
            oFabricBatch = RefreshObjectRawMaterial();
            if(oFabricBatch.FabricBatchRawMaterials==null|| oFabricBatch.FabricBatchRawMaterials.length<=0)
            {
                alert("Sorry, there is no Yarns.");
                return;
            }
        }
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/FabricBatch/OutRowMaterials",
            traditional: true,
            data:  JSON.stringify(oFabricBatch),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oFabricBatch = jQuery.parseJSON(data);
                if (oFabricBatch.IsRawMaterialOut==false && (oFabricBatch.ErrorMessage==null || oFabricBatch.ErrorMessage==""))
                {
                    if(bIsEdit)
                    {
                        $('#tblFabricBatchRawMaterial').datagrid('updateRow', { index: nSelectedIndex, row: oFabricBatch.FabricBatchRawMaterials[0] });
                    }else{
                        for(var i=0;i<oFabricBatch.FabricBatchRawMaterials.length;i++)
                        {
                            $("#tblFabricBatchRawMaterial").datagrid("appendRow", oFabricBatch.FabricBatchRawMaterials[i]);
                        }

                    }

                }else if(oFabricBatch.IsRawMaterialOut && (oFabricBatch.ErrorMessage==null || oFabricBatch.ErrorMessage==""))
                {
                    alert("Yarn Out Successfully.");
                    $('#txtStatus').val(oFabricBatch.StatusSt);
                    $('#btnRun').show();
                    _oFabricBatchProduction.FabricBatchStatusInInt = oFabricBatch.StatusInInt;
                    RefreshList(oFabricBatch.FabricBatchRawMaterials,0)//refresh yarns
                }
                else {
                    alert(oFabricBatch.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }
    //Rawmanterial End
    //Breakage Start
    $("#btnAddBreakage").click(function(){
        if(parseInt(_oFabricBatchProduction.FBPID)<=0)
        {
            alert("Please Run the Batch Card then Add Breakage!");
            return false;
        }
        if(parseInt($('#cboBreakage').val())<=0)
        {
            alert("Select Breakage !");
            $('#cboBreakage').focus();
            return false;
        }


        var oFBPBatchMan = $("#tblFBPBatchMan").datagrid("getSelected");
        if(oFBPBatchMan == null || oFBPBatchMan.FBPBID <=0)
        {
            alert("Invalid Fabric Batch Production Batch Man.");
            return false;
        }

        var oFBPBreakage = {
            FBPBreakageID:0,
            FBPBID: oFBPBatchMan.FBPBID,
            FBreakageID:$('#cboBreakage').val(),
            DurationInMin:$('#txtDuration').numberbox('getValue'),
            NoOfBreakage:$('#txtNumberOfBreakage').numberbox('getValue'),
            Note:''
        };

        SaveBreakage(oFBPBreakage,false, 0);
        $('#cboBreakage').val(0);
        $('#txtDuration').numberbox('setValue',0);
        $('#txtNumberOfBreakage').numberbox('setValue',1);
    });

    function SaveBreakage(oFBPBreakage,bIsEdit, nSelectedIndex)
    {
        //
        if(parseInt(_oFabricBatchProduction.FabricBatchStatusInInt)!=2)//warping
        {
            return;//in this step can't add any data
        }
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/FabricBatchProduction/SaveFBPBreakage",
            traditional: true,
            data:  JSON.stringify(oFBPBreakage),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                _oFBPBreakage = jQuery.parseJSON(data);
                if (_oFBPBreakage.FBPBreakageID>0)
                {
                    if(bIsEdit)
                    {
                        $('#tblFBPBreakage').datagrid('updateRow', { index: nSelectedIndex, row: _oFBPBreakage});
                    }else{
                        $("#tblFBPBreakage").datagrid("appendRow", _oFBPBreakage);
                    }
                    TotalNoOfBreakage();
                    $("#cboBreakage").focus();
                    //Update table tblFBPBatchMan
                    UpdateFBPBatchMan(_oFBPBreakage.FabricBatchProductionBreakages);
                    return;
                }
                else {
                    alert(_oFBPBreakage.ErrorMessage);
                    TotalNoOfBreakage();
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    function UpdateFBPBatchMan(oFabricBatchProductionBreakages)
    {
        if(oFabricBatchProductionBreakages.length > 0)
        {
            var nTotalBreakages=0;
            var nTotalNoOfBreakage=0;
            for(var i=0;i<oFabricBatchProductionBreakages.length;i++)
            {
                nTotalBreakages++;
                nTotalNoOfBreakage = parseInt(oFabricBatchProductionBreakages[i].NoOfBreakage) + parseInt(nTotalNoOfBreakage);
            }

            var oFBPBatchMan = $("#tblFBPBatchMan").datagrid("getSelected");
            var nRowIndex = $("#tblFBPBatchMan").datagrid("getRowIndex", oFBPBatchMan);

            oFBPBatchMan.TotalFBPBreakage = nTotalBreakages;
            oFBPBatchMan.TotalNoOfBreakage = nTotalNoOfBreakage

            $("#tblFBPBatchMan").datagrid("updateRow", { index: nRowIndex, row: oFBPBatchMan });
            $('#tblFBPBatchMan').datagrid('selectRow',nRowIndex);
        }
    }

    $("#btnDeleteBreakage").click(function(){
        var oFBPBreakage= $("#tblFBPBreakage").datagrid("getSelected");
        if (oFBPBreakage == null || parseInt(oFBPBreakage.FBPBreakageID) <= 0) {
            alert("Please select an item from list!");
            return false;
        }

        if (!confirm("Confirm to Delete?")) return false;
        var nRowIndex = $("#tblFBPBreakage").datagrid("getRowIndex", oFBPBreakage);
        if (parseInt(oFBPBreakage.FBPBreakageID) > 0)
        {
            $.ajax
            ({
                type: "GET",
                dataType: "json",
                url : _sBaseAddress+  "/FabricBatchProduction/DeleteFBPBreakage",
                data: { id: oFBPBreakage.FBPBreakageID},
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    feedbackmessage = jQuery.parseJSON(data);

                    if (feedbackmessage == "Deleted")
                    {
                        alert("Delete sucessfully");
                        $("#tblFBPBreakage").datagrid("deleteRow", nRowIndex);
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                    TotalNoOfBreakage();
                    UpdateFBPBatchMan($("#tblFBPBreakage").datagrid("getRows"));
                    editIndexBreakage = undefined;
                    endEditingBreakage();
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
        }
    });

    var editIndexBreakage = undefined;
    function endEditingBreakage(){
        if (editIndexBreakage == undefined){return true}
        if ($('#tblFBPBreakage').datagrid('validateRow', editIndexBreakage)){
            $('#tblFBPBreakage').datagrid('endEdit', editIndexBreakage);
            $('#tblFBPBreakage').datagrid('selectRow',editIndexBreakage);
            var oFBPBreakage=$('#tblFBPBreakage').datagrid('getSelected');
            oFBPBreakage.DurationInMin = parseInt(oFBPBreakage.DurationInMin);
            oFBPBreakage.NoOfBreakage = parseInt(oFBPBreakage.NoOfBreakage);
            oFBPBreakage.Note = oFBPBreakage.Note;
            SaveBreakage(oFBPBreakage, true,editIndexBreakage);
            editIndexBreakage = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }



    function onClickRowBreakage(index){

        if (editIndexBreakage != index){
            if (endEditingBreakage())
            {
                $('#tblFBPBreakage').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndexBreakage = index;
            }
            else
            {
                $('#tblFBPBreakage').datagrid('selectRow', editIndexBreakage);
            }
        }
    }
    //Breakage End

    //BatchMan Start
    function AddBatchMan()
    {
        if(parseInt(_oFabricBatchProduction.FBPID)<=0)
        {
            alert("Please Run the Batch Card then Add BatchMan!");
            return false;
        }
        if(parseInt($('#cboBatchMan').val())<=0)
        {
            alert("Select BatchMan !");
            $('#cboBatchMan').focus();
            return false;
        }
        if(parseInt($('#cboShift').val())<=0)
        {
            alert("Select Shift !");
            $('#cboShift').focus();
            return false;
        }

        var oFBPBatchMan = {
            FBPBID:0,
            FBPID:_oFabricBatchProduction.FBPID,
            EmployeeID:$('#cboBatchMan').val(),
            ShiftID:$('#cboShift').val(),
            Qty:$('#txtQtyYard').val(),
            FinishDate:$('#txtFinishDate').datebox('getValue'),
            Note:''
        };

        SaveBatchMan(oFBPBatchMan,false, 0);
        $('#cboBatchMan').val(0);
        $('#cboShift').val(0);
        $('#txtFinishDate').datebox('setValue',icsdateformat(new Date()));

    }
    function SaveBatchMan(oFBPBatchMan,bIsEdit, nSelectedIndex)
    {
        if(parseInt(_oFabricBatchProduction.FabricBatchStatusInInt)!=2)//warping
        {
            return false;//in this step can't add any data
        }
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/FabricBatchProduction/SaveFBPBatchMan",
            traditional: true,
            data:  JSON.stringify(oFBPBatchMan),
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                _oFBPBatchMan = jQuery.parseJSON(data);
                if (parseInt(_oFBPBatchMan.FBPBID)>0)
                {
                    if(bIsEdit)
                    {
                        $('#tblFBPBatchMan').datagrid('updateRow', { index: nSelectedIndex, row: _oFBPBatchMan});
                    }else{
                        $("#tblFBPBatchMan").datagrid("appendRow", _oFBPBatchMan);
                    }
                    return;
                }
                else {
                    alert(_oFBPBatchMan.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }
    function DeleteBatchMan()
    {

        var oFBPBatchMan= $("#tblFBPBatchMan").datagrid("getSelected");
        if (oFBPBatchMan == null || parseInt(oFBPBatchMan.FBPBID) <= 0) {
            alert("Please select an item from list!");
            return false;
        }

        if (!confirm("Confirm to Delete?")) return false;
        var nRowIndex = $("#tblFBPBatchMan").datagrid("getRowIndex", oFBPBatchMan);
        if (parseInt(oFBPBatchMan.FBPBID) > 0)
        {
            $.ajax
            ({
                type: "GET",
                dataType: "json",
                url : _sBaseAddress+  "/FabricBatchProduction/DeleteFBPBatchMan",
                data: { id: oFBPBatchMan.FBPBID},
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Deleted")
                    {
                        alert("Delete sucessfully");
                        $("#tblFBPBatchMan").datagrid("deleteRow", nRowIndex);
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                    editIndexBatchMan = undefined;
                    endEditingBatchMan();
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });
        }

    }
    var editIndexBatchMan = undefined;
    function endEditingBatchMan(){
        if (editIndexBatchMan == undefined){return true}
        if ($('#tblFBPBatchMan').datagrid('validateRow', editIndexBatchMan)){
            $('#tblFBPBatchMan').datagrid('endEdit', editIndexBatchMan);
            $('#tblFBPBatchMan').datagrid('selectRow',editIndexBatchMan);
            var oFBPBatchMan=$('#tblFBPBatchMan').datagrid('getSelected');
            oFBPBatchMan.Qty=oFBPBatchMan.Qty;
            oFBPBatchMan.FinishDate= icsdateformat(new Date(oFBPBatchMan.FinishDate)),
            oFBPBatchMan.Note=oFBPBatchMan.Note;
            SaveBatchMan(oFBPBatchMan, true,editIndexBatchMan);
            editIndexBatchMan = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRowBatchMan(index){

        if (editIndexBatchMan != index){
            if (endEditingBatchMan())
            {
                $('#tblFBPBatchMan').datagrid('selectRow', index)
                        .datagrid('beginEdit', index);
                editIndexBatchMan = index;
            }
            else
            {
                $('#tblFBPBatchMan').datagrid('selectRow', editIndexBatchMan);
            }
        }
    }
    //BatchMan End

    //Color Start
    $("#btnAddColor").click(function(){
        if(parseInt(_oFabricBatchProduction.FBPID)<=0)
        {
            alert("Please Run the Batch Card then Add Color!");
            return false;
        }
        if($('#txtColorName').val()=="" || $('#txtColorName').val()==null)
        {
            alert("type Color !");
            $('#txtColorName').focus();
            return false;
        }
        if(parseFloat($('#txtFinishLengthColorWiseY').val())<=0)
        {
            alert("Duration Should be greater than 0 ");
            $('#txtFinishLengthColorWiseY').focus();
            return false;
        }

        var oFBPBatchMan = $("#tblFBPBatchMan").datagrid("getSelected");
        if(oFBPBatchMan == null || oFBPBatchMan.FBPBID <=0)
        {
            alert("Invalid Fabric Batch Production Batch Man.");
            return false;
        }
        var oFBPColor = {
            FBPColorID:0,
            FBPBID: oFBPBatchMan.FBPBID,
            Name:$('#txtColorName').val(),
            Qty:$('#txtFinishLengthColorWiseY').val(),
            Note:''
        };

        SaveColor(oFBPColor,false, 0);
        $('#txtColorName').val("");
        $('#txtFinishLengthColorWiseY').val(0);
        $('#txtFinishLengthColorWiseM').val(0);
    });

    function SaveColor(oFBPColor,bIsEdit, nSelectedIndex)
    {
        if(parseInt(_oFabricBatchProduction.FabricBatchStatusInInt)!=2)//warping
        {
            return false;//in this step can't add any data
        }
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/FabricBatchProduction/SaveFBPColor",
            traditional: true,
            data:  JSON.stringify(oFBPColor),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                _oFBPColor = jQuery.parseJSON(data);
                if (_oFBPColor.FBPColorID>0)
                {
                    if(bIsEdit)
                    {
                        $('#tblFBPColor').datagrid('updateRow', { index: nSelectedIndex, row: _oFBPColor});
                    }else{
                        $("#tblFBPColor").datagrid("appendRow", _oFBPColor);
                    }
                    TotalCalculationForColor();
                    $("#txtColorName").focus();
                    UpdateFBPColor(_oFBPColor.FabricBatchProductionColors);
                    return;
                }
                else {
                    alert(_oFBPColor.ErrorMessage);
                }
                TotalCalculationForColor();
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function UpdateFBPColor(oFabricBatchProductionColors)
    {
        if(oFabricBatchProductionColors.length > 0)
        {
            var nTotalColot=0;
            var nTotalQty=0;
            var nTotalQtyInM=0;
            for(var i=0;i<oFabricBatchProductionColors.length;i++)
            {
                nTotalColot++;
                nTotalQty = parseFloat(oFabricBatchProductionColors[i].Qty) + parseFloat(nTotalQty);
                nTotalQtyInM = parseFloat(oFabricBatchProductionColors[i].QtyInM) + parseFloat(nTotalQtyInM);
            }

            var oFBPBatchMan = $("#tblFBPBatchMan").datagrid("getSelected");
            var nRowIndex = $("#tblFBPBatchMan").datagrid("getRowIndex", oFBPBatchMan);

            oFBPBatchMan.TotalColor = nTotalColot;
            oFBPBatchMan.Qty = nTotalQty;
            oFBPBatchMan.QtyInM = parseFloat(nTotalQtyInM.toFixed(2));

            $("#tblFBPBatchMan").datagrid("updateRow", { index: nRowIndex, row: oFBPBatchMan });
            $('#tblFBPBatchMan').datagrid('selectRow',nRowIndex);
        }
    }

    $("#btnDeleteColor").click(function(){
        var oFBPColor= $("#tblFBPColor").datagrid("getSelected");
        if (oFBPColor == null || parseInt(oFBPColor.FBPColorID) <= 0) {
            alert("Please select an item from list!");
            return false;
        }

        if (!confirm("Confirm to Delete?")) return false;
        var nRowIndex = $("#tblFBPColor").datagrid("getRowIndex", oFBPColor);
        if (parseInt(oFBPColor.FBPColorID) > 0)
        {
            $.ajax
            ({
                type: "GET",
                dataType: "json",
                url : _sBaseAddress+  "/FabricBatchProduction/DeleteFBPColor",
                data: { id: oFBPColor.FBPColorID},
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Deleted")
                    {
                        alert("Delete sucessfully");
                        $("#tblFBPColor").datagrid("deleteRow", nRowIndex);
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                    TotalCalculationForColor();
                    UpdateFBPColor($("#tblFBPColor").datagrid("getRows"));
                    editIndexColor = undefined;
                    endEditingColor();
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });
        }
    });

    var editIndexColor = undefined;
    function endEditingColor(){
        if (editIndexColor == undefined){return true}
        if ($('#tblFBPColor').datagrid('validateRow', editIndexColor)){
            $('#tblFBPColor').datagrid('endEdit', editIndexColor);
            $('#tblFBPColor').datagrid('selectRow',editIndexColor);
            var oFBPColor=$('#tblFBPColor').datagrid('getSelected');
            oFBPColor.Qty=oFBPColor.Qty;
            oFBPColor.Note=oFBPColor.Note;
            SaveColor(oFBPColor, true,editIndexColor);
            editIndexColor = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRowColor(index){

        if (editIndexColor != index){
            if (endEditingColor())
            {
                $('#tblFBPColor').datagrid('selectRow', index)
                        .datagrid('beginEdit', index);
                editIndexColor = index;
            }
            else
            {
                $('#tblFBPColor').datagrid('selectRow', editIndexColor);
            }
        }
    }
    //Color End


    //Run Start
    function ValidateInput()
    {
        if(parseInt(_oFabricBatchProduction.FBID)<=0)
        {
            alert("Sorry, there is no Fabric Batch!");
            return false;
        }

        if(parseInt($('#cboMachineName').val())<=0)
        {
            alert("Select machine!");
            $('#cboMachineName').focus();
            return false;
        }

        return true;
    }

    function RefreshObject()
    {
        var dStartDate =$('#txtStartDate').datebox('getValue');
        var startTime= $('#tpStartTime').timespinner('getValue');
        var sTime=startTime.split(':');
        var hStartTime= parseFloat(sTime[0]);
        var mStartTime= parseFloat(sTime[1]);
        dStartDate = new Date(dStartDate);
        dStartDate.setHours(hStartTime);
        dStartDate.setMinutes(mStartTime);

        var oFabricBatchProduction= {
            FBPID:0,
            FBID:_oFabricBatchProduction.FBID,
            WeavingProcess:0,
            FMID:$('#cboMachineName').val(),
            StartTime: dStartDate,
            FabricBatchStatus:2,//warping
            FBPriviousStatus:1,//Infloor
            Qty:$('#txtTotalFinishLengthY').val(),
            ShiftID :$('#cboFBPShift').val()
        };
        return oFabricBatchProduction;
    }

    function Run()
    {
        if(!ValidateInput()) return;
        var oFabricBatchProduction = RefreshObject();

        oFabricBatchProduction.FBPBs = $("#tblBeams").datagrid("getRows");

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/FabricBatchProduction/Save",
            traditional: true,
            data:  JSON.stringify(oFabricBatchProduction),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oFabricBatchProduction = jQuery.parseJSON(data);
                if (oFabricBatchProduction.FBPID>0)
                {
                    alert("Successfully Run");
                    $('#txtStatus').val(oFabricBatchProduction.FabricBatchStatusInString);
                    $('#tpStartTime').timespinner({disabled:true});
                    $('#txtStartDate').datebox({disabled:true});
                    $('#tpStartTime').timespinner('setValue', oFabricBatchProduction.StartDateStForTimeSpan);
                    $('#txtStartDate').datebox('setValue', oFabricBatchProduction.StartDateSt);
                    $('#txtWarpingDuration').val(oFabricBatchProduction.BatchDuration);
                    $('#txtTotalEnds').val(oFabricBatchProduction.TotalEnds);
                    $('#txtNoOfSection').val(oFabricBatchProduction.NoOfSection);
                    $('#btnRunOut').show();
                    $('#btnRun').hide();
                    _oFabricBatchProduction=oFabricBatchProduction;
                    return false;

                }
                else {
                    alert(oFabricBatchProduction.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }
    //Run end

    //RunOut Start
    function RunOut()
    {
        if(parseInt(_oFabricBatchProduction.FBPID)<=0)
        {
            alert("Sorry, there is no Fabric Batch Production!");
            return false;
        }
        if(parseInt(_oFabricBatchProduction.FabricBatchStatusInInt)!=2)
        {
            alert("Please run first then run out!");
            return false;
        }
        if($("#tblBeams").datagrid("getRows").length <= 0)
        {
            alert("Add Beam!");
            $('#cboBeams').focus();
            return false;
        }
        if(parseInt($('#tblFBPBatchMan').datagrid('getRows').length)<=0)
        {
            alert("Please add at least one batch wise production!");
            return false;
        }

        var dEndDate =$('#txtEndDate').datebox('getValue');
        var EndTime= $('#tpEndTime').timespinner('getValue');
        var sTime=EndTime.split(':');
        var hEndTime= parseFloat(sTime[0]);
        var mEndTime= parseFloat(sTime[1]);
        dEndDate = new Date(dEndDate);
        dEndDate.setHours(hEndTime);
        dEndDate.setMinutes(mEndTime);


        var oFabricBatchProduction = {
            FBPID:_oFabricBatchProduction.FBPID,
            FBID:_oFabricBatchProduction.FBID,
            FMID:$('#cboMachineName').val(),
            FabricBatchStatus:3,
            FBPriviousStatus:_oFabricBatchProduction.FabricBatchStatusInInt,
            EndTime:dEndDate,
            Qty:$('#txtTotalFinishLengthY').val(),
            IsFromRunOut:true,
            ShiftID :$('#cboFBPShift').val()
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/FabricBatchProduction/Save",
            traditional: true,
            data:  JSON.stringify(oFabricBatchProduction),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var  oFabricBatchProduction = jQuery.parseJSON(data);
                if (oFabricBatchProduction.FBPID>0)
                {
                    alert("Successfully Run Out");
                    $('#txtStatus').val(oFabricBatchProduction.FabricBatchStatusInString);
                    $('#txtWarpingDuration').val(oFabricBatchProduction.BatchDuration);
                    $('#txtTotalEnds').val(oFabricBatchProduction.TotalEnds);
                    $('#txtNoOfSection').val(oFabricBatchProduction.NoOfSection);
                    $("#toolbarBeam").hide();
                    $('#txtProductName,#cboLot,#cboStore, #btnYarnPickByThisOrder,#btnPickProduct,#btnLotRefresh,#btnAddYarn,#btnDeleteYarn,#btnOutMaterials').hide();
                    $('#btnRunOut,#btnAddBreakage,#btnDeleteBreakage,#btnAddBatchMan,#btnDeleteBatchMan,#btnAddColor,#btnDeleteColor').hide();
                    $('#btnTotalBreakageInformation').hide();
                    $('#btnColorBreakDown').hide();
                    $('#tpEndTime').timespinner({disabled:true});
                    $('#txtEndDate').datebox({disabled:true});
                    $('#tpEndTime').timespinner('setValue', oFabricBatchProduction.EndDateStForTimeSpan);
                    $('#txtEndDate').datebox('setValue', oFabricBatchProduction.EndDateSt);
                    return;

                }
                else {
                    alert(oFabricBatchProduction.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }
    //RunOut End

    //nType: 0=Rawmaterial;1:Breakage;2=Batchmans;3=Colors
    function RefreshList(oList,nType)
    {
        data=oList;
        data={"total":""+data.length+"","rows":data};
        if(parseInt(nType)==0)
        {
            $('#tblFabricBatchRawMaterial').datagrid('loadData',data);
        }else  if(parseInt(nType)==1)
        {
            $('#tblFBPBreakage').datagrid('loadData',data);
        }else if(parseInt(nType)==2)
        {
            $('#tblFBPBatchMan').datagrid('loadData',data);
        }else
        {
            $('#tblFBPColor').datagrid('loadData',data);
        }

    }

    function Close()
    {
        window.location.href = _lBackLink;
    }

    $(document).keydown(function(e) {
        if(e.which == 27)
        {
            window.close();
        }
    });

    $("#btnBatchCardPrint").click(function () {

        if(_nFBID<=0)
        {
            alert("No Batch Card Found!");
            return;
        }


        //    Warping = 0, Sizing = 1, Drawing_IN = 2, Loom = 3

        //window.open(_sBaseAddress+ "/FabricBatch/PrintBatchCard?nFBID="+_nFBID);
        window.open(_sBaseAddress+ "/FabricBatch/PrintBatchCard_Dynamic?nFBID="+_nFBID+"&nProcess="+0); ///Warping = 0
    });

    $('#btnClose').click(function(e){
        window.location.href = sessionStorage.getItem("BackLink");
    })
</script>