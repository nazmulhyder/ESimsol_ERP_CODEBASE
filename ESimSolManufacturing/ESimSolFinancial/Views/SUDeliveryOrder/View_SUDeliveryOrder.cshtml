@{
    ViewBag.Title = "Delivery Order";
}
@model ESimSol.BusinessObjects.SUDeliveryOrder
@{var MenuID = HttpContext.Current.Session[SessionInfo.MenuID];}
<html>
<head>
    <title>Fabric Delivery Order</title>
</head>
<body class="menuMainCollectionTable">
    <div id="p" class="easyui-panel" title="Delivery Order" style="width:100%;height:100%; padding:10px;background:#fafafa;">
        <div id="winSUDeliveryOrderDetailsPicker" style="width:850px;" class="easyui-window" title="Contractor" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div id="divSUDeliveryOrderDetailsPicker" tabindex="-1">
                <table id="tblSUDeliveryOrderDetailsPicker" class="easyui-datagrid" style="width: 840px; height: 300px; margin: 0;"
                       data-options="singleSelect: true,fitColumns:false, rownumbers:true, pagination:false, autoRowHeight:false ">
                    <thead>
                        <tr>
                            <th field="DONo" width="20%" align="left">DO No</th>
                            <th field="ProductCode" width="10%" align="left">Code</th>
                            <th field="ProductName" width="20%" align="left">Count</th>
                            <th field="Qty" width="9%" align="right">Qty</th>
                            <th field="QtyInLbs" width="10%" align="right">Qty(Lbs)</th>
                            <th field="UnitPrice" width="9%" align="right">Unit Price</th>
                            <th field="UnitPriceInLbs" width="10%" align="right">UnitPrice(Lbs)</th>
                            <th field="AmountSt" width="10%" align="right">Amount</th>
                        </tr>
                    </thead>
                </table>
            </div>
            <div>
                <div style="margin-right: 14px;text-align:right;font-weight: bold;">
                    Total : <label id="lblTotalSUDOPickerAmount" style="">0</label>
                </div>
            </div>
            <fieldset class="actionfieldsetstyle">
                <legend>Actions : </legend>
                <a id="btnCloseSUDeliveryOrderDetailsPicker" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
            </fieldset>
        </div>
        <div id="winExportPIProducts" class="easyui-window" title="Contractor" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div id="divExportPIProductsPicker" tabindex="-1">
                <table id="tblExportPIProductsPicker" class="easyui-datagrid" style="width: 400px; height: 350px; margin: 0;"
                       data-options="singleSelect: true,fitColumns:false, rownumbers:true, pagination:false, autoRowHeight:false, toolbar: '#toolbarExportPIProductsPicker' ">
                    <thead>
                        <tr>
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th field="ProductName" width="50%" align="left">Product Name</th>
                            <th field="Qty" width="15%" align="right">Qty(KG)</th>
                            <th field="UnitPrice" width="20%" align="right">Unit Price</th>
                        </tr>
                    </thead>
                </table>
                <div id="toolbarExportPIProductsPicker">
                    <input id="txtSearchByExportPIProductsNamePicker" class="txtPickerSearchInputField" type="text" placeholder="Search by PI No" />
                </div>
            </div>
            <fieldset class="actionfieldsetstyle">
                <legend>Actions : </legend>
                <a id="btnOkExportPIProductsPicker" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                <a id="btnCloseExportPIProductsPicker" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
            </fieldset>
        </div>
        <div id="winPINo" class="easyui-window" title="Contractor" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div id="divPINoPicker" tabindex="-1">
                <table id="tblPINosPicker" class="easyui-datagrid" style="width: 800px; height: 350px; margin: 0;"
                       data-options="singleSelect: true,fitColumns:false, rownumbers:true, pagination:false, autoRowHeight:false, toolbar: '#toolbarPINoPicker' ">
                    <thead>
                        <tr>
                            <th field="PINo" width="20%">PI No</th>
                            <th field="LCNoSt" width="20%">LC No</th>
                            <th field="IssueDateInString" width="18%" align="center">Issue Date</th>
                            <th field="ContractorNameCode" width="20%">Account of</th>
                            <th field="BuyerName" width="20%">Buying House</th>
                            <th field="AmountSt" width="15%" align="right">Total Value</th>
                        </tr>
                    </thead>
                </table>
                <div id="toolbarPINoPicker">
                    <input id="txtSearchByPINoNamePicker" class="txtPickerSearchInputField" type="text" placeholder="Search by PI No" />
                    <a id="btnRefreshPINoPicker" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
                    <a id="btnLoadPI" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Load All PI</a>
                </div>
            </div>
            <fieldset class="actionfieldsetstyle">
                <legend>Actions : </legend>
                <a id="btnOkPINoPicker" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                <a id="btnClosePINoPicker" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
            </fieldset>
        </div>
        <div id="winProductPicker" class="easyui-window" title="Contractor" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div id="divProductPicker" tabindex="-1">
                <table id="tblProductsPicker" class="easyui-datagrid" style="width: 400px; height: 350px; margin: 0;"
                       data-options="singleSelect: true,fitColumns:false, rownumbers:true, pagination:false, autoRowHeight:false, toolbar: '#toolbarProductPicker' ">
                    <thead>
                        <tr>
                            <th field="ProductCode" width="22%" align="left">Product Code</th>
                            <th field="ProductName" width="40%" align="left">Product Name</th>
                            <th field="ShortName" width="40%" align="left">Short Name</th>
                        </tr>
                    </thead>
                </table>
                <div id="toolbarProductPicker">
                    <input id="txtSearchByProductNamePicker" class="txtPickerSearchInputField" type="text" placeholder="Search by name" />
                </div>
            </div>
            <fieldset class="actionfieldsetstyle">
                <legend>Actions : </legend>
                <a id="btnOkProductPicker" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                <a id="btnCloseProductPicker" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
            </fieldset>
        </div>
        <div class="wrapperForNextPage">
            <fieldset class="wrapperContentFieldSet">
                <legend>Delivery Order :</legend>
                <table style="width:100%;">
                    <tr>
                        <td style="width:10%; text-align:right;">DO NO :</td>
                        <td style="width: 40%">
                            <input type="text" style="width:40%;margin-right:3px;" id="txtDONoSUDeliveryOrder" disabled="disabled" />
                            DO Type :
                            <select id="cboDOTypeSUDeliveryOrder" style="width:38%;" class="buyer"></select>
                        </td>
                        <td style="width:20%; text-align:right;"> Currency :</td>
                        <td style="width: 30%;">
                            <select id="cboCurrencySUDeliveryOrder" style="width:100%;"></select>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right;">Applicant :</td>
                        <td style="width: 40%">
                            <select id="cboBuyerSUDeliveryOrder" style="width:31%;"></select>
                            <input id="txtSearchByBuyerSUDeliveryOrder" class="buyer" type="text" style="width:44%" placeholder="Type & Press Enter" />
                            
                            <a id="btnClrBuyerSUDeliveryOrder" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-clear" plain="true">C</a>
                            <a id="btnPickBuyerSUDeliveryOrder" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="true">P</a>
                        </td>
                        <td style="width:20%; text-align:right;">Contact Personnel :</td>
                        <td style="width: 30%;">
                            <select id="cboContactPersonnelSUDeliveryOrder" style="width:100%;" class="buyer"></select>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right;">Deliver To :</td>
                        <td style="width: 40%">
                            <select id="cboDeliveryToSUDeliveryOrder" style="width:31%;"></select>
                            <input id="txtSearchByDeliveryToSUDeliveryOrder" type="text" style="width:44%;" placeholder="Type & Press Enter" />
                            
                            <a id="btnClrDeliveryToSUDeliveryOrder" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-clear" plain="true">C</a>
                            <a id="btnPickDeliveryToSUDeliveryOrder" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="true">P</a>
                            
                        </td>
                        <td style="width:20%; text-align:right;">Contact Info :</td>
                        <td style="width: 30%;">
                            <input id="txtContactInfoSUDeliveryOrder" type="text" style="width:98%;" class="buyer" disabled />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right;">Deliver Point :</td>
                        <td style="width: 40%">
                            <input id="txtDeliverPointSUDeliveryOrder" type="text" style="width:96%;" />
                        </td>
                        <td style="width:20%; text-align:right;">MKT Person :</td>
                        <td style="width: 30%;">
                            <select id="cboMKTPersonSUDeliveryOrder" style="width:100%;"></select>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right;">DO Date :</td>
                        <td style="width: 40%">
                            <input id="txtDODateSUDeliveryOrder" type="text" style="width:100px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            <label style="margin-left:35px;">Delivery Date :</label>
                            <input id="txtDeliveryDateSUDeliveryOrder" type="text" style="width:100px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                        <td style="width:20%; text-align:right;">LC No :</td>
                        <td style="width: 30%;">
                            <label id="lblLCNo" class="LCNoRelated" style="font-weight:100;"></label>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right;">Remarks :</td>
                        <td style="width: 90%" colspan="3">
                            <input id="txtRemarksSUDeliveryOrder" type="text" style="width:99%;" />
                        </td>
                    </tr>
                </table>
                <div style="margin:2px auto;">
                    <div style="float:right;">
                        <table id="tblSUDeliveryOrderDetails" title="Products/Item Description" class="easyui-datagrid" style="width: 960px;height:220px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarSUDeliveryOrderDetail" data-options="onClickRow: onClickRowSUDO"></table>
                        <label id="tdTotalCaption" class="lblTotals lblTotal" style="width: 268px;"> Total : </label>
                        <label id="lblTotalQty" class="lblTotals" style="width:120px;">0.00</label>
                        <label id="lblTotalQtyLBS" class="lblTotals" style="width:122px;">0.00</label>
                        <label id="lblCurrency" class="lblTotals" style="width:230px;"></label>
                        <label id="lblTotalValue" class="lblTotals" style="width:100px;">0.00</label>
                    </div>
                    <div id="toolbarSUDeliveryOrderDetail">
                        <input id="txtPINoSUDeliveryOrder" type="text" style="width:144px;" placeholder="Type PI No & Press Enter" />
                        
                        <a id="btnClearPINoSUDeliveryOrder" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-clear" plain="true">C</a>
                        <a id="btnPINoSUDeliveryOrder" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="true">P</a>
                        
                        <input id="btnDisplayAdvanceDOs" class="shortBtn" type="button" value="A.DO" />

                        <input id="txtProductNameSUDeliveryOrderDetail" type="text" style="width:196px;" class="productItemsSUDeliveryOrder detailFields" placeholder="Type Product Name & Press Enter" />
                        
                        <a id="btnClrProductSUDeliveryOrderDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-clear" plain="true">C</a>
                        <a id="btnPickProductSUDeliveryOrderDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="true">P</a>
                        

                        @*<a id="btnProductAddSUDeliveryOrderDetail" href="javascript:void(0)" class="easyui-linkbutton detailFields" iconcls="icon-add" plain="true">Add</a>*@
                        <a id="btnProductRemoveSUDeliveryOrderDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                        <a id="btnRefreshSUDeliveryOrderDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
                        <a id="btnPIProductsSUDeliveryOrderDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">PI Products</a>
                        @*<div style="float:right;">
                                Currency :
                                <select id="cboCurrencySUDeliveryOrder" style="width:100px;"></select>
                            </div>*@
                    </div>
                </div>
            </fieldset>
            <fieldset class="actionfieldsetstyle">
                <legend>Actions : </legend>
                <div class="OnlyForLC" style="float:left;">
                    <label style="font-weight: bold;">Delivery Orders : </label>
                    <select id="cboDOs"></select>
                </div>
                <a id="btnSaveAcceptReviseSUDeliveryOrder" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                <a id="btnSaveSUDeliveryOrder" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                <a id="btnBack" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-back" plain="true">Back</a>
            </fieldset>
        </div>
    </div>
</body>
</html>
<style type="text/css">
    .lblTotals {
        display: block;
        float: left;
        text-align: right;
        font-weight: bold;
        font-size: 12px;
    }
</style>
<script type="text/javascript">
    var _oTempDefaultObj = {
        Menuid : 0,
        ControllerName : "",
        ActionName : ""
    };

    //------New Variables
    var _nExportPIID=0;
    var _oExportPIDetails=[];
    var _oEPIDs=[];
    //

    var _sBaseAddress="";
    var _oSUDeliveryOrder=null;
    var _sBtnID="";
    var _oDOTypes=[];
    var _oContractorTypes=[];
    var _oMktPersons=[];
    var _oCurrencys=[];
    var _sQtyErrorMessage="";
    var _bIsSaveBtnClick=false;
    var _nExportLCID=0;
    var _oExportLC=null;

    var _oBuyers = [];
    var _oDeliveryTos = [];
    var _oProducts = [];
    var _oSelectedProduct = null;
    var _oExportPIs = [];
    var _oProduct = null;
    var _oProductsSUDODetail = [];
    var _oContactPersonnels = [];
    var _oExportPISUDO = null;
    var _isValidAmount = true;
    var _isSave = true;
    var _oAdvDoDetails=[];
    var _oSUDODetailsMainList=[];
    var _oSUDeliveryChallanDetails=[];
    var _oSUDeliveryPrograms=[];
    var _nExportPITotalAmount=0;
    var _oSUDeliveryOrderDetails=[];
    var _oTempObjForAlert = {
        Currency: "",
        DetailTotalAmount: "",
        TotalPIAmount: ""
    }

    $(document).ready(function () {
        _oTempDefaultObj.Menuid = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(MenuID));
        _oTempDefaultObj.ControllerName = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BackBtnControllerName));
        _oTempDefaultObj.ActionName = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BackBtnActionName));
        _sBtnID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BtnID));

        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oSUDeliveryOrder = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oSUDeliveryPrograms = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.SUDeliveryPrograms));

        _oDOTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DOTypes));
        _oContractorTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ContractorTypes));
        _oMktPersons = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.MktPersons));
        _oCurrencys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
        _oAdvDoDetails = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.AdvanceDODetails));

        _nExportLCID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ExportLCID));

        DisableEnableFields(_sBtnID);

        SetFieldsDefaultValue();
        LoadComboboxes();
        $("#btnDisplayAdvanceDOs").hide();

        $(".OnlyForLC").hide();

        if(_nExportLCID > 0)
        {
            ThisMenuFromExportLC();
            RefreshControllerFromLC();
        }
        else
        {
            if(_oSUDeliveryOrder.SUDeliveryOrderID > 0)
            {
                RefreshControl(_oSUDeliveryOrder);
            }

            if(_sBtnID == "btnAcceptReviseSUDeliveryOrder")
            {
                _oSUDeliveryChallanDetails = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.SUDeliveryChallanDetails));
            }
        }

        ExportPIFieldHideShow();
    });

    $("#cboDOs").change(function(){
        
        var nSUDOID = $(this).val();
        if(nSUDOID > 0)
        {
            var oSUDeliveryOrder ={
                SUDeliveryOrderID : nSUDOID
            };
            var obj =
            {
                BaseAddress: _sBaseAddress,
                Object: oSUDeliveryOrder,
                ControllerName: "SUDeliveryOrder",
                ActionName: "GetSUDeliveryOrder",
                IsWinClose: false
            };

            $.icsDataGet(obj, function (response) {
                
                if (response.status && response.obj != null) {
                    if (response.obj.SUDeliveryOrderID > 0) {
                        RefreshControl(response.obj);
                    }
                    else { alert(response.obj.ErrorMessage); }
                }
            });
        }
    });

    function RefreshControllerFromLC()
    {
        $("#cboCurrencyFDO").val(2);
        if(_oTempDefaultObj.ControllerName == "ExportLC")
        {
            if(_nExportLCID > 0)
            {
                $("#lblLCNo").text(_oExportLC.ExportLCNo);
                $("#cboDOTypeSUDeliveryOrder").val(1);
                $("#cboCurrencySUDeliveryOrder").val(_oExportLC.CurrencyID);

                _oSUDeliveryOrder.BuyerID = _oExportLC.ApplicantID;
                if(_oSUDeliveryOrder.BuyerID > 0)
                {
                    $("#txtSearchByBuyerSUDeliveryOrder").val(_oExportLC.ApplicantName);
                    $("#txtSearchByBuyerSUDeliveryOrder").addClass("fontColorOfPickItem");
                    var oContractor = {
                        ContractorID : _oExportLC.ApplicantID,
                    };
                    GetDeliveryToInfos(oContractor, true);
                }
            }
        }
    }

    function GetDeliveryToInfos(oContractor, isDeliveryTo)
    {
        $.icsDataGet({
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: 'SUDeliveryOrder',
            ActionName: 'GetContractorAddress',
            IsWinClose: false
        }, function (response) {
            if (response.status) {
                if(_oSUDeliveryOrder.DeliveryTo == 0)
                {
                    _oSUDeliveryOrder.DeliveryTo = oContractor.ContractorID;
                    if(!isDeliveryTo)
                    {
                        $('#txtSearchByDeliveryToSUDeliveryOrder').val(oContractor.Name);
                        $("#txtSearchByDeliveryToSUDeliveryOrder").addClass("fontColorOfPickItem");
                        $("#cboDeliveryToSUDeliveryOrder").val($("#cboBuyerSUDeliveryOrder").val());
                        $("#txtDeliverPointSUDeliveryOrder").val(oContractor.Address);
                    }
                    else{
                        oContractor = response.obj;
                        $('#txtSearchByDeliveryToSUDeliveryOrder').val($("#txtSearchByBuyerSUDeliveryOrder").val());
                        $("#txtSearchByDeliveryToSUDeliveryOrder").addClass("fontColorOfPickItem");
                        $("#cboDeliveryToSUDeliveryOrder").val($("#cboBuyerSUDeliveryOrder").val());
                        $("#txtDeliverPointSUDeliveryOrder").val(oContractor.Address);
                    }
                }
                _oContactPersonnels = response.obj.ContactPersonnels;
                $("#cboContactPersonnelSUDeliveryOrder").icsLoadCombo({
                    List: _oContactPersonnels,
                    OptionValue: "ContactPersonnelID",
                    DisplayText: "Name",
                    InitialValue: "No Select one option"
                });
                GetContactPersonnelInfo(parseInt($("#cboContactPersonnelSUDeliveryOrder").val()));
            }
        });
    }


    function ThisMenuFromExportLC()
    {
        _oExportLC = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ExportLC));
        var oSUDeliveryOrders = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.SUDeliveryOrders));

        if(oSUDeliveryOrders.length>0)
        {
            $(".OnlyForLC").show();

            $("#cboDOs").icsLoadCombo({
                List: oSUDeliveryOrders,
                OptionValue: "SUDeliveryOrderID",
                DisplayText: "DONo"
            });
        }
    }

    $("#txtPINoSUDeliveryOrder").keydown(function(e){
        if(e.keyCode === 13)
        {
            LoadExportPI();
        }
    });

    $("#btnDisplayAdvanceDOs").click(function(){
        if(_oAdvDoDetails.length > 0)
        {
            var oSelectedSUDO = $("#tblSUDeliveryOrderDetails").datagrid("getSelected");
            if(oSelectedSUDO == null || oSelectedSUDO.SUDeliveryOrderDetailID <= 0)
            {
                alert("Please select an Item from list.");
                return false;
            }
            var oTempList = [];
            for(var i=0;i<_oAdvDoDetails.length;i++)
            {
                if(_oAdvDoDetails[i].ExportPIID == oSelectedSUDO.ExportPIID)
                {
                    oTempList.push(_oAdvDoDetails[i]);
                }
            }

            if(oTempList.length > 0)
            {
                $("#btnDisplayAdvanceDOs").show();
                DynamicRefreshList(oTempList,"tblSUDeliveryOrderDetailsPicker");
                $("#winSUDeliveryOrderDetailsPicker").icsWindow("open","Advance DO List");
                $("#divSUDeliveryOrderDetailsPicker").focus();

                var nTotalAmount=0;
                for(var i=0;i<oTempList.length;i++)
                {
                    if(oTempList[i].ProductID == oSelectedSUDO.ProductID){
                        $('#tblSUDeliveryOrderDetailsPicker').datagrid('selectRow', i);
                    }
                    nTotalAmount = parseFloat(nTotalAmount) + parseFloat(oTempList[i].Qty * oTempList[i].UnitPrice);
                }
                $("#lblTotalSUDOPickerAmount").text(formatPrice(nTotalAmount,2));

            }else{
                $("#btnDisplayAdvanceDOs").hide();
            }
        }
        else{
            alert("Sorry no list found.");
        }
    });

    $("#btnCloseSUDeliveryOrderDetailsPicker").click(function(){
        $("#winSUDeliveryOrderDetailsPicker").icsWindow("close");
    });

    $("#btnLoadPI").click(function(){
        LoadExportPIInPicker(0,2)
    });

    $("#btnPINoSUDeliveryOrder").click(function () {
        LoadExportPI();
    });

    $("#btnClearPINoSUDeliveryOrder").click(function () {
        _nExportPIID=0;
        $("#txtPINoSUDeliveryOrder").val("");
        $("#txtPINoSUDeliveryOrder").removeClass("errorFieldBorder");
        $("#txtPINoSUDeliveryOrder").removeClass("fontColorOfPickItem");
        _oEPIDs=[];
    });

    $("#btnSaveSUDeliveryOrder").click(function () {
        if (!ValidateInputSUDeliveryOrder()) return;
        _bIsSaveBtnClick=true;
        var oSUDeliveryOrder = RefreshObjectSUDeliveryOrder();
        if(!QtyValidations()) return false;
        //if (!_isValidAmount) {
        //    alert("Sorry, Total PI Amount is " + _oTempObjForAlert.Currency + " " + _oTempObjForAlert.DetailTotalAmount + " But Your Given Product(s) Total Amount is " + _oTempObjForAlert.TotalPIAmount);
        //    return false;
        //}
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oSUDeliveryOrder,
            ObjectId: oSUDeliveryOrder.SUDeliveryOrderID,
            ControllerName: "SUDeliveryOrder",
            ActionName: "SaveSUDeliveryOrder",
            TableId: "",
            IsWinClose: true
        };
        $.icsSave(obj, function (response) {
            if (response.status && response.obj != null) {
                if (response.obj.SUDeliveryOrderID > 0) {
                    _bIsSaveBtnClick=false;
                    sessionStorage.setItem("SUDeliveryOrder", JSON.stringify(response.obj));
                    window.location.href = _sBaseAddress + "/" + _oTempDefaultObj.ControllerName + "/" + _oTempDefaultObj.ActionName + "?menuid=" + _oTempDefaultObj.Menuid;
                }
            }
            _bIsSaveBtnClick=false;
        });
    });

    $("#btnSaveAcceptReviseSUDeliveryOrder").click(function () {
        if (!ValidateInputSUDeliveryOrder(false)) return;
        var oSUDeliveryOrder = RefreshObjectSUDeliveryOrder();
        var oSUDeliveryOrderDetails = $('#tblSUDeliveryOrderDetails').datagrid('getRows');

        if (oSUDeliveryOrderDetails.length == 0) {
            alert("Please add minimum one product.");
            return false;
        }
        else {
            for (var i = 0; i < oSUDeliveryOrderDetails.length; i++) {
                if (oSUDeliveryOrderDetails[i].Qty == 0 || oSUDeliveryOrderDetails[i].UnitPrice == 0) {
                    alert("Qty and Unit Price of any product cannot be zero.");
                    return false;
                }
            }
        }
        oSUDeliveryOrder.SUDeliveryOrderDetails = oSUDeliveryOrderDetails;
        $.ajax({
            type: "POST",
            url: _sBaseAddress + "/SUDeliveryOrder/AcceptDORevise",
            traditional: true,
            data: JSON.stringify(oSUDeliveryOrder),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oSUDeliveryOrder = jQuery.parseJSON(data);
                if (oSUDeliveryOrder != null) {
                    if (oSUDeliveryOrder.SUDeliveryOrderID > 0) {
                        alert("Accept Revise Successful.");
                        sessionStorage.setItem("SUDeliveryOrder", JSON.stringify(oSUDeliveryOrder));
                        window.location.href = _sBaseAddress + "/" + _oTempDefaultObj.ControllerName + "/" + _oTempDefaultObj.ActionName + "?menuid=" + _oTempDefaultObj.Menuid;
                    }
                    else {
                        alert("Error Found.");
                        return false;
                    }
                }
                else {
                    alert("Not found.");
                    return false;
                }
            }
        });
    });

    $('#cboDOTypeSUDeliveryOrder').change(function (e) {
        var oSUDODs = $('#tblSUDeliveryOrderDetails').datagrid('getRows');
        if (parseInt($('#cboDOTypeSUDeliveryOrder').val()) === 6) {
            GenerateTableColumnsSUDODForSampleDO();
            $('#TotalSummerySUDOD').hide();
            $('#TotalSummerySUDODForSampleDO').show();
        }
        else {
            GenerateTableColumnsSUDOD();
            $('#TotalSummerySUDOD').show();
            $('#TotalSummerySUDODForSampleDO').hide();
        }

        DynamicRefreshList(oSUDODs, "tblSUDeliveryOrderDetails");
        DynamicRefreshList(_oSUDODetailsMainList,"tblSUDeliveryOrderDetails");
        RefreshTotalSummery();
        ExportPIFieldHideShow();
    });

    $("#cboContactPersonnelSUDeliveryOrder").change(function () {
        var nBPCID = $(this).val();
        GetContactPersonnelInfo(nBPCID);
    });

    $("#btnBack").click(function () {
        window.location.href = _sBaseAddress + "/" + _oTempDefaultObj.ControllerName + "/" + _oTempDefaultObj.ActionName + "?menuid=" + _oTempDefaultObj.Menuid;
    });

    $("#btnProductAddSUDeliveryOrderDetail").click(function () {
        if(_nExportPIID == 0){
            alert("Please select a PI.");
            $("#txtPINoSUDeliveryOrder").focus();
            $("#txtPINoSUDeliveryOrder").addClass("errorFieldBorder");
            return false;
        }else{
            $("#txtPINoSUDeliveryOrder").removeClass("errorFieldBorder");
        }



        if(_oProduct == null)
        {
            alert("Please Pick a Product or Pick PI Product.");
            return false;
        }
    });

    $("#btnProductRemoveSUDeliveryOrderDetail").click(function () {
        var oSUDeliveryOrderDetail = $("#tblSUDeliveryOrderDetails").datagrid("getSelected");
        if(_oTempDefaultObj.ControllerName == "SUDeliveryOrder"){
            if (oSUDeliveryOrderDetail == null || oSUDeliveryOrderDetail.SUDeliveryOrderDetailID <= 0) {
                alert("Invalid Field!!! Please Select a Valid Field!");
                return false;
            }
        }else{
            if (oSUDeliveryOrderDetail == null) {
                alert("Please Select an Item From List!");
                return false;
            }
        }
        if (!confirm("Confirm to Delete?")) return false;

        var SelectedRowIndex = $('#tblSUDeliveryOrderDetails').datagrid('getRowIndex', oSUDeliveryOrderDetail);
        if (_isSave) {
            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/SUDeliveryOrder/DeleteSUDeliveryOrderDetail",
                traditional: true,
                data: JSON.stringify(oSUDeliveryOrderDetail),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var sFeedBackMessage = jQuery.parseJSON(data);
                    if (sFeedBackMessage == "Deleted") {
                        $('#tblSUDeliveryOrderDetails').datagrid('deleteRow', SelectedRowIndex);
                        DesabledEnableDOType();
                        RefreshTotalSummery();
                        BuyerEnableDisable();
                        ExportPIFieldHideShow();
                        RemoveItemFromAdvDOList(oSUDeliveryOrderDetail);
                    }
                    else {
                        alert(sFeedBackMessage);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        } else {
            $('#tblSUDeliveryOrderDetails').datagrid('deleteRow', SelectedRowIndex);
            RefreshTotalSummery();
        }
    });

    $("#btnRefreshSUDeliveryOrderDetail").click(function (e) {

        var oSUDeliveryOrderDetail = $('#tblSUDeliveryOrderDetails').datagrid('getSelected');
        var nRowIndex = $("#tblSUDeliveryOrderDetails").datagrid("getRowIndex", oSUDeliveryOrderDetail);
        editIndex = nRowIndex;
        //editIndex = undefined;
        endEditing();
        var oSUDOs = $('#tblSUDeliveryOrderDetails').datagrid('getRows');
        DynamicRefreshList(oSUDOs, "tblSUDeliveryOrderDetails");
        RefreshTotalSummery();
    });

    $("#cboCurrencySUDeliveryOrder").change(function () {
        var sCurrency = $("#cboCurrencySUDeliveryOrder option:selected").text();
        $("#lblCurrency").text(sCurrency);
    });

    $("#winPINo").on("keydown", function (e) {
        var oExportPI = $('#tblPINosPicker').datagrid('getSelected');
        var nIndex = $('#tblPINosPicker').datagrid('getRowIndex', oExportPI);
        if (e.which == 38)//up arrow=38
        {
            if (nIndex <= 0) {
                $('#tblPINosPicker').datagrid('selectRow', 0);
            }
            else {
                $('#tblPINosPicker').datagrid('selectRow', nIndex - 1);
            }
            $('#txtPINoSUDeliveryOrder').blur();
        }
        if (e.which == 40)//down arrow=40
        {
            var oCurrentList = $('#tblPINosPicker').datagrid('getRows');
            if (nIndex >= oCurrentList.length - 1) {
                $('#tblPINosPicker').datagrid('selectRow', oCurrentList.length - 1);
            }
            else {
                $('#tblPINosPicker').datagrid('selectRow', nIndex + 1);
            }
            $('#txtPINoSUDeliveryOrder').blur();
        }
        if (e.which == 13)//enter=13
        {
            if (!SelectAnExportPI()) return false;
        }
    });

    $("#btnOkPINoPicker").click(function () {
        if (!SelectAnExportPI()) return false;
    });

    $("#btnClosePINoPicker").click(function () {
        $("#winPINo").icsWindow("close");
    });

    $("#txtSearchByPINoNamePicker").keyup(function (e) {
        var obj = {
            Event: e,
            SearchProperty: "PINo",
            GlobalObjectList: _oExportPIs,
            TableId: "tblPINosPicker"
        };
        $('#txtSearchByPINoNamePicker').icsSearchByText(obj);
    });

    $("#btnRefreshPINoPicker").click(function () {
        if (parseInt($("#cboDOTypeSUDeliveryOrder").val()) == 0) {
            alert("Please select a DO Type.");
            $("#cboDOTypeSUDeliveryOrder").addClass("errorFieldBorder");
            $("#cboDOTypeSUDeliveryOrder").focus();
            return false;
        } else {
            $("#cboDOTypeSUDeliveryOrder").removeClass("errorFieldBorder");
        }
        if (_oSUDeliveryOrder.BuyerID <= 0) {
            alert("Please select a buyer.");
            $("#txtSearchByBuyerSUDeliveryOrder").addClass("errorFieldBorder");
            $("#txtSearchByBuyerSUDeliveryOrder").focus();
            return false;
        }
        $("#txtSearchByBuyerSUDeliveryOrder").removeClass("errorFieldBorder");

        var nDOType = parseInt($("#cboDOTypeSUDeliveryOrder").val());
        var nPaymentTypeInInt = 0;
        if (nDOType === 2) {
            nPaymentTypeInInt = 2;
        }

        var oExportPI = {
            ContractorID: parseInt(_oSUDeliveryOrder.BuyerID),
            PaymentTypeInInt: nPaymentTypeInInt
        }


        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/ExportPI/GetsByContractorForSU",
            traditional: true,
            data: JSON.stringify(oExportPI),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oExportPIs = jQuery.parseJSON(data);
                if (oExportPIs.length > 0) {
                    _oExportPIs = oExportPIs;
                    DynamicRefreshList(oExportPIs, "tblPINosPicker");
                    $("#winPINo").icsWindow("Open", "Export PI of Buyer " + $("#txtSearchByBuyerSUDeliveryOrder").val());
                    $("#divPINoPicker").focus();
                }
                else {
                    alert(oExportPIs[0].ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $("#cboDOTypeSUDeliveryOrder").focusout(function(e){
        $("#cboDOTypeSUDeliveryOrder").removeClass("ComboFocusBorderClass");
    });

    $("#winProductPicker").on("keydown", function (e) {
        var oExportPIDetail = $('#tblProductsPicker').datagrid('getSelected');
        var nIndex = $('#tblProductsPicker').datagrid('getRowIndex', oExportPIDetail);
        if (e.which == 38)//up arrow=38
        {
            if (nIndex <= 0) {
                $('#tblProductsPicker').datagrid('selectRow', 0);
            }
            else {
                $('#tblProductsPicker').datagrid('selectRow', nIndex - 1);
            }
            $('#txtSearchByProductNamePicker').blur();
        }
        if (e.which == 40)//down arrow=40
        {
            var oCurrentList = $('#tblProductsPicker').datagrid('getRows');
            if (nIndex >= oCurrentList.length - 1) {
                $('#tblProductsPicker').datagrid('selectRow', oCurrentList.length - 1);
            }
            else {
                $('#tblProductsPicker').datagrid('selectRow', nIndex + 1);
            }
            $('#txtSearchByProductNamePicker').blur();
        }
        if (e.which == 13)//enter=13
        {
            SelectSingleProduct();
        }
    });

    $("#txtProductNameSUDeliveryOrderDetail").keydown(function (e) {
        if (e.keyCode === 13) // Enter Press
        {
            PickProductInSUDODetail();
        }
        else if (e.keyCode === 08) {
            $("#txtProductNameSUDeliveryOrderDetail").removeClass("fontColorOfPickItem");
            _oProduct = null;
        }
    });

    $("#btnClrProductSUDeliveryOrderDetail").click(function () {
        $("#txtProductNameSUDeliveryOrderDetail").removeClass("fontColorOfPickItem");
        $("#txtProductNameSUDeliveryOrderDetail").val("");
        _oProduct = null;
    });

    $("#btnOkProductPicker").click(function () {
        SelectSingleProduct();
    });

    $("#btnPIProductsSUDeliveryOrderDetail").click(function () {

        if (_nExportPIID <= 0) {
            alert("Please select a PI.");
            $("#txtPINoSUDeliveryOrder").focus();
            $("#txtPINoSUDeliveryOrder").addClass("errorFieldBorder");
            return false;
        }
        else {
            $("#btnPINoSUDeliveryOrder").removeClass("errorFieldBorder");
        }
        endEditing();
        var oExportPI = {
            ExportPIID: parseInt(_nExportPIID),
            DOType:$("#cboDOTypeSUDeliveryOrder").val()
        };

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oExportPI,
            ControllerName: "ExportPI",
            ActionName: "GetsExportPIDetailForSU",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ExportPIDetailID > 0) {
                    var oExportPIDetails = response.objs;
                    DynamicRefreshListForMultipleSelection(oExportPIDetails, "tblExportPIProductsPicker");
                    $("#winExportPIProducts").icsWindow("Open", "Product");
                    $("#divExportPIProductsPicker").focus();
                }
                else
                {
                    alert(response.objs[0].ErrorMessage);
                }
            }
            else
            {
                alert('No Data Found.');
            }
        });
    });

    $("#btnCloseExportPIProductsPicker").click(function () {
        $("#winExportPIProducts").icsWindow("close");
    });

    $("#btnOkExportPIProductsPicker").click(function () {

        if(_nExportPIID == 0){
            alert("Please select a valid PI.");
            $("#txtPINoSUDeliveryOrder").focus();
            $("#txtPINoSUDeliveryOrder").addClass("errorFieldBorder");
            return false;
        }else{
            $("#txtPINoSUDeliveryOrder").removeClass("errorFieldBorder");
        }

        var oExportDetails = $("#tblExportPIProductsPicker").datagrid("getChecked");
        if (oExportDetails.length == 0) {
            alert("Please select minimum one item from list.");
            return false;
        }
        $("#winExportPIProducts").icsWindow("close");

        var oSUDODs=[];
        for(var i=0;i<oExportDetails.length;i++)
        {
            var oExportPIDetail = oExportDetails[i];
            var oSUDOD={
                SUDeliveryOrderDetailID         : 0,
                SUDeliveryOrderID               : (_oSUDeliveryOrder == null ? 0 : _oSUDeliveryOrder.SUDeliveryOrderID),
                ProductID                       : oExportPIDetail.ProductID,
                ProductName                     : oExportPIDetail.ProductName,
                ProductCode                     : oExportPIDetail.ProductCode,
                ExportPIDetailID                : oExportPIDetail.ExportPIDetailID,
                ExportPIID                      : parseInt(_nExportPIID),
                MUnitID                         : oExportPIDetail.MUnitID,
                Qty                             : oExportPIDetail.Qty,
                QtyInLbs                        : GetLBS(oExportPIDetail.Qty,2),
                UnitPrice                       : oExportPIDetail.UnitPrice,
                UnitPriceInLbs                  : GetLBS(oExportPIDetail.UnitPrice,2),
                Amount                          : oExportPIDetail.Amount,
                AmountSt                        : formatPrice(oExportPIDetail.Amount),
                NumberOfCone                    : 0,
                QtyPerCone                      : 0,
                RequiredLotNo                   : "",
                Remarks                         : "",
                IsCheckQty                      : true,
                MaxQty                          : oExportPIDetail.MaxQty,
                ExportPiTotalAmount             : oExportPIDetail.ExportPiTotalAmount
            };
            oSUDODs.push(oSUDOD);
        }
        AddSUDODetailsinGrid(oSUDODs);
    });

    $("#txtSearchByBuyerSUDeliveryOrder").keydown(function(e){
        if(e.keyCode === 13)
        {
            PickBuyerSUDeliveryOrder();
        }
        else if(e.keyCode === 8)
        {
            ClearApplicantInfoSUDO();
        }
    });

    $("#btnPickBuyerSUDeliveryOrder").click(function(){
        PickBuyerSUDeliveryOrder();
    });

    $("#btnClrBuyerSUDeliveryOrder").click(function(){
        $("#txtSearchByBuyerSUDeliveryOrder").val("");
        ClearApplicantInfoSUDO();
    });

    $("#txtSearchByDeliveryToSUDeliveryOrder").keydown(function (e) {
        if (e.keyCode === 13)
        {
            PickDeliveryToSUDeliveryOrder();
        }
        else if (e.keyCode === 08)
        {
            ClearDeliveryToInfo();
        }
    });

    $("#btnClrDeliveryToSUDeliveryOrder").click(function () {
        $("#txtSearchByDeliveryToSUDeliveryOrder").val("");
        ClearDeliveryToInfo();
    });

    $("#btnPickDeliveryToSUDeliveryOrder").click(function () {
        PickDeliveryToSUDeliveryOrder();
    });

    $("#txtSearchByProductNamePicker").keydown(function (e) {
        var obj = {
            Event: e,
            SearchProperty: "ProductName",
            GlobalObjectList: _oProductsSUDODetail,
            TableId: "tblProductsPicker"
        };
        $('#txtSearchByProductNamePicker').icsSearchByText(obj);
    });

    $("#btnCloseProductPicker").click(function () {
        DynamicRefreshList([], "tblProductsPicker");
        $("#winProductPicker input").val("");
        $("#winProductPicker").icsWindow("close");
        _oProductsSUDODetail = [];
    });

    $("#btnPickProductSUDeliveryOrderDetail").click(function () {
        PickProductInSUDODetail();
    });

    function HideShowAdvDOButton()
    {
        var oSelectedSUDO = $("#tblSUDeliveryOrderDetails").datagrid("getSelected");
        var bFalg = false;
        if(oSelectedSUDO.ExportPIID > 0)
        {
            if(_oAdvDoDetails.length > 0)
            {
                for(var i=0;i<_oAdvDoDetails.length;i++)
                {
                    if(_oAdvDoDetails[i].ExportPIID > 0)
                    {
                        if(_oAdvDoDetails[i].ExportPIID == oSelectedSUDO.ExportPIID)// && _oAdvDoDetails[i].ProductID == oSelectedSUDO.ProductID
                        {
                            bFalg = true;
                            $("#btnDisplayAdvanceDOs").show();
                            break;
                        }
                    }
                }

            }
        }
        if(!bFalg)
        {
            $("#btnDisplayAdvanceDOs").hide();
        }
    }

    function QtyValidations()
    {
        if($.trim(_sQtyErrorMessage) != "")
        {
            return false;
        }
        else
        {
            _sQtyErrorMessage="";
            var oSUDeliveryOrderDetails = $("#tblSUDeliveryOrderDetails").datagrid("getRows");
            for(var i=0;i<oSUDeliveryOrderDetails.length;i++)
            {
                _sQtyErrorMessage = CheckGridValidation(oSUDeliveryOrderDetails[i],i);
                if($.trim(_sQtyErrorMessage) != "")
                {
                    alert("At Row ("+(i+1)+") : " + _sQtyErrorMessage);
                    _sQtyErrorMessage="";
                    return false;
                }
            }
        }
        if($.trim(_sQtyErrorMessage) != "")
        {
            return false;
        }
        return true;
    }

    function IsInAdvDOList(oSUDOD)
    {
        var oGetRows = $("#tblSUDeliveryOrderDetails").datagrid("getRows");
        for(var j=0;j<oGetRows.length;j++)
        {
            if(oGetRows[j].Product == oSUDOD.Product)
            {
                if(oGetRows[j].ExportPIID == oSUDOD.ExportPIID)
                {
                    return true;
                }
            }
        }
        return false;
    }

    function CheckPITotalAmount()
    {
        if(_nExportPIID > 0)
        {
            if(CheckDOType())
            {
                var oGetRows = $("#tblSUDeliveryOrderDetails").datagrid("getRows");
                var nTotalPIAmount = 0;
                for(var i=0;i<oGetRows.length;i++)
                {
                    if(oGetRows[i].ExportPIID == _nExportPIID)
                    {
                        nTotalPIAmount = parseFloat(oGetRows[i].Amount) + parseFloat(nTotalPIAmount);
                    }
                }
                if(parseFloat(nTotalPIAmount) >= _nExportPITotalAmount)
                {
                    alert("Maximum Amount of Selected Export PI is " + formatPrice(_nExportPITotalAmount) + " which is already used.");
                    return false;
                }
            }
        }
        return true;
    }


    function AddSUDODetailsinGrid(oSUDODs)
    {
        
        var sCurrentListProductIDs = GetProductIDs();
        var oSUDODetails=[];
        for(var i=0;i<oSUDODs.length;i++)
        {
            var oSUDOD = oSUDODs[i];
            var nIsInList = sCurrentListProductIDs.indexOf(oSUDODs[i].ProductID);

            $('#tblSUDeliveryOrderDetails').datagrid('selectRow', nIsInList);
            var oSUDOD1 = $('#tblSUDeliveryOrderDetails').datagrid('getSelected');
            if(oSUDOD1 !=null && oSUDOD1.ExportPIID == oSUDOD.ExportPIID)
            {
                if(nIsInList == -1)
                {
                    oSUDODetails.push(oSUDOD);
                }
            }
            else
            {
                oSUDODetails.push(oSUDOD);
            }
            $('#tblSUDeliveryOrderDetails').datagrid('selectRow', -1);
        }

        if(oSUDODetails.length > 0)
        {
            if(_oSUDeliveryOrder == null || _oSUDeliveryOrder.SUDeliveryOrderID <= 0)
            {
                oSUDODetails[0].SUDeliveryOrder = RefreshObjectSUDeliveryOrder();
            }

            var oSUDeliveryOrderDetail = {
                SUDeliveryOrderDetailID: 0,
                SUDeliveryOrderDetails : oSUDODetails
            };

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oSUDeliveryOrderDetail,
                ObjectId: oSUDeliveryOrderDetail.SUDeliveryOrderDetailID,
                ControllerName: "SUDeliveryOrder",
                ActionName: "SaveSUDeliveryOrderDetail",
                TableId: "",
                IsWinClose: false,
                Message: ""
            };

            $.icsSave(obj, function (response) {
                if (response.status && response.obj != null) {
                    var oSUDODetail = response.obj;
                    if($.trim(oSUDODetail.ErrorMessage) == "")
                    {
                        if($("#cboDOTypeSUDeliveryOrder").val() == 1) //Export DO
                        {
                            var oAdvDOs = oSUDODetail.AdvDODetails;
                            for(var i=0;i<oAdvDOs.length;i++)
                            {
                                if(!IsInAdvDOList(oAdvDOs[i]))
                                {
                                    _oAdvDoDetails.push(oAdvDOs[i]);
                                }
                            }
                        }

                        var oTempSUDODs = oSUDODetail.SUDeliveryOrderDetails;
                        for(var k=0;k<oTempSUDODs.length;k++)
                        {
                            if(_oSUDeliveryOrder == null || _oSUDeliveryOrder.SUDeliveryOrderID <= 0)
                            {
                                if(k == 0)
                                {
                                    _oSUDeliveryOrder = oTempSUDODs[k].SUDeliveryOrder;
                                    $("#txtDONoSUDeliveryOrder").val(oTempSUDODs[k].SUDeliveryOrder.DONo);
                                }
                            }
                            $("#tblSUDeliveryOrderDetails").datagrid("appendRow", oTempSUDODs[k]);
                        }
                        var nTotalLength = $("#tblSUDeliveryOrderDetails").datagrid("getRows").length;
                        $("#tblSUDeliveryOrderDetails").datagrid("selectRow", nTotalLength-1);

                        $("#txtPINoSUDeliveryOrder").focus();
                        DesabledEnableDOType();
                        RefreshTotalSummery();
                        ClearExportPIInfo();

                        if($("#cboDOTypeSUDeliveryOrder").val() == 1) //Export DO
                        {
                            HideShowAdvDOButton();
                        }
                    }
                }
                BuyerEnableDisable();
            });
        }
    }

    function DesabledEnableDOType()
    {
        var oGetRows = $("#tblSUDeliveryOrderDetails").datagrid("getRows");
        if(oGetRows.length>0)
        {
            $("#cboDOTypeSUDeliveryOrder").prop("disabled",true);
        }else{
            $("#cboDOTypeSUDeliveryOrder").prop("disabled",false);
        }
    }

    function GetProductIDs()
    {
        var IDs = [];
        var oGetRows = $("#tblSUDeliveryOrderDetails").datagrid("getRows");
        for(var j=0;j < oGetRows.length;j++)
        {
            IDs.push(oGetRows[j].ProductID);
        }
        return IDs;
    }

    function RemoveItemFromAdvDOList(oSUDeliveryOrderDetail)
    {
        $("#btnDisplayAdvanceDOs").hide();
        if(oSUDeliveryOrderDetail != null)
        {

            if($("#cboDOTypeSUDeliveryOrder").val() == 1) //ExportDO
            {
                var oGetRows = $("#tblSUDeliveryOrderDetails").datagrid("getRows");
                var bIsDeleteAllPiProduct=true;

                for(var i=0;i<oGetRows.length;i++)
                {
                    if(oGetRows[i].ExportPIID == oSUDeliveryOrderDetail.ExportPIID)
                    {
                        if(oGetRows[i].ProductID != oSUDeliveryOrderDetail.ProductID)
                        {
                            bIsDeleteAllPiProduct = false;
                            break;
                        }
                    }
                }

                if(bIsDeleteAllPiProduct)
                {
                    var IndexList=[];

                    for(var i=0;i<_oAdvDoDetails.length;i++)
                    {
                        if(_oAdvDoDetails[i].ExportPIID == oSUDeliveryOrderDetail.ExportPIID)
                        {
                            IndexList.push(_oAdvDoDetails[i].SUDeliveryOrderDetailID);
                        }
                    }

                    if(bIsDeleteAllPiProduct)
                    {

                        for(var j=0;j<IndexList.length;j++)
                        {
                            RemoveByAttr(_oAdvDoDetails, 'SUDeliveryOrderDetailID', IndexList[j]);
                            //_oAdvDoDetails.splice(IndexList[i],1);
                        }
                    }
                }
            }
        }
    }

    function RemoveByAttr(arr, attr, value){
        var i = arr.length;
        while(i--){
            if( arr[i] && arr[i].hasOwnProperty(attr) && (arguments.length > 2 && arr[i][attr] === value )){
                arr.splice(i,1);
            }
        }
        return arr;
    }

    function SelectSingleProduct()
    {
        var oProduct = $("#tblProductsPicker").icsGetSelectedItem();
        if (oProduct != null && oProduct.ProductID > 0) {
            $("#txtProductNameSUDeliveryOrderDetail").val(oProduct.ProductName);
            $("#txtProductNameSUDeliveryOrderDetail").addClass("fontColorOfPickItem");
            _oProduct = oProduct;

            var oSUDODs=[];
            var oSUDOD={
                SUDeliveryOrderDetailID         : 0,
                SUDeliveryOrderID               : (_oSUDeliveryOrder == null ? 0 : _oSUDeliveryOrder.SUDeliveryOrderID),
                ProductID                       : oProduct.ProductID,
                ProductName                     : oProduct.ProductName,
                ProductCode                     : oProduct.ProductCode,
                ExportPIDetailID                : 0,
                ExportPIID                      : parseInt(_nExportPIID),
                MUnitID                         : oProduct.MeasurementUnitID,
                Qty                             : 0,
                QtyInLbs                        : GetLBS(0,2),
                UnitPrice                       : 0,
                UnitPriceInLbs                  : GetLBS(0,2),
                Amount                          : 0,
                AmountSt                        : formatPrice(0),
                NumberOfCone                    : 0,
                QtyPerCone                      : 0,
                RequiredLotNo                   : "",
                Remarks                         : "",
                IsCheckQty                      : false
            };


            if(CheckDOType())
            {
                for(var i=0;i<_oEPIDs.length;i++)
                {
                    if(_oEPIDs[i].ExportPIID == oSUDOD.ExportPIID)
                    {
                        if(_oEPIDs[i].ProductID == oSUDOD.ProductID)
                        {
                            var oEPID = _oEPIDs[i];
                            oSUDOD.Qty = oEPID.Qty;
                            oSUDOD.QtyInLbs = GetLBS(oEPID.Qty,2);
                            oSUDOD.UnitPrice = oEPID.UnitPrice;
                            oSUDOD.UnitPriceInLbs = GetLBS(oEPID.UnitPrice);
                            oSUDOD.Amount = parseFloat(oEPID.Qty*oEPID.UnitPrice);
                            oSUDOD.AmountSt = formatPrice(parseFloat(oEPID.Qty*oEPID.UnitPrice));
                        }
                    }
                }
            }
            oSUDODs.push(oSUDOD);
            AddSUDODetailsinGrid(oSUDODs);
            $("#txtProductNameSUDeliveryOrderDetail").val("");
            $("#txtProductNameSUDeliveryOrderDetail").removeClass("fontColorOfPickItem");
            $("#txtProductNameSUDeliveryOrderDetail").focus();
        }
    }

    function LoadExportPI()
    {
        if (parseInt($("#cboDOTypeSUDeliveryOrder").val()) == 0) {
            alert("Please select a DO Type.");
            $("#cboDOTypeSUDeliveryOrder").addClass("errorFieldBorder");
            $("#cboDOTypeSUDeliveryOrder").focus();
            return false;
        } else {
            $("#cboDOTypeSUDeliveryOrder").removeClass("errorFieldBorder");
        }

        if(_oSUDeliveryOrder.BuyerID == 0)
        {
            alert("Please select buyer.");
            $("#txtSearchByBuyerSUDeliveryOrder").addClass("errorFieldBorder");
            $("#txtSearchByBuyerSUDeliveryOrder").focus();
            return false;
        } else {
            $("#txtSearchByBuyerSUDeliveryOrder").removeClass("errorFieldBorder");
        }

        //if($("#cboMKTPersonSUDeliveryOrder").val() == 0)
        //{
        //    alert("Please select MKT person.");
        //    $("#cboMKTPersonSUDeliveryOrder").addClass("errorFieldBorder");
        //    $("#cboMKTPersonSUDeliveryOrder").focus();
        //    return false;
        //} else {
        //    $("#cboMKTPersonSUDeliveryOrder").removeClass("errorFieldBorder");
        //}


        var nDOT=parseInt($("#cboDOTypeSUDeliveryOrder").val());
        var nPaymentTypeInInt=0;
        if (nDOT === 2)
        {
            nPaymentTypeInInt = 2;
        }
        LoadExportPIInPicker(nDOT,nPaymentTypeInInt);
    }

    function LoadExportPIInPicker(nDOType,nPaymentTypeInInt)
    {
        if($("#cboDOTypeSUDeliveryOrder").val() == 0){
            alert("Please select an DO Type");
            $("#cboDOTypeSUDeliveryOrder").focus();
            $("#cboDOTypeSUDeliveryOrder").addClass("errorFieldBorder");
            return false;
        }else{
            $("#cboDOTypeSUDeliveryOrder").removeClass("errorFieldBorder");
        }


        ($("#cboDOTypeSUDeliveryOrder").val() == 2 ? $("#btnLoadPI").show() : $("#btnLoadPI").hide());

        var oExportPI = {
            ContractorID: parseInt(_oSUDeliveryOrder.BuyerID),
            PaymentTypeInInt: nPaymentTypeInInt,
            DOType:nDOType,
            PINo:$.trim($("#txtPINoSUDeliveryOrder").val())
        }

        if(_nExportLCID>0)
        {
            oExportPI.LCID = _nExportLCID;
        }

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oExportPI,
            ControllerName: "ExportPI",
            ActionName: "GetsByContractorForSU",
            IsWinClose: true
        };

        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs.length > 0) {
                    _oExportPIs = response.objs;
                    if($.trim(_oExportPIs[0].Errormessage) == ""){
                        DynamicRefreshList(_oExportPIs, "tblPINosPicker");
                        $("#winPINo").icsWindow("Open", "Export PI of Buyer " + $("#txtSearchByBuyerSUDeliveryOrder").val());
                        $("#divPINoPicker").focus();
                    }
                    else{
                        alert(_oExportPIs[0].Errormessage);
                        DynamicRefreshList([], "tblPINosPicker");
                    }
                }
                else {
                    alert("Sorry, No data found.");
                    DynamicRefreshList([], "tblPINosPicker");
                }
            }
            else {
                alert("Sorry, No data found.");
                DynamicRefreshList([], "tblPINosPicker");
            }
        });

    }

    function SaveSUDeliveryOrder(oSUDeliveryOrder) {
        var nSUDeliveryOrderDetailId = (_oSUDeliveryOrderDetail == null ? 0 : _oSUDeliveryOrderDetail.SUDeliveryOrderDetailID);
        var oSUDeliveryOrderDetail = {
            SUDeliveryOrderDetailID: parseInt(nSUDeliveryOrderDetailId),
            SUDeliveryOrderID: parseInt(_oSUDeliveryOrder.SUDeliveryOrderID),
            ProductID: parseInt(_oProduct.ProductID),
            //ExportPIDetailID: parseInt(_oProduct.ExportPIDetailID),
            MUnitID: parseInt(_oProduct.MeasurementUnitID),
            Qty: 0,
            UnitPrice: 0,
            SUDeliveryOrder: oSUDeliveryOrder
        };

        $.ajax({
            type: "POST",
            url: _sBaseAddress + "/SUDeliveryOrder/SaveSUDeliveryOrderDetail",
            traditional: true,
            data: JSON.stringify(oSUDeliveryOrderDetail),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oSUDO = jQuery.parseJSON(data);
                if (oSUDO != null) {
                    if (!$.trim(oSUDO.ErrorMessage).length) {
                        var oSUDeliveryOrderDetails = $("#tblSUDeliveryOrderDetails").datagrid("getRows");
                        var nIndex = oSUDeliveryOrderDetails.length;
                        if (oSUDeliveryOrderDetail.SUDeliveryOrderID <= 0) {
                            if (oSUDO.SUDeliveryOrder.SUDeliveryOrderID > 0) {
                                _oSUDeliveryOrder = oSUDO.SUDeliveryOrder;
                                $("#txtDONoSUDeliveryOrder").val(_oSUDeliveryOrder.DONo);
                                var oSUDeliveryOrders = $("#tblSUDeliveryOrders").datagrid("getRows");
                                var nIndexSO = oSUDeliveryOrders.length;
                                $("#tblSUDeliveryOrders").datagrid("appendRow", oSUDO.SUDeliveryOrder);
                                $("#tblSUDeliveryOrders").datagrid("selectRow", nIndexSO);
                            }
                        }
                        $("#tblSUDeliveryOrderDetails").datagrid("appendRow", oSUDO);
                        $("#tblSUDeliveryOrderDetails").datagrid("selectRow", nIndex);

                    } else {
                        alert(oSUDeliveryOrder.ErrorMessage);
                    }
                }
                else {
                    alert(oSUDeliveryOrder.ErrorMessage);
                }
            }
        });
    }

    function RefreshTotalSummery() {
        var nTotalQty = 0;
        var nTotalQtyLBS = 0;
        var nTotalValue = 0;
        var oSUDeliveryOrderDetails = $('#tblSUDeliveryOrderDetails').datagrid('getRows');
        for (var i = 0; i < oSUDeliveryOrderDetails.length; i++) {
            nTotalQty = nTotalQty + parseFloat(oSUDeliveryOrderDetails[i].Qty);
            nTotalQtyLBS = nTotalQtyLBS + parseFloat(GetLBS(oSUDeliveryOrderDetails[i].Qty));
            nTotalValue = nTotalValue + parseFloat(oSUDeliveryOrderDetails[i].UnitPrice * oSUDeliveryOrderDetails[i].Qty);
        }
        var sCurrency = "";
        var nCurrency = parseInt($("#cboCurrencySUDeliveryOrder").val());
        if (nCurrency > 0) {
            sCurrency = $("#cboCurrencySUDeliveryOrder option:selected").text();
        }
        $("#lblTotalQty").text(formatPrice(nTotalQty) + "(KG)");
        $("#lblTotalQtyLBS").text(formatPrice(nTotalQtyLBS) + "(LBS)");
        $("#lblCurrency").text(sCurrency);
        $("#lblTotalValue").text(formatPrice(nTotalValue));
    }

    function CheckTotalAmountWithPIAmount(nExportPIID)
    {
        if(nExportPIID > 0)
        {
            var oExportPI = {
                ExportPIID: nExportPIID
            };

            $.icsDataGet({
                BaseAddress: _sBaseAddress,
                Object: oExportPI,
                ControllerName: 'ExportPI',
                ActionName: 'GetExportPI',
                IsWinClose: false
            }, function (response) {
                if (response.status) {
                    if(response.obj.ExportPIID>0)
                    {
                        _nExportPITotalAmount = response.obj.Amount;
                    }else{
                        _nExportPITotalAmount=0;
                    }
                }else{
                    _nExportPITotalAmount=0;
                }
            });
        }
    }

    function UpdateSUDeliveryOrderDetail(oSUDODetail, SelectedRowIndex, bShowErrorMessage) {

        var oSUDOs = [];
        oSUDOs.push(oSUDODetail);
        if (_isValidAmount)
        {
            var oSUDeliveryOrderDetail = {
                SUDeliveryOrderDetails: oSUDOs
            }
            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/SUDeliveryOrder/SaveSUDeliveryOrderDetail",
                traditional: true,
                data: JSON.stringify(oSUDeliveryOrderDetail),
                contentType: "application/json; charset=utf-8",
                success: function (data) {

                    var oSUDeliveryOrderDetail = jQuery.parseJSON(data);
                    if (oSUDeliveryOrderDetail != null && oSUDeliveryOrderDetail.SUDeliveryOrderDetails != null && oSUDeliveryOrderDetail.SUDeliveryOrderDetails.length > 0) {
                        oSUDOs = [];
                        oSUDOs = oSUDeliveryOrderDetail.SUDeliveryOrderDetails;

                        if (parseInt(oSUDOs[0].SUDeliveryOrderDetailID) > 0) {
                            $('#tblSUDeliveryOrderDetails').datagrid('updateRow', { index: SelectedRowIndex, row: oSUDOs[0] });
                            RefreshTotalSummery();
                        }
                        else {
                            if(!_bIsSaveBtnClick)
                            {
                                if(bShowErrorMessage)
                                {
                                    alert(oSUDOs[0].ErrorMessage);
                                }
                            }
                        }
                    }
                    else {
                        if(!_bIsSaveBtnClick)
                        {
                            if(bShowErrorMessage)
                            {
                                alert(oSUDeliveryOrderDetail.ErrorMessage);
                            }
                        }
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
        else
        {
            $('#tblSUDeliveryOrderDetails').datagrid('updateRow', { index: SelectedRowIndex, row: oSUDODetail });
            RefreshTotalSummery();
        }
    }

    function CheckAmountWithPIAmount(oSUDODetail)
    {
        var oGetRows = $("#tblSUDeliveryOrderDetails").datagrid("getRows");
        var nDetailTotalAmount=0;

        for(var i=0;i<oGetRows.length;i++)
        {
            if(oGetRows[i].ExportPIID == oSUDODetail.ExportPIID)
            {
                nDetailTotalAmount = parseFloat(nDetailTotalAmount) + parseFloat(oGetRows[i].Amount);
            }
        }
        return parseFloat(nDetailTotalAmount.toFixed(2));
    }

    function SetQuantitySUDOD(oSUDeliveryOrderDetail,nRemainingAmount)
    {
        var nQty = parseFloat(nRemainingAmount / parseFloat(oSUDeliveryOrderDetail.UnitPrice));
        return parseFloat(nQty.toFixed(2));
    }

    function GetRemainingAmount(oSUDeliveryOrderDetail)
    {
        var oGetRows = $("#tblSUDeliveryOrderDetails").datagrid("getRows");
        var nTotalAmount=0;
        for(var i=0;i<oGetRows.length;i++)
        {
            if(oSUDeliveryOrderDetail.ExportPIID == oGetRows[i].ExportPIID && oSUDeliveryOrderDetail.SUDeliveryOrderDetailID != oGetRows[i].SUDeliveryOrderDetailID)
            {
                nTotalAmount = parseFloat(nTotalAmount) + parseFloat(oGetRows[i].Amount);
            }
        }
        var nRemainingAmount = parseFloat(oSUDeliveryOrderDetail.ExportPIAmount) - parseFloat(nTotalAmount);
        return parseFloat(nRemainingAmount.toFixed(2));
    }

    function SUDODTableRowUpdate(nNewQty,nIndex,oSUDeliveryOrderDetail)
    {
        oSUDeliveryOrderDetail.Qty = parseFloat(nNewQty);
        oSUDeliveryOrderDetail.QtyInLbs=GetLBS(oSUDeliveryOrderDetail.Qty,2);
        oSUDeliveryOrderDetail.Amount = oSUDeliveryOrderDetail.Qty * oSUDeliveryOrderDetail.UnitPrice;
        oSUDeliveryOrderDetail.AmountSt = formatPrice(oSUDeliveryOrderDetail.Amount);
        $("#tblSUDeliveryOrderDetails").datagrid("updateRow", { index: nIndex, row: oSUDeliveryOrderDetail });
        $('#tblSUDeliveryOrderDetails').datagrid('selectRow', nIndex);
    }

    function CheckDOType()
    {
        var nDOType = parseInt($("#cboDOTypeSUDeliveryOrder").val());
        if(nDOType == 1 || nDOType == 2 || nDOType == 3)
        {
            return true;
        }
        return false;
    }

    function CommonOperationsInGrid(oSUDeliveryOrderDetail,editIndex)
    {
        if (oSUDeliveryOrderDetail != null)
        {
            if (parseInt($("#cboDOTypeSUDeliveryOrder").val()) === 6) {
                oSUDeliveryOrderDetail.Qty = parseFloat(oSUDeliveryOrderDetail.NumberOfCone * oSUDeliveryOrderDetail.QtyPerCone);
            }

            var nFlag=0;
            _sQtyErrorMessage = CheckGridValidation(oSUDeliveryOrderDetail,editIndex);
            if($.trim(_sQtyErrorMessage) != "")
            {
                alert(_sQtyErrorMessage);
                _sQtyErrorMessage = "";
                nFlag = 1;
            }else{
                _sQtyErrorMessage = "";
            }


            if(nFlag == 0)
            {
                oSUDeliveryOrderDetail.QtyInLbs = parseFloat(GetLBS(oSUDeliveryOrderDetail.Qty, 2));
                oSUDeliveryOrderDetail.Amount = parseFloat(oSUDeliveryOrderDetail.Qty * oSUDeliveryOrderDetail.UnitPrice)
                oSUDeliveryOrderDetail.AmountSt = formatPrice(oSUDeliveryOrderDetail.Amount);

                if (parseFloat(oSUDeliveryOrderDetail.Qty) != _nQty || parseFloat(oSUDeliveryOrderDetail.UnitPrice) != _nUnitPrice || parseFloat(oSUDeliveryOrderDetail.NumberOfCone) != _nNumberOfCone || parseFloat(oSUDeliveryOrderDetail.QtyPerCone) != _nQtyPerCone || oSUDeliveryOrderDetail.RequiredLotNo != _sRequiredLotNo || oSUDeliveryOrderDetail.Remarks != _sRemarks) {
                    oSUDeliveryOrderDetail.SUDeliveryOrder = null;
                    if (_isSave) {
                        CheckAmountSUDO();
                        UpdateSUDeliveryOrderDetail(oSUDeliveryOrderDetail, editIndex,true);
                    }
                }
                _nQty = 0;
                _nUnitPrice = 0;
            }
        }
    }

    function CheckMaximumQty(oSUDeliveryOrderDetail,editIndex)
    {
        if(oSUDeliveryOrderDetail.Qty > oSUDeliveryOrderDetail.MaxQty)
        {
            //IsCheckQty
            if(oSUDeliveryOrderDetail.IsCheckQty)
            {
                alert("Maximum Quantity of Product " + oSUDeliveryOrderDetail.ProductName + " is " + formatPrice(oSUDeliveryOrderDetail.MaxQty));
                SUDODTableRowUpdate(oSUDeliveryOrderDetail.MaxQty,editIndex,oSUDeliveryOrderDetail);
            }
            var oSUDOD = $('#tblSUDeliveryOrderDetails').datagrid('getSelected');
            CommonOperationsInGrid(oSUDOD,editIndex);
            editIndex = undefined;
            return false;
        }
        return true;
    }

    function CheckWithTotalPIAmount(oSUDeliveryOrderDetail,editIndex)
    {
        var nUsedAmount=0;
        var oGetRows = $("#tblSUDeliveryOrderDetails").datagrid("getRows");
        for(var i=0;i<oGetRows.length;i++)
        {
            if(oGetRows[i].ProductID != oSUDeliveryOrderDetail.ProductID && oGetRows[i].ExportPIID == oSUDeliveryOrderDetail.ExportPIID)
            {
                nUsedAmount = parseFloat(oGetRows[i].Amount) + parseFloat(nUsedAmount);
            }
        }
        var nTotalAmount = nUsedAmount + parseFloat(oSUDeliveryOrderDetail.Amount);
        if(nTotalAmount > oSUDeliveryOrderDetail.ExportPiTotalAmount)
        {
            alert("Maximum Amount of Selected PI is " + formatPrice(oSUDeliveryOrderDetail.ExportPiTotalAmount));
            var nRemainingQty = parseFloat(oSUDeliveryOrderDetail.ExportPiTotalAmount) - parseFloat(nUsedAmount);
            var nQty = parseFloat(nRemainingQty) / parseFloat(oSUDeliveryOrderDetail.UnitPrice);
            SUDODTableRowUpdate(nQty,editIndex,oSUDeliveryOrderDetail);
            var oSUDOD = $('#tblSUDeliveryOrderDetails').datagrid('getSelected');
            CommonOperationsInGrid(oSUDOD,editIndex);
            editIndex = undefined;
            return false;
        }
        return true;
    }

    var editIndex = undefined;
    function endEditing() {

        var nDOType = $("#cboDOTypeSUDeliveryOrder").val();
        if(nDOType == 0)
        {
            $("#cboDOTypeSUDeliveryOrder").focus();
            $("#cboDOTypeSUDeliveryOrder").addClass("errorFieldBorder");
            alert("Please select DO Type");
            return false;
        }else{
            $("#cboDOTypeSUDeliveryOrder").removeClass("errorFieldBorder");
        }

        if (editIndex == undefined) {
            return true;
        }

        if ($('#tblSUDeliveryOrderDetails').datagrid('validateRow', editIndex)) {
            $('#tblSUDeliveryOrderDetails').datagrid('endEdit', editIndex);
            $('#tblSUDeliveryOrderDetails').datagrid('selectRow', editIndex);
            var oSUDeliveryOrderDetail = $('#tblSUDeliveryOrderDetails').datagrid('getSelected');

            if(oSUDeliveryOrderDetail != null)
            {
                oSUDeliveryOrderDetail.Amount = parseFloat(oSUDeliveryOrderDetail.Qty) * parseFloat(oSUDeliveryOrderDetail.UnitPrice);
                oSUDeliveryOrderDetail.AmountSt = formatPrice(oSUDeliveryOrderDetail.Amount);
                $("#tblSUDeliveryOrderDetails").datagrid("updateRow", { index: editIndex, row: oSUDeliveryOrderDetail });

                var bSaveDetail=true;

                if(CheckDOType())
                {
                    if(!CheckWithTotalPIAmount(oSUDeliveryOrderDetail,editIndex))
                    {
                        bSaveDetail = false;
                    }
                }

                if(bSaveDetail)
                {
                    if(CheckDOType())
                    {
                        if(!CheckMaximumQty(oSUDeliveryOrderDetail,editIndex))
                        {
                            bSaveDetail = false;
                        }
                    }
                }

                if(bSaveDetail)
                {
                    $('#tblSUDeliveryOrderDetails').datagrid('selectRow', editIndex);
                    oSUDeliveryOrderDetail = $('#tblSUDeliveryOrderDetails').datagrid('getSelected');
                    CommonOperationsInGrid(oSUDeliveryOrderDetail,editIndex);
                    editIndex = undefined;
                    return true;
                }


                /*var bFlag=true;
                if($("#cboDOTypeSUDeliveryOrder").val() == 1) //Export DO
                {
                    if(oSUDeliveryOrderDetail.CheckQty == 0)
                    {
                        if($("#btnDisplayAdvanceDOs").is(":visible"))
                        {
                            var nRemainingQty = parseFloat(oSUDeliveryOrderDetail.ProductPIQty)- parseFloat(oSUDeliveryOrderDetail.ProductAdvDOQty);
                            if(oSUDeliveryOrderDetail.Qty > nRemainingQty)
                            {
                                alert("Already Quantity "+formatPrice(oSUDeliveryOrderDetail.ProductAdvDOQty)+" Advance DO done for this product, Remaining Quantity is "+formatPrice(nRemainingQty)+"");
                                SUDODTableRowUpdate(nRemainingQty,editIndex,oSUDeliveryOrderDetail);
                                bFlag=false;
                            }
                        }
                    }
                }

                if(bFlag)
                {
                    if(CheckDOType())
                    {
                        var nDetailTotalAmount = CheckAmountWithPIAmount(oSUDeliveryOrderDetail);
                        if(nDetailTotalAmount > oSUDeliveryOrderDetail.ExportPIAmount)
                        {
                            var nRemainingAmount = GetRemainingAmount(oSUDeliveryOrderDetail);
                            alert("Total Amount of this product's PI is " + formatPrice(oSUDeliveryOrderDetail.ExportPIAmount) + " and Remaining amount is " + formatPrice(nRemainingAmount));
                            var nQty = SetQuantitySUDOD(oSUDeliveryOrderDetail,nRemainingAmount);
                            SUDODTableRowUpdate(nQty,editIndex,oSUDeliveryOrderDetail);
                            $("#tblSUDeliveryOrderDetails").datagrid("selectRow", editIndex);
                            var oSUDOD = $("#tblSUDeliveryOrderDetails").datagrid("getSelected");
                            UpdateSUDeliveryOrderDetail(oSUDOD, editIndex, false);
                        }
                        else
                        {
                            CommonOperationsInGrid(oSUDeliveryOrderDetail,editIndex);
                            editIndex = undefined;
                            return true;
                        }
                    }
                    else
                    {
                        CommonOperationsInGrid(oSUDeliveryOrderDetail,editIndex);
                        editIndex = undefined;
                        return true;
                    }
                }*/
            }
            editIndex = undefined;
            return false;
        }
        else {
            return false;
        }
    }

    var _nQty = 0;
    var _nUnitPrice = 0;
    var _sRequiredLotNo = "";
    var _sRemarks = "";
    var _nNumberOfCone = 0;
    var _nQtyPerCone = 0;
    function onClickRowSUDO(index) {
        if (editIndex != index) {
            if (endEditing()) {
                $('#tblSUDeliveryOrderDetails').datagrid('selectRow', index).datagrid('beginEdit', index);

                var oSUDeliveryOrderDetail = $('#tblSUDeliveryOrderDetails').datagrid('getSelected');


                if($("#cboDOTypeSUDeliveryOrder").val() == 1) //Export DO
                {
                    HideShowAdvDOButton();
                }
                _nQty = parseFloat(oSUDeliveryOrderDetail.Qty);
                _nUnitPrice = parseFloat(oSUDeliveryOrderDetail.UnitPrice);
                _sRequiredLotNo = oSUDeliveryOrderDetail.RequiredLotNo;
                _sRemarks = oSUDeliveryOrderDetail.Remarks;
                _nNumberOfCone = parseFloat(oSUDeliveryOrderDetail.NumberOfCone);
                _nQtyPerCone = parseFloat(oSUDeliveryOrderDetail.QtyPerCone);
                editIndex = index;
            }
            else {
                $('#tblSUDeliveryOrderDetails').datagrid('selectRow', editIndex);
            }
        }
    }

    function CheckGridValidation(oSUDeliveryOrderDetail,nEditIndex)
    {
        if(oSUDeliveryOrderDetail.CheckQty == 0) // if CheckQty == 1 means no need to check
        {
            var sQtyErrorMessage="";

            //Qty cannot be less than Challan Qty 001

            if(_sBtnID == "btnAcceptReviseSUDeliveryOrder")
            {
                if(_oSUDeliveryChallanDetails.length > 0)
                {
                    var sResult = CheckQtyForReviseWithChallanDetail(oSUDeliveryOrderDetail);
                    if(sResult.split("~")[0] == "false")
                    {
                        oSUDeliveryOrderDetail.Qty = parseFloat(sResult.split("~")[1]);
                        $("#tblSUDeliveryOrderDetails").datagrid("updateRow", { index: editIndex, row: oSUDeliveryOrderDetail });
                        sQtyErrorMessage = "Already "+sResult.split("~")[1]+" Qty Challan Completed for product " + oSUDeliveryOrderDetail.ProductName + ".";
                        return sQtyErrorMessage;
                    }
                }
            }

            var oSUDODetailsMainLists = [];
            oSUDODetailsMainLists = _oSUDODetailsMainList;

            for(var i=0;i<oSUDODetailsMainLists.length;i++)
            {
                var oSUDODetail = oSUDODetailsMainLists[i];
                if(oSUDODetail.ProductID == oSUDeliveryOrderDetail.ProductID)
                {
                    if(oSUDODetail.MaxQty < parseFloat(oSUDeliveryOrderDetail.Qty) && oSUDeliveryOrderDetail.CheckQty == 1)
                    {
                        oSUDeliveryOrderDetail.Qty = oSUDODetail.MaxQty;
                        oSUDeliveryOrderDetail.UnitPrice = _nUnitPrice;
                        oSUDeliveryOrderDetail.Amount = parseFloat(oSUDeliveryOrderDetail.Qty*oSUDeliveryOrderDetail.UnitPrice);
                        oSUDeliveryOrderDetail.AmountSt = formatPrice(oSUDeliveryOrderDetail.Amount);
                        RefreshTotalSummery();
                        $("#tblSUDeliveryOrderDetails").datagrid("updateRow", { index: i, row: oSUDeliveryOrderDetail });
                        sQtyErrorMessage = "Sorry, Maximum Quantity for product " + oSUDeliveryOrderDetail.ProductName + " is " + oSUDODetail.MaxQty + ".";
                        return sQtyErrorMessage;
                    }
                }
            }
        }
        return "";
    }

    function CheckQtyForReviseWithChallanDetail(oSUDeliveryOrderDetail)
    {
        for(var k=0;k<_oSUDeliveryChallanDetails.length;k++)
        {
            if(oSUDeliveryOrderDetail.ProductID == _oSUDeliveryChallanDetails[k].ProductID)
            {
                if(oSUDeliveryOrderDetail.Qty < _oSUDeliveryChallanDetails[k].Qty)
                {
                    return false + "~" + _oSUDeliveryChallanDetails[k].Qty;
                }
            }
        }
        return true + "~" + 0;
    }

    function GenerateTableColumnsSUDOD() {
        _otblColumns = [];
        var oColPINo = { field: "PINo", width: "15%", title: "PI No", frozen: true };
        var oColProductCode = { field: "ProductCode", width: "8%", title: "Code", frozen: true };
        var oColProductName = { field: "ProductName", width: "20%", title: "Description", frozen: true };
        var oColQty = { field: "Qty", width: "10%", title: "Qty(kG)", editor: { type: 'numberbox', options: { precision: 2 } }, align: 'right', frozen: true };
        var oColQtyInLbs = { field: "QtyInLbs", width: "10%", title: "Qty(LBS)", align: 'right', frozen: true };
        var oColUnitPrice = { field: "UnitPrice", width: "10%", title: "Unit Price/KG", editor: { type: 'numberbox', options: { precision: 2 } }, align: 'right', frozen: true };
        var oColUnitPriceInLbs = { field: "UnitPriceInLbs", width: "10%", title: "Unit Price/LBS", align: 'right', frozen: true };
        var oColAmountSt = { field: "AmountSt", width: "10%", title: "Amount", align: 'right', frozen: true };

        _otblColumns.push(oColPINo, oColProductCode, oColProductName, oColQty, oColQtyInLbs, oColUnitPrice, oColUnitPriceInLbs, oColAmountSt);
        $('#tblSUDeliveryOrderDetails').datagrid({ columns: [_otblColumns] });
        $('#tblSUDeliveryOrderDetails').datagrid({ onClickRow: function (index, field, value) { return onClickRowSUDO(index); } });
        editIndex = undefined;
    }

    function GenerateTableColumnsSUDODForSampleDO() {
        _otblColumns = [];
        var oColPINo = { field: "PINo", width: "15%", title: "PI No", frozen: true };
        var oColProductCode = { field: "ProductCode", width: "8%", title: "Code", frozen: true };
        var oColProductName = { field: "ProductName", width: "20%", title: "Description", frozen: true };
        var oColRequiredLotNo = { field: "RequiredLotNo", width: "15%", title: "Required Lot #", editor: { type: 'text'}, align: 'left', frozen: true };
        var oColRemarks = { field: "Remarks", width: "15%", title: "Remarks", editor: { type: 'text' }, align: 'left', frozen: true };
        var oColNumberOfCone = { field: "NumberOfCone", width: "10%", title: "Cones", editor: { type: 'numberbox', options: { precision: 2 } }, align: 'right', frozen: true };
        var oColQtyPerCone = { field: "QtyPerCone", width: "10%", title: "Qty/Cone(KG)", editor: { type: 'numberbox', options: { precision: 3 } }, align: 'right', frozen: true };
        var oColQty = { field: "Qty", width: "10%", title: "Qty(kG)", align: 'right', frozen: true };
        var oColQtyInLbs = { field: "QtyInLbs", width: "10%", title: "Qty(LBS)", align: 'right', frozen: true };


        _otblColumns.push(oColPINo, oColProductCode, oColProductName, oColRequiredLotNo, oColRemarks, oColNumberOfCone, oColQtyPerCone, oColQty, oColQtyInLbs);
        $('#tblSUDeliveryOrderDetails').datagrid({ columns: [_otblColumns] });
        $('#tblSUDeliveryOrderDetails').datagrid({ onClickRow: function (index, field, value) { return onClickRowSUDO(index); } });
        editIndex = undefined;
    }

    function SetFieldsDefaultValue(){
        $("#btnLoadPI").hide();
        $(".easyui-datebox").datebox({ disabled: false });
        $(".easyui-datebox").datebox("setValue", icsdateformat(new Date()));
        $("#txtDeliveryDateSUDeliveryOrder").datebox("setValue", "");

        $("#cboDOTypeSUDeliveryOrder").focus();
        $("#cboDOTypeSUDeliveryOrder").addClass("ComboFocusBorderClass");
    }

    function LoadComboboxes(){
        var oContractorTypes = [];
        for (var i = 0; i < _oContractorTypes.length; i++) {
            if (_oContractorTypes[i].Value == 2 || _oContractorTypes[i].Value == 3) {
                oContractorTypes.push(_oContractorTypes[i]);
            }
        }

        $("#cboBuyerSUDeliveryOrder,#cboDeliveryToSUDeliveryOrder").icsLoadCombo({
            List: oContractorTypes,
            OptionValue: "Value",
            DisplayText: "Text",
            InitialValue:"Custome"
        });

        $("#cboDOTypeSUDeliveryOrder").icsLoadCombo({
            List: _oDOTypes,
            OptionValue: "id",
            DisplayText: "Value"
        });
        //$("#cboDOTypeSUDeliveryOrder option[value='5']").remove();

        $("#cboMKTPersonSUDeliveryOrder").icsLoadCombo({
            List: _oMktPersons,
            OptionValue: "EmployeeID",
            DisplayText: "Name"
        });
        $("#cboCurrencySUDeliveryOrder").icsLoadCombo({
            List: _oCurrencys,
            OptionValue: "CurrencyID",
            DisplayText: "CurrencyName",
            InitialValue:"No select one"
        });
        $("#cboCurrencySUDeliveryOrder").val(2);
    }

    function ResetControll(){
        $(".wrapperForNextPage").find("input").not(".shortBtn").val("");
        $(".wrapperForNextPage").find("select").val(0);
        $(".easyui-datebox").datebox({ disabled: false });
        $(".easyui-datebox").datebox("setValue", icsdateformat(new Date()));
        $("#cboContactPersonnelSUDeliveryOrder").empty();
        $("#txtPINoSUDeliveryOrder,#txtSearchByBuyerSUDeliveryOrder,#txtSearchByDeliveryToSUDeliveryOrder,#txtProductNameSUDeliveryOrderDetail").removeClass("fontColorOfPickItem");
        DynamicRefreshList([],"tblSUDeliveryOrderDetails");
    }

    function ExportPIFieldHideShow()
    {
        var nDOType =  parseInt($("#cboDOTypeSUDeliveryOrder").val());
        if(nDOType == 1 || nDOType==2 || nDOType==3)
        {
            $("#txtPINoSUDeliveryOrder,#btnClearPINoSUDeliveryOrder,#btnPINoSUDeliveryOrder").prop("disabled",false);
            $("#btnPIProductsSUDeliveryOrderDetail").show();
        }else{
            $("#txtPINoSUDeliveryOrder,#btnClearPINoSUDeliveryOrder,#btnPINoSUDeliveryOrder").prop("disabled",true);
            $("#btnPIProductsSUDeliveryOrderDetail").hide();
        }
    }

    function DisableEnableFields(sBtnId){
        $("#btnSaveAcceptReviseSUDeliveryOrder").hide();
        if(sBtnId == "btnEditSUDeliveryOrder")
        {
            $("#btnSaveSUDeliveryOrder").show();
            $("#cboDOTypeSUDeliveryOrder,#txtSearchByBuyerSUDeliveryOrder,#txtContactInfoSUDeliveryOrder,#cboBuyerSUDeliveryOrder").prop("disabled",true);
            $("#txtPINoSUDeliveryOrder").prop("disabled",false);
        }
        else if(sBtnId=="btnViewSUDeliveryOrder")
        {
            $(".wrapperContentFieldSet").find("input,select").prop("disabled",true);
            $("#btnSaveSUDeliveryOrder").hide();
            $("#txtPINoSUDeliveryOrder,#toolbarSUDeliveryOrderDetail").find("input,a").prop("disabled",true);
            $("#cboBuyerSUDeliveryOrder").prop("disabled",true);
        }
        else if(sBtnId == "btnAcceptReviseSUDeliveryOrder")
        {
            $("#btnSaveSUDeliveryOrder").hide();
            $("#btnSaveAcceptReviseSUDeliveryOrder").show();
            $("#cboDOTypeSUDeliveryOrder,#txtSearchByBuyerSUDeliveryOrder,#txtContactInfoSUDeliveryOrder,#cboBuyerSUDeliveryOrder").prop("disabled",true);
            $("#txtPINoSUDeliveryOrder").prop("disabled",false);
        }
    }

    function RefreshControl(oSUDeliveryOrder){
        _oSUDeliveryOrder = oSUDeliveryOrder;

        if(oSUDeliveryOrder.SUDeliveryOrderID > 0){
            ResetControll();
            $("#txtDONoSUDeliveryOrder").val(oSUDeliveryOrder.DONo);
            $("#cboDOTypeSUDeliveryOrder").val(oSUDeliveryOrder.DOTypeInInt);
            $("#cboMKTPersonSUDeliveryOrder").val(oSUDeliveryOrder.MKTPersonID);
            $("#cboCurrencySUDeliveryOrder").val(oSUDeliveryOrder.CurrencyID);

            if(oSUDeliveryOrder.DOTypeInInt == 6)
            {
                GenerateTableColumnsSUDODForSampleDO();

            }else{
                GenerateTableColumnsSUDOD();
            }

            $("#txtPINoSUDeliveryOrder").val(oSUDeliveryOrder.PINo);
            if(oSUDeliveryOrder.ExportPIID > 0){
                $("#txtPINoSUDeliveryOrder").addClass("fontColorOfPickItem");
            }else{
                $("#txtPINoSUDeliveryOrder").removeClass("fontColorOfPickItem");
            }

            $("#txtSearchByBuyerSUDeliveryOrder").val(oSUDeliveryOrder.BuyerName);
            if(oSUDeliveryOrder.BuyerID > 0){
                $("#txtSearchByBuyerSUDeliveryOrder").addClass("fontColorOfPickItem");
            }else{
                $("#txtSearchByBuyerSUDeliveryOrder").removeClass("fontColorOfPickItem");
            }

            $("#txtSearchByDeliveryToSUDeliveryOrder").val(oSUDeliveryOrder.BuyerName);
            if(oSUDeliveryOrder.DeliveryTo > 0){
                $("#txtSearchByDeliveryToSUDeliveryOrder").addClass("fontColorOfPickItem");
            }else{
                $("#txtSearchByDeliveryToSUDeliveryOrder").removeClass("fontColorOfPickItem");
            }

            $("#txtDeliverPointSUDeliveryOrder").val(oSUDeliveryOrder.DeliveryPoint);

            $("#txtDODateSUDeliveryOrder").datebox("setValue", oSUDeliveryOrder.DODateSt);
            if(oSUDeliveryOrder.DeliveryDateSt == "-")
            {
                $("#txtDeliveryDateSUDeliveryOrder").datebox("setValue", "");
            }else{
                $("#txtDeliveryDateSUDeliveryOrder").datebox("setValue", oSUDeliveryOrder.DeliveryDateSt);
            }
            $("#txtRemarksSUDeliveryOrder").val(oSUDeliveryOrder.Remarks);
            DynamicRefreshList(oSUDeliveryOrder.SUDeliveryOrderDetails,"tblSUDeliveryOrderDetails");
            RefreshTotalSummery();
            if(oSUDeliveryOrder.BuyerID > 0){
                var oContractor={
                    ContractorID : oSUDeliveryOrder.BuyerID
                };
                LoadContactPersonnel(oContractor,oSUDeliveryOrder.BCPID);
            }
            //CheckTotalAmountWithPIAmount(oSUDeliveryOrder.ExportPIID);
        }
        else{
            ResetControll();
        }
    }

    function SetRemainingQty(oSUDODetail)
    {
        var oTemp = {
            SUDeliveryOrderDetailID : oSUDODetail.SUDeliveryOrderDetailID,
            SUDeliveryOrderID: (_oSUDeliveryOrder == null ? 0 : oSUDODetail.SUDeliveryOrderID),
            ProductID : oSUDODetail.ProductID,
            ExportPIDetailID : oSUDODetail.ExportPIDetailID,
            MUnitID : oSUDODetail.MUnitID,
            Qty : (oSUDODetail.Qty - nTotalAdvanceQty),
            UnitPrice : oSUDODetail.UnitPrice,
            Amount : parseFloat((oSUDODetail.Qty - nTotalAdvanceQty) * oSUDODetail.UnitPrice),
            AmountSt : formatPrice((oSUDODetail.Qty - nTotalAdvanceQty) * oSUDODetail.UnitPrice,2),
            ProductCode : oSUDODetail.ProductCode,
            ProductName : oSUDODetail.ProductName,
            QtyInLbs : GetLBS(oSUDODetail.Qty - nTotalAdvanceQty),
            UnitPriceInLbs : parseFloat((oSUDODetail.UnitPrice/2.20462).toFixed(2)),
            SUDeliveryOrder : oSUDODetail.SUDeliveryOrder
        };
        return oTemp;
    }

    function GetContactPersonnelInfo(nBPCID) {
        if(nBPCID == 0)
        {
            nBPCID = $("#cboContactPersonnelSUDeliveryOrder").val();
        }
        for (var i = 0; i < _oContactPersonnels.length; i++) {
            if (_oContactPersonnels[i].ContactPersonnelID == parseInt(nBPCID)) {
                $("#txtContactInfoSUDeliveryOrder").val(_oContactPersonnels[i].Phone);
                break;
            }
        }
    }

    function LoadContactPersonnel(oContractor, nBCPID) {
        $.icsDataGets({
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: 'SUDeliveryOrder',
            ActionName: 'GetContractorPersonnel',
            IsWinClose: false
        }, function (response) {
            if (response.status) {
                if (response.objs.length > 0) {
                    _oContactPersonnels = response.objs;
                    $("#cboContactPersonnelSUDeliveryOrder").icsLoadCombo({
                        List: _oContactPersonnels,
                        OptionValue: "ContactPersonnelID",
                        DisplayText: "Name",
                        InitialValue: "No Select one option"
                    });
                    $("#cboContactPersonnelSUDeliveryOrder").val(nBCPID);
                    GetContactPersonnelInfo(nBCPID);
                }
            }
        });
    }

    function RefreshObjectSUDeliveryOrder() {
        endEditing();
        var oSUDeliveryOrder = {
            SUDeliveryOrderID: (_oSUDeliveryOrder != null) ? _oSUDeliveryOrder.SUDeliveryOrderID : 0,
            DONo: $("#txtDONoSUDeliveryOrder").val(),
            DOTypeInInt: $("#cboDOTypeSUDeliveryOrder").val(),
            BuyerID:   (_oSUDeliveryOrder != null) ? _oSUDeliveryOrder.BuyerID : 0,
            BCPID: parseInt($("#cboContactPersonnelSUDeliveryOrder").val()),
            DeliveryTo: parseInt((_oSUDeliveryOrder != null) ? _oSUDeliveryOrder.DeliveryTo : 0),
            DeliveryPoint: $("#txtDeliverPointSUDeliveryOrder").val(),
            Remarks: $("#txtRemarksSUDeliveryOrder").val(),
            DODate: $('#txtDODateSUDeliveryOrder').datebox('getValue'),
            DeliveryDate: $('#txtDeliveryDateSUDeliveryOrder').datebox('getValue'),
            MKTPersonID: $("#cboMKTPersonSUDeliveryOrder").val(),
            ExportPIID: parseInt((_oSUDeliveryOrder != null) ? _nExportPIID : 0),
            CurrencyID: $("#cboCurrencySUDeliveryOrder").val()
        };
        return oSUDeliveryOrder;
    }

    function ValidateInputSUDeliveryOrder() {

        if (parseInt($("#cboDOTypeSUDeliveryOrder").val()) == 0) {
            alert("Please select DO Type.");
            $("#cboDOTypeSUDeliveryOrder").addClass("errorFieldBorder");
            $("#cboDOTypeSUDeliveryOrder").focus();
            return false;
        } else {
            $("#cboDOTypeSUDeliveryOrder").removeClass("errorFieldBorder");
        }

        if (_oSUDeliveryOrder.BuyerID == 0) {
            alert("Please select buyer.");
            $("#txtSearchByBuyerSUDeliveryOrder").addClass("errorFieldBorder");
            $("#txtSearchByBuyerSUDeliveryOrder").focus();
            return false;
        } else {
            $("#txtSearchByBuyerSUDeliveryOrder").removeClass("errorFieldBorder");
        }

        if (_oSUDeliveryOrder.DeliveryTo == 0) {
            alert("Please select delivery to.");
            $("#txtSearchByDeliveryToSUDeliveryOrder").addClass("errorFieldBorder");
            $("#txtSearchByDeliveryToSUDeliveryOrder").focus();
            return false;
        } else {
            $("#txtSearchByDeliveryToSUDeliveryOrder").removeClass("errorFieldBorder");
        }

        if ($.trim($("#txtDeliverPointSUDeliveryOrder").val()) == 0) {
            alert("Please select delivery point.");
            $("#txtDeliverPointSUDeliveryOrder").addClass("errorFieldBorder");
            $("#txtDeliverPointSUDeliveryOrder").focus();
            return false;
        } else {
            $("#txtDeliverPointSUDeliveryOrder").removeClass("errorFieldBorder");
        }

        if (parseInt($("#cboContactPersonnelSUDeliveryOrder").val()) == 0) {
            alert("Please select Contact Personnel.");
            $("#cboContactPersonnelSUDeliveryOrder").addClass("errorFieldBorder");
            $("#cboContactPersonnelSUDeliveryOrder").focus();
            return false;
        } else {
            $("#cboContactPersonnelSUDeliveryOrder").removeClass("errorFieldBorder");
        }

        if (parseInt($("#cboMKTPersonSUDeliveryOrder").val()) == 0) {
            alert("Please select MKT Person.");
            $("#cboMKTPersonSUDeliveryOrder").addClass("errorFieldBorder");
            $("#cboMKTPersonSUDeliveryOrder").focus();
            return false;
        } else {
            $("#cboMKTPersonSUDeliveryOrder").removeClass("errorFieldBorder");
        }

        if (parseInt($("#cboCurrencySUDeliveryOrder").val()) == 0) {
            alert("Please select Currency.");
            $("#cboCurrencySUDeliveryOrder").addClass("errorFieldBorder");
            $("#cboCurrencySUDeliveryOrder").focus();
            return false;
        } else {
            $("#cboCurrencySUDeliveryOrder").removeClass("errorFieldBorder");
        }

        return true;
    }

    function CheckAmountSUDO() {
        //Total Amount Can't be greater than PI Amount

        var nDOType = $("#cboDOTypeSUDeliveryOrder").val();
        if (parseInt(nDOType) == 1 || parseInt(nDOType) == 2) //Export DO = 1 & Local DO = 2
        {
            var nTotalAmount = 0;

            var oSUDeliveryOrderDetails = $("#tblSUDeliveryOrderDetails").datagrid("getRows");
            if (oSUDeliveryOrderDetails.length > 0) {
                for (var i = 0; i < oSUDeliveryOrderDetails.length; i++) {
                    var nAmount = parseFloat(oSUDeliveryOrderDetails[i].Qty) * parseFloat(oSUDeliveryOrderDetails[i].UnitPrice);
                    nTotalAmount = parseFloat(nTotalAmount) + parseFloat(nAmount);
                }
            }
            else {
                _isValidAmount = true;
            }
            if (_oExportPISUDO != null) {
                if (parseFloat(nTotalAmount) > parseFloat(_oExportPISUDO.Amount)) {
                    _oTempObjForAlert = {
                        Currency: _oExportPISUDO.Currency,
                        DetailTotalAmount: formatPrice(_oExportPISUDO.Amount, 2),
                        TotalPIAmount: formatPrice(nTotalAmount, 2)
                    }
                    //alert("Sorry, Total PI Amount is " + _oExportPISUDO.Currency + " " + formatPrice(_oExportPISUDO.Amount, 2) + " But Your Given Total Product Amount is " + formatPrice(nTotalAmount, 2));
                    _isValidAmount = false;
                }
                else {
                    _isValidAmount = true;
                }
            }
        }
        else {
            _isValidAmount = true;
        }
    }

    function PickDeliveryToSUDeliveryOrder() {
        var oContractor = null;
        var cboDeliveryTo = parseInt($("#cboDeliveryToSUDeliveryOrder").val());
        var oContractor = {
            Params: cboDeliveryTo + '~' + $.trim($("#txtSearchByDeliveryToSUDeliveryOrder").val())
        };

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 400, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winDeliveryTo',
                        winclass: 'clsDeliveryTo',
                        winwidth: 400,
                        winheight: 460,
                        tableid: 'tblDeliveryTos',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Delivery To List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }
            }
            else
            {
                alert("Sorry, No Delivery Person Found.");
            }
        });
    }

    function PickProductInSUDODetail()
    {
        
        if(CheckDOType())
        {
            if(_nExportPIID > 0)
            {
                var oExportPI = {
                    ExportPIID: _nExportPIID
                };

                $.icsDataGet({
                    BaseAddress: _sBaseAddress,
                    Object: oExportPI,
                    ControllerName: 'ExportPI',
                    ActionName: 'CheckPIRemainingAmount',
                    IsWinClose: false
                }, function (response) {

                    if (response.status) {
                        if($.trim(response.obj.ErrorMessage) != "")
                        {
                            _nExportPITotalAmount = 0;
                            alert(response.obj.ErrorMessage);
                        }
                        else
                        {
                            _nExportPITotalAmount = response.obj.Amount;
                            SelectSinglePI();
                        }
                    }
                    else{
                        _nExportPITotalAmount = 0;
                    }
                });
            }
            else{
                alert("Please select an Export PI");
                $("#txtPINoSUDeliveryOrder").val("");
                $("#txtPINoSUDeliveryOrder").focus();
                $("#txtPINoSUDeliveryOrder").removeClass("fontColorOfPickItem");
                _nExportPITotalAmount = 0;
            }
        }
        else{
            SelectSinglePI();
        }
    }

    function SelectSinglePI()
    {
        var bNoErrorFound=true;
        //if(!CheckPITotalAmount())
        //{
        //    bNoErrorFound = false;
        //}

        if(bNoErrorFound)
        {

            if($("#cboDOTypeSUDeliveryOrder").val() == 1 || $("#cboDOTypeSUDeliveryOrder").val() == 3)
            {
                if(_nExportPIID == 0){
                    alert("Please select a PI.");
                    $("#txtPINoSUDeliveryOrder").focus();
                    $("#txtPINoSUDeliveryOrder").addClass("errorFieldBorder");
                    return false;
                }else{
                    $("#txtPINoSUDeliveryOrder").removeClass("errorFieldBordebtnOkProductPickerr");
                }
            }
            else{
                _nExportPIID=0;
            }

            var sDBObjectName = "SUDeliveryOrderDetail";
            var nTriggerParentsType = 109; //_ViewProduct
            var nOperationalEvent = 704; // _View
            var nInOutType = 100;  // None
            var nDirections = 0;
            var nStoreID = 0;
            var nMapStoreID = 0;
            var sProductName = $("#txtProductNameSUDeliveryOrderDetail").val();
            var oProduct = {
                Params: $.trim(sProductName) + '~' + sDBObjectName + '~' + nTriggerParentsType + '~' + nOperationalEvent + '~' + nInOutType + '~' + nDirections + '~' + nStoreID + '~' + nMapStoreID
            };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oProduct,
                ControllerName: "Product",
                ActionName: "ATMLNewSearchByProductName",
                IsWinClose: false
            };

            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ProductID > 0) {
                        _oProductsPicker = response.objs;
                        _oProductsSUDODetail = response.objs;
                        DynamicRefreshList(response.objs, "tblProductsPicker");
                        $("#winProductPicker").icsWindow('open', "Product Search");
                        $("#divProductPicker").focus();
                        $("#winProductPicker input").val("");
                    }
                    else {
                        _oProductsPicker = [];
                        DynamicRefreshList([], "tblProductsPicker");
                        alert(response.objs[0].Errormessage);
                        $("#txtProductNameSUDeliveryOrderDetail").removeClass("fontColorOfPickItem");
                        _oProduct = null;
                    }
                }
                else {
                    alert("Sorry, No data found, Try again.");
                    $("#txtProductNameSUDeliveryOrderDetail").removeClass("fontColorOfPickItem");
                    _oProduct = null;
                }
            });
        }
    }

    function ClearExportPIInfo()
    {
        _nExportPIID=0;
        $("#txtPINoSUDeliveryOrder").val("");
        $("#txtPINoSUDeliveryOrder").removeClass("fontColorOfPickItem");
        $("#txtPINoSUDeliveryOrder").removeClass("errorFieldBorder");
    }

    function ClearDeliveryToInfo()
    {
        $("#txtSearchByDeliveryToSUDeliveryOrder").removeClass("fontColorOfPickItem");
        $("#txtSearchByDeliveryToSUDeliveryOrder").val("");
        _oSUDeliveryOrder.DeliveryTo = 0;
    }

    function ClearApplicantInfoSUDO() {
        $("#txtSearchByBuyerSUDeliveryOrder").removeClass("fontColorOfPickItem");
        _oSUDeliveryOrder.BuyerID = 0;
        $("#cboContactPersonnelSUDeliveryOrder").empty();
        $("#txtContactInfoSUDeliveryOrder").val("");
    }

    function GetDeliveryToContractorInfo(){
        if(_oSUDeliveryOrder.DeliveryTo > 0)
        {
            var oContractor = {
                ContractorID :  _oSUDeliveryOrder.DeliveryTo
            };

            $.icsDataGet({
                BaseAddress: _sBaseAddress,
                Object: oContractor,
                ControllerName: 'Contractor',
                ActionName: 'GetWithFactoryAddress',
                IsWinClose: false
            }, function (response) {
                if (response.status) {
                    if(response.obj.ContractorID > 0)
                    {
                        var oContractor = response.obj;
                        _oSUDeliveryOrder.DeliveryTo = oContractor.ContractorID;
                        $('#txtSearchByDeliveryToSUDeliveryOrder').val(oContractor.Name);
                        $("#txtSearchByDeliveryToSUDeliveryOrder").addClass("fontColorOfPickItem");
                        $("#txtDeliverPointSUDeliveryOrder").val(oContractor.Address);
                        $("#cboDeliveryToSUDeliveryOrder").val(oContractor.ContractorType);
                    }
                }
            });
        }
    }

    function PickBuyerSUDeliveryOrder()
    {

        var oContractor = null;
        var cboBuyer = parseInt($("#cboBuyerSUDeliveryOrder").val());
        var oContractor = {
            Params: cboBuyer + '~' + $.trim($("#txtSearchByBuyerSUDeliveryOrder").val())
        };

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 400, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winApplicants',
                        winclass: 'clsApplicant',
                        winwidth: 400,
                        winheight: 460,
                        tableid: 'tblApplicants',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Applicant List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }
            }
            else
            {
                alert("Sorry, No Applicant Found.");
            }
        });
    }

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which === 13) {
                SetPickerValueAssign(oPickerobj);
            }
        });
    }

    function SetPickerValueAssign(oPickerobj) {
        var oreturnObj = null, oreturnobjs = [];

        if (oPickerobj.multiplereturn) {
            oreturnObjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }

        if (oPickerobj.winid == 'winApplicants') {
            if (oreturnObj != null && oreturnObj.ContractorID > 0)
            {
                var oContractor = oreturnObj;
                $('#txtSearchByBuyerSUDeliveryOrder').val(oContractor.Name);
                $("#txtSearchByBuyerSUDeliveryOrder").addClass("fontColorOfPickItem");
                _oSUDeliveryOrder.BuyerID = oContractor.ContractorID;
                $('#txtSearchByBuyerSUDeliveryOrder').focus();

                $.icsDataGet({
                    BaseAddress: _sBaseAddress,
                    Object: oContractor,
                    ControllerName: 'SUDeliveryOrder',
                    ActionName: 'GetContractorAddress',
                    IsWinClose: false
                }, function (response) {
                    if (response.status) {
                        if(_oSUDeliveryOrder.DeliveryTo == 0)
                        {
                            _oSUDeliveryOrder.DeliveryTo = _oSUDeliveryOrder.BuyerID;
                            $('#txtSearchByDeliveryToSUDeliveryOrder').val(oContractor.Name);
                            $("#txtSearchByDeliveryToSUDeliveryOrder").addClass("fontColorOfPickItem");
                            $("#cboDeliveryToSUDeliveryOrder").val($("#cboBuyerSUDeliveryOrder").val());
                            GetDeliveryToContractorInfo();
                        }
                        _oContactPersonnels = response.obj.ContactPersonnels;
                        $("#cboContactPersonnelSUDeliveryOrder").icsLoadCombo({
                            List: _oContactPersonnels,
                            OptionValue: "ContactPersonnelID",
                            DisplayText: "Name",
                            InitialValue: "No Select one option"
                        });
                        GetContactPersonnelInfo(parseInt($("#cboContactPersonnelSUDeliveryOrder").val()));
                    }
                });
            }
            else{
                alert("Please select an applicant.");
                return false;
            }
        }
        else if (oPickerobj.winid == 'winDeliveryTo')
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0)
            {
                var oContractor = oreturnObj;
                $('#txtSearchByDeliveryToSUDeliveryOrder').val(oContractor.Name);
                $("#txtSearchByDeliveryToSUDeliveryOrder").addClass("fontColorOfPickItem");
                _oSUDeliveryOrder.DeliveryTo = oContractor.ContractorID;
                GetDeliveryToContractorInfo();
            }
            else{
                alert("Please select an item from list.");
                return false;
            }
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
    }

    function SelectAnExportPI() {
        var oExportPI = $("#tblPINosPicker").datagrid("getSelected");
        if (oExportPI != null && oExportPI.ExportPIID > 0) {
            $("#cboMKTPersonSUDeliveryOrder").val(oExportPI.MKTEmpID);
            var nOrderType = parseInt($("#cboDOTypeSUDeliveryOrder").val());
            if (nOrderType == 1) //Export DO
            {
                if (oExportPI.LCID == 0) {
                    alert("Sorry, No LC found for this PI.");
                    $(".LCNoRelated").hide();
                    return false;
                }
                else {
                    SetExportPISUDO(oExportPI);
                    $(".LCNoRelated").show();
                    if($.trim($("#lblLCNo").text()) == "")
                    {
                        $("#lblLCNo").text(oExportPI.LCNo);
                    }
                }
            }
            else {
                SetExportPISUDO(oExportPI);
                $(".LCNoRelated").hide();
            }
            _nExportPIID = oExportPI.ExportPIID;
            BuyerEnableDisable();
            $("#cboDOTypeSUDeliveryOrder").prop("disabled",true);
            $("#cboMKTPersonSUDeliveryOrder").val(oExportPI.MKTEmpID);
            $("#txtProductNameSUDeliveryOrderDetail").focus();
            GetExportPIProducts(oExportPI);
        }
        else {
            alert("Please select an Export PI.");
            $(".LCNoRelated").hide();
        }
        return true;
    }

    function BuyerEnableDisable()
    {
        var nLength = $("#tblSUDeliveryOrderDetails").datagrid("getRows").length;
        if(nLength>0)
        {
            $("#txtSearchByBuyerSUDeliveryOrder,#btnClrBuyerSUDeliveryOrder,#btnPickBuyerSUDeliveryOrder,#cboBuyerSUDeliveryOrder").prop("disabled",true);
        }
        else{
            $("#txtSearchByBuyerSUDeliveryOrder,#btnClrBuyerSUDeliveryOrder,#btnPickBuyerSUDeliveryOrder,#cboBuyerSUDeliveryOrder").prop("disabled",false);
        }
    }

    function SetExportPISUDO(oExportPI) {
        $('#txtPINoSUDeliveryOrder').val(oExportPI.PINo);
        $("#txtPINoSUDeliveryOrder").addClass("fontColorOfPickItem");123
        _oExportPISUDO = oExportPI;
        _nExportPIID = oExportPI.ExportPIID;
        $("#cboCurrencySUDeliveryOrder").focus();
        
        $("#cboCurrencySUDeliveryOrder").val(oExportPI.CurrencyID);
        var sCurrency = $("#cboCurrencySUDeliveryOrder option:selected").text();
        $("#lblCurrency").text(sCurrency);
        $("#winPINo").icsWindow("close");
    }

    function GetExportPIProducts(oExportPI)
    {
        if(oExportPI.ExportPIID > 0)
        {
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oExportPI,
                ControllerName: "ExportPI",
                ActionName: "GetsExportPIDetailForSU",
                IsWinClose: false
            };

            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ExportPIDetailID > 0) {
                        _oEPIDs = response.objs;
                        CheckTotalAmountWithPIAmount(oExportPI.ExportPIID);
                    }
                    else
                    {
                        _oEPIDs=[];
                        _nExportPITotalAmount=0;
                    }
                }
                else
                {
                    _oEPIDs=[];
                    _nExportPITotalAmount=0;
                }
            });
        }
    }

</script>
