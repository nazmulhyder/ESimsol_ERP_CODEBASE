
    @{
        ViewBag.Title = "Employee Batch";
    }
@model ESimSol.BusinessObjects.EmployeeBatch


   <div class="menuMainCollectionTable">
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div id="MainDiv" class="easyui-panel" title="Employee Batch" style="font-family:Tahoma;height:88%">
        <fieldset>
            <legend>Employee Batch Info</legend>
            <table style="width:100%;">
                <tr>
                    <td style="width:15%;text-align:right">Batch No</td>
                    <td style="width:25%">
                        <input type="text" id="txtBatchNo" style="width:100%" disabled="disabled"/>
                    </td>

                    <td style="width:10%;text-align:right">Batch Name:</td>
                    <td style="width:20%">
                        <input type="text" id="txtBatchName" style="width:100%"  />
                    </td>
                    <td style="width:10%;text-align:right">Create date</td>
                    <td style="width:13%">
                        <input type="text" style="width:100%;" id="txtCreateDate" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser"disabled="disabled" />
                    </td>
                    <td style="width:35%;text-align:right"></td>
                </tr>

                <tr>
                    <td style="width:15%;text-align:right">Cause Of Creation:</td>
                    <td style="width:20%">
                        <input type="text" id="txtCOCreation" style="width:100%" />
                    </td>
                    <td style="width:10%;text-align:right">Remarks:</td>
                    <td colspan="3" style="width:10%">
                        <input type="text" id="txtRemarks" style="width:100%" />
                    </td>
                </tr>
            </table>
        </fieldset>
        <div style="width:100%">
            <table id="tblEmployeeBatchDetail" title="Selected Employee(s)" class="easyui-datagrid" style="height:380px; width:100%;" fitcolumns="false" singleselect="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar" data-options="onClickCell: onClickCell,onEndEdit: onEndEdit">
                <thead data-options="frozen:true">
                    <tr>
                        <th data-options="field:'Selected',checkbox:true"></th>
                        <th field="EmployeeCode" width="10%" align="left">Code</th>
                        <th field="EmployeeName" width="15%" align="left">Employee Name</th>
                    </tr>
                </thead>
                <thead>
                    <tr>
                        <th width="10%" align="left" field="Location">Location</th>
                        <th width="10%" align="left" field="Department">Department</th>
                        <th width="10%" align="left" field="Designation">Designation</th>
                        <th width="10%" align="left" field="SalaryScheme" editor="{type:'textbox'}">SalaryScheme</th>
                        <th width="10%" align="right" field="GrossAmount" editor="{type:'numberbox',options:{precision:2}}" formatter="formatPrice">GrossAmount</th>
                        <th width="10%" align="right" field="ComplianceGross" editor="{type:'numberbox',options:{precision:2}}" formatter="formatPrice">ComplianceGross</th>                        
                        <th width="10%" align="left" field="ShiftName">ShiftName</th>
                        <th width="10%" align="left" field="AttendanceScheme">AttendanceScheme</th>                        
                        <th width="10%" align="left" field="DateOfJoinInString">DateOfJoin</th>
                    </tr>
                </thead>

            </table>
            <div id="toolbar">
                <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                    <tr>
                        <td style="width:50%">
                            <input type="text" id="txtEmployee" style="width:160px" placeholder="Search with Employee Name/code" />
                            <input type="button" id="btnClearEmployee" style="width:25px;" value="C" />
                            <input type="button" id="btnPickEmployee" style="width:25px;" value="P" />
                            <a id="btnAddEmployeeBatchDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                            <a id="btnRemoveEmployeeBatchDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                            <a id="btnRefreshEmployeeBatchDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
                        </td>
                        <td style="width:50%">                            
                            <table border="0" cellpadding="0" cellspacing="0">
                                <tr>
                                    <td style="width:70%">
                                        <input type="file" id="fileEmployees" name="fileEmployees" />
                                    </td>
                                    <td style="width:15%">
                                        <input type="button" value="Import" id="btnImportExcel" />
                                    </td>
                                    <td style="width:15%">
                                        <input type="button" value="Download Format" id="btnDownloadFormat" />
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
    <fieldset style="height:10%">
        <legend style="font-weight: bold">Action : </legend>
        <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
            <tr>
                <td style="width:70%; text-align:right">
                    <input type="text" id="txtSearchByEmployeeCode" style="width:150px" placeholder="Search By Employee Code" />
                    <input type="text" id="txtSearchByEmployeeName" style="width:200px" placeholder="Search By Employee Name" />
                </td>
                <td style="width:30%;text-align:right;">
                    <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                    <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                </td>
            </tr>
        </table>
    </fieldset>
</div>

<style type="text/css">
    td, th {
        padding: 2px;
    }
</style>
  <script type="text/javascript">
      $(document).ready(function () {
          var oEmployeeBatch =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
          $('#MainDiv').data('EmployeeBatch', oEmployeeBatch);
          RefreshControl(oEmployeeBatch);
          $('#tblEmployeeBatchDetail').datagrid({selectOnCheck:false, checkOnSelect:true});
          $("#progressbarParent").hide();
      });

      function updateProgress() {
          var value =$('#progressbar').progressbar('getValue');
          if (value < 96){
              value += Math.floor(Math.random() * 10);
              $('#progressbar').progressbar('setValue', value);
          }
      }
      function hideShow(miliseconds) {
          $("#progressbarParent").hide();
      }

      $("#txtSearchByEmployeeCode").keydown(function (e) {
          var code = (e.keyCode ? e.keyCode : e.which);
          if (code == 13) // Enter Press
          {
              if($.trim($('#txtSearchByEmployeeCode').val())===null || $.trim($('#txtSearchByEmployeeCode').val())==="")
              {
                  alert("Press enter with Employee Code");
                  return;
              }
              var sEmployeeCode = $('#txtSearchByEmployeeCode').val();
              var oEmployeeBatchDetails = $('#tblEmployeeBatchDetail').datagrid('getRows');
              for(var index = 0; index < oEmployeeBatchDetails.length; index++)
              {
                  if(oEmployeeBatchDetails[index].EmployeeCode == sEmployeeCode)
                  {   
                      DynamicRefreshList([oEmployeeBatchDetails[index]], 'tblEmployeeBatchDetail');
                      return;
                  }
              }
              DynamicRefreshList([], 'tblEmployeeBatchDetail');
          }
          else if(code == 8)
          {
              var sEmployeeCode = $('#txtSearchByEmployeeCode').val();
              if(sEmployeeCode.length == 1)
              {
                  var oEmployeeBatch = $('#MainDiv').data('EmployeeBatch');
                  DynamicRefreshList(oEmployeeBatch.EmployeeBatchDetails, 'tblEmployeeBatchDetail');
              }
          }
      });

      $("#txtSearchByEmployeeName").keydown(function (e) {
          var code = (e.keyCode ? e.keyCode : e.which);
          if (code == 13) // Enter Press
          {
              if($.trim($('#txtSearchByEmployeeName').val())===null || $.trim($('#txtSearchByEmployeeName').val())==="")
              {
                  alert("Press enter with Employee Name");
                  return;
              }
              var sEmployeeName = $('#txtSearchByEmployeeName').val();
              var oEmployeeBatchDetails = $('#tblEmployeeBatchDetail').datagrid('getRows');
              for(var index = 0; index < oEmployeeBatchDetails.length; index++)
              {
                  if(oEmployeeBatchDetails[index].EmployeeName == sEmployeeName)
                  {
                      DynamicRefreshList([oEmployeeBatchDetails[index]], 'tblEmployeeBatchDetail');
                      return;
                  }
              }
              DynamicRefreshList([], 'tblEmployeeBatchDetail');
          }
          else if(code == 8)
          {
              var sEmployeeName = $('#txtSearchByEmployeeName').val();
              if(sEmployeeName.length == 1)
              {
                  var oEmployeeBatch = $('#MainDiv').data('EmployeeBatch');
                  DynamicRefreshList(oEmployeeBatch.EmployeeBatchDetails, 'tblEmployeeBatchDetail');
              }
          }
      });

      $('#btnImportExcel').click(function(){  
          endEditing();
          var file =  document.getElementById('fileEmployees').files[0];
          if(file == null)
          {
              alert("Please select an excel file!");
              return;
          }

          var nTextIndex = file.name.indexOf("xls");
          if(nTextIndex == -1)
          {
              alert("Invalid file format! \nPlease select an excel file!");
              return;
          }

          $("#progressbar").progressbar({ value: 0 });
          $("#progressbarParent").show();
          var intervalID = setInterval(updateProgress, 250);
          var formdata = new FormData();
          formdata.append(file.name, file);
          $.ajax({
              url: sessionStorage.getItem('BaseAddress')+ '/EmployeeBatch/UploadExcelData',
              type: 'POST',
              data: formdata,
              contentType: false,
              processData: false,
              async: true,
              success: function (data) {                  
                  clearInterval(intervalID);
                  $("#progressbarParent").hide();
                  oEmployeeBatch = jQuery.parseJSON(data);
                  if (oEmployeeBatch.ErrorMessage=="" || oEmployeeBatch.ErrorMessage==null)
                  {   
                      var bFlag = true;
                      var oEmployeeBatchDetails = oEmployeeBatch.EmployeeBatchDetails;
                      if(oEmployeeBatchDetails != null && oEmployeeBatchDetails.length>0)
                      {                          
                          for(var i=0; i<oEmployeeBatchDetails.length; i++)
                          {
                              var ExistCheck = $('#tblEmployeeBatchDetail').datagrid('getRows');
                              for(var j=0;j<ExistCheck.length;j++)
                              {
                                  if(parseInt(ExistCheck[j].EmployeeID) == parseInt(oEmployeeBatchDetails[i].EmployeeID))
                                  {
                                      bFlag = false;
                                      break;
                                  }
                              }
                              if(bFlag == true)
                              {
                                  $('#tblEmployeeBatchDetail').datagrid('appendRow', oEmployeeBatchDetails[i]);
                              }
                          }
                          document.getElementById("fileEmployees").value = "";
                          alert("Upload Successfully!");
                      }
                      else
                      {
                          alert("No Employee Data Found!");
                      }
                  }
                  else 
                  {
                      alert(oEmployeeBatch.ErrorMessage);
                  }

              },
              error: function (error) {
                  alert('error');
              }
          });
      });
      
      function RefreshControl(oEmployeeBatch)
      {   
          $('#txtEmployee').data('Employee', []);
          if(sessionStorage.getItem("EmployeeBatchHeader")=="View EmployeeBatch")
          {
              $('#btnSave').hide();
              $('#btnAddEmployeeBatchDetail').hide();
              $('#btnRemoveEmployeeBatchDetail').hide();
              $('#btnRefreshEmployeeBatchDetail').hide();
              $('#txtEmployee').attr('disabled','disabled');
              $('#btnPickEmployee').attr('disabled','disabled');
              $('#btnClearEmployee').attr('disabled','disabled');
              $('#txtCreateDate').textbox('readonly',true);
              $('#txtBatchNo').attr('disabled','disabled');
              $('#txtBatchName').attr('disabled','disabled');
              $('#txtCOCreation').attr('disabled','disabled');
              $('#txtRemarks').attr('disabled','disabled');
          }

          $("#txtBatchNo").val(oEmployeeBatch.BatchNo);
          $("#txtBatchName").val(oEmployeeBatch.BatchName);
          $("#txtRemarks").val(oEmployeeBatch.Remarks);
          $('#txtCreateDate').datebox('setValue', oEmployeeBatch.CreateDateInString);
          $("#txtCOCreation").val(oEmployeeBatch.CauseOfCreation);
          DynamicRefreshList(oEmployeeBatch.EmployeeBatchDetails, 'tblEmployeeBatchDetail');
      }

      $("#txtEmployee").keydown(function (e) {

          var code = (e.keyCode ? e.keyCode : e.which);
          if (code == 13) // Enter Press
          {
              if($.trim($('#txtEmployee').val())===null || $.trim($('#txtEmployee').val())==="")
              {
                  alert("Press enter with Employee Name/Code");
                  return;
              }
              PickEmployee();
          }
          if (code == 8) //backspace=8
          {
              $('#txtEmployee').val("");
              $("#txtEmployee").removeClass("fontColorOfPickItem");
              $('#txtEmployee').data('Employee', []);
          }
      });

      $("#btnPickEmployee").click(function () {
          PickEmployee();
      });

      $("#btnClearEmployee").click(function () {
          $('#txtEmployee').val("");
          $("#txtEmployee").removeClass("fontColorOfPickItem");
          $('#txtEmployee').data('Employee', []);
      });

      $("#btnDownloadFormat").click(function () {

          var tsv=((new Date()).getTime())/1000;
          window.open(sessionStorage.getItem("BaseAddress")+ "/EmployeeBatch/DownloadEmployeeBatchUploadFormat?ts="+tsv,"_blank");

      });

      function PickEmployee()
      {

          
 
             var oEmployee = {

                  Name:$.trim($("#txtEmployee").val())

              };


          
          var obj = {
              BaseAddress:sessionStorage.getItem('BaseAddress'),
              Object: (oEmployee) ,
              ControllerName: "EmployeeBatch",
              ActionName: "GetsEmployeeByNameCode",
              IsWinClose: false
          };
          var tblColums = []; var oColumn = []; var oColumn = { field: 'Code', name: 'Code',title: 'Code',width: '20%'  };tblColums.push(oColumn);
          oColumn = { field: 'Name', title: 'Name',width: '50%', enableSorting: false  };tblColums.push(oColumn);
          //oColumn = { field: "Name", title: "Name", width: 280, align: "left" }; tblColums.push(oColumn);
          DynamicPiker('Employee',obj,tblColums,true,'Code','EmployeeID',400); //pickerName(unique),obj,table,multiReturn,SearchingField, pkID
      }
      function DynamicPiker(pickerName,obj,pTblColums,pMultiReturn,pSearchField,pID,nWidth)
      {
          // 
          $.icsDataGets(obj, function (response) {
              //
              if (response.status && response.objs.length > 0) {
                  //
                  if (response.objs[0][pID] > 0) {
                      //  
                      var tblColums = pTblColums;
                      var oPickerParam = {
                          winid: 'win'+pickerName,
                          winclass: 'cls'+pickerName,
                          winwidth: nWidth,
                          winheight: 460,
                          tableid: 'tbl'+pickerName+'s',
                          tablecolumns: tblColums,
                          datalist: response.objs,
                          multiplereturn: pMultiReturn,
                          searchingbyfieldName: pSearchField,
                          windowTittle: pickerName+' List',
                          colsable:true
                      };
                      $.icsPicker(oPickerParam);
                      IntializePickerbutton(oPickerParam);
                  }
                  else {
                      alert(response.objs[0].ErrorMessage);
                  }
              }
              else{
                  alert("Data Not Found.");
                  return;
              }
          });
      }
     

      function IntializePickerbutton(oPickerobj) {
          //
          $("#" + oPickerobj.winid).find("#btnOk").click(function () {
              // 
              //for Single Select
              SetPickerValueAssign(oPickerobj);
          });
          $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
              if (e.which == 13)//enter=13
              {
                  SetPickerValueAssign(oPickerobj);
              }
          });
      }

      function SetPickerValueAssign(oPickerobj)
      {
          // 
          var oResult;
          if (oPickerobj.multiplereturn)
          {
              oResult = $('#'+oPickerobj.tableid).datagrid('getChecked');
          }
          else
          {
              oResult = $('#'+oPickerobj.tableid).datagrid('getSelected');
          }


          if (oPickerobj.winid == 'winEmployee')
          {
              SetEmployee(oResult);
          }

          $("#" + oPickerobj.winid).icsWindow("close");
          $("#" + oPickerobj.winid).remove();
      }
      function SetEmployee(oResult){
          $('#txtEmployee').data('Employee', oResult);
          $("#txtEmployee").val(oResult.length+" Employees Selected");
          $("#txtEmployee").addClass("fontColorOfPickItem");
      }
      
      $("#btnRemoveEmployeeBatchDetail").click(function ()
      {
          var oEmployeeBatchDetails = $('#tblEmployeeBatchDetail').datagrid('getChecked');
          if(oEmployeeBatchDetails.length<=0)
          {
              alert("Please select atleast one Employee!");
              return;
          }          
          if (!confirm("Confirm to Delete ?")) return;
          var nSelectedIndex = 0;
          for(var i=0;i<oEmployeeBatchDetails.length;i++)
          {              
              nSelectedIndex = $('#tblEmployeeBatchDetail').datagrid('getRowIndex', oEmployeeBatchDetails[i]);
              $('#tblEmployeeBatchDetail').datagrid('deleteRow', nSelectedIndex);
          }
      });
      $("#btnRefreshEmployeeBatchDetail").click(function ()
      {
          
          var oEmployeeBatchDetail =$('#tblEmployeeBatchDetail').datagrid('getRows');
          $('#tblEmployeeBatchDetail').datagrid('loadData',[]);
          DynamicRefreshList(oEmployeeBatchDetail,'tblEmployeeBatchDetail');
      });
      $("#btnAddEmployeeBatchDetail").click(function ()
      {
          
          var oEmployeeBatch=$('#MainDiv').data('EmployeeBatch');
          var oEmployee=$('#txtEmployee').data('Employee');
          if(oEmployee==null||oEmployee.length<=0){
              alert("Please Pic Employee First");
              return;
          }
          var ExistCheck=$('#tblEmployeeBatchDetail').datagrid('getRows');
          for(var i=0;i<oEmployee.length;i++){
            
              var check=0;
              for(var j=0;j<ExistCheck.length;j++){
                  if(ExistCheck[j].EmployeeID==oEmployee[i].EmployeeID){
                      check=1;
           
                  }
              }
              if(check==0){
                  var oEmployeeBatchDetail={
                      EmployeeBatchDetailID:0,
                      EmployeeBatchID:oEmployeeBatch.EmployeeBatchID,
                      EmployeeID:oEmployee[i].EmployeeID,
                      EmployeeName:oEmployee[i].Name,
                      EmployeeCode:oEmployee[i].Code,
                      Location:oEmployee[i].LocationName,
                      Department:oEmployee[i].DepartmentName,
                      Designation:oEmployee[i].DesignationName,
                      ShiftName: oEmployee[i].CurrentShift,
                      AttendanceScheme:"",
                      SalaryScheme: "",
                      DateOfJoin:oEmployee[i].DateOfJoinInString,
                      DateOfJoinInString:oEmployee[i].DateOfJoinInString,
                      GrossAmount:0,
                      ComplianceGross:0

                  };

                  $('#tblEmployeeBatchDetail').datagrid('appendRow',oEmployeeBatchDetail);
              }
          }
          $('#txtEmployee').val("");
          $("#txtEmployee").removeClass("fontColorOfPickItem");
          $('#txtEmployee').data('Employee', []);
      });

      function  ValidateInput()
      {
          var oEmployeeBatchDetail=$('#tblEmployeeBatchDetail').datagrid('getRows');
          if(oEmployeeBatchDetail.length<=0){
              alert("Please add At leaset one detail information");
              return false;
          }
          if($.trim($('#txtBatchName').val())===null || $.trim($('#txtBatchName').val())==="")
          {
              alert("Press enter Batch name");
              return false;
          }
          if($.trim($('#txtCOCreation').val())===null || $.trim($('#txtCOCreation').val())==="")
          {
              alert("Press enter Cause of Creation");
              return false;
          }

          var oEmployeeBatchDetails = $('#tblEmployeeBatchDetail').datagrid('getRows');
          if(oEmployeeBatchDetails.length <= 0 )
          {
              alert("Press enter atleast one Employee!");
              return false;
          }
          if(oEmployeeBatchDetails.length > 1000)
          {
              alert("Maximum 1000 Employee allow for per batch!");
              return false;
          }
          return true;
      }

      function RefreshObject()
      {     
          
          var oEmployeeBatch= {
              EmployeeBatchID : $('#MainDiv').data('EmployeeBatch').EmployeeBatchID,
              BatchNo : $("#txtBatchNo").val(),
              BatchName : $.trim($('#txtBatchName').val()),
              CreateDate : $('#txtCreateDate').datebox('getValue'),
              CauseOfCreation :  $.trim($('#txtCOCreation').val()),
              Remarks :$.trim($('#txtRemarks').val()),
              EmployeeBatchDetails:$('#tblEmployeeBatchDetail').datagrid('getRows'),
          };
          return oEmployeeBatch;
      }

      $('#btnSave').click(function(){          
          endEditing();
          if(!ValidateInput()) return;
          $("#progressbar").progressbar({ value: 0 });
          $("#progressbarParent").show();
          var intervalID = setInterval(updateProgress, 250);
          var oEmployeeBatch=RefreshObject();
          $.ajax({
              type: "POST",
              dataType: "json",
              url : sessionStorage.getItem('BaseAddress')+  "/EmployeeBatch/Save",
              traditional: true,
              data:  JSON.stringify(oEmployeeBatch),
              contentType: "application/json; charset=utf-8",
              success: function (data)
              {   
                  clearInterval(intervalID);
                  $("#progressbarParent").hide();
                  oEmployeeBatch = jQuery.parseJSON(data);
                  if (oEmployeeBatch.ErrorMessage=="" || oEmployeeBatch.ErrorMessage==null)
                  {
                      alert("Data Saved sucessfully");
                      var oEmployeeBatchs = sessionStorage.getItem("EmployeeBatchs");
                      var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                      if (oEmployeeBatchs != null)
                      {
                          oEmployeeBatchs = jQuery.parseJSON(oEmployeeBatchs);
                      }
                      else {
                          oEmployeeBatchs = [];
                      }
                      if (nIndex != -1)
                      {
                          oEmployeeBatchs[nIndex] = oEmployeeBatch;
                      }
                      else {
                          sessionStorage.setItem("SelectedRowIndex", oEmployeeBatchs.length);
                          oEmployeeBatchs.push(oEmployeeBatch);
                      }
                      sessionStorage.setItem("EmployeeBatchs", JSON.stringify(oEmployeeBatchs));
                      window.location.href = sessionStorage.getItem("BackLink");
                  }
                  else 
                  {
                      alert(oEmployeeBatch.ErrorMessage);
                  }
              },
              error: function (xhr, status, error) {
                  alert(error);
              }

          });
      });

      $('#btnClose').click(function(){
          window.location.href = sessionStorage.getItem("BackLink");
      });

      var editIndex = undefined;
      function endEditing(){
          if (editIndex == undefined){return true}
          if ($('#tblEmployeeBatchDetail').datagrid('validateRow', editIndex)){
              $('#tblEmployeeBatchDetail').datagrid('endEdit', editIndex);
              editIndex = undefined;
              return true;
          } else {
              return false;
          }
      }

      function onClickCell(index, field){
          if (editIndex != index){
              if (endEditing()){
                  $('#tblEmployeeBatchDetail').datagrid('selectRow', index)
                          .datagrid('beginEdit', index);
                  var ed = $('#tblEmployeeBatchDetail').datagrid('getEditor', {index:index,field:field});
                  if (ed){
                      ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();
                  }
                  editIndex = index;
              } else {
                  setTimeout(function(){
                      $('#tblEmployeeBatchDetail').datagrid('selectRow', editIndex);
                  },0);
              }
          }
      }

      function onEndEdit(index, row){
          var ed = $(this).datagrid('getEditor', {
              index: index,
              field: 'productid'
          });
      }
   </script>
