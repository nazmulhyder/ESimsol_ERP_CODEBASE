<html>
@{
    ViewBag.Title = "Vehicle Model Entry";
}
<body>
    @model ESimSol.BusinessObjects.VehicleModel
    <div class="menuMainCollectionTable" ng-app="VehicleModelApp" ng-controller="VehicleModelController as MLCC" id="divVehicleModel">
        <div style="font-family:Tahoma; text-align:left;height:40%;" class="regionVM">
                  <div class="col-md-12">
                    <div class="col-md-7 align-left">
                        <fieldset>
                            <legend>Model Info</legend>
                            <div class="col-md-12">
                                <div class="col-md-3 text-right">
                                    <label class="control-label">SL No:</label>
                                </div>
                                <div class="col-md-4 text-right">
                                    <input ng-model="VehicleModel.FileNo" class="form-control" disabled />
                                </div>
                                <div class="col-md-2 text-right" style="margin-left: -10px">
                                    <label class="control-label"> Code:</label>
                                </div>
                                <div class="col-md-3 text-right">
                                    <input type="text" ng-model="VehicleModel.ModelCode" class="form-control" />
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-3 text-right">
                                    <label class="control-label">Model No:</label>
                                </div>
                                <div class="col-md-9 text-left">
                                    <input type="text" ng-model="VehicleModel.ModelNo" class="form-control" />
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-3 text-right">
                                    <label class="control-label">Model Category:</label>
                                </div>
                                <div class="col-md-4 text-left">
                                    <select ng-model="VehicleModel.ModelCategoryID" class="form-control" ng-options="oItem.ModelCategoryID as oItem.CategoryName for oItem in ModelCategorys">
                                        <option value="">--Select Model--</option>
                                    </select>
                                </div>
                                <div class="col-md-2 text-right" style="margin-left: -10px">
                                    <label class="control-label">Drive Type:</label>
                                </div>
                                <div class="col-md-3 text-left">
                                    <select ng-model="VehicleModel.DriveType" class="form-control" ng-options="oItem.id as oItem.Value for oItem in DriveTypes">
                                        <option value="">--Select Type--</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-3 text-right">
                                    <label class="control-label">Price:</label>
                                </div>
                                <div class="col-md-2 text-right">
                                    <select ng-model="VehicleModel.CurrencyID" class="form-control" ng-options="oItem.CurrencyID as oItem.CurrencyName for oItem in CurrencyList">
                                        <option value="">--Select Currency--</option>
                                    </select>
                                </div>
                                <div class="col-md-3 text-right">
                                    <input type="text" ng-model="VehicleModel.MinPrice" class="form-control number" ng-pattern="[0-9]" required />
                                </div>
                                <div class="col-md-1 text-center">
                                    <label>To</label>
                                </div>
                                <div class="col-md-3 text-right">
                                    <input type="text" ng-model="VehicleModel.MaxPrice" class="form-control number" ng-pattern="[0-9]" required />
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-3 text-right">
                                    <label class="control-label">Seating Capacity:</label>
                                </div>
                                <div class="col-md-4 text-left">
                                    <input type="text" ng-model="VehicleModel.SeatingCapacity" class="form-control" />
                                </div>
                                <div class="col-md-2 text-right" style="margin-left: -10px">
                                    <label class="control-label">Session:</label>
                                </div>
                                <div class="col-md-3 text-left">
                                    <select ng-model="VehicleModel.ModelSessionID" class="form-control" ng-options="oItem.BusinessSessionID as oItem.SessionName for oItem in BusinessSessions">
                                        <option value="">--Select Session--</option>
                                    </select>
                                </div>
                                
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-3 text-right">
                                    <label class="control-label">Short Name:</label>
                                </div>
                                <div class="col-md-4 text-right">
                                    <input type="text" ng-model="VehicleModel.ModelShortName" class="form-control" />
                                </div>
                                <div class="col-md-2 text-right" style="margin-left: -10px">
                                    <label class="control-label">Max Out:</label>
                                </div>
                                <div class="col-md-3 text-right">
                                    <input type="text" ng-model="VehicleModel.MaxPowerOutput" class="form-control" />
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-3 text-right">
                                    <label class="control-label">Engine Type:</label>
                                </div>
                                <div class="col-md-4 text-right">
                                    <input type="text" ng-model="VehicleModel.EngineType" class="form-control" />
                                </div>
                                <div class="col-md-2 text-right" style="margin-left: -10px">
                                    <label class="control-label">Max Torque:</label>
                                </div>
                                <div class="col-md-3 text-left">
                                    <input type="text" ng-model="VehicleModel.MaximumTorque" class="form-control" />
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-3 text-right">
                                    <label class="control-label">Transmission:</label>
                                </div>
                                <div class="col-md-4 text-right">
                                    <input type="text" ng-model="VehicleModel.Transmission" class="form-control" />
                                </div>
                                <div class="col-md-2 text-right" style="margin-left: -10px">
                                    <label class="control-label">TopSpeed:</label>
                                </div>
                                <div class="col-md-3 text-left">
                                    <input type="text" ng-model="VehicleModel.TopSpeed" class="form-control" />
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-3 text-right">
                                    <label class="control-label">Acceleration:</label>
                                </div>
                                <div class="col-md-4 text-right">
                                    <input type="text" ng-model="VehicleModel.Acceleration" class="form-control" />
                                </div>
                                <div class="col-md-2 text-right" style="margin-left: -10px">
                                    <label class="control-label">Disp. CC:</label>
                                </div>
                                <div class="col-md-3 text-left">
                                    <input type="text" ng-model="VehicleModel.DisplacementCC" class="form-control" />
                                </div>
                            </div>
                        </fieldset>
                    </div>
                      <div class="col-md-5">
                          <fieldset style="height:249px;">
                              <legend>Model Image</legend>
                              <div class="col-md-12">
                                  <img id="imgModelImage" src="@Url.Action("GetLargeImage", "VehicleModel", new { id = Model.VehicleModelID })" alt="Photo" style="width:90%; height:220px; vertical-align:middle; text-align:center;" />
                              </div>
                          </fieldset>
                      </div>
                </div>
        </div>
        <div class="ui-grid-panel" style="text-align:left;">
            <label>Feature:</label><input ng-model="txtFeatureName" style="height:20px" placeholder="Type Feature & Press Enter" ng-keydown="SearchKeyFeatureNo($event)" style="width:210px; height:24px;" required />
            <button type="button" class="btn btn-default btn-xs" aria-label="right Align" ng-click="PickFeature()"><span class="glyphicon glyphicon-ok" aria-hidden="true"> Pick</span></button>
            <button type="button" class="btn btn-default btn-xs" aria-label="right Align" ng-click="RemoveDetail()"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Remove</span></button>
            @*<button type="button" id="btnUP" class="btn btn-default btn-sm" aria-label="right Align" ng-click="UP()"><span class="glyphicon glyphicon-arrow-up" aria-hidden="true"> Up</span></button>
            <button type="button" id="btnDown" class="btn btn-default btn-sm" aria-label="right Align" ng-click="Down()"><span class="glyphicon glyphicon-arrow-down" aria-hidden="true"> Down</span></button>*@
            <button type="button" class="btn btn-default btn-xs" aria-label="right Align" ng-click="RefreshDetail()"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
        </div>
        <div style="width: 99%; height:230px; margin-left:2px" class="row" ui-grid="gridOptionsModelFeature" ui-grid-selection ui-grid-cellnav></div>
        <fieldset style="height:60px;">
            <legend>Action</legend>
            <div class="row col-md-12 text-right">
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-hide="btnSave" ng-click="Save()"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"> <label id="lblSave">Save</label></span> </button>
                <button type="button" id="btnclose" class="btn btn-sm" aria-label="Left Align" ng-click="Close()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"> Close</span> </button>
            </div>
        </fieldset>
    </div>
</body>
</html>
<style type="text/css">
    .regionVM  .control-label {
        padding-top: 1px;
        font-size:11px;
    }

    .regionVM .form-control {
        height: 20px;
        padding: 0px 6px;
        font-size: 12px;
    }
    
   .regionVM .ui-grid-header-cell-primary-focus {
        line-height: 1;
    }
    .regionVM .col-md-12 {
        width: 100%;
        padding-right: 1px;
        padding-left: 1px;
        margin-bottom: 3px;
    }

    .regionVM .col-md-7 {
        width: 60%;
        padding-right: 1px;
        padding-left: 1px;
    }
    .regionVM .col-md-5 {
        width: 40%;
        padding-right: 1px;
        padding-left: 1px;
    }

    .regionVM .col-md-6 {
        width: 43%;
        padding-right: 1px;
        padding-left: 1px;
    }
     .regionVM .col-md-4 {
        width: 32%;
        padding-right: 1px;
        padding-left: 1px;
    }
    
      .regionVM .col-md-9 {
        width: 75%;
        padding-right: 1px;
        padding-left: 1px;
    }
    .regionVM .col-md-8 {
        width: 66.64%;
        padding-right: 1px;
        padding-left: 1px;
    }
 
     .regionVM .col-md-3 {
        width: 24.85%;
        padding-right:3px;
        padding-left:3px;
    }
     .regionVM .col-md-2 {
        width: 19.70%;
        padding-right:3px;
        padding-left:3px;
    }
     .regionVM .col-md-1 {
        width:5%;
        padding-right:2px;
        padding-left:2px;
    }
    

     .regionVM .btn-sm {
        padding: 3px 10px;
    }

    .regionVM .input-group-addon {
        padding: 4px 8px;
    }
</style>
<script type="text/javascript">
    debugger;
    var oVehicleModel =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oModelCategorys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ModelCategoryList));
    var oDriveTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DriveTypes));
    var oCurrencyList = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CurrencyList));
    var oBusinessSession = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessSession));
    var oModelFeatures= oVehicleModel.ModelFeatures;
    var VehicleModelApp = angular.module('VehicleModelApp', ['ngAnimate', 'ui.bootstrap','ui.grid', 'ui.grid.selection', 'ms.service']);
    VehicleModelApp.controller('VehicleModelController', function ($scope,$http,$uibModal,$log,uiGridConstants,msModal,userSession,icsMethod,msGridControl) {
        debugger;
        $scope.VehicleModel=oVehicleModel;
        if(sessionStorage.getItem("VehicleModelHeader")=="Copy Vehicle Model")
        {
            $('#lblSave').html('Paste');
            //Reset IDs
            $scope.VehicleModel.VehicleModelID = 0;
            for(var i = 0;i<oModelFeatures.length;i++)
            {
                oModelFeatures[i].ModelFeatureID = 0;
                oModelFeatures[i].VehicleModelID = 0;
            }
        }
        $scope.ModelFeatures=oModelFeatures;
        $scope.ModelCategorys = oModelCategorys;
        $scope.BusinessSessions = oBusinessSession;
        $scope.CurrencyList = oCurrencyList;
        $scope.DriveTypes = oDriveTypes;

        var oDetailColumns = [];
        var oColumn = { field: 'FeatureCode', name:'Code', width:'20%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
        oColumn ={ field: 'FeatureName', name:'Feature Description', width:'50%',cellClass: 'text-left',enableCellEdit:false };oDetailColumns.push(oColumn);
        oColumn ={ field: 'Sequence', name: 'Priority', width: '10%', cellClass: 'text-center',enableSorting: false ,enableCellEdit:false};oDetailColumns.push(oColumn);
        oColumn ={ field: 'FeatureTypeST', name: 'FeatureType', width: '15%',align:'left',cellClass: 'text-left', enableSorting: false ,enableCellEdit:false};oDetailColumns.push(oColumn);

        ////Model Feature
        $scope.gridOptionsModelFeature = {
            showColumnFooter: true,
            multiSelect: true,
            enableRowSelection: true,
            enableSelectAll: false,
            columnDefs:oDetailColumns, 
            rowHeight: 25 ,
            columnFooterHeight:25,
            data:oModelFeatures,
            onRegisterApi: function (gridApi) {
                $scope.gridDetailApi = gridApi;
            }
        };

        $scope.RefreshDetail = function ()
        {
            debugger;
            var oList = $scope.gridOptionsModelFeature.data;
            var oModelFeatures =  oList.sort(function(a, b) {
                return parseInt(a.FeatureTypeInInt) - parseInt(b.FeatureTypeInInt);
            });
            if(oModelFeatures.length>0)
            {
                var nFeatureType = oModelFeatures[0].FeatureTypeInInt;
                var nSequence = 0;
                for(var i = 0;i<oModelFeatures.length;i++)
                {
                    nSequence++;//Increment
                    if(parseInt(nFeatureType)!=parseInt(oModelFeatures[i].FeatureTypeInInt))
                    {
                        nSequence = 1;//Reset
                    }
                    oModelFeatures[i].Sequence = nSequence;
                    nFeatureType = parseInt(oModelFeatures[i].FeatureTypeInInt);//Reset Feature type
                }
                $scope.gridOptionsModelFeature.data =  oModelFeatures;
            }
        };
        $scope.PickFeature= function ()
        {
            var oFeature = {
                FeatureName: $.trim($scope.txtFeatureName),
                Remarks:'1,2,3,4,5,6'//send as Types of Feature
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/VehicleModel/GetFeatures',$.param(oFeature), config).then(
                        function (response)
                        {
                            var oColumns = [];
                            var oColumn = { field: 'FeatureCode', name: 'Code',width: '20%'  };oColumns.push(oColumn);
                            oColumn = { field: 'FeatureName', name: 'Name',width: '30%', enableSorting: false  };oColumns.push(oColumn);
                            oColumn = { field: 'Price', name: 'Price',width: '15%', cellFilter:'number:2',cellClass:'text-right', enableSorting: false  };oColumns.push(oColumn);
                            oColumn = { field: 'FeatureTypeST', name: 'Type',width: '35%', enableSorting: false  };oColumns.push(oColumn);
                            var results=jQuery.parseJSON(response.data);
                            for(var i=0;i<results.length;i++)
                            {
                                results[i].FeatureTypeST=results[i].FeatureTypeST+(results[i].ModelNo==''? '':' ['+results[i].ModelNo+']');
                            }
                            var modalObj={
                                size:'lg',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:true,
                                pickertitle:'Feature List',
                                searchingbyfieldName:'FeatureName',
                                columns:oColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                debugger;
                                if(result.length>0)
                                {
                                    for(var i=0;i<result.length;i++)
                                    {
                                        var oModelFeatures = $scope.gridOptionsModelFeature.data;
                                        if(!icsMethod.ICS_IsExist(oModelFeatures,'FeatureID', result[i].FeatureID))
                                        {
                                            debugger;
                                            var oModelFeature = {
                                                ModelFeatureID:0,
                                                VehicleModelID:$scope.VehicleModel.VehicleModelID,
                                                FeatureID :result[i].FeatureID,
                                                Sequence : parseInt(oModelFeatures.length)+1,
                                                FeatureCode:result[i].FeatureCode,
                                                FeatureName :result[i].FeatureName,
                                                FeatureTypeST:result[i].FeatureTypeST,
                                                FeatureTypeInInt:result[i].FeatureTypeInInt
                                            };
                                            $scope.gridOptionsModelFeature.data.push(oModelFeature);
                                        }
                                    }
                                    $scope.RefreshDetail();
                                }
                                $scope.txtFeatureName='';
                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);}
                    );

        };
        $scope.SearchKeyFeatureNo = function (e) {
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var txtFeatureName = $.trim($scope.txtFeatureName);
                if(txtFeatureName=="" || txtFeatureName==null)
                {
                    alert("Type Sheet No and Press Enter");
                    return;
                }
                $scope.PickFeature();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.txtFeatureName='';
            }
        };
        $scope.RemoveDetail = function ()
        {
            debugger;
            var oMLCDetails = $scope.gridDetailApi.selection.getSelectedRows();
            if(oMLCDetails.length <= 0)
            {
                alert("Select At least One item !");
                return;
            }
            if (!confirm("Confirm to Delete?")) return ;
            for(var i = 0;i<oMLCDetails.length;i++){
                var SelectedRowIndex=$scope.gridOptionsModelFeature.data.indexOf(oMLCDetails[i]);
                $scope.gridOptionsModelFeature.data.splice(SelectedRowIndex,1);
                
            }
            $scope.RefreshDetail();
        };
        $scope.Save = function ()
        {
            debugger;

            if(!$scope.ValidateInput()) return;
            var oVehicleModel= $scope.VehicleModel;
            oVehicleModel.ModelFeatures = $scope.gridOptionsModelFeature.data;

            $http.post(sessionStorage.getItem('BaseAddress')+'/VehicleModel/Save',oVehicleModel).then(
                        function (response)
                        {
                            var oVehicleModel= jQuery.parseJSON(response.data);
                            if (oVehicleModel.ErrorMessage=="" || oVehicleModel.ErrorMessage==null)
                            {
                                alert("Data Save Successfully!!");
                                userSession.setData('VehicleModelList',oVehicleModel);
                                userSession.previousPage();
                                //var oVehicleModels = sessionStorage.getItem("VehicleModelList");
                                //var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                                //if (oVehicleModels != null) {
                                //    oVehicleModels = jQuery.parseJSON(oVehicleModels);
                                //}
                                //else {
                                //    oVehicleModels = [];
                                //}
                                //if (nIndex != -1) {
                                //    oVehicleModels[nIndex] = oVehicleModel;
                                //}
                                //else {
                                //    sessionStorage.setItem("SelectedRowIndex", oVehicleModels.length);
                                //    oVehicleModels.push(oVehicleModel);
                                //}
                                //sessionStorage.setItem("VehicleModelList", JSON.stringify(oVehicleModels));
                                //window.location.href = sessionStorage.getItem("BackLink");
                            }
                            else
                            {
                                alert(oVehicleModel.ErrorMessage);
                            }

                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);$scope.MeasurementUnits=[];}
                    );

        };

        $scope.ValidateInput =  function ()
        {
            debugger;
            if($scope.VehicleModel.ModelNo=="" || $scope.VehicleModel.ModelNo==null)
            {
                alert('Please Type Model No.');
                return false;
            }
            if($scope.VehicleModel.ModelCategoryID==0)
            {
                alert('Please Select Model Category.');
                return false;
            }

            if ($scope.VehicleModel.ModelSessionID == null || $scope.VehicleModel.ModelSessionID <= 0) {
                alert("Please Select Session!");
                return false;
            }
            if ($scope.VehicleModel.DriveType == null || $scope.VehicleModel.DriveType <= 0) {
                alert("Please Select Drive Type!");
                return false;
            }
            if($scope.VehicleModel.CurrencyID==0)
            {
                alert('Please Select Currency.');
                return false;
            }
            if($scope.VehicleModel.MinPrice==0)
            {
                alert('Starting Price Should be Greater than 0.');
                return false;
            }
            if($scope.VehicleModel.MinPrice>$scope.VehicleModel.MaxPrice)
            {
                alert('Maximum Price Should be Greater than Minimum Price.');
                return false;
            }
            if($scope.gridOptionsModelFeature.data.length <=0){alert("Please Add Model Feature");  return false;}

            return true;
        };

        if(sessionStorage.getItem("VehicleModelHeader")=="View Vehicle Model")
        {
            $("#divVehicleModel :input").prop('disabled', true);
            $('#btnclose').prop('disabled', false);
        }


        $scope.UP = function ()
        {
            debugger;
            $scope.ModelFeatures = $scope.gridOptionsModelFeature.data;
            var oModelFeature = $scope.gridDetailApi.selection.getSelectedRows()[0];
            if(oModelFeature==null || parseInt(oModelFeature.FeatureID)<=0)
            {
                alert("Please select Model Feature");
                return;
            }
            var SelectedRowIndex=0;
            angular.forEach($scope.gridOptionsModelFeature.data, function (value, index)
            {
                if (value.FeatureID == oModelFeature.FeatureID)
                {
                    SelectedRowIndex = index;
                }
            }, $scope.gridOptionsModelFeature.data);

            if(SelectedRowIndex==0)return;
            var oModelFeatures=[];
            oModelFeatures= $scope.ModelFeatures;
            $scope.ModelFeatures=[];
            for(var i=0; i<oModelFeatures.length; i++)
            {
                if(i==(SelectedRowIndex-1))
                {
                    if(parseInt(oModelFeature.FeatureTypeInInt)==parseInt(oModelFeatures[i+1].FeatureTypeInInt))
                    {
                        $scope.ModelFeatures[i]=oModelFeatures[i+1];
                    }else{
                        break;
                    }
                }
                else if(i==SelectedRowIndex)
                {
                    if(parseInt(oModelFeature.FeatureTypeInInt)==parseInt(oModelFeatures[i-1].FeatureTypeInInt))
                    {
                        $scope.ModelFeatures[i]=oModelFeatures[i-1];
                    }else{
                        break;
                    }
                }
                else
                {
                    $scope.ModelFeatures[i]=oModelFeatures[i];
                }
                $scope.ModelFeatures[i].Sequence=i+1;
            }
            $scope.gridOptionsModelFeature.data =  $scope.ModelFeatures;
            var newSelectedRowIndex=SelectedRowIndex-1;
            $scope.gridDetailApi.selection.selectRow(newSelectedRowIndex);

        }
        $scope.Down =  function ()
        {
            debugger;
            $scope.ModelFeatures = $scope.gridOptionsModelFeature.data;
            var oModelFeature = $scope.gridDetailApi.selection.getSelectedRows()[0];
            if(oModelFeature==null || parseInt(oModelFeature.FeatureID)<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var SelectedRowIndex=0;
            angular.forEach($scope.gridOptionsModelFeature.data, function (value, index)
            {
                if (value.FeatureID == oModelFeature.FeatureID)
                {
                    SelectedRowIndex = index;
                }
            }, $scope.gridOptionsModelFeature.data);
            if(SelectedRowIndex==($scope.ModelFeatures.length-1))return;
            var oModelFeatures=[];
            oModelFeatures=$scope.ModelFeatures;
            $scope.ModelFeatures=[];
            for(var i=0; i<oModelFeatures.length; i++)
            {
                if(i==(SelectedRowIndex+1))
                {
                    $scope.ModelFeatures[i]=oModelFeatures[i-1];
                }
                else if(i==SelectedRowIndex)
                {
                    $scope.ModelFeatures[i]=oModelFeatures[i+1];
                }
                else
                {
                    $scope.ModelFeatures[i]=oModelFeatures[i];
                }
                $scope.ModelFeatures[i].Sequence=i+1;
            }

            $scope.gridOptionsModelFeature.data =$scope.ModelFeatures
            var newSelectedRowIndex=SelectedRowIndex+1;
            $scope.gridDetailApi.selection.selectRow(newSelectedRowIndex);

        }

        $scope.Close=function ()
        {
            window.location.href = sessionStorage.getItem("BackLink");
        };


    });

</script>