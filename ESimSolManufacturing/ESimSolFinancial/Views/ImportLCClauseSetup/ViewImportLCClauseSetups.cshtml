@{
    ViewBag.Title = "Import LC Clause SetUp";
}


 @model IEnumerable<ESimSol.BusinessObjects.ImportLCClauseSetup>
                      
 <div ng-app="ILCSUApp" class="form-horizontal" ng-controller="ILCSUCntrl">

  <div class="row ui-grid-top-panel regionILCSU">
        <div class="container">
            <div class="form-inline">
                <input type="text" ng-model="Clause" ng-change="filter()" class="form-control"  placeholder="Search Clause " ng-keyup="searchClauseKeyUp($event)" />
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="search()"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span> Search</button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="add()"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Add</button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="edit()"> <span class="glyphicon glyphicon-edit" aria-hidden="true"></span> Edit</button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="delete()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Delete</button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="activity()" ng-hide="btnActive"> <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Active</button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="activity()" ng-hide="btnInActive"> <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Inactive</button>
               
            </div>
        </div>
   </div>
  <div ui-grid="gridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav class="grid-angular ui-grid-selectable"></div>

<script type="text/ng-template" id="ImportLCClauseSetup.html">
                <div class="modal-header">
                    <h3 class="modal-title" id="modal-title">Import LC Clause Setup</h3>
                </div>
                <div class="modal-body form-horizontal regionILCSU" id="modal-body">
                    <div class="row">
                       <div class="col-md-12">
                           <div class="col-md-2 text-right"><label class="control-label">Clause:</label></div>
                           <div class="col-md-10 text-left">
                               <input ng-model="ILCS.Clause" class="form-control">
                           </div>
                       </div>
                  </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-2 text-right"><label class="control-label">Business Unit:</label></div>
                            <div class="col-md-10 text-left">

                                <select class="form-control" ng-model="ILCS.BUID" ng-options="item.BusinessUnitID as item.Name for item in BusinessUnits">
                                   
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-2 text-right"><label class="control-label">LC PaymentType:</label></div>
                            <div class="col-md-10 text-left">
                                <select class="form-control" ng-model="ILCS.LCPaymentType" ng-options="item.id as item.Value for item in LCPaymentTypes">
                                    <option value="">---- Select Lc PaymentType----</option>
                                </select>
                            </div>
                        </div>
                        
                    </div>
                    <div class="row">
                        <div class=" col-md-12">
                            <div class="col-md-2 text-right"><label class="control-label">LC AppType:</label></div>
                            <div class="col-md-10 text-left">

                                <select class="form-control" ng-model="ILCS.LCAppType" ng-options="item.id as item.Value for item in LCAppTypes">
                                    <option value="">---- Select LC AppType----</option>
                                </select>
                            </div>
                        </div>
                  </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-2 text-right"><label class="control-label">Product Type:</label></div>
                            <div class="col-md-10 text-left">

                                <select class="form-control" ng-model="ILCS.ProductType" ng-options="item.id as item.Value for item in ProductNatures">
                                    <option value="">---- Select Product Type----</option>
                                </select>
                            </div>
                        </div>
                     </div>
                    <div class="row ">
                        <div class="col-md-12">
                            <div class="col-md-2 text-right"><label class="control-label"><input type="checkbox" ng-model="ILCS.IsMandatory" /></label></div>
                            <div class="col-md-10 text-left">

                                <label class="control-label">Is Mandatory</label> 
                            </div>
                        </div>
                        
                    </div>
                    <div class="row">
                        <div class=" col-md-12">
                            <div class="col-md-2 text-right"><label class="control-label"><input type="checkbox" ng-model="ILCS.Activity" /></label></div>
                            <div class="col-md-10 text-left">

                                <label class="control-label">Is Active</label>
                            </div>
                        </div>
                      
                    </div>
                   
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-success" aria-label="Left Align" ng-click="Save()"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> Save</button>
                    <button type="button" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="Cancel()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel</button>
                </div>
            </script>

     <script type="text/ng-template" id="ImportLCClauseSetupSearch.html">
         <div class="modal-header">
             <h3 class="modal-title" id="modal-title">Import LC Clause Setup</h3>
         </div>
         <div class="modal-body form-horizontal regionILCSU" id="modal-body">
             <div class="row">
                 <div class="col-md-12">
                     <div class="col-md-2 text-right"><label class="control-label">Clause:</label></div>
                     <div class="col-md-10 text-left">
                         <input ng-model="ILCS.Clause" class="form-control">
                     </div>
                 </div>
             </div>
             <div class="row">
                 <div class="col-md-12">
                     <div class="col-md-2 text-right"><label class="control-label">Business Unit:</label></div>
                     <div class="col-md-10 text-left">

                         <select class="form-control" ng-model="ILCS.BUID" ng-options="item.BusinessUnitID as item.Name for item in BusinessUnits"></select>
                     </div>
                 </div>
             </div>
             <div class="row">
                 <div class="col-md-12">
                     <div class="col-md-2 text-right"><label class="control-label">LC PaymentType:</label></div>
                     <div class="col-md-10 text-left">
                         <select class="form-control" ng-model="ILCS.LCPaymentType" ng-options="item.id as item.Value for item in LCPaymentTypes">
                             <option value="">---- Select Lc PaymentType----</option>
                         </select>
                     </div>
                 </div>

             </div>
             <div class="row">
                 <div class=" col-md-12">
                     <div class="col-md-2 text-right"><label class="control-label">LC AppType:</label></div>
                     <div class="col-md-10 text-left">

                         <select class="form-control" ng-model="ILCS.LCAppType" ng-options="item.id as item.Value for item in LCAppTypes">
                             <option value="">---- Select LC AppType----</option>
                         </select>
                     </div>
                 </div>
             </div>
             <div class="row">
                 <div class="col-md-12">
                     <div class="col-md-2 text-right"><label class="control-label">Product Type:</label></div>
                     <div class="col-md-10 text-left">

                         <select class="form-control" ng-model="ILCS.ProductType" ng-options="item.id as item.Value for item in ProductNatures">
                             <option value="">---- Select Product Type----</option>
                         </select>
                     </div>
                 </div>
             </div>
             <div class="row ">
                 <div class="col-md-12">
                     <div class="col-md-2 text-right"><label class="control-label"><input type="checkbox" ng-model="ILCS.IsMandatory" /></label></div>
                     <div class="col-md-10 text-left">

                         <label class="control-label">Is Mandatory</label>
                     </div>
                 </div>

             </div>
             <div class="row">
                 <div class=" col-md-12">
                     <div class="col-md-2 text-right"><label class="control-label"><input type="checkbox" ng-model="ILCS.Activity" /></label></div>
                     <div class="col-md-10 text-left">

                         <label class="control-label">Is Active</label>
                     </div>
                 </div>

             </div>

         </div>

         <div class="modal-footer">
             <label ng-hide="lblLoadingMessage" style="float:left;color:green; ">Loading Please Wait...</label>
             <button class="btn btn-success" type="button" ng-click="reset()">Reset</button>
             <button class="btn btn-primary" type="button" ng-click="advancedSearch()">Search</button>
             <button class="btn btn-warning" type="button" ng-click="closeAdvanceSearchModal()">Close</button>
         </div>
     </script>
 </div>

 <style type="text/css">
            .regionILCSU .form-control {
                height: 26px;
                padding: 0px 6px;
                font-size: 12px;
            }

            .grid-angular {
                height: 520px;
                width: 100%;
            }

            .regionILCSU .btn-sm {
                padding: 3px 10px;
            }

            .regionILCSU .col-md-12 {
                width: 100%;
                padding-right: 5px;
                padding-left: 5px;
                margin-bottom: 5px;
            }

            .regionILCSU .col-md-2 {
                width: 19%;
                padding-right: 5px;
                padding-left: 5px;
            }

            .regionILCSU .col-md-10 {
                width: 77%;
                padding-right: 5px;
                padding-left: 5px;
            }

            .regionILCSU .btn-sm {
                padding: 3px 10px;
            }

            .modal-dialog {
                width: 800px;
            }
        </style>

<script type="text/javascript">

    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));

    var oImportLcSetups =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));

    var oLCPaymentTypes = @Html.Raw(Json.Encode(ViewBag.LCPaymentTypes));
    var oLCAppTypes = @Html.Raw(Json.Encode(ViewBag.LCAppTypes));
    var oProductNatures = @Html.Raw(Json.Encode(ViewBag.ProductNatures)); 
    var oBusinessUnits = @Html.Raw(Json.Encode(ViewBag.BusinessUnits));

    var  ImportLcClauseSetUpApp = angular.module('ILCSUApp', ['ngAnimate','ui.bootstrap','ui.grid','ui.grid.selection','ui.grid.resizeColumns','ms.service']);
    sessionStorage.setItem('BUID',nBUID);
    ImportLcClauseSetUpApp.controller('ILCSUCntrl', function ($scope,$http,$uibModal,$log,uiGridConstants,msModal,userSession)
{

        $scope.LCPaymentTypes =oLCPaymentTypes;
        $scope.LCAppTypes =oLCAppTypes;
        $scope.ProductNatures =oProductNatures;
        $scope.BusinessUnits = oBusinessUnits;


        $scope.gridOptions ={
            enableRowSelection: true,
            enableRowHeaderSelection: false,
            multiSelect: false,
            enableColumnResizing: true,
            showColumnFooter: true,
            enableHorizontalScrollbar: uiGridConstants.scrollbars.ALWAYS,
            enableHorizontalScrollbar : 2,
            enableVerticalScrollbar : 2,

            columnDefs: [
                {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{rowRenderIndex+1}}</span></div>',cellClass: 'text-center', enableSorting:false, enableColumnResizing:false, enableColumnMenu:false,enableCellEdit:false},
                { field: 'Clause', name: 'Clause', width:'40%',  cellClass: 'text-left' },
                { field: 'LCPaymentTypeStr', name: 'LCPaymentType', width: '10%' ,  cellClass: 'text-left' },
                { field: 'LCAppTypeStr', name: 'LCAppType', width: '10%' ,  cellClass: 'text-left' },
                { field: 'ProductTypeStr', name: 'ProductType', width: '10%' ,  cellClass: 'text-left' },
                { name: 'Is Mandatory', cellClass: 'text-center', cellTemplate: '<div style="padding-top:5px;" ng-if="row.entity.IsMandatory==true"><span class="glyphicon glyphicon-ok btn-primary btn-large" aria-hidden="true"></span></div><div style="padding-top:5px;" ng-if="row.entity.IsMandatory==false"><span class="glyphicon glyphicon-remove btn-danger btn-large" aria-hidden="true"></span></div>', cellClass: 'text-center', width:'6%', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false },
                { name: 'Activity', cellClass: 'text-center', cellTemplate: '<div style="padding-top:5px;" ng-if="row.entity.Activity==true"><span class="glyphicon glyphicon-ok btn-primary" aria-hidden="true"></span></div><div style="padding-top:5px;" ng-if="row.entity.Activity==false"><span class="glyphicon glyphicon-remove btn-danger btn-large" aria-hidden="true"></span></div>', cellClass: 'text-center', width:'6%', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false }
                
            ],
            data:oImportLcSetups,
            onRegisterApi:function(gridApi) {
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.on.rowSelectionChanged($scope, function (row) {
                    $scope.RowSelect(row.entity );
                });

            }
        };
        $scope.btnActive = false; $scope.btnInActive =true;
        $scope.RowSelect = function(oILCS){
            if(oILCS.Activity == true)
            {
                $scope.btnInActive = false;
                $scope.btnActive = true;
            }
            else if (oILCS.Activity==false){
                $scope.btnInActive = true;
                $scope.btnActive = false;
            }
            else{
                $scope.btnActive = false;
                $scope.btnInActive =true;
            }
           
         
        }

        $scope.delete = function () 
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();

            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'No item found to delete.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            msModal.Message({headerTitle : '', bodyText:'Are you sure to Delete?.', sucessText : ' Ok', cancelText : ' Cancel', feedbackType:true, autoClose : false}).result.then(function(result){
                if(result){
                    $http.post(_sBaseAddress+'/ImportLCClauseSetup/Delete',JSON.stringify(data[0])).then(
                        function (response) {
                            if(jQuery.parseJSON(response.data)=='Deleted'){
                                angular.forEach($scope.gridOptions.data,function(value,index){
                                    if(value.ImportLCClauseSetupID==data[0].ImportLCClauseSetupID){
                                        $scope.gridOptions.data.splice(index,1);
                                    }
                                },$scope.gridOptions.data);
                                msModal.Message({headerTitle : '', bodyText:'Deleted Successfully!.',sucessText : ' Ok',  cancelText : ' Close', feedbackType:false, autoClose : false});
                            }
                            else{
                                alert(jQuery.parseJSON(response.data));
                            }
                        },
                        function (response) {alert(jQuery.parseJSON(response.data));}
                    );
                }
            });

        };

        $scope.add = function () {

            $scope.Modal(null, 'add');
        };

        $scope.search = function () {

            $scope.Modal(null, 'add');
        };

        $scope.edit = function () {
            var data = $scope.gridApi.selection.getSelectedRows();
            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'No item Selected.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.ImportLCClauseSetupID == data[0].ImportLCClauseSetupID) {
                    $scope.index=index;
                    $scope.Modal($scope.gridOptions.data[index], 'edit');
                }
            }, $scope.gridOptions.data);
        };

        $scope.Modal = function (obj, operation, url) {
            debugger;
            var modalInstance = $uibModal.open({
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'sm',
                templateUrl: 'ImportLCClauseSetup.html',
                controller: 'ModalInstanceCtrl',
                controllerAs: 'ILCSUCntrl',
                resolve: {
                    obj: function () {
                        return {
                            ILCS: obj,
                            operation: operation,
                            LCPaymentTypes:$scope.LCPaymentTypes,
                            LCAppTypes:$scope.LCAppTypes,
                            ProductNatures:$scope.ProductNatures,
                            BusinessUnits: $scope.BusinessUnits};
                    }
                }
            });

            modalInstance.result.then(function (result) {
                if(operation=='add'){
                    $scope.gridOptions.data.push(result);
                    if(result.ImportLCClauseSetupID>0){
                        $scope.ILCS=result;
                        userSession.setData('ILCS',$scope.ILCS);
                        $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                        $scope.gridApi.selection.selectRow($scope.gridOptions.data[0]);
                    }
                }
                else{
                    $scope.gridOptions.data[$scope.index]=result;
                    $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                    $scope.gridApi.selection.selectRow($scope.gridOptions.data[$scope.index]);
                }
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };

        $scope.search = function () {
            $scope.Clause="";
            $scope.SearchModal(null, 'add');
        };

        $scope.SearchModal = function (obj, operation, url) {
            debugger;
            var modalInstance = $uibModal.open({
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'sm',
                templateUrl: 'ImportLCClauseSetupSearch.html',
                controller: 'ModalInstanceSearchCtrl',
                controllerAs: 'ILCSUCntrl',
                resolve: {
                    obj: function () {
                        return {
                            ILCS: obj,
                            operation: operation,
                            LCPaymentTypes:$scope.LCPaymentTypes,
                            LCAppTypes:$scope.LCAppTypes,
                            ProductNatures:$scope.ProductNatures,
                            BusinessUnits: $scope.BusinessUnits};
                    }
                }
            });

            modalInstance.result.then(function (result) {
                    $scope.gridOptions.data = result;
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };

        
        $scope.Clause ="";
        
        $scope.searchClauseKeyUp = function () {
            var obj = {
                Text:$scope.Clause
            }
             $http.post(_sBaseAddress+'/ImportLCClauseSetup/AdvSearch', JSON.stringify(obj)).then(
                  function (response) {
                      var results = jQuery.parseJSON(response.data);
                      if (results.length > 0) {
                          $scope.gridOptions.data=results;
                      } else {
                          msModal.Message({ headerTitle: '', bodyText: 'No Data Found !!', sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                          // alert("Data Not Found.");
                          return;
                      }

                  },
                  function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage); }
            );
        };
        $scope.activity = function () 
        {
            var data=$scope.gridApi.selection.getSelectedRows();

            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'No item Selected.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            angular.forEach($scope.gridOptions.data,function(value,index){
                if(value.ImportLCClauseSetupID==data[0].ImportLCClauseSetupID){
                    $http.post(_sBaseAddress+'/ImportLCClauseSetup/ActivityChange', JSON.stringify(data[0])).then(

                        function (response) {
                            var result=jQuery.parseJSON(response.data);
                            if(result.ImportLCClauseSetupID>0)
                            {
                                debugger;
                                $scope.gridOptions.data[index]=result;
                                $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                                $scope.gridApi.selection.selectRow(result);
                            }
                            else{
                                alert(result.ErrorMessage);
                            }
                        },
                        function (response) {
                            msModal.Message({headerTitle : '', bodyText:""+jQuery.parseJSON(response.data).ErrorMessage+"", sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});

                        }
               );
           }
            },$scope.gridOptions.data);
        };

});

    ImportLcClauseSetUpApp.controller('ModalInstanceCtrl', function ($scope, $http, $uibModalInstance, msModal, obj) {
     debugger;

    $scope.operation=obj.operation;
    $scope.LCPaymentTypes = obj.LCPaymentTypes;
    $scope.LCAppTypes = obj.LCAppTypes;
    $scope.ProductNatures = obj.ProductNatures;
    $scope.BusinessUnits = obj.BusinessUnits;

    if(obj.ILCS!=null){
        $scope.ILCS = obj.ILCS;
    }
    else{
        $scope.ILCS={
        ImportLCClauseSetupID :0,
        Activity :false,
        Text:"",
        BUID:parseInt(sessionStorage.getItem('BUID')),
        SL :0,
        LCPaymentType :"",
        LCAppType :"",
        ProductType :"",
        IsMandatory : false
        }
    }
    
    $scope.Save = function () 
    {
        debugger;
        if(! $scope.Validation())
            return false;
        
        $http.post(_sBaseAddress+'/ImportLCClauseSetup/Save', JSON.stringify($scope.ILCS)).then(

                    function (response) {
                        debugger;
                        var result=jQuery.parseJSON(response.data);
                        if(result.ImportLCClauseSetupID>0)
                        {
                            $uibModalInstance.close(result);
                        }
                        else{
                            msModal.Message({headerTitle : '', bodyText:""+result.ErrorMessage+"", sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});

                        }
                    },
                    function (response) {
                        msModal.Message({headerTitle : '', bodyText:""+jQuery.parseJSON(response.data).ErrorMessage+"", sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});

                    }
           );
     };

    $scope.Validation = function()
    {
        debugger;
        if($scope.ILCS.Clause=="" ||$scope.ILCS.Clause== undefined){

            msModal.Message({headerTitle : '', bodyText:'Text Required!.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
            return false;
        }
        else if($scope.ILCS.BUID=="" ||$scope.ILCS.BUID<=0){

            msModal.Message({headerTitle : '', bodyText:'Bussiness Unit Required!.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
            return false;
        }
       
        return  true;
    };

    $scope.Cancel = function () 
    {
       $uibModalInstance.dismiss('cancel');
    };

    });


    ImportLcClauseSetUpApp.controller('ModalInstanceSearchCtrl', function ($scope, $http, $uibModalInstance, msModal, obj) {
        debugger;

        $scope.reset = function () {
            $scope.operation=obj.operation;
            $scope.LCPaymentTypes = obj.LCPaymentTypes;
            $scope.LCAppTypes = obj.LCAppTypes;
            $scope.ProductNatures = obj.ProductNatures;
            $scope.BusinessUnits = obj.BusinessUnits;
            $scope.ILCS={
                ImportLCClauseSetupID :0,
                Activity :false,
                Text:"",
                BUID:parseInt(sessionStorage.getItem('BUID')),
                SL :0,
                LCPaymentType :"",
                LCAppType :"",
                ProductType :"",
                IsMandatory : false
            }
        }
        $scope.reset();
    
       

        $scope.advancedSearch = function () {
            debugger;
            $scope.lblLoadingMessage = false;
            var obj = $scope.ILCS;
           
            
             
            if (obj.Text == null && obj.LCPaymentType <=0 && obj.LCPaymentType == null && obj.LCAppType <=0 && obj.LCAppType == null &&  obj.ProductType <=0 &&  obj.ProductType == null &&  obj.Activity == false && obj.IsMandatory == false) 
            {
                debugger;
              
                msModal.Message({ headerTitle: '', bodyText: 'All Fields are empty !!', sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                   
                $scope.lblLoadingMessage = false;
                return false;
            }
        
            $http.post(_sBaseAddress+'/ImportLCClauseSetup/AdvSearch', JSON.stringify(obj)).then(
                        function (response) {
                            debugger;
                            $scope.lblLoadingMessage = true;
                            var results = jQuery.parseJSON(response.data);
                            if (results.length > 0) {
                                $uibModalInstance.close(results);
                            } else {
                                msModal.Message({ headerTitle: '', bodyText: 'No Data Found !!', sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                                
                                return;
                            }

                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message); }
                    );
        };
        
        $scope.closeAdvanceSearchModal = function () 
        {
            $uibModalInstance.dismiss('cancel');
        };

    });


</script>
