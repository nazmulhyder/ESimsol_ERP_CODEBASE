<html>
<head>
    <title>Daily Attendance</title>
    <link href="@Url.Content("~/Content/CSS/icon.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/easyui.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/Pikerstyle.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.ics.customize.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.easyui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/json2.js")" type="text/javascript"></script>
</head>
<body>
    @model ESimSol.BusinessObjects.AttendanceDaily
    <div style="font-family: Tahoma">
        <table border="0" cellspacing="2" cellpadding="2">
            <tr>
                <td style="background-color: #cfb53b; text-align: center; width: 600px; color: White">
                    <label id="lblHeaderName" style="font-size: 15px; font-weight: bold; text-decoration: Underline">
                        Daily Attendance
                    </label>
                </td>
            </tr>
        </table>
        <fieldset>
            <legend style="font-weight: bold">Daily Attendance Information : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">

                <tr>
                    <td style="width: 110px; text-align: right">
                        In Time :
                    </td>
                    <td>
                        <input id="timeSpinner" class="easyui-timespinner" style="width: 170px;" requird="required"
                               data-options="showSeconds:false" />
                    </td>
                    <td style="width: 110px; text-align: right">
                        Out Time :
                    </td>
                    <td style="width: 155px">
                        <input id="txtOutTime" class="easyui-timespinner" style="width: 150px;" requird="required"
                               data-options="showSeconds:false" />
                    </td>
                </tr>
                <tr>
                    <td style="width: 110px; text-align: right">
                        Late :
                    </td>
                    <td>
                        <input type="text" id="txtLate" style="width: 115px;" />(Minutes)
                    </td>
                    <td style="width: 110px; text-align: right">
                        Early Leaving :
                    </td>
                    <td style="width: 155px">
                        <input type="text" id="txtEarlyLeaving" style="width: 95px;" />(Minutes)
                    </td>
                </tr>
                <tr>
                    <td style="width: 110px; text-align: right">
                        Over Time :
                    </td>
                    <td>
                        <input type="text" id="txtOverTime" style="width: 115px;" />(Minutes)
                    </td>
                    <td style="width: 110px; text-align: right">
                        Select Date :
                    </td>
                    <td style="width: 155px;">
                        <input id="txtSelectDate" type="text" style="width: 150px" class="easyui-datebox"
                               required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        @*<input type="button" value="Get" onclick="GetAttendance()" style="width: 40px;" />*@
                    </td>
                </tr>
                <tr>
                    <td style="width: 110px; text-align: right">
                        Working Status :
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.WorkingStatus, new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumEmployeeWorkigStatus))), new { id = "cboWorkingStatus", style = "width: 170px;" })
                    </td>
                    <td style="width: 110px; text-align: right">
                        Note :
                    </td>
                    <td>
                        <input type="text" id="txtNote" style="width: 150px" />
                    </td>
                </tr>
                <tr>
                    <td style="width: 110px; text-align: right"></td>
                    <td colspan="3">
                        <input id="chkDayOff" type="checkbox" /> Day Off
                    </td>
                </tr>
                <tr>
                    <td style="width: 110px; text-align: right"></td>
                    <td colspan="3">
                        <table id="tblEmployee" class="easyui-datagrid" style="width: 450px; height: 150px;
                            font-size: 11px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true"
                               autorowheight="false">
                            <thead>
                                <tr>
                                    <th field="Name" width="240" align="left">
                                        Name
                                    </th>
                                    <th field="DesignationName" width="150" align="left">
                                        Designation
                                    </th>
                                </tr>
                            </thead>
                        </table>
                    </td>
                </tr>
                <tr>
                    <td style="text-align:right;"><input id="chkinTimeRandom" type="checkbox" checked />Random In</td>
                    <td>

                        <input id="inTimeRandomStart" class="easyui-timespinner" style="width: 70px;" requird="required"
                               data-options="showSeconds:false" /> To
                        <input id="inTimeRandomEnd" class="easyui-timespinner" style="width: 70px;" requird="required"
                               data-options="showSeconds:false" />
                    </td>
                    <td style="text-align:right;"><input id="chkoutTimeRandom" type="checkbox" checked />Random Out</td>
                    <td>
                        <input id="outTimeRandomStart" class="easyui-timespinner" style="width: 67px;" requird="required"
                               data-options="showSeconds:false" /> To
                        <input id="outTimeRandomEnd" class="easyui-timespinner" style="width: 67px;" requird="required"
                               data-options="showSeconds:false" />
                    </td>
                </tr>
            </table>
        </fieldset>
        <fieldset>
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
                <tr>
                    <td style="width: 440px; text-align: right"></td>
                    <td style="width: 50px">
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save"
                           plain="true" onclick="Save()">Save</a>
                    </td>
                    <td style="width: 50px">
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true"
                           onclick="Close()">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>
<script type="text/javascript">
    var _oAttendanceDaily = null;
    var _sBaseAddress = "";
    var _nEmployeeID=0;
    var _oEmployee ="";
    var _DayOff=false;
    var _Leave=false;
    var _Paid=false;

    $(document).ready(function() {

        _sBaseAddress = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oAttendanceDaily = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));

        var obj = window.dialogArguments;
        RefreshList(obj);

        $('#txtLate').numberbox({min:0, precision:0 });
        $('#txtEarlyLeaving').numberbox({min:0, precision:0 });
        $('#txtOverTime').numberbox({min:0, precision:0 });

        if (_oAttendanceDaily.AttendanceID>0)
        {
            SetAttendance();
        }

        if (obj.Name == "View AttendanceDaily")
        {
            document.getElementById('btnSave').style.display = 'none';
        }
        if(obj[0].ErrorMessage == "")
        {
            $('#txtSelectDate').datebox('setValue', _oAttendanceDaily.AttendanceDateInString);
        }
        else
        {
            $('#txtSelectDate').datebox('setValue',obj[0].ErrorMessage);
        }
        document.getElementById('cboWorkingStatus').selectedIndex = 1;

        $('#txtLate').numberbox('setValue', 0);
        $('#txtEarlyLeaving').numberbox('setValue', 0);
        $('#txtOverTime').numberbox('setValue', 0);
        $('#timeSpinner').timespinner('setValue', '08:00');
        $('#txtOutTime').timespinner('setValue', '17:00');

        $('#inTimeRandomStart').timespinner('setValue', '07:45');
        $('#inTimeRandomEnd').timespinner('setValue', '08:13');
        $('#outTimeRandomStart').timespinner('setValue', '16:57');
        $('#outTimeRandomEnd').timespinner('setValue', '17:10');
    });

    function RefreshList(oEmployees)
    {
        data = oEmployees ;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblEmployee').datagrid('loadData', data);

    }

    function SetAttendance()
    {

        $('#timeSpinner').timespinner('setValue', _oAttendanceDaily.InTimeInString);
        $('#txtOutTime').timespinner('setValue', _oAttendanceDaily.OutTimeInString);
        $("#txtNote")[0].value=_oAttendanceDaily.Note;
        $('#txtLate').numberbox('setValue', _oAttendanceDaily.LateArrivalMinute);
        $('#txtEarlyLeaving').numberbox('setValue', _oAttendanceDaily.EarlyDepartureMinute);
        $('#txtOverTime').numberbox('setValue', _oAttendanceDaily.OverTimeInMinute);

        var ddl=document.getElementById('cboWorkingStatus')
        var opts = ddl.options.length;
        for (var i=0; i<opts; i++){
            if (ddl.options[i].index == _oAttendanceDaily.WorkingStatus){
                ddl.options[i].selected = true;
                break;
            }
        }
    }

    function GetAttendance()
    {
        var sDate=$('#txtSelectDate').datebox('getValue');
        var tsv = ((new Date()).getTime()) / 1000;
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/AttendanceDaily/Get",
            traditional: true,
            data:  JSON.stringify({nEmpID:_nEmployeeID,sDate:sDate,ts:tsv}),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oAtd = jQuery.parseJSON(data);
                if (oAtd.AttendanceID > 0) {
                    _oAttendanceDaily=null;
                    _oAttendanceDaily=oAtd;
                    SetAttendance();
                }
                else {
                    alert('There is no attendance record by this date');
                    _oAttendanceDaily=null;
                    _oAttendanceDaily=oAtd;
                    _oAttendanceDaily.EmployeeID=_nEmployeeID;
                    SetAttendance();
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function  icsdateformat(date)
    {
        var mthNames = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
        var y = date.getFullYear();
        var m = date.getMonth();
        var d = date.getDate();
        var result= d +' '+ mthNames[m]+' '+ y;
        return result;
    }

    function ValidateInput()
    {
        //debugger;;
        var Inhr=$('#timeSpinner').timespinner('getHours');
        var Inmn=$('#timeSpinner').timespinner('getMinutes');
        var Outhr=$('#txtOutTime').timespinner('getHours');
        var Outmn=$('#txtOutTime').timespinner('getMinutes');

        //if (isNaN(Inhr) ||  Inhr<1 || Inhr>24)
        //{
        //     alert("Hour must be 1 to 24 !");
        //     $('#timeSpinner').focus();
        //     return false;
        //}
        if (isNaN(Inmn) ||  Inmn<0 || Inmn>60)
        {
            alert("Minute must be 0 to 60 !");
            $('#timeSpinner').focus();
            return false;
        }
        //if (isNaN(Outhr) || Outhr<1 || Outhr>24)
        //{
        //     alert("Hour must be 1 to 24 !");
        //     $('#txtOutTime').focus();
        //     return false;
        //}
        if (isNaN(Outmn) ||  Outmn<0 || Outmn>60)
        {
            alert("Minute must be 0 to 60 !");
            $('#txtOutTime').focus();
            return false;
        }
        //    if (document.getElementById("txtLate").value == null || document.getElementById("txtLate").value == ""|| document.getElementById("txtLate").value =="0")
        //    {
        //         alert("Please enter Late Time!");
        //         $('#txtLate').focus();
        //         return false;
        //    }
        //    if (document.getElementById("txtEarlyLeaving").value == null || document.getElementById("txtEarlyLeaving").value == ""|| document.getElementById("txtEarlyLeaving").value =="0")
        //    {
        //         alert("Please enter Early Leaving Time!");
        //         $('#txtEarlyLeaving').focus();
        //         return false;
        //    }
        //    if (document.getElementById("txtOverTime").value == null || document.getElementById("txtOverTime").value == ""|| document.getElementById("txtOverTime").value =="0")
        //    {
        //         alert("Please enter txtOverTime!");
        //         $('#txtOverTime').focus();
        //         return false;
        //    }
        if(document.getElementById("cboWorkingStatus").selectedIndex=="0")
        {
            alert("Please select working status!");
            $('#cboWorkingStatus').focus();
            return false;
        }
        var InTimeRandomStart = $('#inTimeRandomStart').timespinner('getValue');
        var InTimeRandomEnd = $('#inTimeRandomEnd').timespinner('getValue');
        var OutTimeRandomStart = $('#outTimeRandomStart').timespinner('getValue');
        var OutTimeRandomEnd = $('#outTimeRandomEnd').timespinner('getValue');
        var isinTimeRandom = $("#chkinTimeRandom").is(':checked');
        var isoutTimeRandom = $("#chkoutTimeRandom").is(':checked');

        if(isinTimeRandom==true)
        {
            if(InTimeRandomStart=="" || InTimeRandomEnd=="")
            {
                alert("Please enter rendom in time!");
                return false;
            }
        }
        if(isoutTimeRandom==true)
        {
            if(OutTimeRandomStart=="" || OutTimeRandomEnd=="")
            {
                alert("Please enter rendom out time!");
                return false;
            }
        }
        return true;
    }
    function AddInTime()
    {
        //debugger;;
        var nhr=$('#timeSpinner').timespinner('getHours');
        var nmin=$('#timeSpinner').timespinner('getMinutes');
        if(isNaN(nhr))
        {
            nhr=0;
        }
        if(isNaN(nmin))
        {
            nmin=0;
        }

        var snewDateTime=new Date();
        snewDateTime.setHours(nhr);
        snewDateTime.setMinutes(nmin);
        return snewDateTime.toString("dd MMM yyyy");

    }
    function AddOutTime()
    {


        var nhr=$('#txtOutTime').timespinner('getHours');
        var nmin=$('#txtOutTime').timespinner('getMinutes');
        if(isNaN(nhr))
        {
            nhr=0;
        }
        if(isNaN(nmin))
        {
            nmin=0;
        }

        var snewDateTime=new Date();
        snewDateTime.setHours(nhr);
        snewDateTime.setMinutes(nmin);
        return snewDateTime.toString("dd MMM yyyy");

    }
    function RefreshObject()
    {
        var oEmployees=$('#tblEmployee').datagrid('getRows');
        var sEmployeeID="";
        for(var i=0;i<oEmployees.length;i++)
        {
            if(oEmployees[i].EmployeeID>0)
            {
                sEmployeeID=sEmployeeID+oEmployees[i].EmployeeID+",";
            }

        }
        var sNewEmployeeID="";
        sNewEmployeeID=sEmployeeID.substring(0,sEmployeeID.length-1);

        //sRandom
        var InTimeRandomStart = $('#inTimeRandomStart').timespinner('getValue');
        var InTimeRandomEnd = $('#inTimeRandomEnd').timespinner('getValue');
        var OutTimeRandomStart = $('#outTimeRandomStart').timespinner('getValue');
        var OutTimeRandomEnd = $('#outTimeRandomEnd').timespinner('getValue');
        var isinTimeRandom = $("#chkinTimeRandom").is(':checked');
        var isoutTimeRandom = $("#chkoutTimeRandom").is(':checked');
        var Random = isinTimeRandom+"~"+InTimeRandomStart+"~"+InTimeRandomEnd+"~"+isoutTimeRandom+"~"+OutTimeRandomStart+"~"+OutTimeRandomEnd

        var oAttendanceDaily =
        {
            AttendanceID :_oAttendanceDaily.AttendanceID,
            EmployeeID :_nEmployeeID,
            AttendanceDate : $('#txtSelectDate').datebox('getValue') ,
            InTime : $('#timeSpinner').timespinner('getValue'),//dInTime,
            OutTime : $('#txtOutTime').timespinner('getValue'),//dOutTime,
            ActualInTime:$('#timeSpinner').timespinner('getValue'),
            ActualOutTime:$('#txtOutTime').timespinner('getValue'),
            LateArrivalMinute : $('#txtLate').numberbox('getValue') ,
            EarlyDepartureMinute : $('#txtEarlyLeaving').numberbox('getValue') ,
            OverTimeInMinute : $('#txtOverTime').numberbox('getValue') ,
            WorkingStatusInt : document.getElementById("cboWorkingStatus").selectedIndex,
            Note : $("#txtNote").val(),
            IsLock : true,
            IsDayOff : document.getElementById("chkDayOff").checked,
            ErrorMessage : sNewEmployeeID,
            sRandom:Random
        };

        return oAttendanceDaily;
    }

    function Save()
    {
        debugger;
        if (!ValidateInput()) return;
        var oAttendanceDaily = RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/AttendanceDaily/AttendanceDaily_IU",
            traditional: true,
            data: JSON.stringify(oAttendanceDaily),
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                debugger;
                var oAtd = jQuery.parseJSON(data);
                if (oAtd.AttendanceID > 0) {
                    alert("Data Saved sucessfully");
                    window.returnValue = oAtd;
                    //window.close();
                } else {
                    alert(oAtd.ErrorMessage);
                }
            },
            error: function(xhr, status, error) {
                alert(error);
            }
        });

    }

    //function EmployeePicker()
    //{
    //        var oParameter = new Object();
    //        oParameter.Name = "Employee Advance Search";
    //        oParameter.MultipleItemReturn=false;
    //        var url = _sBaseAddress + "/Employee_HRM/EmployeeHRMPiker";
    //        _oEmployee = window.showModalDialog(url, oParameter, 'dialogHeight:300px;dialogWidth:930px;dialogLeft:150;dialogRight:150;dialogTop:200;center:yes;resizable:yes;status:no;scroll:no');
    //        _nEmployeeID=_oEmployee.EmployeeID;
    //        $("#txtEmployeeName")[0].value=_oEmployee.Name;
    //        $("#txtLocation")[0].value=_oEmployee.LocationName;
    //        $("#txtDepartment")[0].value=_oEmployee.DepartmentName;
    //        $("#txtDesignation")[0].value=_oEmployee.DesignationName;
    //
    //}
    function Approve()
    {
        var oAttendanceDaily = RefreshObject();
        if (oAttendanceDaily.AttendanceID >0) {
            //       //debugger;;
            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/AttendanceDaily/AttendanceDaily_Approve",
                traditional: true,
                data: JSON.stringify(oAttendanceDaily),
                contentType: "application/json; charset=utf-8",

                success: function(data) {
                    //debugger;;
                    var oAttendanceDaily = jQuery.parseJSON(data);
                    if (oAttendanceDaily.AttendanceID > 0) {
                        alert("Approved sucessfully");
                        window.returnValue = oAttendanceDaily;
                        window.close();
                    }else {
                        alert(oAttendanceDaily.ErrorMessage);
                    }
                },
                error: function(xhr, status, error) {
                    alert(error);
                }
            });
        }
    }


    //function Leave()
    //{
    //    if( document.getElementById("txtleave").checked==true)    {
    //        _Leave=true;
    //        _DayOff=false;
    //        _Paid=false;
    //        document.getElementById("txtpaid").checked=false;
    //        document.getElementById("txtdaioff").checked=false;
    //    }
    //    else{
    //        _Leave=false;
    //        _DayOff=true;
    //        _Paid=true;
    //    }
    //}
    //function Paid()
    //{
    //    if(document.getElementById("txtpaid").checked==true )
    //    {
    //        _Leave=true;
    //        _DayOff=false;
    //        _Paid=false;
    //        document.getElementById("txtleave").checked=false;
    //        document.getElementById("txtdaioff").checked=false;
    //    }
    //    else
    //    {
    //        _Leave=false;
    //        _DayOff=true;
    //        _Paid=true;
    //    }
    //}
    //function Off()
    //{
    //    if( document.getElementById("txtdaioff").checked==true)
    //    {
    //        _Leave=false;
    //        _DayOff=true;
    //        _Paid=false;
    //        document.getElementById("txtleave").checked=false;
    //        document.getElementById("txtpaid").checked=false;
    //    }
    //    else{
    //        _Leave=true;
    //        _DayOff=false;
    //        _Paid=true;
    //    }
    //}
    function Close()
    {
        window.close();
    }
    function ClearLate()
    {
        document.getElementById("txtLate").value="";
    }
    function ClearEarly()
    {
        document.getElementById("txtEarlyLeaving").value="";
    }
    function ClearOver()
    {
        document.getElementById("txtOverTime").value="";
    }
</script>
