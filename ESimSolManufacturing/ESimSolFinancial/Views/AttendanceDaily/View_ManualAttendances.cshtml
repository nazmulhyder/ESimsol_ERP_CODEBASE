@model ESimSol.BusinessObjects.AttendanceDaily
@{
    ViewBag.Title = "Manual Attendance";
}
<head>
    <title>

    </title>
</head>
<body class="menuMainCollectionTable">
    <fieldset>
        <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; width:60%; font-weight: bold; margin-left:18%">
            <tr class="tabletr">
                <td class="Captiontd" style="text-align: right">
                    Employee :
                </td>
                <td colspan="3">
                    <input id="txtEmployee" type="text" style="width:81%;" placeholder="Type emp code or name then enter" />
                    <input id="btnEmployeePicker" type="button" value="P" />
                    <input id="btnEmployeePickerClear" type="button" value="C" onclick="EmpClear()" />
                </td>
            </tr>
            <tr class="tabletr">
                <td class="Captiontd" style="text-align: right">
                    Att. Between :
                </td>
                <td colspan="3">
                    <input id="txtDateFrom" type="text" style="width: 37%" class="easyui-datebox"
                           required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                    &nbsp;  &nbsp; To &nbsp; &nbsp;
                    <input id="txtDateTo" type="text" style="width: 36%" class="easyui-datebox"
                           required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                    <input id="btnGetAtt" type="button" value="Get Att." />
                </td>
            </tr>
            <tr class="tabletr">
                <td class="Captiontd" style="text-align: right">
                    Wrk. Status :
                </td>
                <td colspan="3">
                  @Html.DropDownListFor(model => model.WorkingStatus, new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumEmployeeWorkigStatus))), new { id = "cboWorkingStatus", style = "width: 42%" })
                    &nbsp;  &nbsp; Note :
                    <input type="text" id="txtNote" style="width: 43%" />
                </td>
            </tr>
        </table>
        <fieldset>

            <legend style="font-weight: bold"> Actual </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; width:60%; font-weight: bold; margin-left:18%">
                <tr class="tabletr">
                    <td class="Captiontd" style="text-align: right">
                        In Time :
                    </td>
                    <td class="Valuefieldtd">
                        <input id="txtActualInTime" class="easyui-timespinner" style="width: 95%" requird="required"
                               data-options="showSeconds:false" />
                    </td>
                    <td class="Captiontd" style="text-align: right">
                        Out Time :
                    </td>
                    <td class="Valuefieldtd">
                        <input id="txtActualOutTime" class="easyui-timespinner" style="width: 95%" requird="required"
                               data-options="showSeconds:false" />
                    </td>
                </tr>
                <tr class="tabletr">
                    <td class="Captiontd" style="text-align: right">
                        Late :
                    </td>
                    <td class="Valuefieldtd">
                        <input type="text" id="txtActualLate" style="width: 75%" />(Min)
                    </td>
                    <td class="Captiontd" style="text-align: right">
                        Early Leaving :
                    </td>
                    <td class="Valuefieldtd">
                        <input type="text" id="txtActualEarlyLeaving" style="width: 75%" />(Min)
                    </td>
                </tr>
                <tr class="tabletr">
                    <td class="Captiontd" style="text-align: right">
                        Over Time :
                    </td>
                    <td class="Valuefieldtd">
                        <input type="text" id="txtActualOverTime" style="width:75%" />(Min)
                    </td>
                    <td class="Captiontd" style="text-align: right"></td>
                    <td class="Valuefieldtd">
                        <input id="chkActualDayOff" type="checkbox" /> Day Off
                        <input id="chkActualHoliday" type="checkbox" /> Holiday
                    </td>
                </tr>
                <tr class="tabletr">
                    <td style="text-align:right;"><input id="chkinTimeRandom_Actual" type="checkbox" checked />Random In
                    </td>
                    <td>
                        <input id="inTimeRandomStart_Actual" class="easyui-timespinner" style="width: 70px;" requird="required"
                               data-options="showSeconds:false" /> To
                        <input id="inTimeRandomEnd_Actual" class="easyui-timespinner" style="width: 70px;" requird="required"
                               data-options="showSeconds:false" />
                    </td>
                    <td style="text-align:right;">
                        <input id="chkoutTimeRandom_Actual" type="checkbox" checked />Random Out
                    </td>
                    <td>
                        <input id="outTimeRandomStart_Actual" class="easyui-timespinner" style="width: 70px;" requird="required"
                               data-options="showSeconds:false" /> To
                        <input id="outTimeRandomEnd_Actual" class="easyui-timespinner" style="width: 70px;" requird="required"
                               data-options="showSeconds:false" />
                    </td>
                </tr>
            </table>
        </fieldset>
        <fieldset>
            <legend style="font-weight: bold"> Compliance </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; width:60%; font-weight: bold; margin-left:18%">
                <tr class="tabletr">
                    <td class="Captiontd" style="text-align: right">
                        In Time :
                    </td>
                    <td class="Valuefieldtd">
                        <input id="txtInTime" class="easyui-timespinner" style="width: 95%" requird="required"
                               data-options="showSeconds:false" />
                    </td>
                    <td class="Captiontd" style="text-align: right">
                        Out Time :
                    </td>
                    <td class="Valuefieldtd">
                        <input id="txtOutTime" class="easyui-timespinner" style="width: 95%" requird="required"
                               data-options="showSeconds:false" />
                    </td>
                </tr>

                <tr class="tabletr">
                    <td class="Captiontd" style="text-align: right">
                        Late :
                    </td>
                    <td class="Valuefieldtd">
                        <input type="text" id="txtLate" style="width:75%" />(Min)
                    </td>
                    <td class="Captiontd" style="text-align: right">
                        Early Leaving :
                    </td>
                    <td class="Valuefieldtd">
                        <input type="text" id="txtEarlyLeaving" style="width: 75%" />(Min)
                    </td>
                </tr>
                <tr class="tabletr">
                    <td class="Captiontd" style="text-align: right">
                        Over Time :
                    </td>
                    <td class="Valuefieldtd">
                        <input type="text" id="txtOverTime" style="width: 75%" />(Min)
                    </td>
                    <td class="Captiontd" style="text-align: right"></td>
                    <td class="Valuefieldtd">
                        <input id="chkDayOff" type="checkbox" /> Day Off
                        <input id="chkHoliday" type="checkbox" /> Holiday
                    </td>
                </tr>
                <tr class="tabletr">
                    <td style="text-align:right;"><input id="chkinTimeRandom" type="checkbox" checked />Random In</td>
                    <td>

                        <input id="inTimeRandomStart" class="easyui-timespinner" style="width: 70px;" requird="required"
                               data-options="showSeconds:false" /> To
                        <input id="inTimeRandomEnd" class="easyui-timespinner" style="width: 70px;" requird="required"
                               data-options="showSeconds:false" />
                    </td>
                    <td style="text-align:right;"><input id="chkoutTimeRandom" type="checkbox" checked />Random Out</td>
                    <td>
                        <input id="outTimeRandomStart" class="easyui-timespinner" style="width: 70px;" requird="required"
                               data-options="showSeconds:false" /> To
                        <input id="outTimeRandomEnd" class="easyui-timespinner" style="width: 70px;" requird="required"
                               data-options="showSeconds:false" />
                    </td>
                </tr>
            </table>
        </fieldset>
    </fieldset>

    <fieldset>
        <legend style="font-weight: bold">Action : </legend>
        <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
            <tr>
                <td style="width: 840px; text-align: right"></td>
                <td style="width: 50px">
                    <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save"
                       plain="true" onclick="Save()">Save</a>
                </td>
            </tr>
        </table>
    </fieldset>

    <div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:73%; height:500px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width: 100%; font-family: Tahoma;">
            <div style="width: 47%; float: left;">
                <table class="tbl-AdvSearch">
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Name :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Code :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Enroll No :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEnrollNo" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Attendance Scheme :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                            <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Location :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Dept./Section :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Designation :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Type :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeType" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Current Shift :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboShift" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Card Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Working Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Date Of Birth :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboDateType" style="width: 65px" class="cboReset">
                                <option value='0'>None</option>
                                <option value='1'>Equal</option>
                                <option value='2'>Between</option>
                            </select>
                            <span></span>
                            <select id="cboDayFrom" style="width: 45px" class="cboReset"></select>
                            <select id="cboMonthFrom" style="width: 50px" class="cboReset"></select>
                            <span id="regionDateTo">
                                <span>To</span>
                                <select id="cboDayTo" style="width: 45px" class="cboReset"> </select>
                                <select id="cboMonthTo" style="width: 50px" class="cboReset"> </select>
                            </span>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkActive" class="chkReset" /> Active
                            <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                            <input type="checkbox" id="chkUser" class="chkReset" /> User
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                            <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                        </td>
                    </tr>
                </table>
            </div>
            <div style="width: 52%; float: right;">
                <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 425px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar">
                    <thead>
                        <tr>
                            @*<th data-options="field:'Selected',checkbox:true"></th>*@
                            <th field="Code" width="200"> Code</th>
                            <th field="Name" width="150">Employee Name</th>
                            <th field="DepartmentName" width="100">Department</th>
                            <th field="DesignationName" width="100">Designation</th>
                        </tr>
                    </thead>
                </table>
                <table style="width: 485px; font-size: 12px; font-weight: bold;">
                    <tr>
                        <td style="text-align: left">
                            <input id="chkRange" type="checkbox" />Range
                            <label id="lblRange1">
                                <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                            </label>
                            <label id="lblRange2">
                                <input id="txtTo" type="text" style="width:40px" />
                            </label>
                            <label id="lblcount_Emp"></label>
                        </td>
                        <td style="text-align: right">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                            <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                            <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: left"></td>
                        <td style="text-align: right"></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>

    <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:30%; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="locationtree" data-options="checkbox:false" singleselect="true"></ul>
            </div>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winDepartmentPicker" class="easyui-window winstyle" title="Location Picker" style="width:30%; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="departmenttree" data-options="checkbox:false" singleselect="true"></ul>
            </div>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnDepartmentPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnDepartmentPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

</body>
<style>
    .tabletr
    {
        width:100%;
    }
    .Captiontd
    {
        width:20%;
    }
    .Valuefieldtd
    {
        width:30%;
    }
    /*Emp Picker*/
     .tbl-AdvSearch {
        width: 100%;
        font-size: 11px;
        font-weight: bold;
        text-align: left;
        margin-left: 3px;
    }

    .td-AdvSearch-Level {
        text-align: right;
    }

    .td-AdvSearch-Input {
        text-align: left;
    }

    .txtfield-search {
        width: 305px;
        text-align: left;
        font-size: 11px;
    }

    .txtfield-picker {
        width: 259px;
        text-align: left;
        font-size: 11px;
    }

    .selection-search {
        width: 310px;
        text-align: left;
        font-size: 11px;
    }

    .pick-btn {
        width: 20px;
        text-align: center;
        font-size: 11px;
    }
     /*Emp Picker*/
</style>
<script type="text/javascript">
    var _oManualAttendances=[];
    var _sBaseAddress="";
    var _nEmployeeID=0;

    var _nLastEmployeeID = 0;
    var _sEmployeeIDs = "";
    var _bNext = false;
    var _nLoadRecords = 0;
    var _nRowLength = 0;

    var _oEmployeeTypes=[];
    var _oShifts=[];
    var _oEmployeeCSs=[];
    var _oEmployeeWSs=[];
    var _oEmployeeOfficial=null;

    var _sAttendanceSchemeID="";
    var _sLocationID = "";
    var _sDepartmentID = "";
    var _sDesignationID = "";

    $(document).ready(function () {
        _oManualAttendances =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oEmployeeOfficial= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeOfficial));
        _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
        _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
        _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
        _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
        InitializeAdvSearch();
        $('#txtActualLate').numberbox({min:0, precision:0 });
        $('#txtActualEarlyLeaving').numberbox({min:0, precision:0 });
        $('#txtActualOverTime').numberbox({min:0, precision:0 });

        $('#txtLate').numberbox({min:0, precision:0 });
        $('#txtEarlyLeaving').numberbox({min:0, precision:0 });
        $('#txtOverTime').numberbox({min:0, precision:0 });
        Reset();
        
    });

    function Reset()
    {
        EmpClear();
        document.getElementById("cboWorkingStatus").selectedIndex=1;
        $('#txtDateFrom').datebox('setValue',icsdateformat(new Date()));
        $('#txtDateTo').datebox('setValue',icsdateformat(new Date()));

        $('#txtActualLate').numberbox('setValue', 0);
        $('#txtActualEarlyLeaving').numberbox('setValue', 0);
        $('#txtActualOverTime').numberbox('setValue', 0);
        $('#txtActualInTime').timespinner('setValue', '08:00');
        $('#txtActualOutTime').timespinner('setValue', '17:00');

        $('#txtLate').numberbox('setValue', 0);
        $('#txtEarlyLeaving').numberbox('setValue', 0);
        $('#txtOverTime').numberbox('setValue', 0);
        $('#txtInTime').timespinner('setValue', '08:00');
        $('#txtOutTime').timespinner('setValue', '17:00');        
        $('#txtMaxOTInMin').timespinner('setValue', '00:00');
        $('#inTimeRandomStart_Actual').timespinner('setValue', '07:45');
        $('#inTimeRandomEnd_Actual').timespinner('setValue', '08:13');
        $('#outTimeRandomStart_Actual').timespinner('setValue', '16:57');
        $('#outTimeRandomEnd_Actual').timespinner('setValue', '17:10');

        $('#inTimeRandomStart').timespinner('setValue', '07:45');
        $('#inTimeRandomEnd').timespinner('setValue', '08:13');
        $('#outTimeRandomStart').timespinner('setValue', '16:57');
        $('#outTimeRandomEnd').timespinner('setValue', '17:10');
    }

    $('#txtEmployee').keypress(function (e)
    {
        if(e.which === 13)
        {
            var txtEmployeeNameCode = $(this).val();
            if(txtEmployeeNameCode==null || txtEmployeeNameCode=="")
            {
                alert("Please enter name/code!");
                return false;
            }
            var nDepartmentID=0;
            var oEmployee = { Params: txtEmployeeNameCode +'~'+ nDepartmentID};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oEmployee,
                ControllerName: "Employee",
                ActionName: "GetsByEmpCode",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].EmployeeID > 0) {

                        var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winEmployeePicker',
                            winclass:'clsEmployeePicker',
                            winwidth: 455,
                            winheight: 460,
                            tableid: 'tblEmployeePicker',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Employee list'
                        };

                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }
    });

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which === 13) {
                SetPickerValueAssign(oPickerobj);
            }
        });
    }

    function SetPickerValueAssign(oPickerobj) {
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        if (oPickerobj.winid == 'winEmployeePicker') {
            if (oreturnObj != null && oreturnObj.EmployeeID > 0) {
                _nEmployeeID = 0;
                if(oreturnObj.DesignationName=="" || oreturnObj.DepartmentName=="" || oreturnObj.LocationName=="")
                {
                    alert("This Employee Has No Official Information !");
                    return;
                }
                $("#txtEmployee")[0].value=oreturnObj.Name+"["+oreturnObj.Code+"]";
                _nEmployeeID = oreturnObj.EmployeeID;
            }else{
                alert("Please select a style!");
                return false;
            }
        }

        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
    }

    function EmpClear()
    {
        $("#txtEmployee").val("");
        _nEmployeeID = 0;
        $('#txtEmployee').focus();
    }

    /*---------------- Adv Search----------------*/

    function InitializeAdvSearch(){
        $("#cboEmployeeType").icsLoadCombo({
            List: _oEmployeeTypes,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name"
        });
        $("#cboShift").icsLoadCombo({
            List: _oShifts,
            OptionValue: "ShiftID",
            DisplayText: "ShiftWithDuration"
        });
        $("#cboEmployeeCardStatus").icsLoadCombo({
            List: _oEmployeeCSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboEmployeeWorkigStatus").icsLoadCombo({
            List: _oEmployeeWSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });

        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();

        var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                     {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                     {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

        $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
            List: oMonths,
            OptionValue: "MonthID",
            DisplayText: "Name",
            InitialValue:''
        });

        LoadDaysInMonth();
    }

    function LoadDaysInMonth(){
        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom,#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    }

    $("#cboDateType").change(function(e){
        if($("#cboDateType").val()==1){
            $("#regionDateTo").hide();
        }
        else{
            $("#regionDateTo").show();
        }
    });

    $("#cboMonthFrom").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthFrom").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    $("#cboMonthTo").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthTo").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    function EmployeePickerReset(){
        _nLastEmployeeID = 0;
        _sEmployeeIDs = "";
        _bNext = false;
        _nLoadRecords = 0;
        _nRowLength = 0;
        _sAttendanceSchemeID="";
        _sLocationID = "";
        _sDepartmentID = "";
        _sDesignationID = "";
        $(".txtReset").val("");
        $(".cboReset").val(0);
        $(".chkReset").prop("checked",false);

        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        LoadDaysInMonth();

        DynamicRefreshList([], "tblEmployeesForPicker");
        $("#lblcount_Emp").html("");
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();
    }

    $("#btnEmployeePicker").click(function () {
        EmployeePickerReset();
        $("#winEmployeePicker").icsWindow("open", " Employee Picker");
    });

    $('#chkRange').click(function()
    {
        if(document.getElementById("chkRange").checked == true)
        {
            document.getElementById("lblRange1").style.display = '';
        }
        else
        {
            document.getElementById("lblRange1").style.display = 'none';
        }
    });

    $('#btnEmpPickerSearch').click(function () {
        _bNext = false;
        AdvSearch();
    });

    function Next() {
        var oEmployees = [];
        oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
        if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
        _nRowLength = oEmployees.length;
        _bNext = true;
        AdvSearch();
    }

    function AdvSearch(){
        if (!_bNext) {
            _nRowLength = 0;
            _nLastEmployeeID = 0;
        }
        _nLoadRecords = document.getElementById("txtTo").value;

        if ($("#chkRange").is(':checked')) {
            if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
            var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
            var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
            if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
            _nRowLength = nRangeFrom - 1;
            _nLoadRecords = nRangeTo - nRangeFrom + 1;
        }


        var sName = $.trim($("#txtEmployeeName").val());
        var sCode = $.trim($("#txtEmpCodeForSearch").val());
        var sEnrollNo = $.trim($("#txtEnrollNo").val());
        var nEmployeeTypeID=$("#cboEmployeeType").val();
        var nShiftID=$("#cboShift").val();
        var nCardStatus=$("#cboEmployeeCardStatus").val();
        var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
        var nDateType=$("#cboDateType").val();
        var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
        var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
        var sGender="None";

        var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
        var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
        var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

        var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
        var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

        var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
        var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

        var bIsJoiningDate = false;
        var dtDateFrom = "2 jan 2000";
        var dtDateTo = "2 jan 2000";

        debugger;
        if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentID=="" && _sDesignationID=="" &&
           nEmployeeTypeID==0 && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
           bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0 )
        {
            alert("Please enter you selection criteria."); return false;
        }

        var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentID + '~' +_sDesignationID + '~' +
                     sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                     bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                     sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo+"~"+sEnrollNo;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EmployeeSearch",
            traditional: true,
            data: JSON.stringify({ sParam: sParam }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmps = jQuery.parseJSON(data);
                if (oEmps != null) {
                    if (oEmps.length > 0) {
                        if(!_bNext){
                            DynamicRefreshList(oEmps,'tblEmployeesForPicker');
                        }
                        else{
                            var bAppend=false;
                            var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');
                            if(oTEmps.length>0){
                                for (var i = 0; i < oEmps.length; i++) {
                                    var IsAppend=true;
                                    for (var j = 0; j < oTEmps.length; j++) {

                                        if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                            IsAppend=false;
                                            break;
                                        }
                                    }
                                    if(IsAppend){
                                        bAppend=true;
                                        $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[i]);
                                    }
                                }
                            }
                            else{
                                for (var j = 0; j < oEmps.length; j++) {
                                    bAppend=true;
                                    $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[j]);
                                }
                            }
                            if(!bAppend){
                                alert("No more data found!");
                            }
                        }

                    }
                    else {
                        alert("No more data found!");
                    }
                    var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                    document.getElementById("lblcount_Emp").innerHTML = " | Count =" + oEmployees.length;
                    _bNext = false;
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    $("#btnEmployeePickerOk").click(function () {

        var oEmployee = $('#tblEmployeesForPicker').datagrid('getSelected');
        if (oEmployee==null || oEmployee.EmployeeID <= 0) { alert("please select atleast one item");return; }

        if(oEmployee!=null)
        {
            _nEmployeeID = 0;
            if(oEmployee.DesignationName=="" || oEmployee.DepartmentName=="" || oEmployee.LocationName=="")
            {
                alert("This Employee Has No Official Information !");
                return;
            }
            $("#txtEmployee")[0].value=oEmployee.Name+"["+oEmployee.Code+"]";
            _nEmployeeID = oEmployee.EmployeeID;
        }

        //DynamicRefreshList(oEmployees, "tblEmployees");
        $("#winEmployeePicker").icsWindow('close');
    });

    $("#btnEmployeePickerClose").click(function () {
        $("#winEmployeePicker").icsWindow('close');
    });

    /*-------------Attendance Schema Picker----------------*/
    $("#btnAttScheme").click(function(e){
        var oAttendanceScheme={AttendanceSchemeID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oAttendanceScheme,
            ControllerName: "AttendanceScheme",
            ActionName: "GetsAttendanceSchemeCurrentSession",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AttendanceSchemeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "EmployeeType", title: "EmployeeType", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DayOff", title: "DayOff", width: 115, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winAttendanceScheme',
                        winclass:'clsAttendanceScheme',
                        winwidth: 420,
                        winheight: 460,
                        tableid: 'tblAttendanceSchemePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Attendance Scheme List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeAttendancePickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    function IntializeAttendancePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oAttendanceScheme = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winAttendanceScheme')
            {
                if(oAttendanceScheme!=null && oAttendanceScheme.AttendanceSchemeID>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    $('#txtAttendanceScheme').val(oAttendanceScheme.Name);
                    _sAttendanceSchemeID=oAttendanceScheme.AttendanceSchemeID;
                }
                else{
                    alert("Please select a schema.");
                }
            }
        });
    }

    $("#btnResetAttScheme").click(function(e){
        $('#txtAttendanceScheme').val("");
        _sAttendanceSchemeID="";
    });

    /*-------------Location Picker----------------*/

    $("#btnLocationPicker").click(function(e){

        $("#winLocationPicker").icsWindow('open');
        var oLocation={LocationID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationMenuTree",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj!=null) {
                if (response.obj.TLocation.id > 0) {
                    $('#locationtree').tree({ data: [response.obj.TLocation] });
                }
            }
        });
    });

    $("#btnLocationPickerOk").click(function(e){
        var oLocation = $('#locationtree').tree('getSelected');
        if(oLocation!=null && oLocation.id>0){
            $("#winLocationPicker").icsWindow('close');
            $('#txtLocation').val(oLocation.text);
            _sLocationID= oLocation.id;
        }
        else{
            alert("Please select a location.");
        }
    });

    $("#btnLocationPickerClose").click(function(e){
        $("#winLocationPicker").icsWindow('close');
    });

    $("#btnResetLocationPicker").click(function(e){
        $('#txtLocation').val("");
        _sLocationID="";
    });
    /*-------------Department Picker----------------*/

    $("#btnDepartmentPicker").click(function(e){

        $("#winDepartmentPicker").icsWindow('open');
        var oDepartment={DepartmentID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree').tree({ data: [response.obj] });
                }
            }
        });
    });

    $("#btnDepartmentPickerOk").click(function(e){

        var oDepartment = $('#departmenttree').tree('getSelected');
        if(oDepartment!=null && oDepartment.id>0){
            $("#winDepartmentPicker").icsWindow('close');
            $('#txtDepartment').val(oDepartment.text);
            _sDepartmentID= oDepartment.id;
        }
        else{
            alert("Please select a department.");
        }
    });

    $("#btnDepartmentPickerClose").click(function(e){
        $("#winDepartmentPicker").icsWindow('close');
    });

    $("#btnResetDepartmentPicker").click(function(e){
        $('#txtDepartment').val("");
        _sDepartmentID="";
    });

    /*-------------Designation Picker----------------*/

    $("#btnDesignationPicker").click(function(e){
        var oDesignation={
            DesignationID:0,
            Params: (($.trim(_sLocationID)=="")? 0:_sLocationID)+'~'+ (($.trim(_sDepartmentID)=="")? 0:_sDepartmentID)
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDesignation,
            ControllerName: "Designation",
            ActionName: "Gets",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DesignationID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winDesignation',
                        winclass:'clsDesignation',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblDesignation',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Designation List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    function IntializeDesignationPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oDesignation = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winDesignation')
            {
                if(oDesignation!=null && oDesignation.DesignationID>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    $('#txtDesignation').val(oDesignation.Name);
                    _sDesignationID=oDesignation.DesignationID;
                }
                else{
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetDesignationPicker").click(function(e){
        $('#txtDesignation').val("");
        _sDesignationID="";
    });

    /*--------------------------------------------*/
    
    function ValidateInput()
    {
        debugger
        if(_nEmployeeID<=0)
        {
            alert("Please enter an employee!!");
            return false;
        }

        var ActualInhr=$('#txtActualInTime').timespinner('getHours');
        var ActualInmn=$('#txtActualInTime').timespinner('getMinutes');
        var ActualOuthr=$('#txtActualOutTime').timespinner('getHours');
        var ActualOutmn=$('#txtActualOutTime').timespinner('getMinutes');

        if (isNaN(ActualInhr) ||  ActualInhr<1 || ActualInhr>24)
        {
            alert("Hour must be 1 to 24 !");
            $('#txtActualInTime').focus();
            return false;
        }
        if (isNaN(ActualInmn) ||  ActualInmn<0 || ActualInmn>60)
        {
            alert("Minute must be 0 to 60 !");
            $('#txtActualInTime').focus();
            return false;
        }
        if (isNaN(ActualOuthr) || ActualOuthr<1 || ActualOuthr>24)
        {
            alert("Hour must be 1 to 24 !");
            $('#txtActualOutTime').focus();
            return false;
        }
        if (isNaN(ActualOutmn) ||  ActualOutmn<0 || ActualOutmn>60)
        {
            alert("Minute must be 0 to 60 !");
            $('#txtActualOutTime').focus();
            return false;
        }

        var Inhr=$('#txtInTime').timespinner('getHours');
        var Inmn=$('#txtInTime').timespinner('getMinutes');
        var Outhr=$('#txtOutTime').timespinner('getHours');
        var Outmn=$('#txtOutTime').timespinner('getMinutes');

        if (isNaN(Inhr) ||  Inhr<1 || Inhr>24)
        {
             alert("Hour must be 1 to 24 !");
             $('#timeSpinner').focus();
             return false;
        }
        if (isNaN(Inmn) ||  Inmn<0 || Inmn>60)
        {
            alert("Minute must be 0 to 60 !");
            $('#timeSpinner').focus();
            return false;
        }
        if (isNaN(Outhr) || Outhr<1 || Outhr>24)
        {
             alert("Hour must be 1 to 24 !");
             $('#txtOutTime').focus();
             return false;
        }
        if (isNaN(Outmn) ||  Outmn<0 || Outmn>60)
        {
            alert("Minute must be 0 to 60 !");
            $('#txtOutTime').focus();
            return false;
        }

        if(document.getElementById("cboWorkingStatus").selectedIndex=="0")
        {
            alert("Please select working status!");
            $('#cboWorkingStatus').focus();
            return false;
        }
       
        var InTimeRandomStart_Actual = $('#inTimeRandomStart_Actual').timespinner('getValue');
        var InTimeRandomEnd_Actual = $('#inTimeRandomEnd_Actual').timespinner('getValue');
        var OutTimeRandomStart_Actual = $('#outTimeRandomStart_Actual').timespinner('getValue');
        var OutTimeRandomEnd_Actual = $('#outTimeRandomEnd_Actual').timespinner('getValue');
        var isinTimeRandom_Actual = $("#chkinTimeRandom_Actual").is(':checked');
        var isoutTimeRandom_Actual = $("#chkoutTimeRandom_Actual").is(':checked');

        if(isinTimeRandom_Actual==true)
        {
            if(InTimeRandomStart_Actual=="" || InTimeRandomEnd_Actual=="")
            {
                alert("Please enter rendom in time!");
                return false;
            }
        }
        if(isoutTimeRandom_Actual==true)
        {
            if(OutTimeRandomStart_Actual=="" || OutTimeRandomEnd_Actual=="")
            {
                alert("Please enter rendom out time!");
                return false;
            }
        }

        var InTimeRandomStart = $('#inTimeRandomStart').timespinner('getValue');
        var InTimeRandomEnd = $('#inTimeRandomEnd').timespinner('getValue');
        var OutTimeRandomStart = $('#outTimeRandomStart').timespinner('getValue');
        var OutTimeRandomEnd = $('#outTimeRandomEnd').timespinner('getValue');
        var isinTimeRandom = $("#chkinTimeRandom").is(':checked');
        var isoutTimeRandom = $("#chkoutTimeRandom").is(':checked');

        if(isinTimeRandom==true)
        {
            if(InTimeRandomStart=="" || InTimeRandomEnd=="")
            {
                alert("Please enter rendom in time!");
                return false;
            }
        }
        if(isoutTimeRandom==true)
        {
            if(OutTimeRandomStart=="" || OutTimeRandomEnd=="")
            {
                alert("Please enter rendom out time!");
                return false;
            }
        }

        return true;
    }

    function RefreshObject()
    {
        debugger
        //sRandom

        var InTimeRandomStart_Actual = $('#inTimeRandomStart_Actual').timespinner('getValue');
        var InTimeRandomEnd_Actual = $('#inTimeRandomEnd_Actual').timespinner('getValue');
        var OutTimeRandomStart_Actual = $('#outTimeRandomStart_Actual').timespinner('getValue');
        var OutTimeRandomEnd_Actual = $('#outTimeRandomEnd_Actual').timespinner('getValue');
        var isinTimeRandom_Actual = $("#chkinTimeRandom_Actual").is(':checked');
        var isoutTimeRandom_Actual = $("#chkoutTimeRandom_Actual").is(':checked');

        var InTimeRandomStart = $('#inTimeRandomStart').timespinner('getValue');
        var InTimeRandomEnd = $('#inTimeRandomEnd').timespinner('getValue');
        var OutTimeRandomStart = $('#outTimeRandomStart').timespinner('getValue');
        var OutTimeRandomEnd = $('#outTimeRandomEnd').timespinner('getValue');
        var isinTimeRandom = $("#chkinTimeRandom").is(':checked');
        var isoutTimeRandom = $("#chkoutTimeRandom").is(':checked');

        var Random = isinTimeRandom_Actual+"~"+InTimeRandomStart_Actual+"~"+InTimeRandomEnd_Actual+"~"+isoutTimeRandom_Actual+"~"+OutTimeRandomStart_Actual+"~"+OutTimeRandomEnd_Actual
           +"~"+ isinTimeRandom+"~"+InTimeRandomStart+"~"+InTimeRandomEnd+"~"+isoutTimeRandom+"~"+OutTimeRandomStart+"~"+OutTimeRandomEnd;
        

        var oAttendanceDaily =
        {
            AttendanceID :0,
            EmployeeID :_nEmployeeID,
            AttendanceDateFrom : $('#txtDateFrom').datebox('getValue') ,
            AttendanceDateTo : $('#txtDateTo').datebox('getValue') ,
            InTime : $('#txtInTime').timespinner('getValue'),//dInTime,
            OutTime : $('#txtOutTime').timespinner('getValue'),//dOutTime,
            ActualInTime : $('#txtActualInTime').timespinner('getValue'),//dInTime,
            ActualOutTime : $('#txtActualOutTime').timespinner('getValue'),//dOutTime,

            LateArrivalMinute : $('#txtLate').numberbox('getValue') ,
            EarlyDepartureMinute : $('#txtEarlyLeaving').numberbox('getValue') ,
            OverTimeInMinute : $('#txtOverTime').numberbox('getValue') ,

            ActualLateArrivalMinute : $('#txtActualLate').numberbox('getValue') ,
            ActualEarlyDepartureMinute : $('#txtActualEarlyLeaving').numberbox('getValue') ,
            ActualOverTimeInMinute : $('#txtActualOverTime').numberbox('getValue'),

            IsDayOff : document.getElementById("chkDayOff").checked,
            IsHoliday : document.getElementById("chkHoliday").checked,
            IsActualDayOff : document.getElementById("chkActualDayOff").checked,
            IsActualHoliday : document.getElementById("chkActualHoliday").checked,

            WorkingStatusInt : document.getElementById("cboWorkingStatus").selectedIndex,
            Note : $("#txtNote").val(),
            IsLock : true,
            IsManual:true,
            sRandom:Random
           
        };

        return oAttendanceDaily;
    }

    function Save()
    {
        if (!ValidateInput()) return;
        var oAttendanceDaily = RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/AttendanceDaily/ManualAttendance_Update",
            traditional: true,
            data: JSON.stringify(oAttendanceDaily),
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                debugger;
                var oAtd = jQuery.parseJSON(data);
                if (oAtd.ErrorMessage!="")
                {
                    alert(oAtd.ErrorMessage);
                }
                else
                {
                    alert("Data Saved Successfuly!");
                    Reset();
                }
            },
            error: function(xhr, status, error) {
                alert(error);
            }
        });
    }
    $("#chkActualDayOff").click(function(e){
        document.getElementById("chkActualHoliday").checked=false;
    });
    $("#chkActualHoliday").click(function(e){
        document.getElementById("chkActualDayOff").checked=false;
    });
    $("#chkDayOff").click(function(e){
        document.getElementById("chkHoliday").checked=false;
    });
    $("#chkHoliday").click(function(e){
        document.getElementById("chkDayOff").checked=false;
    });
    
    $("#btnGetAtt").click(function(e){
        if(_nEmployeeID<=0)
        {
            alert("Please enter an employee!!");
            return false;
        }
        var AttendanceDateFrom = $('#txtDateFrom').datebox('getValue');
        var AttendanceDateTo = $('#txtDateTo').datebox('getValue');
        if(AttendanceDateFrom!=AttendanceDateTo)
        {
            alert("Please select same date!");
            return false;
        }
        var sParam = _nEmployeeID+"~"+AttendanceDateFrom+"~"+AttendanceDateTo;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/AttendanceDaily/GetAttendanceByDateAndEmp",
            traditional: true,
            data: JSON.stringify({sParam:sParam}),
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                debugger;
                var oAtd = jQuery.parseJSON(data);
                if (oAtd.AttendanceID>0 && oAtd.ErrorMessage=="")
                {
                    SetAtt(oAtd);
                }
                else
                {
                    alert(oAtd.ErrorMessage);
                   
                }
            },
            error: function(xhr, status, error) {
                alert(error);
            }
        });
    });

    function SetAtt(oAtd)
    {
       debugger
        document.getElementById("cboWorkingStatus").selectedIndex=oAtd.WorkingStatusInt;
        $('#outTimeRandomEnd_Actual').timespinner('setValue', oAtd.Note);

        $('#txtActualLate').numberbox('setValue', oAtd.ActualLateArrivalMinute);
        $('#txtActualEarlyLeaving').numberbox('setValue', oAtd.ActualEarlyDepartureMinute);
        $('#txtActualOverTime').numberbox('setValue', oAtd.ActualOverTimeInMinute);
        $('#txtActualInTime').timespinner('setValue', oAtd.ActualInTimeInString);
        $('#txtActualOutTime').timespinner('setValue',oAtd.ActualOutTimeInString);

        $('#txtLate').numberbox('setValue', oAtd.LateArrivalMinute);
        $('#txtEarlyLeaving').numberbox('setValue',oAtd.EarlyDepartureMinute);
        $('#txtOverTime').numberbox('setValue', oAtd.OverTimeInMinute);
        $('#txtInTime').timespinner('setValue', oAtd.InTimeInString);
        $('#txtOutTime').timespinner('setValue', oAtd.OutTimeInString);
       
        document.getElementById("chkDayOff").checked=oAtd.IsDayOff;
        document.getElementById("chkHoliday").checked=oAtd.IsHoliday;
        document.getElementById("chkActualDayOff").checked=oAtd.IsActualDayOff;
        document.getElementById("chkActualHoliday").checked=oAtd.IsActualHoliday;

    }

</script>
