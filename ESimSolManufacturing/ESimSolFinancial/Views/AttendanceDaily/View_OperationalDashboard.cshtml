@model IEnumerable<ESimSol.BusinessObjects.AttendanceDaily>
@{
    ViewBag.Title = "Daily Attendance";
}
<div style="height:100%;width:100%;">
    <div id="divAttendanceDaily" style="width:590px;" class="easyui-window winstyle" title="Attendance Daily" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <fieldset>
            <legend style="font-weight: bold"> Actual </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="width:100%;">
                <tr>
                    <td style="text-align: right;width:20%;">
                        In Time :
                    </td>
                    <td style="text-align: left;width:30%;">
                        <input id="txtActualInTime" class="easyui-timespinner" style="width: 95%" required="required" data-options="showSeconds:false" />
                    </td>
                    <td style="text-align: right;width:20%;">
                        Out Time :
                    </td>
                    <td style="text-align: left;width:30%;">
                        <input id="txtActualOutTime" class="easyui-timespinner" style="width: 95%" required="required"
                                data-options="showSeconds:false" />
                    </td>
                </tr>
                <tr>
                    <td style="text-align: right;width:20%;">
                        Late :
                    </td>
                    <td style="text-align: left;width:30%;">
                        <input type="text" id="txtActualLate" class="easyui-numberbox" style="width: 75%" />(Min)
                    </td>
                    <td style="text-align: right;width:20%;">
                        Early Leaving :
                    </td>
                    <td style="text-align: left;width:30%;">
                        <input type="text" id="txtActualEarlyLeaving" class="easyui-numberbox" style="width: 75%" />(Min)
                    </td>
                </tr>
                <tr>
                    <td style="text-align: right;width:20%;">
                        Over Time :
                    </td>
                    <td style="text-align: left;width:30%;">
                        <input type="text" id="txtActualOverTime" class="easyui-numberbox" style="width:75%" />(Min)
                    </td>
                    <td style="text-align: right;width:20%;">
                                              
                    </td>
                    <td style="text-align: left;width:30%;">
                        <input id="chkActualDayOff" type="checkbox" /> Day Off
                        <input id="chkActualHoliday" type="checkbox" /> Holiday
                    </td>
                </tr>
                <tr>
                    <td style="text-align: right;width:20%;">
                        <input id="chkinTimeRandom_Actual" type="checkbox" checked />Random In
                    </td>
                    <td style="text-align: left;width:30%;">
                        <input id="inTimeRandomStart_Actual" class="easyui-timespinner" style="width: 40%;" required="required"
                                data-options="showSeconds:false" /> To
                        <input id="inTimeRandomEnd_Actual" class="easyui-timespinner" style="width: 40%;" required="required"
                                data-options="showSeconds:false" />
                    </td>
                    <td style="text-align: right;width:20%;">
                        <input id="chkoutTimeRandom_Actual" type="checkbox" checked />Random Out
                    </td>
                    <td style="text-align: left;width:30%;">
                        <input id="outTimeRandomStart_Actual" class="easyui-timespinner" style="width: 40%;" required="required"
                                data-options="showSeconds:false" /> To
                        <input id="outTimeRandomEnd_Actual" class="easyui-timespinner" style="width: 40%;" required="required"
                                data-options="showSeconds:false" />
                    </td>
                </tr>
                <tr>
                    <td style="margin-left:30%;" colspan="2">
                        <input id="chk_Ac_to_Comp" type="checkbox" />Same Comp.
                    </td>
                    <td style="text-align: right;width:20%;">
                    </td>
                    <td style="text-align: left;width:30%;">
                    </td>
                </tr>
                                     
            </table>
        </fieldset>
        <fieldset>
            <legend style="font-weight: bold"> Compliance </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="width:100%;">
                <tr>
                    <td style="text-align: right;width:20%;">
                        In Time :
                    </td>
                    <td style="text-align: left;width:30%;">
                        <input id="txtInTime" class="easyui-timespinner" style="width: 95%" required="required"
                                data-options="showSeconds:false" />
                    </td>
                    <td style="text-align: right;width:20%;">
                        Out Time :
                    </td>
                    <td style="text-align: left;width:30%;">
                        <input id="txtOutTime" class="easyui-timespinner" style="width: 95%" required="required"
                                data-options="showSeconds:false" />
                    </td>
                </tr>

                <tr>
                    <td style="text-align: right;width:20%;">
                        Late :
                    </td>
                    <td style="text-align: left;width:30%;">
                        <input type="text" id="txtLate" class="easyui-numberbox" style="width:75%" />(Min)
                    </td>
                    <td style="text-align: right;width:20%;">
                        Early Leaving :
                    </td>
                    <td style="text-align: left;width:30%;">
                        <input type="text" id="txtEarlyLeaving" class="easyui-numberbox" style="width: 75%" />(Min)
                    </td>
                </tr>
                <tr>
                    <td style="text-align: right;width:20%;">
                        Over Time :
                    </td>
                    <td style="text-align: left;width:30%;">
                        <input type="text" id="txtOverTime" class="easyui-numberbox" style="width: 75%" />(Min)
                    </td>
                    <td style="text-align: right;width:20%;">
                                              
                    </td>
                    <td style="text-align: left;width:30%;">
                        <input id="chkDayOff" type="checkbox" /> Day Off
                        <input id="chkHoliday" type="checkbox" /> Holiday
                    </td>
                </tr>
                <tr>
                    <td style="text-align: right;width:20%;">
                    <input id="chkinTimeRandom" type="checkbox" checked />Random In
                    </td>
                    <td style="text-align: left;width:30%;">
                        <input id="inTimeRandomStart" class="easyui-timespinner" style="width: 40%;" required="required"
                                data-options="showSeconds:false" /> To
                        <input id="inTimeRandomEnd" class="easyui-timespinner" style="width: 40%;" required="required"
                                data-options="showSeconds:false" />
                    </td>
                    <td style="text-align: right;width:20%;">
                        <input id="chkoutTimeRandom" type="checkbox" checked />Random Out
                    </td>
                    <td style="text-align: left;width:30%;">
                        <input id="outTimeRandomStart" class="easyui-timespinner" style="width: 40%;" required="required"
                                data-options="showSeconds:false" /> To
                        <input id="outTimeRandomEnd" class="easyui-timespinner" style="width: 40%;" required="required"
                                data-options="showSeconds:false" />
                    </td>
                </tr>
                <tr>
                    <td style="margin-left:30%;" colspan="2">
                        <input id="chk_Comp_to_Ac" type="checkbox" />Same Ac.
                    </td>
                    <td style="text-align: right;width:20%;">
                    </td>
                    <td style="text-align: left;width:30%;">
                    </td>
                </tr>
            </table>
        </fieldset>
        <fieldset>
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="width:100%;">
                <tr>
                    <td style="width: 80%; text-align: left">
                        <input id="chk_Absent" type="checkbox" />Absent
                    </td>
                    <td style="width: 10%;text-align: right;">
                        <a id="btnSaveAttendance" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                    </td>
                    <td style="width: 10%;text-align: right;">
                        <a id="btnCloseAttendance" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
    <div style="margin-left: 0px; height: 100%;width:100%;">
        <table id="tblAttendanceDailys" title="Daily Attendance" class="easyui-datagrid" style="width: 1030px;height: 548px;" fit="true" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="true" toolbar="#toolbar"></table>

        <div id="toolbar">
            <input id="txtFromDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:110px" />
            To
            <input id="txtToDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:110px" />
            <input id="txtEmployee" type="text" style="width:175px;" placeholder="Type Code or Name & Enter" />
            <input id="btnEmployeePicker" type="button" value="P" />
            <input id="btnCEmployee" type="button" value="C" style="margin-right:2px;" />
            <select id="cboLocations" style="width:120px"></select>
            <input id="txtDepartment" type="text" style="width:105px;" placeholder="Pick Department" />
            <input id="btnDepartment" type="button" value="P" onclick="DepartmentPicker()" />
            <input id="btnCDepartment" type="button" value="C" style="margin-right:2px;" />
            <input id="txtDesignation" type="text" style="width:105px;" placeholder="Pick Designation" />
            <input id="btnDesignationPicker" value="P" type="button" onclick="DesignationPicker()" />
            <input id="btnCDesignation" type="button" value="C" />
            <select id="cboShifts" style="width:120px;"></select>
            <a id="btnSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true" onclick="Search()">Search</a>
            @*<a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true" onclick="Print()">Print</a>*@
        </div>
    </div>
</div>                     
<script type="text/javascript">
    var _sTempString="";
    var _sBaseAddress="";
    var _sTempString="";
    var _oEmployees = [];
    var _sEmployeeIDs = "";
    var _oEmployee =null;
    var _sDepartmentNames = "";
    var _sDepartmentIds = "";
    var _sDesignationNames = "";
    var _sDesignationIds = "";
    var _sSalarySchemeIDs = "";

    $(document).ready(function ()
    {
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        var oLocations=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Locations));
        $('#cboLocations').data('objs',oLocations);
        $('#cboLocations').icsLoadCombo({
            List: oLocations,
            OptionValue: "LocationID",
            DisplayText: "Name",
            InitialValue: "--Select Location--"
        });

        var oShifts=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Shifts));
        $('#cboShifts').data('objs',oShifts);
        $('#cboShifts').icsLoadCombo({
            List: oShifts,
            OptionValue: "ShiftID",
            DisplayText: "Name",
            InitialValue: "--Select Shift--"
        });

        sessionStorage.setItem('Employees',JSON.stringify([]));
        sessionStorage.setItem('Attendances',JSON.stringify([]));
        sessionStorage.setItem('AttendanceDailys',JSON.stringify([]));
        sessionStorage.setItem('AttendanceDaily',JSON.stringify({}));
        sessionStorage.setItem('EmployeeID',0);

        $('#txtFromDate').datebox('setValue',icsdateformat(new Date()));
        $('#txtToDate').datebox('setValue',icsdateformat(new Date()));
        
        $('#MainBody').layout('collapse','west');

        $("#cboLocations").hide();
        $("#txtDepartment").hide();
        $("#btnDepartment").hide();
        $("#btnCDepartment").hide();
        $("#txtDesignation").hide();
        $("#btnDesignationPicker").hide();
        $("#btnCDesignation").hide();
        $("#cboShifts").hide();
    });
    function GenerateTableColumns() {
        //debugger;
        _otblColumns = [];
        var oColumn = null;
        
        var sStartDate=$('#txtFromDate').datebox('getValue');
        var sEndDate = $('#txtToDate').datebox('getValue');
        var dStartDate = new Date(sStartDate);
        var dEndDate = new Date(sEndDate);
        var year = dEndDate.getFullYear();
        var month = dEndDate.getMonth();
        var days=(parseInt(Math.floor((dEndDate - dStartDate) / (1000*60*60*24)))+1);

        oColumn = { field: "EmployeeName", width: "15%", title: "Employee", frozen: true };
        //_otblColumns.push(oColumn);
        $('#tblAttendanceDailys').datagrid({ frozenColumns: [[oColumn]] });

        for (var j = 0; j < days; j++) {
            var DayNo = icsCustomStringFormat((j + 1), '00');
            oColumn =
                    {
                        field: 'Day' + DayNo,
                        width: "11%",
                        formatter: function (value, row, index) { return FormatDetailAttendance(value, index); },
                        title: icsdateformat(new Date(year, month, j + 1))
                    };
            _otblColumns.push(oColumn);
        }
        $('#tblAttendanceDailys').datagrid({ columns: [_otblColumns] });
    }
    function GenerateTableData() {
        //debugger;
        var sStartDate=$('#txtFromDate').datebox('getValue');
        var sEndDate = $('#txtToDate').datebox('getValue');
        var dStartDate = new Date(sStartDate);
        var dEndDate = new Date(sEndDate);
        var year = dEndDate.getFullYear();
        var month = dEndDate.getMonth();
        var days=(parseInt(Math.floor((dEndDate - dStartDate) / (1000*60*60*24)))+1);

        var oAttendances = [];
        var oEmployees=jQuery.parseJSON(sessionStorage.getItem('Employees'));
        for (var i = 0; i < oEmployees.length; i++) {

            var oAttendance = NewObject();
            oAttendance.EmployeeID = oEmployees[i].EmployeeID;
            oAttendance.EmployeeName = oEmployees[i].NameCode;



            for (var j = 0; j < days; j++) {
                var DayNo=icsCustomStringFormat((j + 1),'00');
                oAttendance['Day' + DayNo] = GenerateCellValue(oAttendance.EmployeeID, new Date(year, month, j + 1));

            }
            oAttendances.push(oAttendance);
        }
        
        sessionStorage.setItem('Attendances',JSON.stringify(oAttendances));
        DynamicRefreshList(oAttendances, 'tblAttendanceDailys');
    }
    function NewObject() {
        var oAttendance = {EmployeeID: 0, EmployeeName: '', Day01: '', Day02: '', Day03: '', Day04: '', Day05: '', Day06: '', Day07: '', Day08: '', Day09: '', Day10: '', Day11: '', Day12: '', Day13: '', Day14: '', Day15: '', Day16: '', Day17: '', Day18: '', Day19: '', Day20: '', Day21: '', Day22: '', Day23: '', Day24: '', Day25: '', Day26: '', Day27: '', Day28: '', Day29: '', Day30: '', Day31: '' };
        return oAttendance;
    }
    function GenerateCellValue(EmployeeID, Date) {
        //debugger;
        var sDateString = icsdateformat(Date);
        //var sReturn = EmployeeID + '~' + sDateString + '~';
        var sData = '',nAttendanceID=0;
        var oAttendanceDailys =jQuery.parseJSON(sessionStorage.getItem('AttendanceDailys'));
        for (var i = 0; i < oAttendanceDailys.length; i++) {
            if (oAttendanceDailys[i].EmployeeID == EmployeeID && oAttendanceDailys[i].AttendanceDateInString == sDateString) {
                debugger;
                nAttendanceID=oAttendanceDailys[i].AttendanceID;
                sData = sData+'<label style="font-weight:bold;font-size:11px">In-Out</label>:(' + oAttendanceDailys[i].InTimeInString + '-'+oAttendanceDailys[i].OutTimeInString+')<br/>';
                sData = sData+(oAttendanceDailys[i].IsDayOff?'<label style="font-weight:bold;font-size:11px">DayOff</label>':'');
                sData = sData+(oAttendanceDailys[i].IsLeave?'<label style="font-weight:bold;font-size:11px"> Leave</label>':'');
                sData = sData+(oAttendanceDailys[i].IsHoliday?'<label style="font-weight:bold;font-size:11px"> Holiday</label>':'');
                sData = sData+('<br/><label style="font-weight:bold;font-size:11px">Late</label>:'+oAttendanceDailys[i].LateArrivalHourSt);
                sData = sData+(' <label style="font-weight:bold;font-size:11px">EL</label>:'+oAttendanceDailys[i].EarlyDepartureHrSt);
                sData = sData+(' <label style="font-weight:bold;font-size:11px">OT</label>:'+oAttendanceDailys[i].OverTimeInMinuteHourSt);
            }
        }

        //sBuyersName = sBuyersName.substring(0, sBuyersName.length - 1);
        var sReturn =nAttendanceID+ '~' + sDateString + '~'+sData;
        return sReturn;
    }
    function FormatDetailAttendance(value, index) {
        debugger;
        var aValues = value.split('~');
        var nObjectID = parseInt(aValues[0]);
        var sDate = aValues[1];
        var sParam = nObjectID + ",'" + sDate + "'," + index;
        var s = ' <p id="btnDetail' + nObjectID + '" style="font-size:11px;" ondblclick="DetailViewAttendance(' + sParam + ')">' + aValues[2] + '</p>';
            
        return s;
    }
    function DetailViewAttendance(nObjectID, sDate, index) {
        debugger;
        if (nObjectID == null || nObjectID <= 0) {
            alert("Please select a item from list!");
            return;
        }
        $('#tblAttendanceDailys').datagrid("selectRow", index);
        var oAttendance = $('#tblAttendanceDailys').datagrid("getSelected");

        if (oAttendance.AttendanceID <= 0) {
            alert("Please select a item from list!");
            return;
        }
        //alert("hello~" + nObjectID + '~' + sDate);
        
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/AttendanceDaily/GetForOPDB",
            traditional: true,
            data: JSON.stringify({AttendanceID:nObjectID}),
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                debugger;
                var oAtd = jQuery.parseJSON(data);
                if (oAtd.AttendanceID>0 && oAtd.ErrorMessage=="")
                {
                    SetAtt(oAtd);
                    oAtd.AttendanceDate=oAtd.AttendanceDateInString;
                    sessionStorage.setItem('AttendanceDaily',JSON.stringify(oAtd));
                    sessionStorage.setItem('EmployeeID',oAtd.EmployeeID);
                }
                else
                {
                    alert(oAtd.ErrorMessage);
                   
                }
                $('#divAttendanceDaily').icsWindow('open','Attendance of '+oAtd.EmployeeName+' on "'+sDate+'"');
            },
            error: function(xhr, status, error) {
                alert(error);
            }
        });
    }
    function RefreshListAttendance(oAttendanceDaily)
    {
        //var BaseMonth = (icsmonthparser($('#txtDateSchedule').datebox('getValue'))).getMonth();

        var date = icsdateparser(oAttendanceDaily.AttendanceDateInString);
        var year = date.getFullYear();
        var month = date.getMonth();
        var day = icsCustomStringFormat(date.getDate(), '00');
        var days = new Date(year, month + 1, 0).getDate();
        var oAtd = {};
        //var oAtds=jQuery.parseJSON(sessionStorage.getItem('Attendances'));

        //for (var i = 0; i < oAtds.length; i++) {

        //    if (oAtds[i].EmployeeID === oAttendanceDaily.EmployeeID) {
        oAtd = $('#tblAttendanceDailys').datagrid("getSelected");//oAtds[i];
        oAtd['Day' + day] = GenerateCellValue(oAttendanceDaily.EmployeeID, date);
        //    }
        //}

        var nRowIndexSchedule = $("#tblAttendanceDailys").datagrid("getRowIndex", oAtd);
        $("#tblAttendanceDailys").datagrid("updateRow", { index: nRowIndexSchedule, row: oAtd });
    }

    function Reset()
    {
        
        $('#txtActualLate').numberbox('setValue', 0);
        $('#txtActualEarlyLeaving').numberbox('setValue', 0);
        $('#txtActualOverTime').numberbox('setValue', 0);
        $('#txtActualInTime').timespinner('setValue', '08:00');
        $('#txtActualOutTime').timespinner('setValue', '17:00');

        $('#txtLate').numberbox('setValue', 0);
        $('#txtEarlyLeaving').numberbox('setValue', 0);
        $('#txtOverTime').numberbox('setValue', 0);
        $('#txtInTime').timespinner('setValue', '08:00');
        $('#txtOutTime').timespinner('setValue', '17:00');

        $('#inTimeRandomStart_Actual').timespinner('setValue', '07:45');
        $('#inTimeRandomEnd_Actual').timespinner('setValue', '08:13');
        $('#outTimeRandomStart_Actual').timespinner('setValue', '16:57');
        $('#outTimeRandomEnd_Actual').timespinner('setValue', '17:10');

        $('#inTimeRandomStart').timespinner('setValue', '07:45');
        $('#inTimeRandomEnd').timespinner('setValue', '08:13');
        $('#outTimeRandomStart').timespinner('setValue', '16:57');
        $('#outTimeRandomEnd').timespinner('setValue', '17:10');
    }
    function SetAtt(oAtd)
    {
        debugger
        //document.getElementById("cboWorkingStatus").selectedIndex=oAtd.WorkingStatusInt;
        $('#outTimeRandomEnd_Actual').timespinner('setValue', oAtd.Note);

        $('#txtActualLate').numberbox('setValue', oAtd.ActualLateArrivalMinute);
        $('#txtActualEarlyLeaving').numberbox('setValue', oAtd.ActualEarlyDepartureMinute);
        $('#txtActualOverTime').numberbox('setValue', oAtd.ActualOverTimeInMinute);
        $('#txtActualInTime').timespinner('setValue', oAtd.ActualInTimeInString);
        $('#txtActualOutTime').timespinner('setValue',oAtd.ActualOutTimeInString);

        $('#txtLate').numberbox('setValue', oAtd.LateArrivalMinute);
        $('#txtEarlyLeaving').numberbox('setValue',oAtd.EarlyDepartureMinute);
        $('#txtOverTime').numberbox('setValue', oAtd.OverTimeInMinute);
        $('#txtInTime').timespinner('setValue', oAtd.InTimeInString);
        $('#txtOutTime').timespinner('setValue', oAtd.OutTimeInString);
       
        document.getElementById("chkDayOff").checked=oAtd.IsDayOff;
        document.getElementById("chkHoliday").checked=oAtd.IsHoliday;
        document.getElementById("chkActualDayOff").checked=oAtd.IsActualDayOff;
        document.getElementById("chkActualHoliday").checked=oAtd.IsActualHoliday;

        $('#inTimeRandomStart_Actual').timespinner('setValue', '07:45');
        $('#inTimeRandomEnd_Actual').timespinner('setValue', '08:13');
        $('#outTimeRandomStart_Actual').timespinner('setValue', '16:57');
        $('#outTimeRandomEnd_Actual').timespinner('setValue', '17:10');

        $('#inTimeRandomStart').timespinner('setValue', '07:45');
        $('#inTimeRandomEnd').timespinner('setValue', '08:13');
        $('#outTimeRandomStart').timespinner('setValue', '16:57');
        $('#outTimeRandomEnd').timespinner('setValue', '17:10');

    }
    function ValidateInput()
    {
        debugger
        var nEmpID=parseInt(sessionStorage.getItem('EmployeeID'))?parseInt(sessionStorage.getItem('EmployeeID')):0;
        if(nEmpID<=0)
        {
            alert("Please select an employee!!");
            return false;
        }

        var ActualInhr=$('#txtActualInTime').timespinner('getHours');
        var ActualInmn=$('#txtActualInTime').timespinner('getMinutes');
        var ActualOuthr=$('#txtActualOutTime').timespinner('getHours');
        var ActualOutmn=$('#txtActualOutTime').timespinner('getMinutes');

        //if (isNaN(ActualInhr) ||  ActualInhr<1 || ActualInhr>24)
        //{
        //    alert("Hour must be 1 to 24 !");
        //    $('#txtActualInTime').focus();
        //    return false;
        //}
        if (isNaN(ActualInmn) ||  ActualInmn<0 || ActualInmn>60)
        {
            alert("Minute must be 0 to 60 !");
            $('#txtActualInTime').focus();
            return false;
        }
        //if (isNaN(ActualOuthr) || ActualOuthr<1 || ActualOuthr>24)
        //{
        //    alert("Hour must be 1 to 24 !");
        //    $('#txtActualOutTime').focus();
        //    return false;
        //}
        if (isNaN(ActualOutmn) ||  ActualOutmn<0 || ActualOutmn>60)
        {
            alert("Minute must be 0 to 60 !");
            $('#txtActualOutTime').focus();
            return false;
        }

        var Inhr=$('#txtInTime').timespinner('getHours');
        var Inmn=$('#txtInTime').timespinner('getMinutes');
        var Outhr=$('#txtOutTime').timespinner('getHours');
        var Outmn=$('#txtOutTime').timespinner('getMinutes');

        if (isNaN(Inhr) ||  Inhr<0 || Inhr>24)
        {
            alert("Hour must be 1 to 24 !");
            $('#timeSpinner').focus();
            return false;
        }
        if (isNaN(Inmn) ||  Inmn<0 || Inmn>60)
        {
            alert("Minute must be 0 to 60 !");
            $('#timeSpinner').focus();
            return false;
        }
        if (isNaN(Outhr) || Outhr<0 || Outhr>24)
        {
            alert("Hour must be 1 to 24 !");
            $('#txtOutTime').focus();
            return false;
        }
        if (isNaN(Outmn) ||  Outmn<0 || Outmn>60)
        {
            alert("Minute must be 0 to 60 !");
            $('#txtOutTime').focus();
            return false;
        }

        
       
        var InTimeRandomStart_Actual = $('#inTimeRandomStart_Actual').timespinner('getValue');
        var InTimeRandomEnd_Actual = $('#inTimeRandomEnd_Actual').timespinner('getValue');
        var OutTimeRandomStart_Actual = $('#outTimeRandomStart_Actual').timespinner('getValue');
        var OutTimeRandomEnd_Actual = $('#outTimeRandomEnd_Actual').timespinner('getValue');
        var isinTimeRandom_Actual = $("#chkinTimeRandom_Actual").is(':checked');
        var isoutTimeRandom_Actual = $("#chkoutTimeRandom_Actual").is(':checked');

        if(isinTimeRandom_Actual==true)
        {
            if(InTimeRandomStart_Actual=="" || InTimeRandomEnd_Actual=="")
            {
                alert("Please enter rendom in time!");
                return false;
            }
        }
        if(isoutTimeRandom_Actual==true)
        {
            if(OutTimeRandomStart_Actual=="" || OutTimeRandomEnd_Actual=="")
            {
                alert("Please enter rendom out time!");
                return false;
            }
        }

        var InTimeRandomStart = $('#inTimeRandomStart').timespinner('getValue');
        var InTimeRandomEnd = $('#inTimeRandomEnd').timespinner('getValue');
        var OutTimeRandomStart = $('#outTimeRandomStart').timespinner('getValue');
        var OutTimeRandomEnd = $('#outTimeRandomEnd').timespinner('getValue');
        var isinTimeRandom = $("#chkinTimeRandom").is(':checked');
        var isoutTimeRandom = $("#chkoutTimeRandom").is(':checked');

        if(isinTimeRandom==true)
        {
            if(InTimeRandomStart=="" || InTimeRandomEnd=="")
            {
                alert("Please enter rendom in time!");
                return false;
            }
        }
        if(isoutTimeRandom==true)
        {
            if(OutTimeRandomStart=="" || OutTimeRandomEnd=="")
            {
                alert("Please enter rendom out time!");
                return false;
            }
        }

        return true;
    }

    function RefreshObject()
    {
        debugger
        //sRandom
        var nEmpID=parseInt(sessionStorage.getItem('EmployeeID'))?parseInt(sessionStorage.getItem('EmployeeID')):0;
        var oAtd=jQuery.parseJSON(sessionStorage.getItem('AttendanceDaily'));

        //alert(oAtd.AttendanceDate);

        var InTimeRandomStart_Actual = $('#inTimeRandomStart_Actual').timespinner('getValue');
        var InTimeRandomEnd_Actual = $('#inTimeRandomEnd_Actual').timespinner('getValue');
        var OutTimeRandomStart_Actual = $('#outTimeRandomStart_Actual').timespinner('getValue');
        var OutTimeRandomEnd_Actual = $('#outTimeRandomEnd_Actual').timespinner('getValue');
        var isinTimeRandom_Actual = $("#chkinTimeRandom_Actual").is(':checked');
        var isoutTimeRandom_Actual = $("#chkoutTimeRandom_Actual").is(':checked');

        var InTimeRandomStart = $('#inTimeRandomStart').timespinner('getValue');
        var InTimeRandomEnd = $('#inTimeRandomEnd').timespinner('getValue');
        var OutTimeRandomStart = $('#outTimeRandomStart').timespinner('getValue');
        var OutTimeRandomEnd = $('#outTimeRandomEnd').timespinner('getValue');
        var isinTimeRandom = $("#chkinTimeRandom").is(':checked');
        var isoutTimeRandom = $("#chkoutTimeRandom").is(':checked');

        var Random = isinTimeRandom_Actual+"~"+InTimeRandomStart_Actual+"~"+InTimeRandomEnd_Actual+"~"+isoutTimeRandom_Actual+"~"+OutTimeRandomStart_Actual+"~"+OutTimeRandomEnd_Actual
           +"~"+ isinTimeRandom+"~"+InTimeRandomStart+"~"+InTimeRandomEnd+"~"+isoutTimeRandom+"~"+OutTimeRandomStart+"~"+OutTimeRandomEnd;
        
       
        oAtd.InTime = $('#txtInTime').timespinner('getValue');//dInTime;
        oAtd.OutTime = $('#txtOutTime').timespinner('getValue');//dOutTime;
        oAtd.ActualInTime = $('#txtActualInTime').timespinner('getValue');//dInTime;
        oAtd.ActualOutTime = $('#txtActualOutTime').timespinner('getValue');//dOutTime;

        oAtd.LateArrivalMinute = $('#txtLate').numberbox('getValue') ;
        oAtd.EarlyDepartureMinute = $('#txtEarlyLeaving').numberbox('getValue') ;
        oAtd.OverTimeInMinute = $('#txtOverTime').numberbox('getValue') ;

        oAtd.ActualLateArrivalMinute = $('#txtActualLate').numberbox('getValue') ;
        oAtd.ActualEarlyDepartureMinute = $('#txtActualEarlyLeaving').numberbox('getValue') ;
        oAtd.ActualOverTimeInMinute = $('#txtActualOverTime').numberbox('getValue');

        oAtd.IsDayOff = document.getElementById("chkDayOff").checked;
        oAtd.IsHoliday = document.getElementById("chkHoliday").checked;
        oAtd.IsActualDayOff = document.getElementById("chkActualDayOff").checked;
        oAtd.IsActualHoliday = document.getElementById("chkActualHoliday").checked;

        oAtd.sRandom=Random;
        oAtd.ErrorMessage=nEmpID;
           
        return oAtd;
    }

    $('#btnSaveAttendance').click(function ()
    {
        if (!ValidateInput()) return;
        var oAttendanceDaily = RefreshObject();
        
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/AttendanceDaily/AttendanceDaily_IU",
            traditional: true,
            data: JSON.stringify(oAttendanceDaily),
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                debugger;
                var oAtd = jQuery.parseJSON(data);
                if (oAtd.ErrorMessage!="" && oAtd.ErrorMessage!=null)
                {
                    alert(oAtd.ErrorMessage);
                }
                else
                {
                    alert("Data Saved Successfuly!");
                    var oAttendanceDailys =jQuery.parseJSON(sessionStorage.getItem('AttendanceDailys'));

                    for(var i=0;i<oAttendanceDailys.length;i++){
                        if(oAttendanceDailys[i].AttendanceID===oAtd.AttendanceID){
                            oAttendanceDailys[i]=oAtd;
                            break;
                        }
                    }
                    sessionStorage.setItem('AttendanceDailys',JSON.stringify(oAttendanceDailys));
                    RefreshListAttendance(oAtd);
                    $('#divAttendanceDaily').icsWindow('close');
                    Reset();
                }
            },
            error: function(xhr, status, error) {
                alert(error);
            }
        });
    });

    $(document).keydown(function (e){
        if(e.which == 27)//escape=27
        {
            $("#divAttendanceDaily").icsWindow("close");                
        }
    });
    
    $('#btnCloseAttendance').click(function(){
        $('#divAttendanceDaily').icsWindow('close');
    });

    $('#txtEmployee').keydown(function (e)
    {

        var sEmpCode=$.trim($("#txtEmployee").val());

        if (e.which === 13)//Enter key-13
        {
            if(sEmpCode==='')
            {
                alert("Please Enter Code !");
                return false;
            }
            var nts=(new Date()).getTime()/1000;
            var oParameter = new Object();
            oParameter.MultipleItemReturn = false;
            var url = _sBaseAddress + "/Employee/EmployeePikerByCode?sCode="+sEmpCode+"&nDepartmentID=0&nts="+nts;
            _oEmployee = window.showModalDialog(url, oParameter, 'dialogHeight:415px;dialogWidth:515px;dialogLeft:400;dialogTop:100;center:yes;resizable:no;status:no;scroll:no');

            if(_oEmployee!=null)
            {
                _sEmployeeIDs ="";
                if(_oEmployee.DesignationName=="" || _oEmployee.DepartmentName=="" || _oEmployee.LocationName=="")
                {
                    alert("This Employee Has No Official Information !");
                    return false;
                }
                var oEmployees=[];
                oEmployees.push(_oEmployee);
                sessionStorage.setItem('Employees',JSON.stringify(oEmployees));
                $("#txtEmployee").val(_oEmployee.Name+"["+_oEmployee.Code+"]");
                _sEmployeeIDs = '';
                _sEmployeeIDs = _oEmployee.EmployeeID;
            }
        }
        if (e.which === 8 || e.which === 46)
        {
            $("#txtEmployee").val("") ;
            _sEmployeeIDs = "" ;
        }
    });

    $('#btnEmployeePicker').click(function (e)
    {

        var oParameter = new Object();
        oParameter.Name = "Employee Advance Search";
        oParameter.MultipleItemReturn=true;
        var url = _sBaseAddress + "/Employee/EmployeeHRMPiker";
        //_oEmployees = window.showModalDialog(url, oParameter, 'dialogHeight:510px;dialogWidth:1000px;dialogLeft:50;dialogRight:50;dialogTop:50;center:yes;resizable:yes;status:no;scroll:no');
        var nLeft=(window.screen.width/2)-(1000/2);
        var nHeight=(window.screen.height/2)-(580/2);
        _oEmployees = window.showModalDialog(url, oParameter, 'dialogHeight:580px;dialogWidth:1000px;dialogLeft:'+nLeft+';dialogTop:'+nHeight+';center:yes;resizable:no;status:no;scroll:yes');
        if(_oEmployees!=null)
        {

            var sEmployeeName ="";
            _sEmployeeIDs = "";
            for(var i =0; i<_oEmployees.length;i++)
            {
                if(_oEmployees[i].DesignationName=="" || _oEmployees[i].DepartmentName=="" || _oEmployees[i].LocationName=="")
                {
                    alert("Some Employee Has No Official Information !");
                    return;
                }

                if(_oEmployees[i].IsActive == false)
                {
                    alert("Some Employee Is InActive!");
                    return;
                }
                sessionStorage.setItem('Employees',JSON.stringify(_oEmployees));
                _sEmployeeIDs += _oEmployees[i].EmployeeID +",";
                sEmployeeName += _oEmployees[i].Name +",";

            }
            _sEmployeeIDs = _sEmployeeIDs.substring(0,_sEmployeeIDs.length-1);
            sEmployeeName = sEmployeeName.substring(0,sEmployeeName.length-1);
            $("#txtEmployee").val(sEmployeeName);

        }
    });

    $('#btnCEmployee').click(function (e)
    {
        $("#txtEmployee").val("") ;
        _sEmployeeIDs = "" ;
    });

    function IsValid(){

        if ( $('#txtFromDate').datebox('getValue')=="") {
            alert("please select Start date!");
            $('#txtFromDate').focus();
            return false;
        }

        if ( $('#txtToDate').datebox('getValue')=="") {
            alert("Please select end date!!");
            $('#txtToDate').focus();
            return false;
        }

        var sStartDate=$('#txtFromDate').datebox('getValue');
        var sEndDate = $('#txtToDate').datebox('getValue');
        var dStartDate = new Date(sStartDate);
        var dEndDate = new Date(sEndDate);

        if(dEndDate < dStartDate) {
            alert("End date must be grater then start date!!");
            $('#txtToDate').focus();
            return false;
        }
        if((parseInt(Math.floor((dEndDate - dStartDate) / (1000*60*60*24)))+1)>31){
            alert("Maximum allowed Date Range is 31 Days. \nPlease change Date!!");
            $('#txtToDate').focus();
            return false;
        }

        if(_sEmployeeIDs == "")
        {
            alert("Please select at least one Employee!");
            return false;
        }
        return true;
    }

    function Search()
    {
        
        if(!IsValid()){return false;}

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/AttendanceDaily/GetsForOPDB",
            traditional: true,
            data: JSON.stringify({EmployeeIDs : _sEmployeeIDs,DepartmentIDs:_sDepartmentIds,DesignationIDs:_sDesignationIds,LocationID:parseInt($('#cboLocations').val()),ShiftID:parseInt($('#cboShifts').val()), AttendanceDateFrom : $('#txtFromDate').datebox('getValue'), AttendanceDateTo : $('#txtToDate').datebox('getValue') }),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {
                sessionStorage.setItem('AttendanceDailys',data);
                GenerateTableColumns();
                GenerateTableData();
                //var oMonthlyAttendanceReports=[];

                //oMonthlyAttendanceReports = jQuery.parseJSON(data);
                //if (oMonthlyAttendanceReports.length>0 && oMonthlyAttendanceReports[0].ErrorMessage=="")
                //{
                //    RefreshList(oMonthlyAttendanceReports);
                //}
                //else
                //{
                //    alert(oMonthlyAttendanceReports[0].ErrorMessage);
                //    oMonthlyAttendanceReports=[];
                //    RefreshList(oMonthlyAttendanceReports);
                //}
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    }

    
    function Print()
    {

        var oEmployees = $('#tblAttendanceDailys').datagrid('getRows');

        if(oEmployees.length <=0)
        {
            alert("There is nothing to print !");
            return ;
        }
        var dtDateFrom = GenerateStartTimeInString();
        var dtDateTo = GenerateEndTimeInString();
        var tsv=((new Date()).getTime())/1000;

        //window.open(_sBaseAddress+ "/AttendanceDaily/PrintMonthlyAttendance?sEmployeeIDs="+_sEmployeeIDs+"&sDepartmentIds="+_sDepartmentIds+"&sDesignationIds="+_sDesignationIds+"&sSalarySchemeIDs="+_sSalarySchemeIDs+"&DateFrom="+dtDateFrom+"&DateTo="+dtDateTo+"&ts="+tsv, "_blank");

    }

   

    function DepartmentPicker()
    {

        var oParameter = new Object();
        oParameter.MultipleItemReturn = true;
        var url = _sBaseAddress + "/Department/DepartmentPickerWithCheckBox?id=0";
        var oReturnObjects = window.showModalDialog(url, oParameter, 'dialogHeight:470px;dialogWidth:550px;dialogLeft:400;dialogTop:100;center:yes;resizable:no;status:no;scroll:no');
        if (oReturnObjects != null)
        {
            for(var i=0; i<oReturnObjects.length; i++)
            {
                _sDepartmentNames+=oReturnObjects[i].text+",";
                _sDepartmentIds+=oReturnObjects[i].id+",";
            }

            _sDepartmentNames=_sDepartmentNames.substring(0,_sDepartmentNames.length-1);
            _sDepartmentIds=_sDepartmentIds.substring(0,_sDepartmentIds.length-1);

            //_sDepartmentNames = oReturnObject.text;
            //_nDepartmentId = oReturnObject.id ;
            $("#txtDepartment").val(_sDepartmentNames);
            //$("#txtDepartment")[0].value = oReturnObject.text;
            //$("#departmentID")[0].value = oReturnObject.id;
            //var departmentID= oReturnObject.id;
        }
    }

    $('#txtDepartment').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (e.which === 13)//Enter key-13
        {
            var oParameter = new Object();
            oParameter.MultipleItemReturn = false;
            var url = _sBaseAddress + "/Department/DepartmentPickerWithCheckBox?id=0";
            var oReturnObject = window.showModalDialog(url, oParameter, 'dialogHeight:470px;dialogWidth:550px;dialogLeft:400;dialogTop:100;center:yes;resizable:no;status:no;scroll:no');
            if (oReturnObject != null)
            {
                //for(var i=0; i<oReturnObjects.length; i++)
                //{
                //    _sDepartmentNames+=oReturnObjects[i].text+",";
                //    _sDepartmentIds+=oReturnObjects[i].id+",";
                //}

                //_sDepartmentNames=_sDepartmentNames.substring(0,_sDepartmentNames.length-1);
                //_sDepartmentIds=_sDepartmentIds.substring(0,_sDepartmentIds.length-1);

                _sDepartmentNames = oReturnObject.text;
                _sDepartmentIds = oReturnObject.id ;
                $("#txtDepartment").val(_sDepartmentNames);
                //$("#txtDepartment")[0].value = oReturnObject.text;
                //$("#departmentID")[0].value = oReturnObject.id;
                //var departmentID= oReturnObject.id;
            }
        }
        if (e.which === 8 || e.which === 46)
        {
            $("#txtDepartment").val("") ;
            _sDepartmentIds = "" ;
        }
    });

    $('#btnCDepartment').click(function (e)
    {
        $("#txtDepartment").val("") ;
        _sDepartmentIds = "" ;
        _sDepartmentNames = "";
    });

    function DesignationPicker()
    {

        var oParameter = new Object();
        oParameter.MultipleItemReturn = true;
        var url = _sBaseAddress + "/Designation/DesignationPickerWithCheckBox?id=0";
        var oReturnObjects = window.showModalDialog(url, oParameter, 'dialogHeight:470px;dialogWidth:550px;dialogLeft:400;dialogTop:100;center:yes;resizable:no;status:no;scroll:no');
        if(oReturnObjects!=null)
        {
            //$("#txtDesignation")[0].value = oReturnObject.text;
            //$("#designationID")[0].value = oReturnObject.id;

            for(var i=0; i<oReturnObjects.length; i++)
            {
                _sDesignationNames+=oReturnObjects[i].text+",";
                _sDesignationIds+=oReturnObjects[i].id+",";
            }

            _sDesignationNames=_sDesignationNames.substring(0,_sDesignationNames.length-1);
            _sDesignationIds=_sDesignationIds.substring(0,_sDesignationIds.length-1);
            $("#txtDesignation").val(_sDesignationNames);
        }

    }

    $('#txtDesignation').keydown(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (e.which === 13)//Enter key-13
        {
            var oParameter = new Object();
            oParameter.MultipleItemReturn = false;
            var url = _sBaseAddress + "/Department/DepartmentPickerWithCheckBox?id=0";
            var oReturnObject = window.showModalDialog(url, oParameter, 'dialogHeight:470px;dialogWidth:550px;dialogLeft:400;dialogTop:100;center:yes;resizable:no;status:no;scroll:no');
            if (oReturnObject != null)
            {
                _sDesignationNames = oReturnObject.text;
                _sDesignationIds = oReturnObject.id ;
                $("#txtDesignation").val(_sDesignationNames);
            }
        }
        if (e.which === 8 || e.which === 46)
        {
            $("#txtDesignation").val("") ;
            _sDesignationIds = "" ;
        }
    });

    $('#btnCDesignation').click(function (e)
    {
        $("#txtDesignation").val("") ;
        _sDesignationIds = "" ;
        _sDesignationNames = "";
    });
    
    $('#chk_Ac_to_Comp').click(function (e)
    {
        //var sbtnID=$(this).attr('id');
        if($("#chk_Ac_to_Comp").is(':checked'))
        {
            $('#txtLate').numberbox('setValue', $('#txtActualLate').numberbox('getValue'));
            $('#txtEarlyLeaving').numberbox('setValue', $('#txtActualEarlyLeaving').numberbox('getValue'));
            $('#txtOverTime').numberbox('setValue', $('#txtActualOverTime').numberbox('getValue'));
            $('#txtInTime').timespinner('setValue', $('#txtActualInTime').timespinner('getValue'));
            $('#txtOutTime').timespinner('setValue',$('#txtActualOutTime').timespinner('getValue'));

            $("#chkinTimeRandom").attr('checked', $("#chkinTimeRandom_Actual").is(':checked'));
            $("#chkoutTimeRandom").attr('checked', $("#chkoutTimeRandom_Actual").is(':checked'));

            $('#inTimeRandomStart').timespinner('setValue', $('#inTimeRandomStart_Actual').timespinner('getValue'));
            $('#inTimeRandomEnd').timespinner('setValue',$('#inTimeRandomEnd_Actual').timespinner('getValue'));
            $('#outTimeRandomStart').timespinner('setValue',$('#outTimeRandomStart_Actual').timespinner('getValue'));
            $('#outTimeRandomEnd').timespinner('setValue',$('#outTimeRandomEnd_Actual').timespinner('getValue'));

            $("#chkDayOff").attr('checked', $("#chkActualDayOff").is(':checked'));
            $("#chkHoliday").attr('checked', $("#chkActualHoliday").is(':checked'));
            $("#chk_Comp_to_Ac").attr('checked',false);
        }
        else
        {
            $('#txtLate').numberbox('setValue', 0);
            $('#txtEarlyLeaving').numberbox('setValue', 0);
            $('#txtOverTime').numberbox('setValue', 0);
            $('#txtInTime').timespinner('setValue', '08:00');
            $('#txtOutTime').timespinner('setValue', '17:00');
            
            $("#chkinTimeRandom").attr('checked',true);
            $("#chkoutTimeRandom").attr('checked', true);

            $('#inTimeRandomStart').timespinner('setValue', '07:45');
            $('#inTimeRandomEnd').timespinner('setValue', '08:13');
            $('#outTimeRandomStart').timespinner('setValue', '16:57');
            $('#outTimeRandomEnd').timespinner('setValue', '17:10');

            $("#chkDayOff").attr('checked', false);
            $("#chkHoliday").attr('checked',false);
        }
    });
   
    $('#chk_Comp_to_Ac').click(function (e)
    {
        //var sbtnID=$(this).attr('id');
        if($("#chk_Comp_to_Ac").is(':checked'))
        {
            $('#txtActualLate').numberbox('setValue', $('#txtLate').numberbox('getValue'));
            $('#txtActualEarlyLeaving').numberbox('setValue', $('#txtEarlyLeaving').numberbox('getValue'));
            $('#txtActualOverTime').numberbox('setValue', $('#txtOverTime').numberbox('getValue'));
            $('#txtActualInTime').timespinner('setValue', $('#txtInTime').timespinner('getValue'));
            $('#txtActualOutTime').timespinner('setValue',$('#txtOutTime').timespinner('getValue'));

            $("#chkinTimeRandom_Actual").attr('checked', $("#chkinTimeRandom").is(':checked'));
            $("#chkoutTimeRandom_Actual").attr('checked', $("#chkoutTimeRandom").is(':checked'));

            $('#inTimeRandomStart_Actual').timespinner('setValue', $('#inTimeRandomStart').timespinner('getValue'));
            $('#inTimeRandomEnd_Actual').timespinner('setValue',$('#inTimeRandomEnd').timespinner('getValue'));
            $('#outTimeRandomStart_Actual').timespinner('setValue',$('#outTimeRandomStart').timespinner('getValue'));
            $('#outTimeRandomEnd_Actual').timespinner('setValue',$('#outTimeRandomEnd').timespinner('getValue'));

            $("#chkActualDayOff").attr('checked', $("#chkDayOff").is(':checked'));
            $("#chkActualHoliday").attr('checked', $("#chkHoliday").is(':checked'));
            $("#chk_Ac_to_Comp").attr('checked',false);
        }
        else
        {
            $('#txtActualLate').numberbox('setValue', 0);
            $('#txtActualEarlyLeaving').numberbox('setValue', 0);
            $('#txtActualOverTime').numberbox('setValue', 0);
            $('#txtActualInTime').timespinner('setValue', '08:00');
            $('#txtActualOutTime').timespinner('setValue', '17:00');
            
            $("#chkinTimeRandom_Actual").attr('checked',true);
            $("#chkoutTimeRandom_Actual").attr('checked', true);

            $('#inTimeRandomStart_Actual').timespinner('setValue', '07:45');
            $('#inTimeRandomEnd_Actual').timespinner('setValue', '08:13');
            $('#outTimeRandomStart_Actual').timespinner('setValue', '16:57');
            $('#outTimeRandomEnd_Actual').timespinner('setValue', '17:10');

            $("#chkActualDayOff").attr('checked', false);
            $("#chkActualHoliday").attr('checked',false);
        }
    });
    
    $('#chk_Absent').click(function (e)
    {
        //actual
        $('#txtActualInTime').timespinner('setValue', '00:00');
        $('#txtActualOutTime').timespinner('setValue', '00:00');
        $('#txtActualLate').numberbox('setValue', 0);
        $('#txtActualEarlyLeaving').numberbox('setValue', 0);
        $('#txtActualOverTime').numberbox('setValue', 0);
        $("#chkActualDayOff").attr('checked',false);
        $("#chkActualHoliday").attr('checked',false);
        $("#chkinTimeRandom_Actual").attr('checked',false);
        $("#chkoutTimeRandom_Actual").attr('checked',false);
        $('#inTimeRandomStart_Actual').timespinner('setValue', '00:00');
        $('#inTimeRandomEnd_Actual').timespinner('setValue', '00:00');
        $('#outTimeRandomStart_Actual').timespinner('setValue', '00:00');
        $('#outTimeRandomEnd_Actual').timespinner('setValue', '00:00');

        //compliance
        $('#txtInTime').timespinner('setValue', '00:00');
        $('#txtOutTime').timespinner('setValue', '00:00');
        $('#txtLate').numberbox('setValue', 0);
        $('#txtEarlyLeaving').numberbox('setValue', 0);
        $('#txtOverTime').numberbox('setValue', 0);
        $("#chkDayOff").attr('checked',false);
        $("#chkHoliday").attr('checked',false);
        $("#chkinTimeRandom").attr('checked',false);
        $("#chkoutTimeRandom").attr('checked', false);
        $('#inTimeRandomStart').timespinner('setValue', '00:00');
        $('#inTimeRandomEnd').timespinner('setValue', '00:00');
        $('#outTimeRandomStart').timespinner('setValue', '00:00');
        $('#outTimeRandomEnd').timespinner('setValue', '00:00');

    });

</script>
