<html>
<body>
    @{
        ViewBag.Title = "Account Effect";
    }
    @model ESimSol.BusinessObjects.AccountEffect
    <div id="divAccountEffect" class="easyui-panel menuMainCollectionTable" >
        <div style="width:100%; height:90%; text-align:center">
            <table id="tblAccountEffect" title="" class="easyui-datagrid" style="width:100%;height:500px;" data-options="singleSelect: true,fitColumns:false,rownumbers:true,pagination:false,autoRowHeight:false,toolbar: '#toolbar'">
                <thead>
                    <tr>
                        <th field="AccountEffectTypeSt" width="200" align="left">Effect Type</th>
                        <th field="DrAccountCode" width="120" align="left">Dr A/C Code</th>
                        <th field="DrAccountHeadName" width="150" align="left">Dr A/C Head</th>
                        <th field="CrAccountCode" width="120" align="left">Cr A/C Code</th>
                        <th field="CrAccountHeadName" width="150" align="left">Cr A/C Head</th>
                        <th field="DebitSubLedgerCode" width="120" align="left">Dr SubLedger Code</th>
                        <th field="DebitSubLedgerName" width="150" align="left">Dr SubLedger Name</th>
                        <th field="CreditSubLedgerCode" width="120" align="left">Cr SubLedger Code</th>
                        <th field="CreditSubLedgerName" width="150" align="left">Cr SubLedger Name</th>
                    </tr>
                </thead>
            </table>
            <div style="text-align:left" id="toolbar">
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td style="width:10%;text-align:right;">Effect Type :</td>
                        <td style="width:22%">@Html.DropDownListFor(model => model.AccountEffectTypeInt, Model.AccountEffectTypes.Select(x => new SelectListItem() { Text = x.Value, Value = x.id.ToString() }), new { id = "cboAccountEffectType", style = "width:100%;" })</td>
                        <td style="width:10%;text-align:right;">Dr Account :</td>
                        <td style="width:22%">@Html.TextBoxFor(model => model.DrAccountHeadName, new { style = "width:100%;", id = "txtDrAccountHeadName" })</td>
                        <td style="width:8%;text-align:right;">Cr Account :</td>
                        <td style="width:28%">@Html.TextBoxFor(model => model.CrAccountHeadName, new { style = "width:100%;", id = "txtCrAccountHeadName" })</td>
                    </tr>
                    <tr>
                        <td style="width:10%;text-align:right;">Dr.SubLedger :</td>
                        <td style="width:22%">@Html.TextBoxFor(model => model.DebitSubLedgerName, new { style = "width:100%;", id = "txtDebitSubLedgerName" })</td>
                        <td style="width:10%;text-align:right;">Cr. SubLedger :</td>
                        <td style="width:22%">@Html.TextBoxFor(model => model.CreditSubLedgerName, new { style = "width:100%;", id = "txtCreditSubLedgerName" })</td>
                        <td style="width:8%;text-align:right;">Remarks :</td>
                        <td style="width:28%">
                            <table border="0" cellpadding="0" cellspacing="0">
                                <tr>
                                    <td width="40%">@Html.TextBoxFor(model => model.Remarks, new { style = "width:100%;", id = "txtRemarks" })</td>
                                    <td width="600%">
                                        <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                                        <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                                        <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true"></a>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
        <div style="width:100%; height:10%">
            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                    <tr>
                        <td style="width:80%; text-align:right"></td>
                        <td style="width: 10%"></td>
                        <td style="width: 10%">
                            <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>
</body>
</html>


<script type="text/javascript">
    var _oAccountEffect=null;
    $(document).ready(function () {
        _oAccountEffect =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));       
        $('#txtDrAccountHeadName').data('DrAccountHeadID',0);
        $('#txtCrAccountHeadName').data('CrAccountHeadID',0);
        $('#txtDebitSubLedgerName').data('DebitSubLedgerID',0);
        $('#txtCreditSubLedgerName').data('CreditSubLedgerID',0);
         $('#tblAccountEffect').datagrid({ title: (sessionStorage.getItem('AccountEffectHeader'))});
         RefreshList(_oAccountEffect.AccountEffects);
 });


    $('#txtDrAccountHeadName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) //Enter
        {
            PickAccountHead(true);
        }
        if (code == 8) //backspace=8
        {
            $('#txtDrAccountHeadName').removeClass('fontColorOfPickItem');
            $('#txtDrAccountHeadName').data('DrAccountHeadID',0);
        }
    });
    $('#txtCrAccountHeadName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) //Enter
        {
            PickAccountHead(false);
        }
        if (code == 8) //backspace=8
        {
            $('#txtCrAccountHeadName').removeClass('fontColorOfPickItem');
            $('#txtCrAccountHeadName').data('CrAccountHeadID',0);
        }
    });
    function PickAccountHead(bIsDebit)
    {
        var sAccountHead = $.trim($('#txtDrAccountHeadName').val());
        if(!bIsDebit)
        {
            sAccountHead = $.trim($('#txtCrAccountHeadName').val());
        }
        var oChartsOfAccount = {AccountHeadName:sAccountHead};
        var obj = {
            BaseAddress:sessionStorage.getItem("BaseAddress"),
            Object:oChartsOfAccount,
            ControllerName: "ChartsOfAccount",
            ActionName: "GetChartsOfAccounts",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AccountHeadID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "AccountCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "AccountHeadName", title: "AccountHead Name", width:180, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ComponentType", title: "Component Type", width:140, align: "left" }; tblColums.push(oColumn);
                    
                    var oPickerParam = {
                        winid: 'winChartsOfAccountPicker',
                        winclass: 'clsChartsOfAccountPicker',
                        winwidth: 520,
                        winheight: 460,
                        tableid: 'tblChartsOfAccountPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'AccountHeadName',
                        windowTittle: 'Account Head List',
                        IsDebit:bIsDebit
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }

    $('#txtDebitSubLedgerName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) //Enter
        {
            PickACCostCenter(true);
        }
        if (code == 8) //backspace=8
        {
            $('#txtDebitSubLedgerName').removeClass('fontColorOfPickItem');
            $('#txtDebitSubLedgerName').data('DebitSubLedgerID',0);
        }
    });
    $('#txtCreditSubLedgerName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) //Enter
        {
            PickACCostCenter(false);
        }
        if (code == 8) //backspace=8
        {
            $('#txtCreditSubLedgerName').removeClass('fontColorOfPickItem');
            $('#txtCreditSubLedgerName').data('CreditSubLedgerID',0);
        }
    });

    function PickACCostCenter(bIsDebit)
    {
        var sACCostCenter = $.trim($('#txtDebitSubLedgerName').val());
        if(!bIsDebit)
        {
            sACCostCenter = $.trim($('#txtCreditSubLedgerName').val());
        }
        var oACCostCenter = {Name:sACCostCenter};
        var obj = {
            BaseAddress:sessionStorage.getItem("BaseAddress"),
            Object:oACCostCenter,
            ControllerName: "ACCostCenter",
            ActionName: "GetACCostCenters_ForAccountEffect",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ACCostCenterID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "ACCostCenter Name", width:180, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Description", title: "Description", width:140, align: "left" }; tblColums.push(oColumn);
                    
                    var oPickerParam = {
                        winid: 'winACCostCenterPicker',
                        winclass: 'clsACCostCenterPicker',
                        winwidth: 520,
                        winheight: 460,
                        tableid: 'tblACCostCenterPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ACCostCenterName',
                        windowTittle: 'Account Head List',
                        IsDebit:bIsDebit
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }
    function SetPickerValueAssign(oPickerobj) {

        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid == 'winChartsOfAccountPicker')
        {
            if (oreturnObj != null && oreturnObj.AccountHeadID > 0)
            {
                if(oPickerobj.IsDebit)
                {
                    $('#txtDrAccountHeadName').addClass('fontColorOfPickItem');
                    $('#txtDrAccountHeadName').val(oreturnObj.AccountHeadName);
                    $('#txtDrAccountHeadName').data('DrAccountHeadID',oreturnObj.AccountHeadID);
                    $('#txtDrAccountHeadName').focus();
                }else{
                    $('#txtCrAccountHeadName').addClass('fontColorOfPickItem');
                    $('#txtCrAccountHeadName').val(oreturnObj.AccountHeadName);
                    $('#txtCrAccountHeadName').data('CrAccountHeadID',oreturnObj.AccountHeadID);
                    $('#txtCrAccountHeadName').focus();
                }
            }
        }else  if (oPickerobj.winid == 'winACCostCenterPicker')
        {
            if (oreturnObj != null && oreturnObj.ACCostCenterID > 0)
            {
                if(oPickerobj.IsDebit)
                {
                    $('#txtDebitSubLedgerName').addClass('fontColorOfPickItem');
                    $('#txtDebitSubLedgerName').val(oreturnObj.Name);
                    $('#txtDebitSubLedgerName').data('DebitSubLedgerID',oreturnObj.ACCostCenterID);
                    $('#txtDebitSubLedgerName').focus();
                }else{
                    $('#txtCreditSubLedgerName').addClass('fontColorOfPickItem');
                    $('#txtCreditSubLedgerName').val(oreturnObj.Name);
                    $('#txtCreditSubLedgerName').data('CreditSubLedgerID',oreturnObj.ACCostCenterID);
                    $('#txtCreditSubLedgerName').focus();
                }
            }
        }

    }   

    

function ValidateInput()
 {
    if(parseInt(_oAccountEffect.ModuleNameInt)<=0)
    {
        alert("Sorry, There is no Module!");
        return false;
    }
    if(parseInt(_oAccountEffect.ModuleObjID)<=0)
    {
        alert("Sorry, there is No Operation.");
        return false;
    }
     if(parseInt($('#cboAccountEffectType').val())<=0)
     {
         alert("Sorry, there is No Account Effect.");
         return false;
     }
     if(parseInt($('#txtDrAccountHeadName').data('DrAccountHeadID'))<=0)
     {
        alert("Please select Debit A/C Head.");
        $('#txtDrAccountHeadName').focus();
        return false;
     }
     if(parseInt($('#txtCrAccountHeadName').data('CrAccountHeadID'))<=0)
     {
         alert("Please select Credit A/C Head.");
         $('#txtCrAccountHeadName').focus();
         return false;
     }     
     //if(parseInt($('#txtDebitSubLedgerName').data('DebitSubLedgerID'))<=0)
     //{
     //    alert("Please select Debit Subledger.");
     //    $('#txtDebitSubLedgerName').focus();
     //    return false;
     //}
     //if(parseInt($('#txtCreditSubLedgerName').data('CreditSubLedgerID'))<=0)
     //{
     //    alert("Please select Credit Subledger.");
     //    $('#txtCreditSubLedgerName').focus();
     //    return false;
     //}
    return true;
 }
function RefreshObject()
{
    var oAccountEffect=   {
                                AccountEffectID : 0,
                                ModuleNameInt :parseInt(_oAccountEffect.ModuleNameInt),
                                ModuleObjID :parseInt(_oAccountEffect.ModuleObjID),
                                AccountEffectTypeInt:$('#cboAccountEffectType').val(),
                                DrAccountHeadID :parseInt($('#txtDrAccountHeadName').data('DrAccountHeadID')),
                                CrAccountHeadID :parseInt($('#txtCrAccountHeadName').data('CrAccountHeadID')),
                                DebitSubLedgerID :parseInt($('#txtDebitSubLedgerName').data('DebitSubLedgerID')),
                                CreditSubLedgerID :parseInt($('#txtCreditSubLedgerName').data('CreditSubLedgerID')),
                                Remarks :$('#txtRemarks').val()
                            };
    return oAccountEffect;
}
$("#btnAdd").click(function(){
    if(!ValidateInput()) return;
    var oAccountEffect=RefreshObject();
    $.ajax({
        type: "POST",
        dataType: "json",
        url : sessionStorage.getItem("BaseAddress")+  "/AccountEffect/SaveAccountEffect",
        traditional: true,
        data:  JSON.stringify(oAccountEffect),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            var oAccountEffect = jQuery.parseJSON(data);
            if(parseInt(oAccountEffect.AccountEffectID)>0)
            {
                alert("Data Saved sucessfully");
                var nIndex=$('#tblAccountEffect').datagrid('getRows').length;
                $('#tblAccountEffect').datagrid('appendRow',oAccountEffect);
                $('#tblAccountEffect').datagrid('selectRow', nIndex);
                $("#cboAccountEffectType").val(0);
                $("#txtDrAccountHeadName,#txtCrAccountHeadName,#txtRemarks,#txtDebitSubLedgerName,#txtCreditSubLedgerName").val('');
                $('#txtDrAccountHeadName').data('DrAccountHeadID',0);
                $('#txtCrAccountHeadName').data('CrAccountHeadID',0);
                $('#txtDebitSubLedgerName').data('DebitSubLedgerID',0);
                $('#txtCreditSubLedgerName').data('CreditSubLedgerID',0);
                $('#txtDrAccountHead,#txtCrAccountHeadName,#txtDebitSubLedgerName,#txtCreditSubLedgerName').removeClass('fontColorOfPickItem');
            }
            else {
                alert(oAccountEffect.ErrorMessage);
            }
        },
        error: function (xhr, status, error) {
            alert(error);
        }
    });
});
$('#btnDelete').click(function(e){
    var oAccountEffect = $('#tblAccountEffect').datagrid('getSelected');
    if(oAccountEffect==null)
    {
        alert("Please select a item from list!");
        return;
    }
    var conf = confirm("Confirm to delete?");
    if(conf==false)return;
    var SelectedRowIndex=$('#tblAccountEffect').datagrid('getRowIndex',oAccountEffect);
    if (parseInt(oAccountEffect.AccountEffectID)> 0)
    {
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem("BaseAddress")+  "/AccountEffect/DeleteAccountEffect",
            traditional: true,
            data:  JSON.stringify(oAccountEffect),
            contentType: "application/json; charset=utf-8",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                feedbackmessage = jQuery.parseJSON(data);
                if (feedbackmessage == "Data delete successfully")
                {
                    alert("Delete sucessfully");
                    $('#tblAccountEffect').datagrid('deleteRow',SelectedRowIndex);
                }
                else
                {
                    alert(feedbackmessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }
});
function RefreshList(oAccountEffects)
{
    var data=oAccountEffects;
    data={"total":""+data.length+"","rows":data};
    $('#tblAccountEffect').datagrid('loadData',data);
}
$("#btnRefresh").click(function(){
    var data=$('#tblAccountEffect').datagrid('getRows');
    data={"total":""+data.length+"","rows":data};
    $('#tblAccountEffect').datagrid('loadData',data);
});
$("#btnClose").click(function(){
    window.location.href = sessionStorage.getItem("BackLink");
});

$(document).keydown(function(e) {
    if(e.which == 27)//escape=27
    {
        window.location.href = sessionStorage.getItem("BackLink");
    }
});
</script>