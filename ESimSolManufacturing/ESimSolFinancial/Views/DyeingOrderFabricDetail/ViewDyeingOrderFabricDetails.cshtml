@{
    ViewBag.Title = "Fabric Detail";
}
@model IEnumerable<ESimSol.BusinessObjects.DyeingOrderFabricDetail>

<div class="menuMainCollectionTable" ng-app="DyeingOrderFabricDetailApp">
    <div ng-controller="DyeingOrderFabricDetailController" title="Recycle Process">
        <div style="margin-bottom:2px; display:block" class="form-inline ui-grid-top-panel regionInvoice">
            <input type="text" class="form-control" ng-model="RefNo" ng-keydown="searchByRefNo($event)" placeholder="Type Dispo No & Press Enter">
            <input type="text" class="form-control" ng-model="LotNo" ng-keydown="searchByLotNo($event)" placeholder="Type Lot No & Press Enter">
            <button type="button"  class="btn btn-primary btn-sm" aria-label="Left Align" ng-click="AdvanceSearch()"><span class="glyphicon glyphicon-search" aria-hidden="true"> Advance Search</span></button>
            @*<button type="button" class="btn btn-primary btn-sm" aria-label="Left Align" ng-click="View()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Print</span></button>*@
            <button type="button" id="btnOpenLotModal" class="btn btn-success btn-sm" aria-label="Left Align" ng-click="OpenLotModal()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Lot Assign</span></button>
            @*<button type="button" class="btn btn-primary btn-sm" aria-label="Left Align" ng-click="PrintListXL()"><span class="glyphicon glyphicon-save-file" aria-hidden="true"> XL Summary</span></button>
              <button type="button" id="btnPriviewXL" class="btn btn-primary btn-sm" aria-label="Left Align" ng-click="PrintListXL_Report()"><span class="glyphicon glyphicon-print" aria-hidden="true"> XL Report</span></button>*@
            
            @*<button type="button" ng-show="btnPrintList" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="PrintList()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Print List</span></button>*@
            <button type="button" class="btn btn-primary btn-sm" aria-label="Left Align" ng-click="PrintPreview()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Priview</span></button>
        </div>
        <div ui-grid="gridOptions" ui-grid-selection ui-grid-resize-columns style="width: 99%; height:535px;"></div>
    </div>

    <script type="text/ng-template" id="FabricLotAssign.html">
        <div class="modal-header">
            <h5 class="modal-title" id="modal-title">{{Header}}</h5>
        </div>
        <div class="modal-body form-horizontal regionExportUP ms-custom-control" id="modal-body">

            <fieldset>
                <legend>Basic Info:</legend>
                <div class="col-md-12">
                    <div class="col-md-1 text-right"><label>Product:</label></div>
                    <div class="col-md-5"><input type="text" ng-model="FabricLotAssign.ProductName" style="width:100%" disabled /></div>
                    <div class="col-md-1 text-right"><label>Buyer:</label></div>
                    <div class="col-md-5"><input type="text" ng-model="FabricLotAssign.BuyerName" style="width:100%" disabled /></div>
                </div>
            </fieldset>

            @*<div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right"><label class="control-label">Order Product:</label></div>
                    <div class="col-md-7 text-left">
                        <input ng-model="" class="form-control" disabled>
                    </div>
                </div>
            </div>*@
            @*<div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right"><label class="control-label">Shift:</label></div>
                    <div class="col-md-7 text-left">
                        <select id="cboIssueStore" ng-model="FabricLotAssign.RSShiftID" ng-options="obj.RSShiftID as obj.Name for obj in RSShifts" ng-disabled="disabled" class="form-control">
                            <option value="">--Select Shift--</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right"><label class="control-label">Store:</label></div>
                    <div class="col-md-7 text-left">
                        <select id="cboIssueStore" ng-model="FabricLotAssign.WorkingUnitID" ng-options="obj.WorkingUnitID as obj.OperationUnitName for obj in IssueStores" ng-change="cboIssueStoreChange()" ng-disabled="disabled" class="form-control">
                            <option value="">--Select Store--</option>
                        </select>
                    </div>
                </div>
            </div>*@
            @*<div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right"><label class="control-label">Product:</label></div>
                    <div class="col-md-7 text-left">
                        <div class="form-inline">
                            <input class="form-control" ng-model="txtProductName" placeholder="Type Name & Press Enter" disabled ng-keydown="SearchKeyDownProduct($event)" style="width:80%;" required />
                            <button type="button" class="btn btn-primary btn-sm" style="width:18%" aria-label="right Align" ng-click="PickProduct()" disabled><span aria-hidden="true"> Pick </span></button>
                        </div>
                    </div>
                </div>
            </div>*@
            @*<div class="row ui-grid-panel">
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right"><label class="control-label">LotNo:</label></div>
                    <div class="container col-md-7 text-left">
                        <div class="form-inline">
                            <input class="form-control" ng-model="txtLotNo" placeholder="Type Lot No & Press Enter" ng-disabled="disabled" ng-keydown="SearchKeyDownLot($event)" style="width:80%;" required />
                            <button type="button" style="width:18%" class="btn btn-primary btn-sm" aria-label="right Align" ng-click="PickLot()" ng-disabled="disabled"><span aria-hidden="true"> Add </span></button>
                        </div>
                    </div>
                    <div>
                        <button type="button" class="btn btn-danger btn-sm" aria-label="right Align" ng-click="RemoveLot()" ng-disabled="disabled"><span aria-hidden="true"> Remove </span></button>
                    </div>
                </div>
            </div>*@
            @*
            <div class="row ui-grid-panel">
                <div class="container col-md-12">
                    <div class="form-inline" >
                        <button type="button" style="float:left" class="btn btn-primary btn-sm" aria-label="right Align" ng-click="PickLot()" ng-disabled="disabled"><span aria-hidden="true"> Add Lot</span></button>
                        <button type="button" style="float:right" class="btn btn-danger btn-sm" aria-label="right Align" ng-click="RemoveLot()" ng-disabled="disabled"><span aria-hidden="true"> Remove </span></button>
                    </div>
                </div>
            </div>
            *@
            <div class="ui-grid-top-panel" style="padding-top:5px">
                <div class="row">
                    <div class="form-inline">
                        <input class="form-control" ng-model="FabricLotAssign.txtLotNo" placeholder="Type Lot No & Press Enter" ng-disabled="disabled" ng-keydown="SearchKeyDownLot($event)" style="width:210px; height:24px; margin-left:20px" required />
                        <button type="button" class="btn btn-primary btn-xs" aria-label="right Align" ng-click="PickLots()" ng-disabled="disabled"><span aria-hidden="true" class="glyphicon glyphicon-ok"> Pick </span></button>
                        <input class="form-control number" ng-model="FabricLotAssign.txtLotQty" placeholder="Type Qty & Press Enter" ng-disabled="disabled" ng-keydown="SearchKeyDownLotQty($event)" style="width:110px; height:24px; margin-left:20px" required />
                        <button id="btnAddLot" type="button" class="btn btn-success btn-xs" aria-label="right Align" ng-click="AddLot()" ng-disabled="disabled"><span aria-hidden="true" class="glyphicon glyphicon-plus"> Add </span></button>
                        <button type="button" ng-if="view_paste" class="btn btn-warning btn-xs" aria-label="right Align" ng-click="AddPreviousLot()" ng-disabled="disabled"><span aria-hidden="true" class="glyphicon glyphicon-plus"> Add Previous </span></button>
                        <button type="button" class="btn btn-danger btn-xs" aria-label="right Align" style="float:right; margin-right:5%" ng-click="Remove_FabricLotAssign()" ng-disabled="disabled"><span aria-hidden="true" class="glyphicon glyphicon-trash"> Remove </span></button>
                    </div>
                </div>
            </div>
            <div ui-grid="gridOptions_Lot" ui-grid-selection ui-grid-resize-columns ui-grid-edit class="grid-angular" style="width:100%; height:280px"></div>
        </div>
        <div class="modal-footer">
            @*<button type="button" class="btn-success btn-sm" aria-label="Left Align" ng-click="SaveRSRawLot()" ng-disabled="disabled" ng-hide="hide"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> Save</button>*@
            <button type="button" class="btn-danger btn-sm" aria-label="Left Align" ng-click="cancel()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel</button>
        </div>
    </script>
</div>
<style type="text/css">
    .regionInvoice .form-control {
        height: 26px;
        width: 15%;
        padding: 0px 6px;
        font-size: 12px;
    }
</style>

 <script type="text/javascript">
    var oDyeingOrderFabricDetailList =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
     var _nBUID =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
     var oCompareOperators =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
    var oDyeingOrderFabricDetailStatusList = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DyeingOrderFabricDetailStatusList));
     _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
     oWorkingUnits =[];
     var CInvoiceapp= angular.module('DyeingOrderFabricDetailApp',   ['ngAnimate', 'ui.bootstrap', 'ui.grid','ui.grid.selection','ui.grid.resizeColumns', 'ui.grid.cellNav','ui.grid.edit', 'ms.service','ui.grid.pinning','ms.service']);
   
     CInvoiceapp.controller('DyeingOrderFabricDetailController',  function ($scope, $http, $timeout, $uibModal, $log, uiGridConstants, msModal, userSession,advanceSearch)  {
        oDyeingOrderFabricDetailList= (userSession.getData('DyeingOrderFabricDetailList').length>0)? userSession.getData('DyeingOrderFabricDetailList'):oDyeingOrderFabricDetailList;
        debugger;

        $scope.RSStates = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.RSStates));
        $scope.OrderTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.OrderTypes));
        $scope.BUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));

        sessionStorage.setItem("BackLink", window.location.href);
        sessionStorage.setItem("BaseAddress",_sBaseAddress);

        $scope.gridOptions = {
            enableRowSelection: true,
            enableSelectAll: true,
            multiSelect: true,
            showColumnFooter: true,
            enableColumnResizing: true,
            enableFullRowSelection: true,
            columnDefs: [
                {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
                //{ field: 'OrderDateSt', name:'Date', width:'12%' },
                //{ field: 'OrderNo', name:'Order No', width:'10%' },
                { field: 'ExeNo', name:'Dispo No', width:'7%' },
                { field: 'BuyerName', name:'Buyer Name', width:'15%' },
                { field: 'CustomerName', name:'Customer Name', width:'10%' },
                { field: 'ProductName', name:'Yarn Type', width:'12%' },
                { field: 'ColorName', name:'Color Name', width:'10%' },
                { field: 'Qty', name:'Qty',cellFilter:'number:2',  width:'8%' ,  cellClass: 'text-right', cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                { field: 'Qty_Assign', name:'Qty(Lot Assign)',cellFilter:'number:2',  width:'8%' ,  cellClass: 'text-right', cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                //{ field: 'Qty_RS', name:'Batch Qty',cellFilter:'number:2',  width:'8%' ,  cellClass: 'text-right', cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                { field: 'Qty_Req', name:'Req Qty',cellFilter:'number:2',  width:'8%' ,  cellClass: 'text-right', cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                { field: 'WarpWeftTypeSt', name:'Warp/Weft', width:'10%' },
                { field: 'LotNo', name:'LotNo', width:'20%' },
            ],
            data: oDyeingOrderFabricDetailList,
            onRegisterApi:function(gridApi) {
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.core.refresh();
                debugger;
                if(oDyeingOrderFabricDetailList.length>0 && userSession.getRowIndex()>=0)
                {
                    var index=userSession.getRowIndex();debugger;
                    $timeout(function () {
                        gridApi.grid.modifyRows($scope.gridOptions.data).then(gridApi.selection.selectRow($scope.gridOptions.data[index]));
                        gridApi.selection.selectRow(index);
                        gridApi.core.scrollTo($scope.gridOptions.data,$scope.gridOptions.data[index]);
                    }, 100);
                }
                $scope.gridApi.selection.on.rowSelectionChanged($scope, function (row) 
                {
                    debugger;   
                    // if(parseFloat(row.entity.Qty).toFixed(2) <= parseFloat(row.entity.Qty_Assign).toFixed(2)) 
                    if(parseFloat(parseFloat(row.entity.Qty).toFixed(2)) <= parseFloat(parseFloat(row.entity.Qty_Assign).toFixed(2))) 
                    { 
                        var data = $scope.gridApi.selection.getSelectedRows();
                        console.log('Qty Already Assigned for this item.', parseFloat(row.entity.Qty).toFixed(2), parseFloat(row.entity.Qty_Assign).toFixed(2));  
                        
                        if(data.length>1)
                            $scope.gridApi.selection.unSelectRow(row.entity); 
                    }
                    $('#btnOpenLotModal').focus();
                });
                userSession.clear();
            }
        };

         
        function getLotNo(oLots)
        {
            var result="";

            for(var i=0; i<oLots.length;i++)
            {
                result += ", " + oLots[i].LotNo;
            }
            return result.substring(1,result.length);
        }

        $scope.Modal = function (objSQ, operation) {
            debugger;
            var modalInstance = $uibModal.open({
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'lg',
                templateUrl: 'FabricLotAssign.html',
                controller: 'ModalInstanceCtrl',
                controllerAs: 'DyeingOrderFabricDetailController',
                resolve: {
                    obj: function () {
                        return { FabricLotAssign:objSQ, RSShifts: $scope.RSShifts, Operation: operation  };
                    }
                }
            });

            modalInstance.result.then(function (results) {
                debugger;
                //if(results!=undefined && results.length>0)
                //{
                    //var oFLAs =JSON.parse(sessionStorage.getItem("SelectedOrders"));
                
                    var oFLAs = $scope.gridApi.selection.getSelectedRows();

                    for(var i=0; i <oFLAs.length; i++)
                    {
                        var oDOFDetail = oFLAs[i];
                       
                        var oLots =[];
                        for(var j=0; j <results.length; j++)
                        {
                            if(results[j].FEOSDID == oDOFDetail.FEOSDID) oLots.push(results[j]);
                        }

                        oDOFDetail.LotNo = getLotNo(oLots);
                        oDOFDetail.Qty_Assign = oLots.select('Qty').sum();

                        var oDOFDs = $scope.gridOptions.data;
                        oDOFDs[oDOFDetail.SelectedIndex]=oDOFDetail;
                        
                        $scope.gridOptions.data = oDOFDs;
                        
                        $scope.gridApi.selection.selectRow($scope.gridOptions.data[oDOFDetail.SelectedIndex]);
                        $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                    }

                  
                    //$scope.RowSelect(oDURequisitions[userSession.getRowIndex()]);
                //}
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };
        $scope.OpenLotModal = function()
        {
            debugger;
            var data = $scope.gridApi.selection.getSelectedRows();
            if(data==null)
            {
                alert("Please, Select at least an item !");
                return;
            }
            if(data[0].FEOSDID<=0)
            {
                alert("Please, Select at least an item !");
                return;
            }

            
            if(data.length>1)
            {
                var sNames="";
                for(var i=0;i<data.length;i++)
                    sNames+= (i+1)+". Dispo: "+data[i].ExeNo+" ["+ data[i].WarpWeftTypeSt + ", " + data[i].ColorName +"]"+" \n";

                if (!confirm('Your selected Order(s) : \n'+ sNames +"\nStart to Assign Lot ?")) return ;
            }

            sessionStorage.removeItem("SelectedOrders");
            sessionStorage.setItem("SelectedOrders", JSON.stringify(data));

            var obj = 
                {
                    FEOSDID : data[0].FEOSDID,
                    WorkingUnits: oWorkingUnits, 
                    Params: data.select('FEOSDID').separator(',')
                };

            $http.post(_sBaseAddress + '/DyeingOrderFabricDetail/GetDOFDetail_For_Multiple', obj).then(
               function (response)
               {
                   debugger;
                   var result=jQuery.parseJSON(response.data);
                   var oDOFDetail = result;

                   if(result.FEOSDID>0 && result.FabricLotAssigns.length>0)
                   {
                       if(result.FabricLotAssigns[0].ErrorMessage=="")
                       {
                           oDOFDetail=result;
                       }
                       else 
                       {
                           alert(result.FabricLotAssigns[0].ErrorMessage);return;
                       }
                       $scope.Note=result.FabricLotAssigns[0].Param;
                   }//else FabricLotAssigns=[];

                   oDOFDetail.FEOSDID = data.FEOSDID;
                   oDOFDetail.BuyerName = data.BuyerName;
                   oDOFDetail.ExeNo =  data.select('ExeNo').separator(', ');
                   oDOFDetail.Qty =  data.select('Qty').sum() - data.select('Qty_Assign').sum();

                   $scope.Modal(oDOFDetail, 'Edit');
               },
               function (response) { alert(response.statusText);}
           );
        }

        $scope.searchByRefNo = function(e)
        {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                debugger;
                var oDyeingOrderFabricDetail = {
                    ExeNo: $scope.RefNo
                };
                var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                $http.post(_sBaseAddress + '/DyeingOrderFabricDetail/AdvSearch',$.param(oDyeingOrderFabricDetail), config).then(
                                    function (response) {
                                        debugger;
                                        sessionStorage.setItem('AdvSearchObject',JSON.stringify(oDyeingOrderFabricDetail));
                                        $scope.gridOptions.data=[];
                                        result= JSON.parse(response.data);
                                        $scope.gridOptions.data=(result);
                                    }, function () {
                                        $log.info('GetServiceOrder Dismissed at: ' + new Date());
                                    });
            }
        }
        $scope.searchByLotNo = function (e)
        {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                $scope.PickLots();
            }
        };

         //=========== PICK LOT =================
        $scope.PickLots= function ()
        {
            debugger;
            $scope.SearchingLotIDs="";

            var sOrderRefNo=$scope.LotNo;
            var txtLotNo = $.trim(sOrderRefNo);
            if(txtLotNo=="" || txtLotNo==null)
            {
                alert("Type Lot No and Press Enter");
                return;
            }
            var oLotParent= {
                IsInHouse:true,
                LotNo: txtLotNo,
            };
            debugger;
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/DyeingOrderFabricDetail/Gets_Lot',$.param(oLotParent), config).then(
                        function (response)
                        {
                            debugger;
                            var results=jQuery.parseJSON(response.data);
                            debugger;
                            if(results.length>0 && results[0].ErrorMessage=="")
                            {
                                //$scope.LotParent.LotParentDetails=result;

                                var oDetailColumns = [];
                                var oColumn = { field: 'LotNo', name:'LotNo', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                                oColumn = { field: 'ProductName', name:'ProductName', width:'40%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                                oColumn ={ field: 'StoreName', name:'Store', width:'30%',enableCellEdit:false };oDetailColumns.push(oColumn);
                                   
                                var modalObj={
                                    size:'md',
                                    modalcontroller:'',
                                    url:_sBaseAddress+'/Home/Modal',
                                    appcontroller:'DUProGuideLineCtrl',
                                    objs:results,
                                    multiSelect:true,
                                    pickertitle:'Order List',
                                    searchingbyfieldName:'DestinationLotNo',
                                    columns:oDetailColumns
                                }
                                var modalInstance=msModal.Instance(modalObj);
                                   
                                modalInstance.result.then(function (result)
                                {
                                    $scope.SearchingLotIDs = result[0].LotID;
                                    $scope.LotNo=result[0].LotNo; 
                                    for(var i=1; i<result.length; i++)
                                    {
                                        $scope.SearchingLotIDs += "," + result[i].LotID;
                                        $scope.LotNo+=", "+result[i].LotNo; 
                                    }
                                    $scope.GetOrder_By_LotIDs($scope.SearchingLotIDs);
                                }, function () 
                                {
                                    $scope.SearchingLotIDs=""; 
                                    $scope.LotNo=""; 
                                    $log.info('Modal dismissed at: ' + new Date());
                                });

                            }else 
                            {
                                //$scope.gridOptions.data=[];
                                alert("No Lot Found!!");
                            }
                        },
                            function (response) { alert(response.statusText);}
                    );
        };
            
        $scope.GetOrder_By_LotIDs = function(sSearchingLotIDs)
        {
            if (sSearchingLotIDs == null || sSearchingLotIDs == undefined){
                alert("Please pick lot & try again!");
                return;
            }
            
            debugger;
            var oDyeingOrderFabricDetail = {
                LotNo: sSearchingLotIDs
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress + '/DyeingOrderFabricDetail/AdvSearch',$.param(oDyeingOrderFabricDetail), config).then(
                                function (response) {
                                    debugger;
                                    sessionStorage.setItem('AdvSearchObject',JSON.stringify(oDyeingOrderFabricDetail));
                                    $scope.gridOptions.data=[];
                                    result= JSON.parse(response.data);
                                    $scope.gridOptions.data=(result);
                                }, function () {
                                    $log.info('GetServiceOrder Dismissed at: ' + new Date());
                                });
            
        }

        $scope.AdvanceSearch=function()
        {
            oColumns1 = [];
            var oColumn1 = { field: 'Name', name: 'Buyer Name',width: '70%', enableSorting: false  };oColumns1.push(oColumn1);
            oColumn1 = { field: 'Address', name: 'Address',width: '30%', enableSorting: false  };oColumns1.push(oColumn1);

            var paramObj_Buyer={
                obj:{Params: '2,3' + '~' +'@@ContractorID'+'~'+_nBUID},
                objName:'Params',
                objField:'ContractorID',
                url:_sBaseAddress+'/Contractor/ContractorSearchByNameType',
                title:'Buyer List',
                multiSelect:true,
                columns:oColumns1
            }

            var oColumns = [];
            var oColumn = { field: 'ModelNo', name: 'ModelNo',width: '30%'  };oColumns.push(oColumn);
            oColumn = { field: 'CategoryName', name: 'CategoryName',width: '40%', enableSorting: false  };oColumns.push(oColumn);

            var paramObj_Model={
                obj:{ModelNo: '@@VehicleModelID'},
                objName:'ModelNo',
                url:_sBaseAddress+'/VehicleModel/GetVehicleModels',
                title:'Model List',
                multiSelect:true,
                columns:oColumns
            }

            var oStatusList=oDyeingOrderFabricDetailStatusList;
            var oElementList = [
                                { DisplayName: "Dispo No",  BOField: "ExeNo",      InputType: 'text' },
                                //{ DisplayName: "OrderType",    BOField: "OrderType",       InputType: 'select', OptionList: $scope.OrderTypes},
                               
                                { DisplayName: "Forward Date",  BOField: "SearchStringDate",   InputType: 'date' },
                                { DisplayName: "Buyer Name",    BOField: "BuyerName",           InputType: 'picker', PickerObject:paramObj_Buyer },
                                { DisplayName: "Customer Name", BOField: "CustomerName",           InputType: 'picker', PickerObject:paramObj_Buyer },
                                //{ DisplayName: "Model No",  BOField: "VehicleModelID",   InputType: 'picker', PickerObject:paramObj_Model }
                                { DisplayName: ["Yet To Lot Assign"],  BOField: ["YetToLotAssign"],   InputType: 'bool'},
                                //{ DisplayName: "SomeType",    BOField: "SomeType",       InputType: 'select', OptionList:[{id:2,Value:"KisuNai"}]},
            ];
            var modalObj={
                size:'md',
                title:"Advance Search",
                url:_sBaseAddress+'/Home/AdvanceSearch',
                CompareOperators:oCompareOperators,
                HtmlElements:oElementList,
                isAdvanceSearch:true, // if TRUE: 'urlAdvanceSearch' has to be defined
                urlAdvanceSearch:_sBaseAddress + '/DyeingOrderFabricDetail/AdvSearch'
            }

            var modalInstance=advanceSearch.Instance(modalObj);
            modalInstance.result.then(function (result)
            {
                console.log(result);
                $scope.gridOptions.data=result;
            }, function ()
            {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };

        $scope.View = function(nLayout)
        {
            if($scope.SearchingLotIDs==null || $scope.SearchingLotIDs=="")
            {
                alert("Please Search Lot and Try again!!");
                return;
            }
            window.open(_sBaseAddress + '/LotStockReport/PrintOrderWise?sParam='+ $scope.SearchingLotIDs+"&sLCNO=", "_blank");
        };

        $scope.PrintPreview = function ()
        {
            var oFabricLotAssign = $scope.gridApi.selection.getSelectedRows()[0];
            if(oFabricLotAssign==null || oFabricLotAssign.FabricLotAssignID<=0)
            {
                alert("Select At least One item !");
                return;
            }
            // window.open(_sBaseAddress + '/FabricExecutionOrderSpecification/PrintFabricSpecification?nId='+oFabricLotAssign.FEOSID+"&nBUID="+_nBUID);
            var nts = ((new Date()).getTime()) / 1000;
            window.open(_sBaseAddress + '/FabricExecutionOrderSpecification/PrintFabricSpecification?nId=' +oFabricLotAssign.FEOSID + "&nts=" + nts, "_blank");
        };

        $scope.PrintListXL = function ()
        {
            debugger;
            var tsv=((new Date()).getTime())/1000;
            var sParams=sessionStorage.getItem('AdvSearchString');
            window.open(sessionStorage.getItem('BaseAddress') + '/DyeingOrderFabricDetail/ExportToExcelDyeingOrderFabricDetail?sParams='+sParams+"&ts="+tsv);
        }
        $scope.PrintListXL_Report = function ()
        {
            debugger;
            var tsv=((new Date()).getTime())/1000;
            var sParams=sessionStorage.getItem('AdvSearchString');
            window.open(sessionStorage.getItem('BaseAddress') + '/DyeingOrderFabricDetail/Excel_BatchCostReport?sParams='+sParams+"&ts="+tsv);
        }

        $scope.close = function()
        {
            window.location.href =sessionStorage.getItem("BackLink");
        }
    });
     
     CInvoiceapp.controller('ModalInstanceCtrl', function ($scope, $http,$uibModal, $uibModalInstance, uiGridConstants, msModal, obj) {
         debugger;
         $scope.disabled= false;
         $scope.disabled_paste=false;
         $scope.Operation=obj.Operation;
         $scope.FabricLotAssign=obj.FabricLotAssign;
         $scope.IssueStores=[];
         $scope.FabricLotAssign.OrderProduct=obj.FabricLotAssign.ProductName;
         $scope.txtProductName=obj.FabricLotAssign.ProductName;
         $scope.RSShifts=obj.RSShifts;
         
         $scope.FabricLotAssign.WorkingUnitID= ($scope.IssueStores.length>0?$scope.IssueStores[0].WorkingUnitID : 0);

         if($scope.FabricLotAssign)
             $scope.Header="Dispo No: "+$scope.FabricLotAssign.ExeNo+" || Qty: "+ parseFloat($scope.FabricLotAssign.Qty).toFixed(2);

         var oPreviousDetail = JSON.parse(sessionStorage.getItem('DyeingOrderFabricDetail'));
         debugger;
         $scope.view_paste=false;
         if(oPreviousDetail!=null && oPreviousDetail.FEOSDID!=$scope.FabricLotAssign.FEOSDID && oPreviousDetail.FabricLotAssigns.length>0)
         {
             $scope.view_paste=true;
         }

         $scope.gridOptions_Lot= {
             enableSorting: true,
             enableFullRowSelection: true,
             enableSelectAll: false,
             multiSelect:false,
             showColumnFooter: true,
             enableHorizontalScrollbar: uiGridConstants.scrollbars.Always,
             //enableVerticalScrollbar : false,
             columnDefs: [
                 { field: 'ExeNo', name: 'OrderNo', width:'10%', enableCellEdit: false },
                 { field: 'ProductName', name: 'Yarn Count', width:'14%', enableCellEdit: false},
                 { field: 'LotNo', name: 'Yarn Lot No', width:'12%', enableCellEdit: false},
                 { field: 'BalanceLot', name: 'Balance(Lot) Qty', width: '10%',cellClass:'text-right', cellFilter:'number:2' , enableCellEdit: false},
                 { field: 'Qty', name: 'Qty', width: '10%',enableCellEdit: false, cellClass:'text-right number', cellFilter:'number:2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'},
                 { field: 'Balance', name: 'Balance(Order)', width: '10%',enableCellEdit: true, cellClass:'text-right number', cellFilter:'number:2'},
                 { field: 'FabricLotAssignDateSt', name: 'Assign Date', width:'18%',cellClass:'text-center', enableCellEdit: false },
                 { field: 'OperationUnitName', name: 'Store', width:'12%', enableCellEdit: false},
             ],
             data:$scope.FabricLotAssign.FabricLotAssigns,
             onRegisterApi:function(gridApi_Lot)
             {
                 $scope.gridApi_Lot = gridApi_Lot;
                 $scope.gridApi_Lot.selection.clearSelectedRows();

                 $scope.gridApi_Lot.edit.on.afterCellEdit($scope,function(rowEntity, colDef, newValue, oldValue){ //console.log(rowEntity);
                     if(newValue != oldValue)
                     {
                         rowEntity.Qty=rowEntity.Balance;
                         $scope.Edit_FabricLotAssign(rowEntity, oldValue, $scope.gridOptions_Lot.data.indexOf(rowEntity));
                     }
                 })
             }
         };

         $scope.PickLots= function (txtLot)
         {
             $scope.FabricLotAssign.SelectedLot= {};
             debugger;
             txtLot= (txtLot==undefined? "" : txtLot);
             var oFabricLotAssign= {
                 BUID:_nBUID,
                 DyeingOrderID:$scope.FabricLotAssign.DyeingOrderID,
                 ContractorID:$scope.FabricLotAssign.ContractorID,
                 IsInHouse:true,
                 LotNo: txtLot,
             };
             debugger;

             $.icsProgressBar(true);

             var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
             $http.post(_sBaseAddress+'/DyeingOrderFabricDetail/Gets_Lot',$.param(oFabricLotAssign), config).then( //Previous Controller : DyeingOrder
                         function (response)
                         {
                             debugger;
                             var results=jQuery.parseJSON(response.data);
                             if(results.length>0)
                             {
                                 //$scope.FabricLotAssign.FabricLotAssignDetails=result;
                                 var oDetailColumns = [];
                                 var oColumn = { field: 'LotNo', name:'LotNo', width:'20%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                                 oColumn = { field: 'ProductName', name:'ProductName', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                                 oColumn = { field: 'StoreName', name:'StoreName', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                                 oColumn ={ field: 'Qty', name:'Qty', width:'15%',cellClass: 'text-left', cellFilter:'number:2',enableCellEdit:false };oDetailColumns.push(oColumn);
                                   
                                 var modalObj={
                                     size:'lg',
                                     modalcontroller:'',
                                     url:_sBaseAddress+'/Home/Modal',
                                     appcontroller:'DUProGuideLineCtrl',
                                     objs:results,
                                     multiSelect:false,
                                     pickertitle:'Order List',
                                     searchingbyfieldName:'DestinationLotNo',
                                     columns:oDetailColumns
                                 }
                                 var modalInstance=msModal.Instance(modalObj);
                                   
                                 modalInstance.result.then(function (result)
                                 {
                                     var oFabricLotAssigns =  $scope.gridOptions_Lot.data;

                                     for(var i=0; i<oFabricLotAssigns.length; i++)
                                     {
                                         if(oFabricLotAssigns[i].LotID==result.LotID)
                                         {
                                             alert("Duplicate Entry Not Possible!"); return;
                                         }
                                     }
                                     $scope.FabricLotAssign.txtLotNo= result.LotNo;
                                     $scope.FabricLotAssign.txtLotQty= result.Qty;
                                     $scope.FabricLotAssign.SelectedLot= result;

                                 }, function () {
                                     $log.info('Modal dismissed at: ' + new Date());
                                 });

                             }else {alert("No Data Found!!");}

                             
                             $.icsProgressBar(false);
                         },
                             function (response) { 
                                 $.icsProgressBar(false);alert(response.statusText);}
                     );
         };

         //=========== FOR IN HOUSE =================
         //$scope.FabricLotAssign.SelectedLot=JSON.parse(sessionStorage.getItem('PreviousSelectedLot'));

         //$scope.FabricLotAssign.txtLotNo= ($scope.FabricLotAssign.SelectedLot!=null ? $scope.FabricLotAssign.SelectedLot.LotNo : "");
         //$scope.FabricLotAssign.txtLotQty= ($scope.FabricLotAssign.SelectedLot!=null ? $scope.FabricLotAssign.SelectedLot.Qty : "");
         $scope.FabricLotAssign.SelectedLot= {};

         $scope.SearchKeyDownLot = function (e){
             //debugger;
             var code = (e.keyCode ? e.keyCode : e.which);
             if (code == 13)
             {
                 var sOrderRefNo=$scope.FabricLotAssign.txtLotNo;
                 var txtLot = $.trim(sOrderRefNo);
                 if(txtLot=="" || txtLot==null)
                 {
                     alert("Type Lot No and Press Enter");
                     return;
                 }
                 $scope.PickLots(txtLot);
             }
         };
         
         $scope.SearchKeyDownLotQty = function (e){
             //
             var code = (e.keyCode ? e.keyCode : e.which);
             if (code == 13)
             {
                 $scope.AddLot();
             }
         };
         $scope.AddLot = function ()
         {
             if(!parseFloat($scope.FabricLotAssign.SelectedLot.Qty)>0)
             {
                 alert("Please pick a lot and try again!!"); return;
             }
             if(!parseFloat($scope.FabricLotAssign.txtLotQty)>0)
             {
                 alert("Lot Qty Should be greater than zero!!"); return;
             }

             if(parseFloat($scope.FabricLotAssign.txtLotQty) > $scope.FabricLotAssign.SelectedLot.Qty)
             {
                 alert("Order Qty Is Greater Than Balance!"); return;
             }
             debugger;
             var oFLAs =JSON.parse(sessionStorage.getItem("SelectedOrders"));

             var sMsg ="";
             var oSelectedList = [];
             for(var i=0; i <oFLAs.length; i++)
             {
                 var nQty = 0;
                 
                 if(parseFloat($scope.FabricLotAssign.txtLotQty) <=0 ) break;
                 
                 var Qty_Assigned = 0;
                 for(var j=0; j < $scope.gridOptions_Lot.data.length; j++)
                 {
                     if($scope.gridOptions_Lot.data[j].FEOSDID == oFLAs[i].FEOSDID) Qty_Assigned = parseFloat(Qty_Assigned) + parseFloat($scope.gridOptions_Lot.data[j].Qty);
                 }

                 var nQty_Needed = parseFloat(oFLAs[i].Qty) - parseFloat(Qty_Assigned);

                 if(parseFloat($scope.FabricLotAssign.txtLotQty) > nQty_Needed)  
                 {
                     nQty = nQty_Needed;
                     //nQty = (parseFloat($scope.FabricLotAssign.txtLotQty) - parseFloat(oFLAs[i].Qty))
                 }
                 else 
                 { 
                     nQty = parseFloat($scope.FabricLotAssign.txtLotQty);
                 }
                 
                 $scope.FabricLotAssign.txtLotQty = ( parseFloat($scope.FabricLotAssign.txtLotQty) - parseFloat(nQty));

                 $scope.FabricLotAssign.SelectedLot.FabricLotAssignID=0;
                 $scope.FabricLotAssign.SelectedLot.Qty = parseFloat(nQty);
                 
                 result = $scope.FabricLotAssign.SelectedLot;

                 if( parseFloat(nQty) > 0)
                 {
                     var oFabricLotAssign= {
                         LotID: result.LotID,
                         FabricLotAssignID: result.FabricLotAssignID,
                         FEOSDID: oFLAs[i].FEOSDID,
                         ContractorID: oFLAs[i].ContractorID,
                         ProductID: oFLAs[i].ProductID,
                         DyeingOrderID: result.DyeingOrderID,
                         ParentType: result.ParentType,
                         ParentID: result.ParentID,
                         UnitPrice: result.UnitPrice,
                         CurrencyID: result.CurrencyID,
                         Note: "Assigned Dyeing Lot (InHouse)",
                         Qty: result.Qty,
                         Balance: result.Qty
                     };

                     oSelectedList.push(oFabricLotAssign);
                 }
                 else
                 {
                     sMsg= sMsg + "Already assigned for: "+ oFLAs[i].ExeNo +"\n";
                 }
             }

             $scope.FabricLotAssign.txtLotQty = 0;
             $scope.FabricLotAssign.txtLotNo = "";

             if(oSelectedList.length>0)
                 $scope.Save_Multiple_FLA(oSelectedList);

             if(sMsg!="")
                 alert(sMsg);
         }

         $scope.AddPreviousLot = function ()
         { 
             if(oPreviousDetail==null || oPreviousDetail.FabricLotAssigns.length<=0)
             {
                 alert("No Lot Found To Add!!"); return;
             }
             if(!confirm("Confirm to add following lot: "+oPreviousDetail.LotNo+" ?"))return;
             console.log(oPreviousDetail);
            
             if(!parseFloat($scope.FabricLotAssign.Qty)>0)
             {
                 alert("Order Qty Should be greater than zero!!"); return;
             }
             var nAssign_Qty = ($scope.gridOptions_Lot.data.length>0) ? parseFloat($scope.gridOptions_Lot.data.select('Balance').sum()).toFixed(2) : 0 ;
             var nRequired_Qty  =  parseFloat($scope.FabricLotAssign.Qty).toFixed(2) - nAssign_Qty;
             var nQty = nRequired_Qty / oPreviousDetail.FabricLotAssigns.length;

             var oFabricLotAssigns =  $scope.gridOptions_Lot.data;
             var result = oPreviousDetail.FabricLotAssigns;

             debugger;
             for(var i=0; i<result.length; i++)
             {
                 result[i].FEOSDID= $scope.FabricLotAssign.FEOSDID;
                 result[i].Qty= nQty;
                 result[i].FabricLotAssignID= 0;

                 if(result[i].FEOSDID<=0)
                 {
                     alert("Invalid Order For : "+result[i].LotNo); return;
                 }

                 if(result[i].Qty > result[i].BalanceLot)
                 {
                     alert("Order Qty ("+parseFloat(result[i].Qty).toFixed(2) +") Is Greater Than Balance ("+parseFloat(result[i].BalanceLot).toFixed(2) +")! [For Lot No : "+result[i].LotNo+"]"); return;
                 }

                 for(var j=0; j<oFabricLotAssigns.length; j++)
                 {
                     if(oFabricLotAssigns[j].LotID==result[i].LotID)
                     {
                         alert("Duplicate Entry Not Possible! [For Dispo No : "+result[i].LotNo+"]"); return;
                     }
                 }
             }

             $scope.Save_Multiple_FLA(result);
         }

         $scope.Save_Multiple_FLA = function (result) 
         {
             console.log(result);
             $http.post(_sBaseAddress+'/DyeingOrderFabricDetail/Save_Multiple_FLA',JSON.stringify(result)).then(
             function (response) {
                 var result=jQuery.parseJSON(response.data);
                        
                 if(result.ErrorMessage=="" && result.FabricLotAssigns.length>0 )
                 {
                     debugger;
                     alert("Data Saved Successfully!!");
                     //$scope.FabricLotAssign.Qty-=result.Qty;
                     for(var i=0; i<result.FabricLotAssigns.length;i++)
                     {
                         $scope.gridOptions_Lot.data.push(result.FabricLotAssigns[i]);
                     }
                     $scope.Set_Total_Balance();
                 }
                 else
                 {
                     alert(result.ErrorMessage);
                 }
             },
             function (response) { alert(response.statusText);}
     );
         };
         //================== IN END ==================

         $scope.Save_FabricLotAssign = function (result) 
         {
             var oFabricLotAssign= {
                 LotID: result.LotID,
                 FabricLotAssignID: result.FabricLotAssignID,
                 FEOSDID: $scope.FabricLotAssign.FEOSDID,
                 ContractorID: $scope.FabricLotAssign.ContractorID,
                 ProductID: $scope.FabricLotAssign.ProductID,
                 DyeingOrderID: result.DyeingOrderID,
                 ParentType: result.ParentType,
                 ParentID: result.ParentID,
                 UnitPrice: result.UnitPrice,
                 CurrencyID: result.CurrencyID,
                 Note: "Assigned Dyeing Lot (InHouse)",
                 Qty: result.Qty,
                 Balance: result.Qty
             };

             $http.post(_sBaseAddress+'/DyeingOrderFabricDetail/Save_FLA',JSON.stringify(oFabricLotAssign)).then(
                 function (response) {
                     var result=jQuery.parseJSON(response.data);
                     console.log(result);
                     if(result.FabricLotAssignID>0 && result.ErrorMessage=="")
                     {
                         debugger;
                         alert("Data Saved Successfully!!");
                         $scope.gridOptions_Lot.data.push(result);

                         sessionStorage.setItem('PreviousSelectedLot', result);

                         $scope.FabricLotAssign.LotNo= getLotNo();
                         $scope.FabricLotAssign.txtLotNo= "";
                         $scope.FabricLotAssign.txtLotQty= "";
                         $scope.FabricLotAssign.SelectedLot= {};
                     }
                     else
                     {
                         alert(result.ErrorMessage);
                     }
                 },
                 function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
         );
         };
         $scope.Edit_FabricLotAssign = function (rowentity, oldValue, index) 
         {
             var oFabricLotAssign= {
                 LotID: rowentity.LotID,
                 FabricLotAssignID: rowentity.FabricLotAssignID,
                 FEOSDID: rowentity.FEOSDID,
                 ContractorID: $scope.FabricLotAssign.ContractorID,
                 ProductID: $scope.FabricLotAssign.ProductID,
                 DyeingOrderID: rowentity.DyeingOrderID,
                 ParentType: rowentity.ParentType,
                 ParentID: rowentity.ParentID,
                 UnitPrice: rowentity.UnitPrice,
                 CurrencyID: rowentity.CurrencyID,
                 Note: "Assigned Dyeing Lot (InHouse)",
                 Qty: rowentity.Qty,
                 Balance: rowentity.Balance
             };

             $http.post(_sBaseAddress+'/DyeingOrderFabricDetail/Save_FLA',JSON.stringify(oFabricLotAssign)).then(
                 function (response) {
                     var result=jQuery.parseJSON(response.data);
                     console.log(result);
                     if(result.FabricLotAssignID>0 && result.ErrorMessage=="")
                     {
                         debugger;
                         alert("Data Saved Successfully!!");
                         $scope.gridOptions_Lot.data[index]=result;

                         $scope.FabricLotAssign.txtLotNo= "";
                         $scope.FabricLotAssign.txtLotQty= "";
                         $scope.FabricLotAssign.SelectedLot= {};
                     }
                     else
                     {
                         debugger;
                         $scope.gridOptions_Lot.data[index].Balance=oldValue;
                         alert(result.ErrorMessage);
                     }
                 },
                 function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
         );
         };
         $scope.Remove_FabricLotAssign= function ()
         {
             var oFabricLotAssign = $scope.gridApi_Lot.selection.getSelectedRows()[0];
             if(oFabricLotAssign==null || oFabricLotAssign.FabricLotAssignID<=0)
             {
                 alert("Select At least One item !");
                 return;
             }
             if(parseFloat(oFabricLotAssign.Qty_Batch_Out)>0)
             {
                 alert("Selected item has already been used in Batch!");
                 return;
             }
             var SelectedRowIndex=$scope.gridOptions_Lot.data.indexOf(oFabricLotAssign);
             if (!confirm("Confirm to Remove?")) return ;

             $http.post(_sBaseAddress+'/DyeingOrderFabricDetail/Delete_FLA',JSON.stringify(oFabricLotAssign)).then(
                function (response) {
                    var result=jQuery.parseJSON(response.data);
                    console.log(result);
                    if(result=="Data delete successfully")
                    {
                        debugger;
                        alert("Data Deleted Successfully!!");
                        $scope.gridOptions_Lot.data.splice(SelectedRowIndex,1);
                        $scope.FabricLotAssign.LotNo= getLotNo();
                    }
                    else
                    {
                        alert(result);
                    }
                },
                function (response) { alert(response.statusText);});
         };

         function getLotNo()
         {
             var result="";
             for(var i=0; i<$scope.gridOptions_Lot.data.length;i++)
             {
                 result += ", " + $scope.gridOptions_Lot.data[i].LotNo;
             }
             return result.substring(1,result.length);
         }
         $scope.PickProduct= function ()
         {
             debugger;
             $scope.FabricLotAssign.LotProductID="";
             $scope.FabricLotAssign.LotProductName="";
             $scope.FabricLotAssign.LotID=0;
             $scope.FabricLotAssign.LotNo="";
             $scope.FabricLotAssign.txtLotNo="";

             var oPorduct= {
                 ProductName:($scope.txtProductName == undefined ? "" : $scope.txtProductName),
                 BUID:_nBUID//GeBUID(),
             };

             if(oPorduct.BUID==0)
                 return;

             debugger;
             var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
             $http.post(sessionStorage.getItem('BaseAddress')+'/Product/SearchByProductBUWise',$.param(oPorduct), config).then(
                         function (response)
                         {
                             debugger;
                             var oDetailColumns = [];
                             var   oColumn = { field: 'ProductCode', name:'Code', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                             oColumn = { field: 'ProductName', name:'Porduct', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                             oColumn = { field: 'ProductCategoryName', name:'Category', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                             var results=(response.data);
                             var modalObj={
                                 size:'md',
                                 modalcontroller:'',
                                 appcontroller:'',
                                 objs:results,
                                 multiSelect:false,
                                 pickertitle:'Porduct List',
                                 searchingbyfieldName:'DestinationLotNo',
                                 columns:oDetailColumns
                             }
                             var modalInstance=msModal.Instance(modalObj);
                             modalInstance.result.then(function (result)
                             {
                                 if(result.ProductID>0)
                                 {
                                     $scope.FabricLotAssign.LotProductID=result.ProductID;
                                     $scope.FabricLotAssign.LotProductName=result.ProductName;
                                     $scope.txtProductName=result.ProductName;
                                 }
                                 else
                                 {
                                     $scope.FabricLotAssign.ProductID=0;
                                     $scope.FabricLotAssign.ProductName="";
                                     $scope.FabricLotAssign.MUnit="";
                                     $scope.txtProductName="";
                                 }
                             }, function () {
                                 $log.info('Modal dismissed at: ' + new Date());
                             });
                         },
                             function (response) { alert(jQuery.parseJSON(response.data).Message);}
                     );
         };
         $scope.SearchKeyDownProduct = function (e){
             //debugger;
             var code = (e.keyCode ? e.keyCode : e.which);
             if (code == 13)
             {
                 var txtPorduct = $.trim($scope.txtProductName);
                 if(txtPorduct=="" || txtPorduct==null)
                 {
                     alert("Type Product Name and Press Enter");
                     return;
                 }

                 $scope.PickProduct();
             }else if (code == 8) //backspace=8
             {
                 //debugger;
                 $scope.txtPorductNo='';
                 $scope.FabricLotAssign.LotProductID=0;
             }
         };

         $scope.cancel= function () 
         {
             //$scope.FabricLotAssign.LotNo= getLotNo();
             //sessionStorage.setItem("DyeingOrderFabricDetail", JSON.stringify($scope.FabricLotAssign));
             $uibModalInstance.close($scope.gridOptions_Lot.data);
         };
     });
</script>
