<html>
@{
    ViewBag.Title = "Import LC wise Invoice(s)";
}
<body>
    @model ESimSol.BusinessObjects.ImportLC
    <div class="menuMainCollectionTable">
        <div id="divImportLC" class="easyui-panel" title="LC Open" style="font-family:Tahoma; height:100%; width:100%">
            <fieldset>
                <legend><span style="font-size: 12px; font-weight: bold; color: Gray;">LC info</span></legend>
                <table cellpadding="2" cellspacing="2" style="font-size: 12px; width: 100%;">
                    <tr>
                        <td style="width:13%;text-align:right">
                            LC No
                        </td>
                        <td style="width: 20%;text-align:left">
                            @Html.TextBoxFor(model => model.ImportLCNo, new { style = "width:70%;", id = "txtImportLCNo", placeholder="Type LC No & Press Enter" })
                            <input type="button" style="width:35px;" id="btnPickLC" value="Pick" />
                        </td>

                        <td style="width: 13%;text-align:right">
                            LC Date
                        </td>
                        <td style="width: 19%;text-align:left">
                            @Html.TextBoxFor(model => model.ImportLCDateInString, new { style = "width: 100%;", id = "txtImportLCDate", disabled = "disabled" })
                        </td>
                        <td style="width: 13%;text-align:right">
                            Received Date
                        </td>
                        <td style="width: 22%;text-align:left">
                            @Html.TextBoxFor(model => model.ReceiveDateInString, new { style = "width: 100%;", id = "txtReceiveDate", disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:13%;text-align:right">
                            LC Issuing Bank
                        </td>
                        <td style="width: 20%;text-align:left">
                            @Html.TextBoxFor(model => model.BankName_Nego, new { style = "width: 100%;", id = "txtBankName_Nego", disabled = "disabled" })
                        </td>

                        <td style="width: 13%;text-align:right">
                            LC Value
                        </td>
                        <td style="width: 19%;text-align:left">
                            <input type="text" id="txtAmountLC" style="width:100%; text-align:right;" disabled />
                        </td>
                        <td style="width: 13%;text-align:right">
                            Invoice Value
                        </td>
                        <td style="width: 22%;text-align:left">
                            <input type="text" id="txtInvoiceAmount" style="width:100%; text-align:right;" disabled />
                        </td>
                    </tr>
                    <tr>
                        @*<td style="width:13%;text-align:right">
                            Conversion Rate
                        </td>
                        <td style="width: 20%;text-align:left">
                            <table border="0" cellpadding="0" cellspacing="0">
                                <tr>
                                    <td style="width:80%; text-align:left">
                                        @Html.TextBoxFor(model => model.CCRate, new { style = "width:95%;text-align:right", id = "txtCCRate", disabled = "disabled" })
                                    </td>
                                    <td style="width:20%; text-align:right">
                                        @Html.TextBoxFor(model => model.Currency, new { style = "width:100%;", id = "txtCurrency", disabled = "disabled" })
                                    </td>
                                </tr>
                            </table>
                        </td>*@
                        <td style="width: 13%;text-align:right">
                            LC Payment Type:
                        </td>
                        <td style="width: 20%;text-align:left">
                            @Html.TextBoxFor(model => model.LCPaymentTypeSt, new { style = "width:100%;", id = "txtLCPaymentTypeInString", disabled = "disabled" })
                        </td>
                        <td style="width: 13%;text-align:right">
                            Tenor: 
                        </td>
                        <td style="width: 19%;text-align:left">
                            @Html.TextBoxFor(model => model.LCTermsName, new { style = "width:100%;", id = "txtLCTermsName", disabled = "disabled" })
                        </td>
                        <td style="width: 13%;text-align:right">
                            From:
                        </td>
                        <td style="width: 22%;text-align:left">
                            @Html.TextBoxFor(model => model.PaymentInstructionInString, new { style = "width:100%;", id = "txtPaymentInstructionInString", disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:13%;text-align:right">
                            Supplier Name
                        </td>
                        <td style="width: 20%;text-align:left">
                            @Html.TextBoxFor(model => model.ContractorName, new { style = "width:100%;", id = "txtIContractorName", disabled = "disabled" })
                        </td>

                        <td style="width: 13%;text-align:right">
                            LCA Form No
                        </td>
                        <td style="width: 19%;text-align:left">
                            @Html.TextBoxFor(model => model.LCANo, new { style = "width:100%;", id = "txtLCANo", disabled = "disabled" })
                        </td>
                        <td style="width: 13%;text-align:right">
                            Shipment By
                        </td>
                        <td style="width: 23%;text-align:left">
                            @Html.TextBoxFor(model => model.ShipmentByInString, new { style = "width:100%;", id = "ShipmentByInString", disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:13%;text-align:right">
                            Cover Note No
                        </td>
                        <td style="width: 20%;text-align:left">
                            @Html.TextBoxFor(model => model.LCCoverNoteNo, new { style = "width:100%;", id = "txtLCCoverNoteNo", disabled = "disabled" })
                        </td>

                        <td style="width: 13%;text-align:right">
                            Shipment Date
                        </td>
                        <td style="width: 19%;text-align:left">
                            @Html.TextBoxFor(model => model.ShipmentDateInString, new { style = "width:100%;", id = "txtShipmentDateInString", disabled = "disabled" })
                        </td>
                        <td style="width: 13%;text-align:right">
                            Expire Date
                        </td>
                        <td style="width: 22%;text-align:left">
                            @Html.TextBoxFor(model => model.ExpireDateInString, new { style = "width:100%;", id = "txtExpireDateInString", disabled = "disabled" })
                        </td>
                    </tr>
                   
                </table>
            </fieldset>
            <div title="Product" style="width: 100%; height:270px">
                <table id="tblImportInvoice" title="Import Invoice List" class="easyui-datagrid" style="width:100%;height:100%" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar">
                    <thead>
                        <tr>
                            <th field="FileNo" width="130" align="left">File No</th>
                            <th field="ImportInvoiceNo" width="150" align="left">Invoice No</th>
                            <th field="ContractorName" width="200" align="left">Supplier Name</th>                                                        
                            <th field="Remarks_Payment" width="200" align="left">Remarks</th>
                            <th field="MUnit" width="60" align="left">Unit</th>
                            <th field="Qty" width="100" align="right" formatter="formatPrice">Qty</th>
                            <th field="AmountSt" width="130" align="right">Amount</th>
                            <th field="CurrentStatusInSt" width="100" align="left">Current Status</th>
                            <th field="BankStatusInSt" width="100" align="left">Bank Status</th>
                        </tr>
                    </thead>
                </table>
                <div id="toolbar">
                    <table style="width:100%">
                        <tr>
                            <td style="width:50%;">
                                <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" onclick="Add()" plain="true">Add</a>
                                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true" onclick="Edit()" id="btnEdit">Edit</a>
                                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true" onclick="View()" id="btnView">View</a>
                                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="Delete()" id="btnRemove">Remove</a>
                                @*<a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true" id="btnAcceptanceApprove">Acceptance(Approve)</a>
                                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" id="btnPackingList">Packing List</a>*@
                                <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="Refreshs()">Refresh </a>
                                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" id="btnUpdateAmount">Update Amount</a>
                            </td>
                            <td style="text-align:right;width:50%;"><label style="text-align:left; color:green; font-weight:bold;">Yet to Invoice : <label id="lblYetToInvoice">0.00</label></label></td>
                        </tr>
                    </table>                   
                </div>
            </div>
            <fieldset >
                <legend style="font-weight: bold; ">Action : </legend>
                <table border="0" cellspacing="0" cellpadding="0" style="font-size: 11px; width:100%;height:100%; font-weight: bold; font-size: 12px">
                    <tr>
                        <td style="width: 85%; text-align:right;"></td>
                        <td style="width: 10%; font-size: 13px"></td>
                        <td style="width: 5%; font-size: 13px">
                            <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-closed" plain="true" onclick="Close()">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winUpdateAmount" style="width:300px;" class="easyui-window" title="" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div id="divwinFabricBatch" tabindex="-1">
            <fieldset>
                <table style="width:100%;">
                    <tr>
                        <td>
                            <label>Invoice No :</label>
                        </td>
                        <td>
                            <input type="text" id="txtInvoiceNoDiv" style="width: 120px;" disabled />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label>Current Amount :</label>
                        </td>
                        <td>
                            <input type="text" id="txtCurrentAmountDiv" class="number" style="width: 120px;" disabled />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label>Amount :</label>
                        </td>
                        <td>
                            <input type="text" id="txtAmountDiv" class="number" style="width: 120px;" />
                        </td>
                    </tr>
                </table>
            </fieldset>
            <fieldset>
                <legend>Actions</legend>
                <div style="float:right;">
                    <a id="btnOKForUpdate" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true"> Update </a>
                    <a id="btnCloseForUpdate" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                </div>
            </fieldset>
        </div>
    </div>

</body>
</html>
<script type="text/javascript">
    var _sBaseAddress="";
    $(document).ready(function ()
    {
        var _oAuthorizationRolesMappings =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        var oImportLC =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oImportPIDetails=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ImportPIDetails));
        debugger;
        $('#divImportLC').data('ImportLC', oImportLC);
        $('#divImportLC').data('ImportInvoices', oImportLC.ImportInvoices);
        LoadintoGrid(oImportLC.ImportInvoices);
        CalculateInvoiceAmount(oImportPIDetails);

        $('#btnUpdateAmount').hide();
        if(PermissionChecker('UpdateInfo','ImportInvoice',_oAuthorizationRolesMappings)){$('#btnUpdateAmount').show();}
        if(PermissionChecker('UpdateInfo','ImportLC',_oAuthorizationRolesMappings)){$('#btnUpdateAmount').show();}
    });

    //LC Search Start
    $("#btnPickLC").click(function () {
        GetImportLCs("");
    });
    $("#txtImportLCNo").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13)
        {
            var sImportLCNo=$.trim($("#txtImportLCNo").val());
            GetImportLCs(sImportLCNo);
        }
        else if(nkeyCode==8)
        {
            $("#txtImportLCNo").val("");
            $('#txtImportLCNo').removeClass('fontColorOfPickItem');
            $('#divImportLC').data('ImportLC').ImportLCID=0;
        }
    });
    function GetImportLCs(sImportLCNo)
    {
        var ImportLC = {
            ImportLCNo: sImportLCNo,
            BUID:sessionStorage.getItem('BUID')};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: ImportLC,
            ControllerName: "ImportLC",
            ActionName: "GetsBySearchKey",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ImportLCID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "ImportLCNo", title: "LC No", width:100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "ImportLCDateInString", title: "LC Date", width: 190, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Amount", title: "Amount", width: 100, align: "right" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winImportLCPicker',
                        winclass:'clsImportLCPicker',
                        winwidth: 460,
                        winheight: 460,
                        tableid: 'tblImportLCPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'ImportLC List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("No ImportLC found.");
            }
        });


    }

    //LC Search End
    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }
    function SetPickerValueAssign(oPickerobj) {
        debugger;
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid == 'winImportLCPicker') {
            if (oreturnObj != null && parseInt(oreturnObj.ImportLCID)> 0)
            {
                $('#divImportLC').data('ImportLC').ImportLCID = oreturnObj.ImportLCID;
                $('#txtImportLCNo').val(oreturnObj.ImportLCNo);
                window.location.href =  _sBaseAddress+ "/ImportInvoice/ViewLCWiseInvoices?nLCID="+oreturnObj.ImportLCID;
            }
        }

    }

    function LoadintoGrid(oImportInvoices)
    {
        data=oImportInvoices;
        data={"total":""+data.length+"","rows":data};
        $('#tblImportInvoice').datagrid('loadData',data);
        var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndexForInvoice"));
        if(nIndex!=null)
        {
            $('#tblImportInvoice').datagrid('selectRow',nIndex);
        }
    }
    function Add()
    {
        var oImportInvoices= $('#tblImportInvoice').datagrid('getRows');
        sessionStorage.setItem("ImportInvoices", JSON.stringify(oImportInvoices));
        sessionStorage.setItem("SelectedRowIndexForInvoice", -1);
        sessionStorage.setItem("ImportInvoiceHeader", "Add Import Invoice");
        sessionStorage.setItem("BackLinkForInvoice", window.location.href);
        window.location.href = _sBaseAddress+ "/ImportInvoice/ViewImportInvoice?id=0&nLCID="+$('#divImportLC').data('ImportLC').ImportLCID;
    }
    function Edit()
    {
        var oImportInvoice = $('#tblImportInvoice').datagrid('getSelected');
        if(oImportInvoice==null || parseInt(oImportInvoice.ImportInvoiceID)<=0)
        {
            alert("Please Select Invoice.");
            return;
        }
        var nSelectedIndex= $('#tblImportInvoice').datagrid('getRowIndex',oImportInvoice);
        var oImportInvoices= $('#tblImportInvoice').datagrid('getRows');
        sessionStorage.setItem("ImportInvoices", JSON.stringify(oImportInvoices));
        sessionStorage.setItem("SelectedRowIndexForInvoice", nSelectedIndex);
        sessionStorage.setItem("ImportInvoiceHeader", "Add Import Invoice");
        sessionStorage.setItem("BackLinkForInvoice", window.location.href);
        window.location.href = _sBaseAddress+ "/ImportInvoice/ViewImportInvoice?id="+oImportInvoice.ImportInvoiceID+"&nLCID=0";
    }
    function View()
    {
        var oImportInvoice = $('#tblImportInvoice').datagrid('getSelected');
        if(oImportInvoice==null || parseInt(oImportInvoice.ImportInvoiceID)<=0)
        {
            alert("Please Select Invoice.");
            return;
        }
        var nSelectedIndex= $('#tblImportInvoice').datagrid('getRowIndex',oImportInvoice);
        var oImportInvoices= $('#tblImportInvoice').datagrid('getRows');
        sessionStorage.setItem("ImportInvoices", JSON.stringify(oImportInvoices));
        sessionStorage.setItem("SelectedRowIndexForInvoice", nSelectedIndex);
        sessionStorage.setItem("ImportInvoiceHeader", "View Import Invoice");
        sessionStorage.setItem("BackLinkForInvoice", window.location.href);
        window.location.href = _sBaseAddress+ "/ImportInvoice/ViewImportInvoice?id="+oImportInvoice.ImportInvoiceID+"&nLCID=0";
    }
    function Delete()
    {
        var oImportInvoice = $('#tblImportInvoice').datagrid('getSelected');
        if(oImportInvoice==null || parseInt(oImportInvoice.ImportInvoiceID)<=0)
        {
            alert("Please Select Invoice.");
            return;
        }
        if(!confirm("Confirm to Delete?")) return;
        var nSelectedIndex= $('#tblImportInvoice').datagrid('getRowIndex',oImportInvoice);
        $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+"/ImportInvoice/Delete",
                traditional: true,
                data:  JSON.stringify(oImportInvoice),
                contentType: "application/json; charset=utf-8",
                success: function (data)
                {
                    debugger;
                    feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Deleted")
                    {
                        alert("Delete sucessfully");
                        $('#tblImportInvoice').datagrid('deleteRow',nSelectedIndex);
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });
    }

    $("#btnPackingList").click(function(){
        var oInvoice = $('#tblImportInvoice').datagrid('getSelected');
        if(oInvoice===null || parseInt(oInvoice.ImportInvoiceID)<=0)
        {
            alert("Please select an Invoice from List!");
            return;
        }
        var SelectedRowIndex=$('#tblImportInvoice').datagrid('getRowIndex',oInvoice);
        var oInvoices = $('#tblImportInvoice').datagrid('getRows');
        sessionStorage.setItem("ImportInvoices", JSON.stringify(oInvoices));
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
        sessionStorage.setItem("Header", "Packing List");
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href = _sBaseAddress+  "/ImportInvoice/ViewImportInvoicePackingList?id="+parseInt(oInvoice.ImportInvoiceID);
    });

    $("#btnAcceptanceApprove").click(function(){
        var oInvoice = $('#tblImportInvoice').datagrid('getSelected');
        if(oInvoice===null || parseInt(oInvoice.ImportInvoiceID)<=0)
        {
            alert("Please select an Invoice from List!");
            return;
        }
        var tsv=((new Date()).getTime())/1000;
        var SelectedRowIndex=$('#tblImportInvoice').datagrid('getRowIndex',oInvoice);
        var oInvoices = $('#tblImportInvoice').datagrid('getRows');
        sessionStorage.setItem("ImportInvoices", JSON.stringify(oInvoices));
        sessionStorage.setItem("SelectedRowIndexInvoice", SelectedRowIndex);
        sessionStorage.setItem("SelectedRowIndexInvoiceHeader", "InvoiceAcceptance");
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href = _sBaseAddress+  "/ImportInvoice/ViewImportInvoiceAcceptance?id="+oInvoice.ImportInvoiceID+"&bIsApprove=true&ts=" + tsv;


    });

    function Close()
    {
        window.location.href = sessionStorage.getItem("BackLink");
    }

    function CalculateInvoiceAmount(oImportPIDetails)
    {
        var oInvoices = $('#tblImportInvoice').datagrid('getRows');
        var nTotalAmount = 0;
        var nTotalQty = 0;
        var nQty_Munit = "";
        for(var i =0;i<oInvoices.length;i++)
        {
            nTotalAmount+= parseFloat(oInvoices[i].Amount);
            nTotalQty+= parseFloat(oInvoices[i].Qty);
        }
        for(var i =0;i<oImportPIDetails.length;i++)
        {
            nQty_Munit= nQty_Munit+""+formatPrice(parseFloat(oImportPIDetails[i].Qty),0)+" "+oImportPIDetails[i].MUName+".";
        }
        $('#txtAmountLC').val( $('#divImportLC').data('ImportLC').Currency+""+formatPrice( $('#divImportLC').data('ImportLC').Amount,0));
        $('#txtInvoiceAmount').val( $('#divImportLC').data('ImportLC').Currency+""+formatPrice(nTotalAmount,0));
        $('#lblYetToInvoice').html($('#divImportLC').data('ImportLC').Currency+""+formatPrice(parseFloat($('#divImportLC').data('ImportLC').Amount)-parseFloat(nTotalAmount),0)+",Qty:"+nQty_Munit);
    }

    $(document).keydown(function(e) {
        if(e.which == 27)//escape=27
        {
            window.location.href = sessionStorage.getItem("BackLink");
        }
    });


    $('#btnCloseForUpdate').click(function(e){
        $("#winUpdateAmount").icsWindow("close");
    });
    $('#btnUpdateAmount').click(function(){
        debugger;
        var oImportInvoice = $('#tblImportInvoice').datagrid('getSelected');
        if(oImportInvoice==null || parseInt(oImportInvoice.ImportInvoiceID)<=0)
        {
            alert("Please Select Invoice.");
            return;
        }
        if(oImportInvoice.InvoiceStatus > 1)
        {
            alert("You can not update amount for status: " + oImportInvoice.CurrentStatusInSt);
            return;
        }
        $('#txtInvoiceNoDiv').val(oImportInvoice.ImportInvoiceNo);
        $('#txtCurrentAmountDiv').val(oImportInvoice.Amount);
        $('#txtAmountDiv').val(oImportInvoice.Amount);
        $("#winUpdateAmount").icsWindow("open");
    });

    $('#btnOKForUpdate').click(function(){
        debugger;
        var oImportInvoice = $('#tblImportInvoice').datagrid('getSelected');
        var nTotalAmount = 0;
        for(var i=0;i<oImportInvoice.ImportInvoiceDetails.length;i++)
            nTotalAmount += parseFloat(oImportInvoice.ImportInvoiceDetails[i].Amount);
        if((nTotalAmount + 0.5) < parseFloat($('#txtAmountDiv').val())){
            alert("Amount can not be greater than (Total Detail Amount: "+nTotalAmount+" + 0.5)");
            return;
        }
        oImportInvoice.Amount = parseFloat($('#txtAmountDiv').val());
        var nSelectedIndex= $('#tblImportInvoice').datagrid('getRowIndex',oImportInvoice);
        if(oImportInvoice.ImportInvoiceID > 0){
            $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/ImportInvoice/UpdateAmount",
                traditional: true,
                data: JSON.stringify(oImportInvoice),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    oImportInvoice = jQuery.parseJSON(data);
                    if(oImportInvoice.ImportInvoiceID > 0){
                        if(oImportInvoice.ErrorMessage=="" || oImportInvoice.ErrorMessage == null)
                        {
                            alert("Amount Updated Successfully!");
                            $('#tblImportInvoice').datagrid('updateRow',{ index: nSelectedIndex, row: oImportInvoice });
                            $("#winUpdateAmount").icsWindow("close");
                        }else
                        {
                            alert(oImportInvoice.ErrorMessage);
                        }
                    }else{
                        alert("Invalid Import Invoice!");
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
    });

    ////Start Non LC Invoice
</script>
